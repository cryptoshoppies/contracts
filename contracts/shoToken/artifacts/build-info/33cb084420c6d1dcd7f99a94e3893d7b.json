{
	"id": "33cb084420c6d1dcd7f99a94e3893d7b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/shoToken/ShoToken_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/utils/Counters.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/security/Pausable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _burn(tokenId);\n    }\n}\n\n// File: contracts/shoToken/ShoToken.sol\n\n\n\npragma solidity ^0.8.0;\n\n\n\n\n\n\n/// @custom:security-contact supportcs@ntiloyalty.com\ncontract ShoToken is ERC721, Pausable, Ownable, ERC721Burnable {\n    // --------------------------------------------------------------------\n    // USING\n    // --------------------------------------------------------------------\n\n    using Strings for uint256;\n    using Counters for Counters.Counter;\n\n    // --------------------------------------------------------------------\n    // EVENTS\n    // --------------------------------------------------------------------\n\n    event WasBorn(uint256 tokenId);\n\n    // --------------------------------------------------------------------\n    // FIELDS\n    // --------------------------------------------------------------------\n\n    Counters.Counter private _tokenIdCounter;\n\n    // --------------------------------------------------------------------\n    // CONSTRUCTOR\n    // --------------------------------------------------------------------\n\n    constructor() ERC721(\"ShoToken\", \"SHOTKN\") {}\n\n    function _baseURI() internal pure override returns (string memory) {\n        return \"https://nft.cryptoshopee.ntiloyalty.com\";\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 batchSize\n    ) internal override whenNotPaused {\n        super._beforeTokenTransfer(from, to, tokenId, batchSize);\n    }\n\n    // --------------------------------------------------------------------\n    // SERVER METHODS\n    // --------------------------------------------------------------------\n\n    /// server method - mint nft\n    function mint() external onlyOwner returns (uint256) {\n        _tokenIdCounter.increment();\n        uint256 tokenId = _tokenIdCounter.current();\n\n        _safeMint(owner(), tokenId);\n\n        emit WasBorn(tokenId);\n\n        return tokenId;\n    }\n\n    // --------------------------------------------------------------------\n\n    function totalSupply() external view returns (uint256) {\n        return _tokenIdCounter.current();\n    }\n\n    // --------------------------------------------------------------------\n    // --------------------------------------------------------------------\n\n    function withdraw() external onlyOwner {\n        (bool success, ) = payable(owner()).call{value: address(this).balance}(\n            \"\"\n        );\n        require(success);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/shoToken/ShoToken_flattened.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/shoToken/ShoToken_flattened.sol\":22474:31438  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":22474:31438  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201dc765cf3f2d05f9ab6a184892aafa29bf0435c4d0e66d285f0331d53ff946d164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201dc765cf3f2d05f9ab6a184892aafa29bf0435c4d0e66d285f0331d53ff946d164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xC7 PUSH6 0xCF3F2D05F9AB PUSH11 0x184892AAFA29BF0435C4D0 0xE6 PUSH14 0x285F0331D53FF946D164736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "22474:8964:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;22474:8964:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201dc765cf3f2d05f9ab6a184892aafa29bf0435c4d0e66d285f0331d53ff946d164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xC7 PUSH6 0xCF3F2D05F9AB PUSH11 0x184892AAFA29BF0435C4D0 0xE6 PUSH14 0x285F0331D53FF946D164736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "22474:8964:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22474,
									"end": 31438,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201dc765cf3f2d05f9ab6a184892aafa29bf0435c4d0e66d285f0331d53ff946d164736f6c63430008190033",
									".code": [
										{
											"begin": 22474,
											"end": 31438,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 22474,
											"end": 31438,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22474,
											"end": 31438,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22474,
											"end": 31438,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22474,
											"end": 31438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22474,
											"end": 31438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22474,
											"end": 31438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22474,
											"end": 31438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22474,
											"end": 31438,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/shoToken/ShoToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/shoToken/ShoToken_flattened.sol\":478:1449  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":478:1449  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220205b612fb63146f92062b75a2d251a0091a16cc5d0b1c68d5430107356d74d0f64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220205b612fb63146f92062b75a2d251a0091a16cc5d0b1c68d5430107356d74d0f64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 JUMPDEST PUSH2 0x2FB6 BALANCE CHAINID 0xF9 KECCAK256 PUSH3 0xB75A2D 0x25 BYTE STOP SWAP2 LOG1 PUSH13 0xC5D0B1C68D5430107356D74D0F PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "478:971:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;478:971:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220205b612fb63146f92062b75a2d251a0091a16cc5d0b1c68d5430107356d74d0f64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 JUMPDEST PUSH2 0x2FB6 BALANCE CHAINID 0xF9 KECCAK256 PUSH3 0xB75A2D 0x25 BYTE STOP SWAP2 LOG1 PUSH13 0xC5D0B1C68D5430107356D74D0F PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "478:971:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220205b612fb63146f92062b75a2d251a0091a16cc5d0b1c68d5430107356d74d0f64736f6c63430008190033",
									".code": [
										{
											"begin": 478,
											"end": 1449,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/shoToken/ShoToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"Counters\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/shoToken/ShoToken_flattened.sol\":40505:56832  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41267:41380  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41333:41338  _name */\n  0x00\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41333:41346  _name = name_ */\n  tag_6\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41341:41346  name_ */\n  dup4\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41333:41338  _name */\n  dup3\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41333:41346  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41356:41363  _symbol */\n  0x01\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41356:41373  _symbol = symbol_ */\n  tag_8\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41366:41373  symbol_ */\n  dup3\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41356:41363  _symbol */\n  dup3\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41356:41373  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41267:41380  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":40505:56832  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:862   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":709:712   */\n  dup7\n    /* \"#utility.yul\":702:706   */\n  0x20\n    /* \"#utility.yul\":697:699   */\n  dup6\n    /* \"#utility.yul\":689:695   */\n  dup9\n    /* \"#utility.yul\":685:700   */\n  add\n    /* \"#utility.yul\":681:707   */\n  add\n    /* \"#utility.yul\":678:713   */\n  gt\n    /* \"#utility.yul\":675:730   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":726:727   */\n  0x00\n    /* \"#utility.yul\":723:724   */\n  dup1\n    /* \"#utility.yul\":716:728   */\n  revert\n    /* \"#utility.yul\":675:730   */\ntag_24:\n    /* \"#utility.yul\":783:785   */\n  dup4\n    /* \"#utility.yul\":776:780   */\n  0x20\n    /* \"#utility.yul\":768:774   */\n  dup8\n    /* \"#utility.yul\":764:781   */\n  add\n    /* \"#utility.yul\":757:761   */\n  0x20\n    /* \"#utility.yul\":749:755   */\n  dup4\n    /* \"#utility.yul\":745:762   */\n  add\n    /* \"#utility.yul\":739:786   */\n  mcopy\n    /* \"#utility.yul\":830:831   */\n  0x00\n    /* \"#utility.yul\":823:827   */\n  0x20\n    /* \"#utility.yul\":818:820   */\n  dup6\n    /* \"#utility.yul\":810:816   */\n  dup4\n    /* \"#utility.yul\":806:821   */\n  add\n    /* \"#utility.yul\":802:828   */\n  add\n    /* \"#utility.yul\":795:832   */\n  mstore\n    /* \"#utility.yul\":850:856   */\n  dup1\n    /* \"#utility.yul\":841:856   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:862   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":867:1429   */\ntag_3:\n    /* \"#utility.yul\":966:972   */\n  0x00\n    /* \"#utility.yul\":974:980   */\n  dup1\n    /* \"#utility.yul\":1027:1029   */\n  0x40\n    /* \"#utility.yul\":1015:1024   */\n  dup4\n    /* \"#utility.yul\":1006:1013   */\n  dup6\n    /* \"#utility.yul\":1002:1025   */\n  sub\n    /* \"#utility.yul\":998:1030   */\n  slt\n    /* \"#utility.yul\":995:1047   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1043:1044   */\n  0x00\n    /* \"#utility.yul\":1040:1041   */\n  dup1\n    /* \"#utility.yul\":1033:1045   */\n  revert\n    /* \"#utility.yul\":995:1047   */\ntag_26:\n    /* \"#utility.yul\":1070:1086   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1135:1149   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1132:1166   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1162:1163   */\n  0x00\n    /* \"#utility.yul\":1159:1160   */\n  dup1\n    /* \"#utility.yul\":1152:1164   */\n  revert\n    /* \"#utility.yul\":1132:1166   */\ntag_27:\n    /* \"#utility.yul\":1185:1246   */\n  tag_28\n    /* \"#utility.yul\":1238:1245   */\n  dup7\n    /* \"#utility.yul\":1229:1235   */\n  dup4\n    /* \"#utility.yul\":1218:1227   */\n  dup8\n    /* \"#utility.yul\":1214:1236   */\n  add\n    /* \"#utility.yul\":1185:1246   */\n  tag_11\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1175:1246   */\n  swap4\n  pop\n    /* \"#utility.yul\":1292:1294   */\n  0x20\n    /* \"#utility.yul\":1281:1290   */\n  dup6\n    /* \"#utility.yul\":1277:1295   */\n  add\n    /* \"#utility.yul\":1271:1296   */\n  mload\n    /* \"#utility.yul\":1255:1296   */\n  swap2\n  pop\n    /* \"#utility.yul\":1321:1323   */\n  dup1\n    /* \"#utility.yul\":1311:1319   */\n  dup3\n    /* \"#utility.yul\":1308:1324   */\n  gt\n    /* \"#utility.yul\":1305:1341   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1337:1338   */\n  0x00\n    /* \"#utility.yul\":1334:1335   */\n  dup1\n    /* \"#utility.yul\":1327:1339   */\n  revert\n    /* \"#utility.yul\":1305:1341   */\ntag_29:\n  pop\n    /* \"#utility.yul\":1360:1423   */\n  tag_30\n    /* \"#utility.yul\":1415:1422   */\n  dup6\n    /* \"#utility.yul\":1404:1412   */\n  dup3\n    /* \"#utility.yul\":1393:1402   */\n  dup7\n    /* \"#utility.yul\":1389:1413   */\n  add\n    /* \"#utility.yul\":1360:1423   */\n  tag_11\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1350:1423   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":867:1429   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1434:1814   */\ntag_12:\n    /* \"#utility.yul\":1513:1514   */\n  0x01\n    /* \"#utility.yul\":1509:1521   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1556:1568   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1577:1638   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1631:1635   */\n  0x7f\n    /* \"#utility.yul\":1623:1629   */\n  dup3\n    /* \"#utility.yul\":1619:1636   */\n  and\n    /* \"#utility.yul\":1609:1636   */\n  swap2\n  pop\n    /* \"#utility.yul\":1577:1638   */\ntag_32:\n    /* \"#utility.yul\":1684:1686   */\n  0x20\n    /* \"#utility.yul\":1676:1682   */\n  dup3\n    /* \"#utility.yul\":1673:1687   */\n  lt\n    /* \"#utility.yul\":1653:1671   */\n  dup2\n    /* \"#utility.yul\":1650:1688   */\n  sub\n    /* \"#utility.yul\":1647:1808   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1730:1740   */\n  0x4e487b71\n    /* \"#utility.yul\":1725:1728   */\n  0xe0\n    /* \"#utility.yul\":1721:1741   */\n  shl\n    /* \"#utility.yul\":1718:1719   */\n  0x00\n    /* \"#utility.yul\":1711:1742   */\n  mstore\n    /* \"#utility.yul\":1765:1769   */\n  0x22\n    /* \"#utility.yul\":1762:1763   */\n  0x04\n    /* \"#utility.yul\":1755:1770   */\n  mstore\n    /* \"#utility.yul\":1793:1797   */\n  0x24\n    /* \"#utility.yul\":1790:1791   */\n  0x00\n    /* \"#utility.yul\":1783:1798   */\n  revert\n    /* \"#utility.yul\":1647:1808   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1434:1814   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1945:2463   */\ntag_14:\n    /* \"#utility.yul\":2047:2049   */\n  0x1f\n    /* \"#utility.yul\":2042:2045   */\n  dup3\n    /* \"#utility.yul\":2039:2050   */\n  gt\n    /* \"#utility.yul\":2036:2457   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":2083:2088   */\n  dup1\n    /* \"#utility.yul\":2080:2081   */\n  0x00\n    /* \"#utility.yul\":2073:2089   */\n  mstore\n    /* \"#utility.yul\":2127:2131   */\n  0x20\n    /* \"#utility.yul\":2124:2125   */\n  0x00\n    /* \"#utility.yul\":2114:2132   */\n  keccak256\n    /* \"#utility.yul\":2197:2199   */\n  0x1f\n    /* \"#utility.yul\":2185:2195   */\n  dup5\n    /* \"#utility.yul\":2181:2200   */\n  add\n    /* \"#utility.yul\":2178:2179   */\n  0x05\n    /* \"#utility.yul\":2174:2201   */\n  shr\n    /* \"#utility.yul\":2168:2172   */\n  dup2\n    /* \"#utility.yul\":2164:2202   */\n  add\n    /* \"#utility.yul\":2233:2237   */\n  0x20\n    /* \"#utility.yul\":2221:2231   */\n  dup6\n    /* \"#utility.yul\":2218:2238   */\n  lt\n    /* \"#utility.yul\":2215:2262   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2256:2260   */\n  dup1\n    /* \"#utility.yul\":2215:2262   */\ntag_37:\n    /* \"#utility.yul\":2311:2313   */\n  0x1f\n    /* \"#utility.yul\":2306:2309   */\n  dup5\n    /* \"#utility.yul\":2302:2314   */\n  add\n    /* \"#utility.yul\":2299:2300   */\n  0x05\n    /* \"#utility.yul\":2295:2315   */\n  shr\n    /* \"#utility.yul\":2289:2293   */\n  dup3\n    /* \"#utility.yul\":2285:2316   */\n  add\n    /* \"#utility.yul\":2275:2316   */\n  swap2\n  pop\n    /* \"#utility.yul\":2366:2447   */\ntag_38:\n    /* \"#utility.yul\":2384:2386   */\n  dup2\n    /* \"#utility.yul\":2377:2382   */\n  dup2\n    /* \"#utility.yul\":2374:2387   */\n  lt\n    /* \"#utility.yul\":2366:2447   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2443:2444   */\n  0x00\n    /* \"#utility.yul\":2429:2445   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2410:2411   */\n  0x01\n    /* \"#utility.yul\":2399:2412   */\n  add\n    /* \"#utility.yul\":2366:2447   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":2370:2373   */\n  pop\n  pop\n    /* \"#utility.yul\":2036:2457   */\ntag_36:\n    /* \"#utility.yul\":1945:2463   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2639:3984   */\ntag_7:\n    /* \"#utility.yul\":2759:2769   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2781:2811   */\n  dup2\n  gt\n    /* \"#utility.yul\":2778:2834   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2814:2832   */\n  tag_44\n  tag_10\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2843:2940   */\n  tag_45\n    /* \"#utility.yul\":2933:2939   */\n  dup2\n    /* \"#utility.yul\":2893:2931   */\n  tag_46\n    /* \"#utility.yul\":2925:2929   */\n  dup5\n    /* \"#utility.yul\":2919:2930   */\n  sload\n    /* \"#utility.yul\":2893:2931   */\n  tag_12\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2887:2891   */\n  dup5\n    /* \"#utility.yul\":2843:2940   */\n  tag_14\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2995:2999   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3052:3054   */\n  0x1f\n    /* \"#utility.yul\":3041:3055   */\n  dup4\n  gt\n    /* \"#utility.yul\":3069:3070   */\n  0x01\n    /* \"#utility.yul\":3064:3727   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3771:3772   */\n  0x00\n    /* \"#utility.yul\":3788:3794   */\n  dup5\n    /* \"#utility.yul\":3785:3874   */\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":3840:3859   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3834:3860   */\n  mload\n    /* \"#utility.yul\":3785:3874   */\ntag_49:\n  not(0x00)\n    /* \"#utility.yul\":2596:2597   */\n  0x03\n    /* \"#utility.yul\":2592:2603   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2588:2612   */\n  shr\n    /* \"#utility.yul\":2584:2613   */\n  not\n    /* \"#utility.yul\":2574:2614   */\n  and\n    /* \"#utility.yul\":2620:2621   */\n  0x01\n    /* \"#utility.yul\":2616:2627   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2571:2628   */\n  or\n    /* \"#utility.yul\":3887:3968   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3034:3978   */\n  jump(tag_47)\n    /* \"#utility.yul\":3064:3727   */\ntag_48:\n    /* \"#utility.yul\":1892:1893   */\n  0x00\n    /* \"#utility.yul\":1885:1899   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1929:1933   */\n  0x20\n    /* \"#utility.yul\":1916:1934   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3100:3120   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3218:3454   */\ntag_52:\n    /* \"#utility.yul\":3232:3239   */\n  dup3\n    /* \"#utility.yul\":3229:3230   */\n  dup2\n    /* \"#utility.yul\":3226:3240   */\n  lt\n    /* \"#utility.yul\":3218:3454   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3321:3340   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3315:3341   */\n  mload\n    /* \"#utility.yul\":3300:3342   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3413:3440   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3381:3382   */\n  0x01\n    /* \"#utility.yul\":3369:3383   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3248:3267   */\n  dup5\n  add\n    /* \"#utility.yul\":3218:3454   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":3222:3225   */\n  pop\n    /* \"#utility.yul\":3482:3488   */\n  dup6\n    /* \"#utility.yul\":3473:3480   */\n  dup3\n    /* \"#utility.yul\":3470:3489   */\n  lt\n    /* \"#utility.yul\":3467:3668   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3543:3562   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3537:3563   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3626:3627   */\n  0x03\n    /* \"#utility.yul\":3622:3636   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3638:3641   */\n  0xf8\n    /* \"#utility.yul\":3618:3642   */\n  and\n    /* \"#utility.yul\":3614:3651   */\n  shr\n    /* \"#utility.yul\":3610:3652   */\n  not\n    /* \"#utility.yul\":3595:3653   */\n  and\n    /* \"#utility.yul\":3580:3654   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3467:3668   */\ntag_55:\n  pop\n  pop\n    /* \"#utility.yul\":3714:3715   */\n  0x01\n    /* \"#utility.yul\":3705:3711   */\n  dup5\n    /* \"#utility.yul\":3702:3703   */\n  0x01\n    /* \"#utility.yul\":3698:3712   */\n  shl\n    /* \"#utility.yul\":3694:3716   */\n  add\n    /* \"#utility.yul\":3688:3692   */\n  dup6\n    /* \"#utility.yul\":3681:3717   */\n  sstore\n    /* \"#utility.yul\":3034:3978   */\ntag_47:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2639:3984   */\n  pop\n  pop\n  jump\t// out\ntag_16:\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":40505:56832  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":40505:56832  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41447:41747  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41447:41747  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42348:42446  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43812:43979  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1464:1515   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1452:1454   */\n      0x20\n        /* \"#utility.yul\":1437:1455   */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43812:43979  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43345:43751  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44489:44815  function transferFrom(... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44881:45060  function safeTransferFrom(... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42067:42286  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41806:42010  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2633:2658   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2621:2623   */\n      0x20\n        /* \"#utility.yul\":2606:2624   */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41806:42010  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":2487:2664   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42510:42612  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44046:44199  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45126:45440  function safeTransferFrom(... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42678:42954  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44265:44427  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41447:41747  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41549:41553  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41584:41624  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41584:41688  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41640:41688  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41584:41688  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41584:41740  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":34300:34340  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41704:41740  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41565:41740  return... */\n      swap3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41447:41747  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42348:42446  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42402:42415  string memory */\n      0x60\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42434:42439  _name */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42427:42439  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42348:42446  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43812:43979  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43888:43895  address */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43907:43930  _requireMinted(tokenId) */\n      tag_88\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43922:43929  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43907:43921  _requireMinted */\n      tag_89\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43907:43930  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43948:43972  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43948:43963  _tokenApprovals */\n      0x04\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43948:43972  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43812:43979  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43345:43751  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43425:43438  address owner */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43441:43464  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43456:43463  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43441:43455  ERC721.ownerOf */\n      tag_47\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43441:43464  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43425:43464  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43488:43493  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43482:43493  to != owner */\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43482:43484  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43482:43493  to != owner */\n      and\n      sub\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43474:43531  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43474:43531  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x21\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5301   */\n      mstore\n        /* \"#utility.yul\":5318:5337   */\n      0x84\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43474:43531  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43563:43584  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43563:43625  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_98\n      jumpi\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43588:43625  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43605:43610  owner */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44265:44427  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_73\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43588:43625  isApprovedForAll(owner, _msgSender()) */\n    tag_98:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43542:43712  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5550:5552   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43542:43712  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5532:5553   */\n      mstore\n        /* \"#utility.yul\":5589:5591   */\n      0x3d\n        /* \"#utility.yul\":5569:5587   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5562:5592   */\n      mstore\n        /* \"#utility.yul\":5628:5662   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":5608:5626   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5601:5663   */\n      mstore\n        /* \"#utility.yul\":5699:5730   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":5679:5697   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5672:5731   */\n      mstore\n        /* \"#utility.yul\":5748:5767   */\n      0x84\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43542:43712  require(... */\n      tag_93\n        /* \"#utility.yul\":5348:5773   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43542:43712  require(... */\n    tag_100:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43723:43744  _approve(to, tokenId) */\n      tag_103\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43732:43734  to */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43736:43743  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43723:43731  _approve */\n      tag_104\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43723:43744  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43415:43751  {... */\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43345:43751  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44489:44815  function transferFrom(... */\n    tag_41:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44678:44719  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44711:44718  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44678:44696  _isApprovedOrOwner */\n      tag_108\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44678:44719  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44670:44769  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_109:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44780:44808  _transfer(from, to, tokenId) */\n      tag_103\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44790:44794  from */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44796:44798  to */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44800:44807  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44780:44789  _transfer */\n      tag_113\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44780:44808  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44881:45060  function safeTransferFrom(... */\n    tag_44:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45014:45053  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_103\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45031:45035  from */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45037:45039  to */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45041:45048  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45014:45053  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45014:45030  safeTransferFrom */\n      tag_65\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45014:45053  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42067:42286  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42139:42146  address */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46823  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46814  _owners */\n      0x02\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46823  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42201:42257  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6394:6396   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42201:42257  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6376:6397   */\n      mstore\n        /* \"#utility.yul\":6433:6435   */\n      0x18\n        /* \"#utility.yul\":6413:6431   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6406:6436   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6452:6470   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6445:6499   */\n      mstore\n        /* \"#utility.yul\":6516:6534   */\n      0x64\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42201:42257  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6192:6540   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41806:42010  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41878:41885  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41905:41924  owner != address(0) */\n      dup3\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41897:41970  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6747:6749   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41897:41970  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6729:6750   */\n      mstore\n        /* \"#utility.yul\":6786:6788   */\n      0x29\n        /* \"#utility.yul\":6766:6784   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6759:6789   */\n      mstore\n        /* \"#utility.yul\":6825:6859   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":6805:6823   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6798:6860   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":6876:6894   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6869:6908   */\n      mstore\n        /* \"#utility.yul\":6925:6944   */\n      0x84\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41897:41970  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_93\n        /* \"#utility.yul\":6545:6950   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41897:41970  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_123:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41987:42003  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41987:41996  _balances */\n      0x03\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41987:42003  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41806:42010  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42510:42612  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42566:42579  string memory */\n      0x60\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42598:42605  _symbol */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42591:42605  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44046:44199  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44140:44192  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44173:44181  operator */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44183:44191  approved */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44140:44158  _setApprovalForAll */\n      tag_135\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44140:44192  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44046:44199  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45126:45440  function safeTransferFrom(... */\n    tag_65:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45294:45335  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_137\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45327:45334  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45294:45312  _isApprovedOrOwner */\n      tag_108\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45294:45335  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45286:45385  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_139:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45395:45433  _safeTransfer(from, to, tokenId, data) */\n      tag_141\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45409:45413  from */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45415:45417  to */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45419:45426  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45428:45432  data */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45395:45408  _safeTransfer */\n      tag_142\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45395:45433  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45126:45440  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42678:42954  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42751:42764  string memory */\n      0x60\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42776:42799  _requireMinted(tokenId) */\n      tag_144\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42791:42798  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42776:42790  _requireMinted */\n      tag_89\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42776:42799  _requireMinted(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42810:42831  string memory baseURI */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42834:42844  _baseURI() */\n      tag_145\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43272:43281  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43196:43288  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42834:42844  _baseURI() */\n    tag_145:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42810:42844  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42885:42886  0 */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42867:42874  baseURI */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42861:42882  bytes(baseURI).length */\n      mload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42861:42886  bytes(baseURI).length > 0 */\n      gt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42861:42947  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_147\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_148)\n    tag_147:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42913:42920  baseURI */\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42922:42940  tokenId.toString() */\n      tag_149\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42922:42929  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42922:42938  tokenId.toString */\n      tag_150\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42922:42940  tokenId.toString() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42896:42941  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42861:42947  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_148:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42854:42947  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42678:42954  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44265:44427  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44385:44410  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44362:44366  bool */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44385:44410  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44385:44403  _operatorApprovals */\n      0x05\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44385:44410  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44385:44420  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44265:44427  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53343:53476  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47198:47202  bool */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46823  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46814  _owners */\n      0x02\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46823  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53416:53469  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6394:6396   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53416:53469  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6376:6397   */\n      mstore\n        /* \"#utility.yul\":6433:6435   */\n      0x18\n        /* \"#utility.yul\":6413:6431   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6406:6436   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6452:6470   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6445:6499   */\n      mstore\n        /* \"#utility.yul\":6516:6534   */\n      0x64\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53416:53469  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6192:6540   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53416:53469  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n    tag_158:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53343:53476  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52645:52816  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52719:52743  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52719:52734  _tokenApprovals */\n      0x04\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52719:52743  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52719:52748  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52719:52743  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52772:52795  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52719:52743  _tokenApprovals[tokenId] */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52772:52786  ERC721.ownerOf */\n      tag_47\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52772:52795  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52763:52809  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52645:52816  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47417:47678  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47510:47514  bool */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47526:47539  address owner */\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47542:47565  ERC721.ownerOf(tokenId) */\n      tag_164\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47557:47564  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47542:47556  ERC721.ownerOf */\n      tag_47\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47542:47565  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47526:47565  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47594:47599  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47583:47599  spender == owner */\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47583:47590  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47583:47599  spender == owner */\n      and\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47583:47635  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_166\n      jumpi\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47603:47635  isApprovedForAll(owner, spender) */\n      tag_166\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47620:47625  owner */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47627:47634  spender */\n      dup6\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47603:47619  isApprovedForAll */\n      tag_73\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47603:47635  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47583:47670  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47663:47670  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47639:47670  getApproved(tokenId) == spender */\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47639:47659  getApproved(tokenId) */\n      tag_168\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47651:47658  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47639:47650  getApproved */\n      tag_31\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47639:47659  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47639:47670  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47583:47670  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_167:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47575:47671  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47417:47678  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51300:52533  function _transfer(... */\n    tag_113:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51454:51458  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51427:51458  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51427:51450  ERC721.ownerOf(tokenId) */\n      tag_170\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51442:51449  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51427:51441  ERC721.ownerOf */\n      tag_47\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51427:51450  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51427:51458  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51419:51500  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51518:51534  to != address(0) */\n      dup3\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51510:51575  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8052:8054   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51510:51575  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8034:8055   */\n      mstore\n        /* \"#utility.yul\":8091:8093   */\n      0x24\n        /* \"#utility.yul\":8071:8089   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8064:8094   */\n      mstore\n        /* \"#utility.yul\":8130:8164   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":8110:8128   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8103:8165   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8181:8199   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8174:8208   */\n      mstore\n        /* \"#utility.yul\":8225:8244   */\n      0x84\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51510:51575  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_93\n        /* \"#utility.yul\":7850:8250   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51510:51575  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_174:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51586:51628  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_177\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51607:51611  from */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51613:51615  to */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51617:51624  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51626:51627  1 */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51586:51606  _beforeTokenTransfer */\n      tag_178\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51586:51628  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51755:51759  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51728:51759  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51728:51751  ERC721.ownerOf(tokenId) */\n      tag_179\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51743:51750  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51728:51742  ERC721.ownerOf */\n      tag_47\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51728:51751  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51728:51759  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51720:51801  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_180:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51870:51894  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51870:51885  _tokenApprovals */\n      0x04\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51870:51894  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51863:51894  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52338:52353  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52338:52347  _balances */\n      0x03\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52338:52353  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52338:52358  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52372:52385  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52372:52390  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51863:51894  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52372:52390  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52410:52426  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52410:52417  _owners */\n      0x02\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52410:52426  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52410:52431  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52447:52474  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51886:51893  tokenId */\n      dup5\n      swap4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52447:52474  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43415:43751  {... */\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43345:43751  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52952:53259  function _setApprovalForAll(... */\n    tag_135:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53102:53110  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53093:53110  owner != operator */\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53093:53098  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53093:53110  owner != operator */\n      and\n      sub\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53085:53140  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8457:8459   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53085:53140  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8439:8460   */\n      mstore\n        /* \"#utility.yul\":8496:8498   */\n      0x19\n        /* \"#utility.yul\":8476:8494   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8469:8499   */\n      mstore\n        /* \"#utility.yul\":8535:8562   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":8515:8533   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8508:8563   */\n      mstore\n        /* \"#utility.yul\":8580:8598   */\n      0x64\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53085:53140  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_93\n        /* \"#utility.yul\":8255:8604   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53085:53140  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53150:53175  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53150:53168  _operatorApprovals */\n      0x05\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53150:53175  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53150:53185  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53150:53196  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53211:53252  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53211:53252  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53211:53252  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52952:53259  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46301:46606  function _safeTransfer(... */\n    tag_142:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46451:46479  _transfer(from, to, tokenId) */\n      tag_191\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46461:46465  from */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46467:46469  to */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46471:46478  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46451:46460  _transfer */\n      tag_113\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46451:46479  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46497:46544  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_192\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46520:46524  from */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46526:46528  to */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46530:46537  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46539:46543  data */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46497:46519  _checkOnERC721Received */\n      tag_193\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46497:46544  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46489:46599  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14390:15086  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_150:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14446:14459  string memory */\n      0x60\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14495:14509  uint256 length */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14512:14529  Math.log10(value) */\n      tag_199\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14523:14528  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14512:14522  Math.log10 */\n      tag_200\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14512:14529  Math.log10(value) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14532:14533  1 */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14512:14533  Math.log10(value) + 1 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14495:14533  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14547:14567  string memory buffer */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14581:14587  length */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14570:14588  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_202\n      jumpi\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_204:\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14547:14588  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14708:14736  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14724:14726  32 */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14708:14736  add(buffer, add(32, length)) */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14763:15043  while (true) {... */\n    tag_205:\n      not(0x00)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14794:14799  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14928:14930  10 */\n      0x0a\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14917:14931  mod(value, 10) */\n      dup7\n      mod\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14912:14942  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14794:14799  ptr-- */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14899:14943  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14987:14989  10 */\n      0x0a\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14978:14989  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":15007:15028  if (value == 0) break */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14763:15043  while (true) {... */\n      tag_205\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":15007:15028  if (value == 0) break */\n      jumpi\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":15063:15069  buffer */\n      swap4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14390:15086  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55575:55971  function _beforeTokenTransfer(... */\n    tag_178:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55759:55760  1 */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55747:55756  batchSize */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55747:55760  batchSize > 1 */\n      gt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55743:55965  if (batchSize > 1) {... */\n      iszero\n      tag_141\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55780:55798  from != address(0) */\n      dup5\n      and\n      iszero\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55776:55861  if (from != address(0)) {... */\n      tag_215\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55833  _balances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55827  _balances */\n      0x03\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55833  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55846  _balances[from] -= batchSize */\n      dup1\n      sload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55837:55846  batchSize */\n      dup4\n      swap3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55833  _balances[from] */\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55846  _balances[from] -= batchSize */\n      tag_216\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55837:55846  batchSize */\n      dup5\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55846  _balances[from] -= batchSize */\n      tag_217\n      jump\t// in\n    tag_216:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55776:55861  if (from != address(0)) {... */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55878:55894  to != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55874:55955  if (to != address(0)) {... */\n      tag_141\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55927  _balances[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55923  _balances */\n      0x03\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55927  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55940  _balances[to] += batchSize */\n      dup1\n      sload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55931:55940  batchSize */\n      dup4\n      swap3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55927  _balances[to] */\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55940  _balances[to] += batchSize */\n      tag_219\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55931:55940  batchSize */\n      dup5\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55940  _balances[to] += batchSize */\n      tag_220\n      jump\t// in\n    tag_219:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55575:55971  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54028:54859  function _checkOnERC721Received(... */\n    tag_193:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54177:54181  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54197:54210  to.isContract */\n      dup5\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":23745:23764  account.code.length */\n      extcodesize\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":23745:23768  account.code.length > 0 */\n      iszero\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54193:54853  if (to.isContract()) {... */\n      tag_225\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54232:54303  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54232:54268  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54232:54303  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_227\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54283:54287  from */\n      dup10\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54289:54296  tokenId */\n      dup9\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54298:54302  data */\n      dup9\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54232:54303  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_228\n      jump\t// in\n    tag_227:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_230\n      swap2\n      dup2\n      add\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      0x01\n    tag_229:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54228:54801  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_232\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_237\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_236)\n    tag_237:\n      0x60\n      swap2\n      pop\n    tag_236:\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54470:54476  reason */\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54470:54483  reason.length */\n      mload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54487:54488  0 */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54470:54488  reason.length == 0 */\n      sub\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54466:54787  if (reason.length == 0) {... */\n      tag_238\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54512:54572  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54466:54787  if (reason.length == 0) {... */\n    tag_238:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54739:54745  reason */\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54733:54746  mload(reason) */\n      mload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54724:54730  reason */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54720:54722  32 */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54716:54731  add(32, reason) */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54709:54747  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54228:54801  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_232:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54353:54404  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54346:54404  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_167)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54193:54853  if (to.isContract()) {... */\n    tag_225:\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54838:54842  true */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54028:54859  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11363:12253  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_200:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11416:11423  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11491:11506  value >= 10**64 */\n      dup4\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11487:11586  if (value >= 10**64) {... */\n      tag_244\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11526:11541  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11569:11571  64 */\n      0x40\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11559:11571  result += 64 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11487:11586  if (value >= 10**64) {... */\n    tag_244:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11612:11618  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11603:11608  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11603:11618  value >= 10**32 */\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11599:11698  if (value >= 10**32) {... */\n      tag_247\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11647:11653  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11638:11653  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11681:11683  32 */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11671:11683  result += 32 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11599:11698  if (value >= 10**32) {... */\n    tag_247:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11724:11730  10**16 */\n      0x2386f26fc10000\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11715:11720  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11715:11730  value >= 10**16 */\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11711:11810  if (value >= 10**16) {... */\n      tag_250\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11759:11765  10**16 */\n      0x2386f26fc10000\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11750:11765  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11793:11795  16 */\n      0x10\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11783:11795  result += 16 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11711:11810  if (value >= 10**16) {... */\n    tag_250:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11836:11841  10**8 */\n      0x05f5e100\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11827:11832  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11827:11841  value >= 10**8 */\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11823:11919  if (value >= 10**8) {... */\n      tag_253\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11870:11875  10**8 */\n      0x05f5e100\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11861:11875  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11903:11904  8 */\n      0x08\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11893:11904  result += 8 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11823:11919  if (value >= 10**8) {... */\n    tag_253:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11945:11950  10**4 */\n      0x2710\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11936:11941  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11936:11950  value >= 10**4 */\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11932:12028  if (value >= 10**4) {... */\n      tag_256\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11979:11984  10**4 */\n      0x2710\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11970:11984  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12012:12013  4 */\n      0x04\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12002:12013  result += 4 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11932:12028  if (value >= 10**4) {... */\n    tag_256:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12054:12059  10**2 */\n      0x64\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12045:12050  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12045:12059  value >= 10**2 */\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12041:12137  if (value >= 10**2) {... */\n      tag_259\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12088:12093  10**2 */\n      0x64\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12079:12093  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12121:12122  2 */\n      0x02\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12111:12122  result += 2 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12041:12137  if (value >= 10**2) {... */\n    tag_259:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12163:12168  10**1 */\n      0x0a\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12154:12159  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12154:12168  value >= 10**1 */\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12150:12214  if (value >= 10**1) {... */\n      tag_78\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12198:12199  1 */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12188:12199  result += 1 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12240:12246  result */\n      swap3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11363:12253  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_264:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_20:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_273:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_148\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_264\n      jump\t// in\n        /* \"#utility.yul\":592:892   */\n    tag_265:\n        /* \"#utility.yul\":645:648   */\n      0x00\n        /* \"#utility.yul\":683:688   */\n      dup2\n        /* \"#utility.yul\":677:689   */\n      mload\n        /* \"#utility.yul\":710:716   */\n      dup1\n        /* \"#utility.yul\":705:708   */\n      dup5\n        /* \"#utility.yul\":698:717   */\n      mstore\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":759:763   */\n      0x20\n        /* \"#utility.yul\":752:757   */\n      dup5\n        /* \"#utility.yul\":748:764   */\n      add\n        /* \"#utility.yul\":741:745   */\n      0x20\n        /* \"#utility.yul\":736:739   */\n      dup7\n        /* \"#utility.yul\":732:746   */\n      add\n        /* \"#utility.yul\":726:773   */\n      mcopy\n        /* \"#utility.yul\":818:819   */\n      0x00\n        /* \"#utility.yul\":811:815   */\n      0x20\n        /* \"#utility.yul\":802:808   */\n      dup3\n        /* \"#utility.yul\":797:800   */\n      dup7\n        /* \"#utility.yul\":793:809   */\n      add\n        /* \"#utility.yul\":789:816   */\n      add\n        /* \"#utility.yul\":782:820   */\n      mstore\n        /* \"#utility.yul\":881:885   */\n      0x20\n        /* \"#utility.yul\":874:876   */\n      0x1f\n        /* \"#utility.yul\":870:877   */\n      not\n        /* \"#utility.yul\":865:867   */\n      0x1f\n        /* \"#utility.yul\":857:863   */\n      dup4\n        /* \"#utility.yul\":853:868   */\n      add\n        /* \"#utility.yul\":849:878   */\n      and\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":840:879   */\n      add\n        /* \"#utility.yul\":836:886   */\n      add\n        /* \"#utility.yul\":829:886   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":592:892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1128   */\n    tag_27:\n        /* \"#utility.yul\":1046:1048   */\n      0x20\n        /* \"#utility.yul\":1035:1044   */\n      dup2\n        /* \"#utility.yul\":1028:1049   */\n      mstore\n        /* \"#utility.yul\":1009:1013   */\n      0x00\n        /* \"#utility.yul\":1066:1122   */\n      tag_148\n        /* \"#utility.yul\":1118:1120   */\n      0x20\n        /* \"#utility.yul\":1107:1116   */\n      dup4\n        /* \"#utility.yul\":1103:1121   */\n      add\n        /* \"#utility.yul\":1095:1101   */\n      dup5\n        /* \"#utility.yul\":1066:1122   */\n      tag_265\n      jump\t// in\n        /* \"#utility.yul\":1133:1313   */\n    tag_30:\n        /* \"#utility.yul\":1192:1198   */\n      0x00\n        /* \"#utility.yul\":1245:1247   */\n      0x20\n        /* \"#utility.yul\":1233:1242   */\n      dup3\n        /* \"#utility.yul\":1224:1231   */\n      dup5\n        /* \"#utility.yul\":1220:1243   */\n      sub\n        /* \"#utility.yul\":1216:1248   */\n      slt\n        /* \"#utility.yul\":1213:1265   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":1261:1262   */\n      0x00\n        /* \"#utility.yul\":1258:1259   */\n      dup1\n        /* \"#utility.yul\":1251:1263   */\n      revert\n        /* \"#utility.yul\":1213:1265   */\n    tag_280:\n      pop\n        /* \"#utility.yul\":1284:1307   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1133:1313   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1526:1699   */\n    tag_266:\n        /* \"#utility.yul\":1594:1614   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1643:1674   */\n      dup2\n      and\n        /* \"#utility.yul\":1633:1675   */\n      dup2\n      eq\n        /* \"#utility.yul\":1623:1693   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":1689:1690   */\n      0x00\n        /* \"#utility.yul\":1686:1687   */\n      dup1\n        /* \"#utility.yul\":1679:1691   */\n      revert\n        /* \"#utility.yul\":1623:1693   */\n    tag_283:\n        /* \"#utility.yul\":1526:1699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1704:1958   */\n    tag_36:\n        /* \"#utility.yul\":1772:1778   */\n      0x00\n        /* \"#utility.yul\":1780:1786   */\n      dup1\n        /* \"#utility.yul\":1833:1835   */\n      0x40\n        /* \"#utility.yul\":1821:1830   */\n      dup4\n        /* \"#utility.yul\":1812:1819   */\n      dup6\n        /* \"#utility.yul\":1808:1831   */\n      sub\n        /* \"#utility.yul\":1804:1836   */\n      slt\n        /* \"#utility.yul\":1801:1853   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":1849:1850   */\n      0x00\n        /* \"#utility.yul\":1846:1847   */\n      dup1\n        /* \"#utility.yul\":1839:1851   */\n      revert\n        /* \"#utility.yul\":1801:1853   */\n    tag_285:\n        /* \"#utility.yul\":1872:1901   */\n      tag_286\n        /* \"#utility.yul\":1891:1900   */\n      dup4\n        /* \"#utility.yul\":1872:1901   */\n      tag_266\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":1862:1901   */\n      swap5\n        /* \"#utility.yul\":1948:1950   */\n      0x20\n        /* \"#utility.yul\":1933:1951   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1920:1952   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1704:1958   */\n      jump\t// out\n        /* \"#utility.yul\":1963:2291   */\n    tag_40:\n        /* \"#utility.yul\":2040:2046   */\n      0x00\n        /* \"#utility.yul\":2048:2054   */\n      dup1\n        /* \"#utility.yul\":2056:2062   */\n      0x00\n        /* \"#utility.yul\":2109:2111   */\n      0x60\n        /* \"#utility.yul\":2097:2106   */\n      dup5\n        /* \"#utility.yul\":2088:2095   */\n      dup7\n        /* \"#utility.yul\":2084:2107   */\n      sub\n        /* \"#utility.yul\":2080:2112   */\n      slt\n        /* \"#utility.yul\":2077:2129   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2125:2126   */\n      0x00\n        /* \"#utility.yul\":2122:2123   */\n      dup1\n        /* \"#utility.yul\":2115:2127   */\n      revert\n        /* \"#utility.yul\":2077:2129   */\n    tag_288:\n        /* \"#utility.yul\":2148:2177   */\n      tag_289\n        /* \"#utility.yul\":2167:2176   */\n      dup5\n        /* \"#utility.yul\":2148:2177   */\n      tag_266\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2138:2177   */\n      swap3\n      pop\n        /* \"#utility.yul\":2196:2234   */\n      tag_290\n        /* \"#utility.yul\":2230:2232   */\n      0x20\n        /* \"#utility.yul\":2219:2228   */\n      dup6\n        /* \"#utility.yul\":2215:2233   */\n      add\n        /* \"#utility.yul\":2196:2234   */\n      tag_266\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2186:2234   */\n      swap2\n      pop\n        /* \"#utility.yul\":2281:2283   */\n      0x40\n        /* \"#utility.yul\":2270:2279   */\n      dup5\n        /* \"#utility.yul\":2266:2284   */\n      add\n        /* \"#utility.yul\":2253:2285   */\n      calldataload\n        /* \"#utility.yul\":2243:2285   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2291   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2296:2482   */\n    tag_51:\n        /* \"#utility.yul\":2355:2361   */\n      0x00\n        /* \"#utility.yul\":2408:2410   */\n      0x20\n        /* \"#utility.yul\":2396:2405   */\n      dup3\n        /* \"#utility.yul\":2387:2394   */\n      dup5\n        /* \"#utility.yul\":2383:2406   */\n      sub\n        /* \"#utility.yul\":2379:2411   */\n      slt\n        /* \"#utility.yul\":2376:2428   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2424:2425   */\n      0x00\n        /* \"#utility.yul\":2421:2422   */\n      dup1\n        /* \"#utility.yul\":2414:2426   */\n      revert\n        /* \"#utility.yul\":2376:2428   */\n    tag_292:\n        /* \"#utility.yul\":2447:2476   */\n      tag_148\n        /* \"#utility.yul\":2466:2475   */\n      dup3\n        /* \"#utility.yul\":2447:2476   */\n      tag_266\n      jump\t// in\n        /* \"#utility.yul\":2669:3016   */\n    tag_60:\n        /* \"#utility.yul\":2734:2740   */\n      0x00\n        /* \"#utility.yul\":2742:2748   */\n      dup1\n        /* \"#utility.yul\":2795:2797   */\n      0x40\n        /* \"#utility.yul\":2783:2792   */\n      dup4\n        /* \"#utility.yul\":2774:2781   */\n      dup6\n        /* \"#utility.yul\":2770:2793   */\n      sub\n        /* \"#utility.yul\":2766:2798   */\n      slt\n        /* \"#utility.yul\":2763:2815   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":2811:2812   */\n      0x00\n        /* \"#utility.yul\":2808:2809   */\n      dup1\n        /* \"#utility.yul\":2801:2813   */\n      revert\n        /* \"#utility.yul\":2763:2815   */\n    tag_296:\n        /* \"#utility.yul\":2834:2863   */\n      tag_297\n        /* \"#utility.yul\":2853:2862   */\n      dup4\n        /* \"#utility.yul\":2834:2863   */\n      tag_266\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2824:2863   */\n      swap2\n      pop\n        /* \"#utility.yul\":2913:2915   */\n      0x20\n        /* \"#utility.yul\":2902:2911   */\n      dup4\n        /* \"#utility.yul\":2898:2916   */\n      add\n        /* \"#utility.yul\":2885:2917   */\n      calldataload\n        /* \"#utility.yul\":2960:2965   */\n      dup1\n        /* \"#utility.yul\":2953:2966   */\n      iszero\n        /* \"#utility.yul\":2946:2967   */\n      iszero\n        /* \"#utility.yul\":2939:2944   */\n      dup2\n        /* \"#utility.yul\":2936:2968   */\n      eq\n        /* \"#utility.yul\":2926:2986   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":2982:2983   */\n      0x00\n        /* \"#utility.yul\":2979:2980   */\n      dup1\n        /* \"#utility.yul\":2972:2984   */\n      revert\n        /* \"#utility.yul\":2926:2986   */\n    tag_298:\n        /* \"#utility.yul\":3005:3010   */\n      dup1\n        /* \"#utility.yul\":2995:3010   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2669:3016   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3148   */\n    tag_203:\n        /* \"#utility.yul\":3082:3092   */\n      0x4e487b71\n        /* \"#utility.yul\":3077:3080   */\n      0xe0\n        /* \"#utility.yul\":3073:3093   */\n      shl\n        /* \"#utility.yul\":3070:3071   */\n      0x00\n        /* \"#utility.yul\":3063:3094   */\n      mstore\n        /* \"#utility.yul\":3113:3117   */\n      0x41\n        /* \"#utility.yul\":3110:3111   */\n      0x04\n        /* \"#utility.yul\":3103:3118   */\n      mstore\n        /* \"#utility.yul\":3137:3141   */\n      0x24\n        /* \"#utility.yul\":3134:3135   */\n      0x00\n        /* \"#utility.yul\":3127:3142   */\n      revert\n        /* \"#utility.yul\":3153:4291   */\n    tag_64:\n        /* \"#utility.yul\":3248:3254   */\n      0x00\n        /* \"#utility.yul\":3256:3262   */\n      dup1\n        /* \"#utility.yul\":3264:3270   */\n      0x00\n        /* \"#utility.yul\":3272:3278   */\n      dup1\n        /* \"#utility.yul\":3325:3328   */\n      0x80\n        /* \"#utility.yul\":3313:3322   */\n      dup6\n        /* \"#utility.yul\":3304:3311   */\n      dup8\n        /* \"#utility.yul\":3300:3323   */\n      sub\n        /* \"#utility.yul\":3296:3329   */\n      slt\n        /* \"#utility.yul\":3293:3346   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3339:3340   */\n      dup1\n        /* \"#utility.yul\":3332:3344   */\n      revert\n        /* \"#utility.yul\":3293:3346   */\n    tag_301:\n        /* \"#utility.yul\":3365:3394   */\n      tag_302\n        /* \"#utility.yul\":3384:3393   */\n      dup6\n        /* \"#utility.yul\":3365:3394   */\n      tag_266\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3355:3394   */\n      swap4\n      pop\n        /* \"#utility.yul\":3413:3451   */\n      tag_303\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3436:3445   */\n      dup7\n        /* \"#utility.yul\":3432:3450   */\n      add\n        /* \"#utility.yul\":3413:3451   */\n      tag_266\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3403:3451   */\n      swap3\n      pop\n        /* \"#utility.yul\":3498:3500   */\n      0x40\n        /* \"#utility.yul\":3487:3496   */\n      dup6\n        /* \"#utility.yul\":3483:3501   */\n      add\n        /* \"#utility.yul\":3470:3502   */\n      calldataload\n        /* \"#utility.yul\":3460:3502   */\n      swap2\n      pop\n        /* \"#utility.yul\":3553:3555   */\n      0x60\n        /* \"#utility.yul\":3542:3551   */\n      dup6\n        /* \"#utility.yul\":3538:3556   */\n      add\n        /* \"#utility.yul\":3525:3557   */\n      calldataload\n        /* \"#utility.yul\":3576:3594   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3617:3619   */\n      dup1\n        /* \"#utility.yul\":3609:3615   */\n      dup3\n        /* \"#utility.yul\":3606:3620   */\n      gt\n        /* \"#utility.yul\":3603:3637   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":3633:3634   */\n      0x00\n        /* \"#utility.yul\":3630:3631   */\n      dup1\n        /* \"#utility.yul\":3623:3635   */\n      revert\n        /* \"#utility.yul\":3603:3637   */\n    tag_304:\n        /* \"#utility.yul\":3671:3677   */\n      dup2\n        /* \"#utility.yul\":3660:3669   */\n      dup8\n        /* \"#utility.yul\":3656:3678   */\n      add\n        /* \"#utility.yul\":3646:3678   */\n      swap2\n      pop\n        /* \"#utility.yul\":3716:3723   */\n      dup8\n        /* \"#utility.yul\":3709:3713   */\n      0x1f\n        /* \"#utility.yul\":3705:3707   */\n      dup4\n        /* \"#utility.yul\":3701:3714   */\n      add\n        /* \"#utility.yul\":3697:3724   */\n      slt\n        /* \"#utility.yul\":3687:3742   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":3738:3739   */\n      0x00\n        /* \"#utility.yul\":3735:3736   */\n      dup1\n        /* \"#utility.yul\":3728:3740   */\n      revert\n        /* \"#utility.yul\":3687:3742   */\n    tag_305:\n        /* \"#utility.yul\":3774:3776   */\n      dup2\n        /* \"#utility.yul\":3761:3777   */\n      calldataload\n        /* \"#utility.yul\":3796:3798   */\n      dup2\n        /* \"#utility.yul\":3792:3794   */\n      dup2\n        /* \"#utility.yul\":3789:3799   */\n      gt\n        /* \"#utility.yul\":3786:3822   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":3802:3820   */\n      tag_307\n      tag_203\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3877:3879   */\n      0x40\n        /* \"#utility.yul\":3871:3880   */\n      mload\n        /* \"#utility.yul\":3845:3847   */\n      0x1f\n        /* \"#utility.yul\":3931:3944   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3927:3949   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3951:3953   */\n      0x3f\n        /* \"#utility.yul\":3923:3954   */\n      add\n        /* \"#utility.yul\":3919:3959   */\n      and\n        /* \"#utility.yul\":3907:3960   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3975:3993   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":3995:4017   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3972:4018   */\n      or\n        /* \"#utility.yul\":3969:4041   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":4021:4039   */\n      tag_309\n      tag_203\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4061:4071   */\n      dup2\n        /* \"#utility.yul\":4057:4059   */\n      0x40\n        /* \"#utility.yul\":4050:4072   */\n      mstore\n        /* \"#utility.yul\":4096:4098   */\n      dup3\n        /* \"#utility.yul\":4088:4094   */\n      dup2\n        /* \"#utility.yul\":4081:4099   */\n      mstore\n        /* \"#utility.yul\":4136:4143   */\n      dup11\n        /* \"#utility.yul\":4131:4133   */\n      0x20\n        /* \"#utility.yul\":4126:4128   */\n      dup5\n        /* \"#utility.yul\":4122:4124   */\n      dup8\n        /* \"#utility.yul\":4118:4129   */\n      add\n        /* \"#utility.yul\":4114:4134   */\n      add\n        /* \"#utility.yul\":4111:4144   */\n      gt\n        /* \"#utility.yul\":4108:4161   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":4157:4158   */\n      0x00\n        /* \"#utility.yul\":4154:4155   */\n      dup1\n        /* \"#utility.yul\":4147:4159   */\n      revert\n        /* \"#utility.yul\":4108:4161   */\n    tag_310:\n        /* \"#utility.yul\":4213:4215   */\n      dup3\n        /* \"#utility.yul\":4208:4210   */\n      0x20\n        /* \"#utility.yul\":4204:4206   */\n      dup7\n        /* \"#utility.yul\":4200:4211   */\n      add\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"#utility.yul\":4187:4193   */\n      dup4\n        /* \"#utility.yul\":4183:4198   */\n      add\n        /* \"#utility.yul\":4170:4216   */\n      calldatacopy\n        /* \"#utility.yul\":4258:4259   */\n      0x00\n        /* \"#utility.yul\":4253:4255   */\n      0x20\n        /* \"#utility.yul\":4248:4250   */\n      dup5\n        /* \"#utility.yul\":4240:4246   */\n      dup4\n        /* \"#utility.yul\":4236:4251   */\n      add\n        /* \"#utility.yul\":4232:4256   */\n      add\n        /* \"#utility.yul\":4225:4260   */\n      mstore\n        /* \"#utility.yul\":4279:4285   */\n      dup1\n        /* \"#utility.yul\":4269:4285   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3153:4291   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4296:4556   */\n    tag_72:\n        /* \"#utility.yul\":4364:4370   */\n      0x00\n        /* \"#utility.yul\":4372:4378   */\n      dup1\n        /* \"#utility.yul\":4425:4427   */\n      0x40\n        /* \"#utility.yul\":4413:4422   */\n      dup4\n        /* \"#utility.yul\":4404:4411   */\n      dup6\n        /* \"#utility.yul\":4400:4423   */\n      sub\n        /* \"#utility.yul\":4396:4428   */\n      slt\n        /* \"#utility.yul\":4393:4445   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":4441:4442   */\n      0x00\n        /* \"#utility.yul\":4438:4439   */\n      dup1\n        /* \"#utility.yul\":4431:4443   */\n      revert\n        /* \"#utility.yul\":4393:4445   */\n    tag_312:\n        /* \"#utility.yul\":4464:4493   */\n      tag_313\n        /* \"#utility.yul\":4483:4492   */\n      dup4\n        /* \"#utility.yul\":4464:4493   */\n      tag_266\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4454:4493   */\n      swap2\n      pop\n        /* \"#utility.yul\":4512:4550   */\n      tag_314\n        /* \"#utility.yul\":4546:4548   */\n      0x20\n        /* \"#utility.yul\":4535:4544   */\n      dup5\n        /* \"#utility.yul\":4531:4549   */\n      add\n        /* \"#utility.yul\":4512:4550   */\n      tag_266\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4502:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4296:4556   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4561:4941   */\n    tag_82:\n        /* \"#utility.yul\":4640:4641   */\n      0x01\n        /* \"#utility.yul\":4636:4648   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4683:4695   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4704:4765   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":4758:4762   */\n      0x7f\n        /* \"#utility.yul\":4750:4756   */\n      dup3\n        /* \"#utility.yul\":4746:4763   */\n      and\n        /* \"#utility.yul\":4736:4763   */\n      swap2\n      pop\n        /* \"#utility.yul\":4704:4765   */\n    tag_316:\n        /* \"#utility.yul\":4811:4813   */\n      0x20\n        /* \"#utility.yul\":4803:4809   */\n      dup3\n        /* \"#utility.yul\":4800:4814   */\n      lt\n        /* \"#utility.yul\":4780:4798   */\n      dup2\n        /* \"#utility.yul\":4777:4815   */\n      sub\n        /* \"#utility.yul\":4774:4935   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":4857:4867   */\n      0x4e487b71\n        /* \"#utility.yul\":4852:4855   */\n      0xe0\n        /* \"#utility.yul\":4848:4868   */\n      shl\n        /* \"#utility.yul\":4845:4846   */\n      0x00\n        /* \"#utility.yul\":4838:4869   */\n      mstore\n        /* \"#utility.yul\":4892:4896   */\n      0x22\n        /* \"#utility.yul\":4889:4890   */\n      0x04\n        /* \"#utility.yul\":4882:4897   */\n      mstore\n        /* \"#utility.yul\":4920:4924   */\n      0x24\n        /* \"#utility.yul\":4917:4918   */\n      0x00\n        /* \"#utility.yul\":4910:4925   */\n      revert\n        /* \"#utility.yul\":4774:4935   */\n    tag_317:\n      pop\n        /* \"#utility.yul\":4561:4941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5778:6187   */\n    tag_111:\n        /* \"#utility.yul\":5980:5982   */\n      0x20\n        /* \"#utility.yul\":5962:5983   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6019:6021   */\n      0x2d\n        /* \"#utility.yul\":5999:6017   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5992:6022   */\n      mstore\n        /* \"#utility.yul\":6058:6092   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":6053:6055   */\n      0x40\n        /* \"#utility.yul\":6038:6056   */\n      dup3\n      add\n        /* \"#utility.yul\":6031:6093   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6124:6126   */\n      0x60\n        /* \"#utility.yul\":6109:6127   */\n      dup3\n      add\n        /* \"#utility.yul\":6102:6145   */\n      mstore\n        /* \"#utility.yul\":6177:6180   */\n      0x80\n        /* \"#utility.yul\":6162:6181   */\n      add\n      swap1\n        /* \"#utility.yul\":5778:6187   */\n      jump\t// out\n        /* \"#utility.yul\":6955:7167   */\n    tag_267:\n        /* \"#utility.yul\":6997:7000   */\n      0x00\n        /* \"#utility.yul\":7035:7040   */\n      dup2\n        /* \"#utility.yul\":7029:7041   */\n      mload\n        /* \"#utility.yul\":7079:7085   */\n      dup1\n        /* \"#utility.yul\":7072:7076   */\n      0x20\n        /* \"#utility.yul\":7065:7070   */\n      dup5\n        /* \"#utility.yul\":7061:7077   */\n      add\n        /* \"#utility.yul\":7056:7059   */\n      dup6\n        /* \"#utility.yul\":7050:7086   */\n      mcopy\n        /* \"#utility.yul\":7141:7142   */\n      0x00\n        /* \"#utility.yul\":7105:7121   */\n      swap4\n      add\n        /* \"#utility.yul\":7130:7143   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":7105:7121   */\n      swap1\n      swap2\n        /* \"#utility.yul\":6955:7167   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7172:7439   */\n    tag_152:\n        /* \"#utility.yul\":7351:7354   */\n      0x00\n        /* \"#utility.yul\":7376:7433   */\n      tag_167\n        /* \"#utility.yul\":7402:7432   */\n      tag_326\n        /* \"#utility.yul\":7428:7431   */\n      dup4\n        /* \"#utility.yul\":7420:7426   */\n      dup7\n        /* \"#utility.yul\":7402:7432   */\n      tag_267\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7394:7400   */\n      dup5\n        /* \"#utility.yul\":7376:7433   */\n      tag_267\n      jump\t// in\n        /* \"#utility.yul\":7444:7845   */\n    tag_173:\n        /* \"#utility.yul\":7646:7648   */\n      0x20\n        /* \"#utility.yul\":7628:7649   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7685:7687   */\n      0x25\n        /* \"#utility.yul\":7665:7683   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7658:7688   */\n      mstore\n        /* \"#utility.yul\":7724:7758   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":7719:7721   */\n      0x40\n        /* \"#utility.yul\":7704:7722   */\n      dup3\n      add\n        /* \"#utility.yul\":7697:7759   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":7790:7792   */\n      0x60\n        /* \"#utility.yul\":7775:7793   */\n      dup3\n      add\n        /* \"#utility.yul\":7768:7803   */\n      mstore\n        /* \"#utility.yul\":7835:7838   */\n      0x80\n        /* \"#utility.yul\":7820:7839   */\n      add\n      swap1\n        /* \"#utility.yul\":7444:7845   */\n      jump\t// out\n        /* \"#utility.yul\":8609:9023   */\n    tag_196:\n        /* \"#utility.yul\":8811:8813   */\n      0x20\n        /* \"#utility.yul\":8793:8814   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8850:8852   */\n      0x32\n        /* \"#utility.yul\":8830:8848   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8823:8853   */\n      mstore\n        /* \"#utility.yul\":8889:8923   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":8884:8886   */\n      0x40\n        /* \"#utility.yul\":8869:8887   */\n      dup3\n      add\n        /* \"#utility.yul\":8862:8924   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":8955:8957   */\n      0x60\n        /* \"#utility.yul\":8940:8958   */\n      dup3\n      add\n        /* \"#utility.yul\":8933:8981   */\n      mstore\n        /* \"#utility.yul\":9013:9016   */\n      0x80\n        /* \"#utility.yul\":8998:9017   */\n      add\n      swap1\n        /* \"#utility.yul\":8609:9023   */\n      jump\t// out\n        /* \"#utility.yul\":9160:9287   */\n    tag_268:\n        /* \"#utility.yul\":9221:9231   */\n      0x4e487b71\n        /* \"#utility.yul\":9216:9219   */\n      0xe0\n        /* \"#utility.yul\":9212:9232   */\n      shl\n        /* \"#utility.yul\":9209:9210   */\n      0x00\n        /* \"#utility.yul\":9202:9233   */\n      mstore\n        /* \"#utility.yul\":9252:9256   */\n      0x11\n        /* \"#utility.yul\":9249:9250   */\n      0x04\n        /* \"#utility.yul\":9242:9257   */\n      mstore\n        /* \"#utility.yul\":9276:9280   */\n      0x24\n        /* \"#utility.yul\":9273:9274   */\n      0x00\n        /* \"#utility.yul\":9266:9281   */\n      revert\n        /* \"#utility.yul\":9292:9420   */\n    tag_217:\n        /* \"#utility.yul\":9359:9368   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":9380:9391   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":9377:9414   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":9394:9412   */\n      tag_78\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":9425:9550   */\n    tag_220:\n        /* \"#utility.yul\":9490:9499   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9511:9521   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9508:9544   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":9524:9542   */\n      tag_78\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":9555:10055   */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9824:9839   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":9806:9840   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9876:9891   */\n      dup5\n      and\n        /* \"#utility.yul\":9871:9873   */\n      0x20\n        /* \"#utility.yul\":9856:9874   */\n      dup3\n      add\n        /* \"#utility.yul\":9849:9892   */\n      mstore\n        /* \"#utility.yul\":9923:9925   */\n      0x40\n        /* \"#utility.yul\":9908:9926   */\n      dup2\n      add\n        /* \"#utility.yul\":9901:9935   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9971:9974   */\n      0x80\n        /* \"#utility.yul\":9966:9968   */\n      0x60\n        /* \"#utility.yul\":9951:9969   */\n      dup3\n      add\n        /* \"#utility.yul\":9944:9975   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9749:9753   */\n      0x00\n      swap1\n        /* \"#utility.yul\":9992:10049   */\n      tag_340\n      swap1\n        /* \"#utility.yul\":10029:10048   */\n      dup4\n      add\n        /* \"#utility.yul\":10021:10027   */\n      dup5\n        /* \"#utility.yul\":9992:10049   */\n      tag_265\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":9984:10049   */\n      swap7\n        /* \"#utility.yul\":9555:10055   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10060:10309   */\n    tag_231:\n        /* \"#utility.yul\":10129:10135   */\n      0x00\n        /* \"#utility.yul\":10182:10184   */\n      0x20\n        /* \"#utility.yul\":10170:10179   */\n      dup3\n        /* \"#utility.yul\":10161:10168   */\n      dup5\n        /* \"#utility.yul\":10157:10180   */\n      sub\n        /* \"#utility.yul\":10153:10185   */\n      slt\n        /* \"#utility.yul\":10150:10202   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":10198:10199   */\n      0x00\n        /* \"#utility.yul\":10195:10196   */\n      dup1\n        /* \"#utility.yul\":10188:10200   */\n      revert\n        /* \"#utility.yul\":10150:10202   */\n    tag_342:\n        /* \"#utility.yul\":10230:10239   */\n      dup2\n        /* \"#utility.yul\":10224:10240   */\n      mload\n        /* \"#utility.yul\":10249:10279   */\n      tag_148\n        /* \"#utility.yul\":10273:10278   */\n      dup2\n        /* \"#utility.yul\":10249:10279   */\n      tag_264\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220bd188f003cfdbb66dc898f66050c72aacce803e30871070d377f7c73bc5f58c664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1921": {
									"entryPoint": null,
									"id": 1921,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 98,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 78,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3986:1",
										"nodeType": "YulBlock",
										"src": "0:3986:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "210:652:1",
													"nodeType": "YulBlock",
													"src": "210:652:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:1",
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nativeSrc": "261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nativeSrc": "261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:1",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nativeSrc": "234:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nativeSrc": "230:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nativeSrc": "223:35:1",
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nativeSrc": "220:55:1",
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nativeSrc": "284:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nativeSrc": "294:13:1",
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:1",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:1",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nativeSrc": "330:10:1",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:1",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nativeSrc": "326:18:1",
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:1",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:1",
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nativeSrc": "369:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nativeSrc": "369:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nativeSrc": "356:10:1",
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nativeSrc": "353:36:1",
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nativeSrc": "398:17:1",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:1",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nativeSrc": "408:7:1",
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:1",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:1",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nativeSrc": "438:9:1",
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:1",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:1",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nativeSrc": "498:13:1",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:1",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nativeSrc": "494:22:1",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:1",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nativeSrc": "490:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nativeSrc": "486:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nativeSrc": "474:53:1",
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:1",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:1",
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nativeSrc": "588:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nativeSrc": "588:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nativeSrc": "542:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nativeSrc": "562:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nativeSrc": "539:46:1",
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nativeSrc": "536:72:1",
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:1",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nativeSrc": "617:22:1",
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nativeSrc": "617:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nativeSrc": "648:18:1",
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nativeSrc": "648:18:1",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"body": {
																"nativeSrc": "714:16:1",
																"nodeType": "YulBlock",
																"src": "714:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "723:1:1",
																					"nodeType": "YulLiteral",
																					"src": "723:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "726:1:1",
																					"nodeType": "YulLiteral",
																					"src": "726:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "716:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "716:6:1"
																			},
																			"nativeSrc": "716:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "716:12:1"
																		},
																		"nativeSrc": "716:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "716:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "689:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "689:6:1"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "697:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "697:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "685:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "685:3:1"
																				},
																				"nativeSrc": "685:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "685:15:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "702:4:1",
																				"nodeType": "YulLiteral",
																				"src": "702:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "681:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "681:3:1"
																		},
																		"nativeSrc": "681:26:1",
																		"nodeType": "YulFunctionCall",
																		"src": "681:26:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "709:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "678:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "678:2:1"
																},
																"nativeSrc": "678:35:1",
																"nodeType": "YulFunctionCall",
																"src": "678:35:1"
															},
															"nativeSrc": "675:55:1",
															"nodeType": "YulIf",
															"src": "675:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "749:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "749:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "757:4:1",
																				"nodeType": "YulLiteral",
																				"src": "757:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "745:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "745:3:1"
																		},
																		"nativeSrc": "745:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "745:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "768:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "776:4:1",
																				"nodeType": "YulLiteral",
																				"src": "776:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "764:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "764:3:1"
																		},
																		"nativeSrc": "764:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "764:17:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "783:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "783:2:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "739:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "739:5:1"
																},
																"nativeSrc": "739:47:1",
																"nodeType": "YulFunctionCall",
																"src": "739:47:1"
															},
															"nativeSrc": "739:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "739:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "810:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:1"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "818:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "818:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "806:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "806:3:1"
																				},
																				"nativeSrc": "806:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "806:15:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "823:4:1",
																				"nodeType": "YulLiteral",
																				"src": "823:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "802:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:1"
																		},
																		"nativeSrc": "802:26:1",
																		"nodeType": "YulFunctionCall",
																		"src": "802:26:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:1",
																		"nodeType": "YulLiteral",
																		"src": "830:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "795:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:1"
																},
																"nativeSrc": "795:37:1",
																"nodeType": "YulFunctionCall",
																"src": "795:37:1"
															},
															"nativeSrc": "795:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "795:37:1"
														},
														{
															"nativeSrc": "841:15:1",
															"nodeType": "YulAssignment",
															"src": "841:15:1",
															"value": {
																"name": "memPtr",
																"nativeSrc": "850:6:1",
																"nodeType": "YulIdentifier",
																"src": "850:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "841:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "841:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:716:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:1",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:1",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:1",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:716:1"
											},
											{
												"body": {
													"nativeSrc": "985:444:1",
													"nodeType": "YulBlock",
													"src": "985:444:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1031:16:1",
																"nodeType": "YulBlock",
																"src": "1031:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1043:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1043:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1033:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1033:6:1"
																			},
																			"nativeSrc": "1033:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1033:12:1"
																		},
																		"nativeSrc": "1033:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1033:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1006:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1006:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1015:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1015:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1002:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1002:3:1"
																		},
																		"nativeSrc": "1002:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1002:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1027:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1027:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "998:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "998:3:1"
																},
																"nativeSrc": "998:32:1",
																"nodeType": "YulFunctionCall",
																"src": "998:32:1"
															},
															"nativeSrc": "995:52:1",
															"nodeType": "YulIf",
															"src": "995:52:1"
														},
														{
															"nativeSrc": "1056:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1056:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1076:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1076:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1070:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1070:5:1"
																},
																"nativeSrc": "1070:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1070:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1060:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1060:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1095:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1095:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1113:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1113:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1117:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1117:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1109:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1109:3:1"
																		},
																		"nativeSrc": "1109:10:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1109:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1121:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1121:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1105:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1105:3:1"
																},
																"nativeSrc": "1105:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1105:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1099:2:1",
																	"nodeType": "YulTypedName",
																	"src": "1099:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1150:16:1",
																"nodeType": "YulBlock",
																"src": "1150:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1159:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1159:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1162:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1162:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1152:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1152:6:1"
																			},
																			"nativeSrc": "1152:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1152:12:1"
																		},
																		"nativeSrc": "1152:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1152:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1138:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1138:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1146:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "1146:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1135:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1135:2:1"
																},
																"nativeSrc": "1135:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1135:14:1"
															},
															"nativeSrc": "1132:34:1",
															"nodeType": "YulIf",
															"src": "1132:34:1"
														},
														{
															"nativeSrc": "1175:71:1",
															"nodeType": "YulAssignment",
															"src": "1175:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1218:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1218:9:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1229:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1214:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1214:3:1"
																		},
																		"nativeSrc": "1214:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1214:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1238:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1238:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1185:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1185:28:1"
																},
																"nativeSrc": "1185:61:1",
																"nodeType": "YulFunctionCall",
																"src": "1185:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1175:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1175:6:1"
																}
															]
														},
														{
															"nativeSrc": "1255:41:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1281:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1281:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1277:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1277:3:1"
																		},
																		"nativeSrc": "1277:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1277:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1271:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1271:5:1"
																},
																"nativeSrc": "1271:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1271:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1259:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1259:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1325:16:1",
																"nodeType": "YulBlock",
																"src": "1325:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1334:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1334:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1337:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1337:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1327:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1327:6:1"
																			},
																			"nativeSrc": "1327:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1327:12:1"
																		},
																		"nativeSrc": "1327:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1327:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1311:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1311:8:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1321:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "1321:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1308:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1308:2:1"
																},
																"nativeSrc": "1308:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1308:16:1"
															},
															"nativeSrc": "1305:36:1",
															"nodeType": "YulIf",
															"src": "1305:36:1"
														},
														{
															"nativeSrc": "1350:73:1",
															"nodeType": "YulAssignment",
															"src": "1350:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1393:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1404:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1404:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1389:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:1"
																		},
																		"nativeSrc": "1389:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1389:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1415:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1415:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1360:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1360:28:1"
																},
																"nativeSrc": "1360:63:1",
																"nodeType": "YulFunctionCall",
																"src": "1360:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1350:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "867:562:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "943:9:1",
														"nodeType": "YulTypedName",
														"src": "943:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "954:7:1",
														"nodeType": "YulTypedName",
														"src": "954:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "966:6:1",
														"nodeType": "YulTypedName",
														"src": "966:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "974:6:1",
														"nodeType": "YulTypedName",
														"src": "974:6:1",
														"type": ""
													}
												],
												"src": "867:562:1"
											},
											{
												"body": {
													"nativeSrc": "1489:325:1",
													"nodeType": "YulBlock",
													"src": "1489:325:1",
													"statements": [
														{
															"nativeSrc": "1499:22:1",
															"nodeType": "YulAssignment",
															"src": "1499:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1513:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1513:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1516:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1516:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1509:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1509:3:1"
																},
																"nativeSrc": "1509:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1509:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1499:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1499:6:1"
																}
															]
														},
														{
															"nativeSrc": "1530:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1530:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1560:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1560:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1566:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1566:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1556:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1556:3:1"
																},
																"nativeSrc": "1556:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1556:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1534:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1534:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:31:1",
																"nodeType": "YulBlock",
																"src": "1607:31:1",
																"statements": [
																	{
																		"nativeSrc": "1609:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1609:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1623:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1623:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1631:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1631:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1619:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1619:3:1"
																			},
																			"nativeSrc": "1619:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1619:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1609:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1609:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1587:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1587:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1580:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:1"
																},
																"nativeSrc": "1580:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1580:26:1"
															},
															"nativeSrc": "1577:61:1",
															"nodeType": "YulIf",
															"src": "1577:61:1"
														},
														{
															"body": {
																"nativeSrc": "1697:111:1",
																"nodeType": "YulBlock",
																"src": "1697:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1718:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1718:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1725:3:1",
																							"nodeType": "YulLiteral",
																							"src": "1725:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1730:10:1",
																							"nodeType": "YulLiteral",
																							"src": "1730:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1721:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1721:3:1"
																					},
																					"nativeSrc": "1721:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1721:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1711:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:1"
																			},
																			"nativeSrc": "1711:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1711:31:1"
																		},
																		"nativeSrc": "1711:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1711:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1762:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1762:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1765:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1765:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1755:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1755:6:1"
																			},
																			"nativeSrc": "1755:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1755:15:1"
																		},
																		"nativeSrc": "1755:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1755:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1790:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1790:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1793:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1793:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1783:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1783:6:1"
																			},
																			"nativeSrc": "1783:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1783:15:1"
																		},
																		"nativeSrc": "1783:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1783:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1653:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1653:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1676:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1684:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1684:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1673:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1673:2:1"
																		},
																		"nativeSrc": "1673:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1673:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1650:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:2:1"
																},
																"nativeSrc": "1650:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1650:38:1"
															},
															"nativeSrc": "1647:161:1",
															"nodeType": "YulIf",
															"src": "1647:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1434:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1469:4:1",
														"nodeType": "YulTypedName",
														"src": "1469:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1478:6:1",
														"nodeType": "YulTypedName",
														"src": "1478:6:1",
														"type": ""
													}
												],
												"src": "1434:380:1"
											},
											{
												"body": {
													"nativeSrc": "1875:65:1",
													"nodeType": "YulBlock",
													"src": "1875:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1892:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1892:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1895:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1895:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1885:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1885:6:1"
																},
																"nativeSrc": "1885:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1885:14:1"
															},
															"nativeSrc": "1885:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "1885:14:1"
														},
														{
															"nativeSrc": "1908:26:1",
															"nodeType": "YulAssignment",
															"src": "1908:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1926:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1926:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1929:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1929:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1916:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1916:9:1"
																},
																"nativeSrc": "1916:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1916:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1908:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1908:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1819:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1858:3:1",
														"nodeType": "YulTypedName",
														"src": "1858:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1866:4:1",
														"nodeType": "YulTypedName",
														"src": "1866:4:1",
														"type": ""
													}
												],
												"src": "1819:121:1"
											},
											{
												"body": {
													"nativeSrc": "2026:437:1",
													"nodeType": "YulBlock",
													"src": "2026:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2059:398:1",
																"nodeType": "YulBlock",
																"src": "2059:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2080:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2080:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2083:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2083:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2073:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2073:6:1"
																			},
																			"nativeSrc": "2073:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2073:16:1"
																		},
																		"nativeSrc": "2073:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2073:16:1"
																	},
																	{
																		"nativeSrc": "2102:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2102:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2124:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2124:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2127:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2127:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2114:9:1"
																			},
																			"nativeSrc": "2114:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2114:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2106:4:1",
																				"nodeType": "YulTypedName",
																				"src": "2106:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2145:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2145:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2168:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "2168:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2178:1:1",
																							"nodeType": "YulLiteral",
																							"src": "2178:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2185:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "2185:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2197:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2197:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2181:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2181:3:1"
																							},
																							"nativeSrc": "2181:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2181:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2174:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2174:3:1"
																					},
																					"nativeSrc": "2174:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2174:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2164:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2164:3:1"
																			},
																			"nativeSrc": "2164:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2164:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2149:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2149:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2239:23:1",
																			"nodeType": "YulBlock",
																			"src": "2239:23:1",
																			"statements": [
																				{
																					"nativeSrc": "2241:19:1",
																					"nodeType": "YulAssignment",
																					"src": "2241:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2256:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2256:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2241:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "2241:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2221:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "2221:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2233:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2233:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2218:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "2218:2:1"
																			},
																			"nativeSrc": "2218:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2218:20:1"
																		},
																		"nativeSrc": "2215:47:1",
																		"nodeType": "YulIf",
																		"src": "2215:47:1"
																	},
																	{
																		"nativeSrc": "2275:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2275:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2289:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "2289:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2299:1:1",
																							"nodeType": "YulLiteral",
																							"src": "2299:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2306:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2306:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2311:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2311:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2302:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2302:3:1"
																							},
																							"nativeSrc": "2302:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2302:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2295:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2295:3:1"
																					},
																					"nativeSrc": "2295:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2295:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2285:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2285:3:1"
																			},
																			"nativeSrc": "2285:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2285:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2279:2:1",
																				"nodeType": "YulTypedName",
																				"src": "2279:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2329:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2329:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2342:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "2342:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2333:5:1",
																				"nodeType": "YulTypedName",
																				"src": "2333:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2427:20:1",
																			"nodeType": "YulBlock",
																			"src": "2427:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2436:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2436:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2443:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2443:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2429:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2429:6:1"
																						},
																						"nativeSrc": "2429:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2429:16:1"
																					},
																					"nativeSrc": "2429:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "2429:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2377:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2377:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2384:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "2384:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2374:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "2374:2:1"
																			},
																			"nativeSrc": "2374:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2374:13:1"
																		},
																		"nativeSrc": "2366:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2388:26:1",
																			"nodeType": "YulBlock",
																			"src": "2388:26:1",
																			"statements": [
																				{
																					"nativeSrc": "2390:22:1",
																					"nodeType": "YulAssignment",
																					"src": "2390:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2403:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2403:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2410:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2410:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2399:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2399:3:1"
																						},
																						"nativeSrc": "2399:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2399:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2390:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "2390:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2370:3:1",
																			"nodeType": "YulBlock",
																			"src": "2370:3:1",
																			"statements": []
																		},
																		"src": "2366:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2042:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2042:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2047:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2047:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2039:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2039:2:1"
																},
																"nativeSrc": "2039:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2039:11:1"
															},
															"nativeSrc": "2036:421:1",
															"nodeType": "YulIf",
															"src": "2036:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1945:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1998:5:1",
														"nodeType": "YulTypedName",
														"src": "1998:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2005:3:1",
														"nodeType": "YulTypedName",
														"src": "2005:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2010:10:1",
														"nodeType": "YulTypedName",
														"src": "2010:10:1",
														"type": ""
													}
												],
												"src": "1945:518:1"
											},
											{
												"body": {
													"nativeSrc": "2553:81:1",
													"nodeType": "YulBlock",
													"src": "2553:81:1",
													"statements": [
														{
															"nativeSrc": "2563:65:1",
															"nodeType": "YulAssignment",
															"src": "2563:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2578:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2578:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2596:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2596:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2599:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2599:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2592:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2592:3:1"
																								},
																								"nativeSrc": "2592:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2592:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2609:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2609:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2605:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2605:3:1"
																								},
																								"nativeSrc": "2605:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2605:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2588:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2588:3:1"
																						},
																						"nativeSrc": "2588:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2588:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2584:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2584:3:1"
																				},
																				"nativeSrc": "2584:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2574:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:1"
																		},
																		"nativeSrc": "2574:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2623:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2623:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2616:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2616:3:1"
																		},
																		"nativeSrc": "2616:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2616:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2571:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2571:2:1"
																},
																"nativeSrc": "2571:57:1",
																"nodeType": "YulFunctionCall",
																"src": "2571:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2563:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2563:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2468:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2530:4:1",
														"nodeType": "YulTypedName",
														"src": "2530:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2536:3:1",
														"nodeType": "YulTypedName",
														"src": "2536:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2544:4:1",
														"nodeType": "YulTypedName",
														"src": "2544:4:1",
														"type": ""
													}
												],
												"src": "2468:166:1"
											},
											{
												"body": {
													"nativeSrc": "2735:1249:1",
													"nodeType": "YulBlock",
													"src": "2735:1249:1",
													"statements": [
														{
															"nativeSrc": "2745:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2745:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2765:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2765:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2759:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2759:5:1"
																},
																"nativeSrc": "2759:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2759:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2749:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2749:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2812:22:1",
																"nodeType": "YulBlock",
																"src": "2812:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2814:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2814:16:1"
																			},
																			"nativeSrc": "2814:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2814:18:1"
																		},
																		"nativeSrc": "2814:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2814:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2800:2:1",
																						"nodeType": "YulLiteral",
																						"src": "2800:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2804:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2804:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2796:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2796:3:1"
																				},
																				"nativeSrc": "2796:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2796:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2808:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2808:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2792:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:1"
																		},
																		"nativeSrc": "2792:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2792:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2781:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2781:2:1"
																},
																"nativeSrc": "2781:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2781:30:1"
															},
															"nativeSrc": "2778:56:1",
															"nodeType": "YulIf",
															"src": "2778:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2887:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2887:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2925:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2925:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2919:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2919:5:1"
																				},
																				"nativeSrc": "2919:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2893:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "2893:25:1"
																		},
																		"nativeSrc": "2893:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2893:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2933:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2933:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2843:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2843:43:1"
																},
																"nativeSrc": "2843:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2843:97:1"
															},
															"nativeSrc": "2843:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "2843:97:1"
														},
														{
															"nativeSrc": "2949:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2949:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2966:1:1",
																"nodeType": "YulLiteral",
																"src": "2966:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2953:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2953:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2976:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2976:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2995:4:1",
																"nodeType": "YulLiteral",
																"src": "2995:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "2980:11:1",
																	"nodeType": "YulTypedName",
																	"src": "2980:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3008:17:1",
															"nodeType": "YulAssignment",
															"src": "3008:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3021:4:1",
																"nodeType": "YulLiteral",
																"src": "3021:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3008:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "3008:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3071:656:1",
																		"nodeType": "YulBlock",
																		"src": "3071:656:1",
																		"statements": [
																			{
																				"nativeSrc": "3085:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3085:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3104:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3104:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3116:2:1",
																									"nodeType": "YulLiteral",
																									"src": "3116:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3112:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3112:3:1"
																							},
																							"nativeSrc": "3112:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3112:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3100:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3100:3:1"
																					},
																					"nativeSrc": "3100:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3100:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3089:7:1",
																						"nodeType": "YulTypedName",
																						"src": "3089:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3133:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3133:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3177:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3177:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3147:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "3147:29:1"
																					},
																					"nativeSrc": "3147:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3147:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3137:6:1",
																						"nodeType": "YulTypedName",
																						"src": "3137:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3195:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3195:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3204:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3204:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3199:1:1",
																						"nodeType": "YulTypedName",
																						"src": "3199:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3282:172:1",
																					"nodeType": "YulBlock",
																					"src": "3282:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3307:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3307:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3325:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3325:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3330:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "3330:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3321:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "3321:3:1"
																												},
																												"nativeSrc": "3321:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "3321:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3315:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "3315:5:1"
																										},
																										"nativeSrc": "3315:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3315:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3300:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3300:6:1"
																								},
																								"nativeSrc": "3300:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3300:42:1"
																							},
																							"nativeSrc": "3300:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "3300:42:1"
																						},
																						{
																							"nativeSrc": "3359:24:1",
																							"nodeType": "YulAssignment",
																							"src": "3359:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3373:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3373:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3381:1:1",
																										"nodeType": "YulLiteral",
																										"src": "3381:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3369:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3369:3:1"
																								},
																								"nativeSrc": "3369:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3369:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3359:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3359:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3400:40:1",
																							"nodeType": "YulAssignment",
																							"src": "3400:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3417:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "3417:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3428:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "3428:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3413:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3413:3:1"
																								},
																								"nativeSrc": "3413:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3413:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3400:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3400:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3229:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "3229:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3232:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "3232:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3226:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3226:2:1"
																					},
																					"nativeSrc": "3226:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3226:14:1"
																				},
																				"nativeSrc": "3218:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3241:28:1",
																					"nodeType": "YulBlock",
																					"src": "3241:28:1",
																					"statements": [
																						{
																							"nativeSrc": "3243:24:1",
																							"nodeType": "YulAssignment",
																							"src": "3243:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3252:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "3252:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3255:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "3255:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3248:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3248:3:1"
																								},
																								"nativeSrc": "3248:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3248:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3243:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "3243:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3222:3:1",
																					"nodeType": "YulBlock",
																					"src": "3222:3:1",
																					"statements": []
																				},
																				"src": "3218:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "3502:166:1",
																					"nodeType": "YulBlock",
																					"src": "3502:166:1",
																					"statements": [
																						{
																							"nativeSrc": "3520:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3520:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3547:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3547:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3552:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3552:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3543:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3543:3:1"
																										},
																										"nativeSrc": "3543:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3543:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3537:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3537:5:1"
																								},
																								"nativeSrc": "3537:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3537:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3524:9:1",
																									"nodeType": "YulTypedName",
																									"src": "3524:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3587:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3587:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3599:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3599:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3626:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "3626:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3629:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "3629:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3622:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "3622:3:1"
																																		},
																																		"nativeSrc": "3622:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3622:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3638:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3638:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3618:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3618:3:1"
																																},
																																"nativeSrc": "3618:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3618:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3648:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3648:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3644:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3644:3:1"
																																},
																																"nativeSrc": "3644:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3644:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3614:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "3614:3:1"
																														},
																														"nativeSrc": "3614:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "3614:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3610:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "3610:3:1"
																												},
																												"nativeSrc": "3610:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "3610:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3595:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3595:3:1"
																										},
																										"nativeSrc": "3595:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3595:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3580:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3580:6:1"
																								},
																								"nativeSrc": "3580:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3580:74:1"
																							},
																							"nativeSrc": "3580:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "3580:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3473:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "3473:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3482:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3482:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3470:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3470:2:1"
																					},
																					"nativeSrc": "3470:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3470:19:1"
																				},
																				"nativeSrc": "3467:201:1",
																				"nodeType": "YulIf",
																				"src": "3467:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3688:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3688:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3702:1:1",
																											"nodeType": "YulLiteral",
																											"src": "3702:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3705:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "3705:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3698:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "3698:3:1"
																									},
																									"nativeSrc": "3698:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "3698:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3714:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3714:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3694:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3694:3:1"
																							},
																							"nativeSrc": "3694:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3694:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3681:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3681:6:1"
																					},
																					"nativeSrc": "3681:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3681:36:1"
																				},
																				"nativeSrc": "3681:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3681:36:1"
																			}
																		]
																	},
																	"nativeSrc": "3064:663:1",
																	"nodeType": "YulCase",
																	"src": "3064:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3069:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3069:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3744:234:1",
																		"nodeType": "YulBlock",
																		"src": "3744:234:1",
																		"statements": [
																			{
																				"nativeSrc": "3758:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3758:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3771:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3771:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3762:5:1",
																						"nodeType": "YulTypedName",
																						"src": "3762:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3807:67:1",
																					"nodeType": "YulBlock",
																					"src": "3807:67:1",
																					"statements": [
																						{
																							"nativeSrc": "3825:35:1",
																							"nodeType": "YulAssignment",
																							"src": "3825:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3844:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3844:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3849:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3849:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3840:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3840:3:1"
																										},
																										"nativeSrc": "3840:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3840:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3834:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3834:5:1"
																								},
																								"nativeSrc": "3834:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3834:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3825:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3825:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3788:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3788:6:1"
																				},
																				"nativeSrc": "3785:89:1",
																				"nodeType": "YulIf",
																				"src": "3785:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3894:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3894:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3960:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3960:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3900:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "3900:52:1"
																							},
																							"nativeSrc": "3900:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3900:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3887:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3887:6:1"
																					},
																					"nativeSrc": "3887:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3887:81:1"
																				},
																				"nativeSrc": "3887:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3887:81:1"
																			}
																		]
																	},
																	"nativeSrc": "3736:242:1",
																	"nodeType": "YulCase",
																	"src": "3736:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3044:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3052:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3041:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3041:2:1"
																},
																"nativeSrc": "3041:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3041:14:1"
															},
															"nativeSrc": "3034:944:1",
															"nodeType": "YulSwitch",
															"src": "3034:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2639:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2720:4:1",
														"nodeType": "YulTypedName",
														"src": "2720:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2726:3:1",
														"nodeType": "YulTypedName",
														"src": "2726:3:1",
														"type": ""
													}
												],
												"src": "2639:1345:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x13D4 CODESIZE SUB DUP1 PUSH2 0x13D4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xEA JUMP JUMPDEST PUSH0 PUSH2 0x39 DUP4 DUP3 PUSH2 0x1CD JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x46 DUP3 DUP3 PUSH2 0x1CD JUMP JUMPDEST POP POP POP PUSH2 0x28C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x71 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x8B JUMPI PUSH2 0x8B PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB3 JUMPI PUSH2 0xB3 PUSH2 0x4E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xCB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x111 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11D DUP7 DUP4 DUP8 ADD PUSH2 0x62 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x132 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F DUP6 DUP3 DUP7 ADD PUSH2 0x62 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1C8 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1A6 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E6 PUSH2 0x4E JUMP JUMPDEST PUSH2 0x1FA DUP2 PUSH2 0x1F4 DUP5 SLOAD PUSH2 0x149 JUMP JUMPDEST DUP5 PUSH2 0x181 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x216 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x284 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x23C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x278 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x113B DUP1 PUSH2 0x299 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x15F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0xFF PUSH2 0x546 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x22A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x245 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xF2D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF2D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2E4 DUP3 PUSH2 0x639 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x309 DUP3 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x397 DUP2 CALLER PUSH2 0x60C JUMP JUMPDEST PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 PUSH2 0x69A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x422 CALLER DUP3 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xF65 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 DUP4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x564 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x52B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x560 CALLER DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x56E CALLER DUP4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xF65 JUMP JUMPDEST PUSH2 0x596 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5A7 DUP3 PUSH2 0x639 JUMP JUMPDEST PUSH0 PUSH2 0x5BC PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x605 JUMP JUMPDEST DUP1 PUSH2 0x5E4 DUP5 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F5 SWAP3 SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6CE DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x712 DUP4 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x739 JUMPI POP PUSH2 0x739 DUP2 DUP6 PUSH2 0x60C JUMP JUMPDEST DUP1 PUSH2 0x75D JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x752 DUP5 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x778 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x80D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA64 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x820 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9AC DUP5 DUP5 DUP5 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x9B8 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x9E0 DUP4 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FF JUMPI PUSH2 0x9FF PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA29 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA33 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAA3 SWAP1 DUP5 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xADF SWAP1 DUP5 SWAP1 PUSH2 0x109B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB2D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB67 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB64 SWAP2 DUP2 ADD SWAP1 PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBC2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1022 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x75D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC25 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC51 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC6F JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC87 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC9B JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCAD JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x245 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x697 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x605 DUP2 PUSH2 0xCBE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x605 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCEE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD3E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD5B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD71 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7A DUP4 PUSH2 0xD45 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD9A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDA3 DUP5 PUSH2 0xD45 JUMP JUMPDEST SWAP3 POP PUSH2 0xDB1 PUSH1 0x20 DUP6 ADD PUSH2 0xD45 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x605 DUP3 PUSH2 0xD45 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDEB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDF4 DUP4 PUSH2 0xD45 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE08 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE3A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE43 DUP6 PUSH2 0xD45 JUMP JUMPDEST SWAP4 POP PUSH2 0xE51 PUSH1 0x20 DUP7 ADD PUSH2 0xD45 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE74 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE87 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE99 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEC1 JUMPI PUSH2 0xEC1 PUSH2 0xE13 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xED9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF0D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF16 DUP4 PUSH2 0xD45 JUMP JUMPDEST SWAP2 POP PUSH2 0xF24 PUSH1 0x20 DUP5 ADD PUSH2 0xD45 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF41 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x75D PUSH2 0xFD7 DUP4 DUP7 PUSH2 0xFB2 JUMP JUMPDEST DUP5 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x245 JUMPI PUSH2 0x245 PUSH2 0x1074 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x245 JUMPI PUSH2 0x245 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x10E0 SWAP1 DUP4 ADD DUP5 PUSH2 0xCEE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x605 DUP2 PUSH2 0xCBE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD XOR DUP16 STOP EXTCODECOPY REVERT 0xBB PUSH7 0xDC898F66050C72 0xAA 0xCC 0xE8 SUB 0xE3 ADDMOD PUSH18 0x70D377F7C73BC5F58C664736F6C63430008 NOT STOP CALLER ",
							"sourceMap": "40505:16327:0:-:0;;;41267:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;41333:5;:13;41341:5;41333;:13;:::i;:::-;-1:-1:-1;41356:7:0;:17;41366:7;41356;:17;:::i;:::-;;41267:113;;40505:16327;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:716;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;709:3;702:4;697:2;689:6;685:15;681:26;678:35;675:55;;;726:1;723;716:12;675:55;783:2;776:4;768:6;764:17;757:4;749:6;745:17;739:47;830:1;823:4;818:2;810:6;806:15;802:26;795:37;850:6;841:15;;;;;;146:716;;;;:::o;867:562::-;966:6;974;1027:2;1015:9;1006:7;1002:23;998:32;995:52;;;1043:1;1040;1033:12;995:52;1070:16;;-1:-1:-1;;;;;1135:14:1;;;1132:34;;;1162:1;1159;1152:12;1132:34;1185:61;1238:7;1229:6;1218:9;1214:22;1185:61;:::i;:::-;1175:71;;1292:2;1281:9;1277:18;1271:25;1255:41;;1321:2;1311:8;1308:16;1305:36;;;1337:1;1334;1327:12;1305:36;;1360:63;1415:7;1404:8;1393:9;1389:24;1360:63;:::i;:::-;1350:73;;;867:562;;;;;:::o;1434:380::-;1513:1;1509:12;;;;1556;;;1577:61;;1631:4;1623:6;1619:17;1609:27;;1577:61;1684:2;1676:6;1673:14;1653:18;1650:38;1647:161;;1730:10;1725:3;1721:20;1718:1;1711:31;1765:4;1762:1;1755:15;1793:4;1790:1;1783:15;1647:161;;1434:380;;;:::o;1945:518::-;2047:2;2042:3;2039:11;2036:421;;;2083:5;2080:1;2073:16;2127:4;2124:1;2114:18;2197:2;2185:10;2181:19;2178:1;2174:27;2168:4;2164:38;2233:4;2221:10;2218:20;2215:47;;;-1:-1:-1;2256:4:1;2215:47;2311:2;2306:3;2302:12;2299:1;2295:20;2289:4;2285:31;2275:41;;2366:81;2384:2;2377:5;2374:13;2366:81;;;2443:1;2429:16;;2410:1;2399:13;2366:81;;;2370:3;;2036:421;1945:518;;;:::o;2639:1345::-;2759:10;;-1:-1:-1;;;;;2781:30:1;;2778:56;;;2814:18;;:::i;:::-;2843:97;2933:6;2893:38;2925:4;2919:11;2893:38;:::i;:::-;2887:4;2843:97;:::i;:::-;2995:4;;3052:2;3041:14;;3069:1;3064:663;;;;3771:1;3788:6;3785:89;;;-1:-1:-1;3840:19:1;;;3834:26;3785:89;-1:-1:-1;;2596:1:1;2592:11;;;2588:24;2584:29;2574:40;2620:1;2616:11;;;2571:57;3887:81;;3034:944;;3064:663;1892:1;1885:14;;;1929:4;1916:18;;-1:-1:-1;;3100:20:1;;;3218:236;3232:7;3229:1;3226:14;3218:236;;;3321:19;;;3315:26;3300:42;;3413:27;;;;3381:1;3369:14;;;;3248:19;;3218:236;;;3222:3;3482:6;3473:7;3470:19;3467:201;;;3543:19;;;3537:26;-1:-1:-1;;3626:1:1;3622:14;;;3638:3;3618:24;3614:37;3610:42;3595:58;3580:74;;3467:201;;;3714:1;3705:6;3702:1;3698:14;3694:22;3688:4;3681:36;3034:944;;;;;2639:1345;;:::o;:::-;40505:16327:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_2802": {
									"entryPoint": null,
									"id": 2802,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2635": {
									"entryPoint": 1690,
									"id": 2635,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_2072": {
									"entryPoint": null,
									"id": 2072,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_2789": {
									"entryPoint": 2660,
									"id": 2789,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2743": {
									"entryPoint": 2794,
									"id": 2743,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_2304": {
									"entryPoint": null,
									"id": 2304,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_2338": {
									"entryPoint": 1799,
									"id": 2338,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1121": {
									"entryPoint": null,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2286": {
									"entryPoint": null,
									"id": 2286,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_2681": {
									"entryPoint": 1593,
									"id": 2681,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_2273": {
									"entryPoint": 2465,
									"id": 2273,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2667": {
									"entryPoint": 2260,
									"id": 2667,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_2611": {
									"entryPoint": 1893,
									"id": 2611,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_2115": {
									"entryPoint": 767,
									"id": 2115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1976": {
									"entryPoint": 1218,
									"id": 1976,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_2133": {
									"entryPoint": 730,
									"id": 2133,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2168": {
									"entryPoint": 1548,
									"id": 2168,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1365": {
									"entryPoint": null,
									"id": 1365,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_774": {
									"entryPoint": 3047,
									"id": 774,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_2014": {
									"entryPoint": 587,
									"id": 2014,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_2004": {
									"entryPoint": 1123,
									"id": 2004,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_2214": {
									"entryPoint": 1097,
									"id": 2214,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2244": {
									"entryPoint": 1380,
									"id": 2244,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_2150": {
									"entryPoint": 1365,
									"id": 2150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1726": {
									"entryPoint": null,
									"id": 1726,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1952": {
									"entryPoint": 506,
									"id": 1952,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_2024": {
									"entryPoint": 1350,
									"id": 2024,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_993": {
									"entryPoint": 2516,
									"id": 993,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2063": {
									"entryPoint": 1436,
									"id": 2063,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_2195": {
									"entryPoint": 1048,
									"id": 2195,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4041,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4270,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4212,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10311:1",
										"nodeType": "YulBlock",
										"src": "0:10311:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:1",
													"nodeType": "YulBlock",
													"src": "58:87:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:1",
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:1",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:1",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nativeSrc": "125:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nativeSrc": "125:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:1",
																								"nodeType": "YulLiteral",
																								"src": "103:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:1",
																								"nodeType": "YulLiteral",
																								"src": "108:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:1"
																						},
																						"nativeSrc": "99:20:1",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:1"
																				},
																				"nativeSrc": "88:32:1",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:1"
																		},
																		"nativeSrc": "78:43:1",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:1"
																},
																"nativeSrc": "71:51:1",
																"nodeType": "YulFunctionCall",
																"src": "71:51:1"
															},
															"nativeSrc": "68:71:1",
															"nodeType": "YulIf",
															"src": "68:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:1",
														"nodeType": "YulTypedName",
														"src": "47:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nativeSrc": "219:176:1",
													"nodeType": "YulBlock",
													"src": "219:176:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:1",
																"nodeType": "YulBlock",
																"src": "265:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:1",
																					"nodeType": "YulLiteral",
																					"src": "274:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:1",
																					"nodeType": "YulLiteral",
																					"src": "277:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:1"
																			},
																			"nativeSrc": "267:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:1"
																		},
																		"nativeSrc": "267:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:1"
																		},
																		"nativeSrc": "236:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:1",
																		"nodeType": "YulLiteral",
																		"src": "261:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:1"
																},
																"nativeSrc": "232:32:1",
																"nodeType": "YulFunctionCall",
																"src": "232:32:1"
															},
															"nativeSrc": "229:52:1",
															"nodeType": "YulIf",
															"src": "229:52:1"
														},
														{
															"nativeSrc": "290:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:1"
																},
																"nativeSrc": "303:23:1",
																"nodeType": "YulFunctionCall",
																"src": "303:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:1",
																	"nodeType": "YulTypedName",
																	"src": "294:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:1"
																},
																"nativeSrc": "335:30:1",
																"nodeType": "YulFunctionCall",
																"src": "335:30:1"
															},
															"nativeSrc": "335:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:1"
														},
														{
															"nativeSrc": "374:15:1",
															"nodeType": "YulAssignment",
															"src": "374:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:1",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:1",
														"nodeType": "YulTypedName",
														"src": "185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:1",
														"nodeType": "YulTypedName",
														"src": "196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:1",
														"nodeType": "YulTypedName",
														"src": "208:6:1",
														"type": ""
													}
												],
												"src": "150:245:1"
											},
											{
												"body": {
													"nativeSrc": "495:92:1",
													"nodeType": "YulBlock",
													"src": "495:92:1",
													"statements": [
														{
															"nativeSrc": "505:26:1",
															"nodeType": "YulAssignment",
															"src": "505:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:1",
																		"nodeType": "YulLiteral",
																		"src": "528:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:1"
																},
																"nativeSrc": "513:18:1",
																"nodeType": "YulFunctionCall",
																"src": "513:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:1"
																				},
																				"nativeSrc": "565:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:1"
																		},
																		"nativeSrc": "558:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:1"
																},
																"nativeSrc": "540:41:1",
																"nodeType": "YulFunctionCall",
																"src": "540:41:1"
															},
															"nativeSrc": "540:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:1",
														"nodeType": "YulTypedName",
														"src": "464:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:1",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:1",
														"nodeType": "YulTypedName",
														"src": "486:4:1",
														"type": ""
													}
												],
												"src": "400:187:1"
											},
											{
												"body": {
													"nativeSrc": "653:239:1",
													"nodeType": "YulBlock",
													"src": "653:239:1",
													"statements": [
														{
															"nativeSrc": "663:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "663:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "683:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "683:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "677:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "677:5:1"
																},
																"nativeSrc": "677:12:1",
																"nodeType": "YulFunctionCall",
																"src": "677:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "667:6:1",
																	"nodeType": "YulTypedName",
																	"src": "667:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "705:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "705:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "710:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "710:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "698:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:1"
																},
																"nativeSrc": "698:19:1",
																"nodeType": "YulFunctionCall",
																"src": "698:19:1"
															},
															"nativeSrc": "698:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "698:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "736:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "736:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "741:4:1",
																				"nodeType": "YulLiteral",
																				"src": "741:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "732:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:1"
																		},
																		"nativeSrc": "732:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "732:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "752:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "752:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "759:4:1",
																				"nodeType": "YulLiteral",
																				"src": "759:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "748:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:1"
																		},
																		"nativeSrc": "748:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "748:16:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "766:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "766:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "726:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:5:1"
																},
																"nativeSrc": "726:47:1",
																"nodeType": "YulFunctionCall",
																"src": "726:47:1"
															},
															"nativeSrc": "726:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "726:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "797:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "797:3:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "802:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "802:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "793:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "793:3:1"
																				},
																				"nativeSrc": "793:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "793:16:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "811:4:1",
																				"nodeType": "YulLiteral",
																				"src": "811:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:1"
																		},
																		"nativeSrc": "789:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "789:27:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "818:1:1",
																		"nodeType": "YulLiteral",
																		"src": "818:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "782:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:1"
																},
																"nativeSrc": "782:38:1",
																"nodeType": "YulFunctionCall",
																"src": "782:38:1"
															},
															"nativeSrc": "782:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "782:38:1"
														},
														{
															"nativeSrc": "829:57:1",
															"nodeType": "YulAssignment",
															"src": "829:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "844:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "844:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "857:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "857:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "865:2:1",
																								"nodeType": "YulLiteral",
																								"src": "865:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "853:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "853:3:1"
																						},
																						"nativeSrc": "853:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "853:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "874:2:1",
																								"nodeType": "YulLiteral",
																								"src": "874:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "870:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "870:3:1"
																						},
																						"nativeSrc": "870:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "870:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "849:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "849:3:1"
																				},
																				"nativeSrc": "849:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "849:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nativeSrc": "840:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "840:39:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "881:4:1",
																		"nodeType": "YulLiteral",
																		"src": "881:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nativeSrc": "836:50:1",
																"nodeType": "YulFunctionCall",
																"src": "836:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "829:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "592:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "630:5:1",
														"nodeType": "YulTypedName",
														"src": "630:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "637:3:1",
														"nodeType": "YulTypedName",
														"src": "637:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "645:3:1",
														"nodeType": "YulTypedName",
														"src": "645:3:1",
														"type": ""
													}
												],
												"src": "592:300:1"
											},
											{
												"body": {
													"nativeSrc": "1018:110:1",
													"nodeType": "YulBlock",
													"src": "1018:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1035:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1046:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1046:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1028:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:1"
																},
																"nativeSrc": "1028:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1028:21:1"
															},
															"nativeSrc": "1028:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1028:21:1"
														},
														{
															"nativeSrc": "1058:64:1",
															"nodeType": "YulAssignment",
															"src": "1058:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1095:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1095:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1107:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1107:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1118:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1118:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1103:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1103:3:1"
																		},
																		"nativeSrc": "1103:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1103:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1066:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1066:28:1"
																},
																"nativeSrc": "1066:56:1",
																"nodeType": "YulFunctionCall",
																"src": "1066:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1058:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1058:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "897:231:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "987:9:1",
														"nodeType": "YulTypedName",
														"src": "987:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "998:6:1",
														"nodeType": "YulTypedName",
														"src": "998:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1009:4:1",
														"nodeType": "YulTypedName",
														"src": "1009:4:1",
														"type": ""
													}
												],
												"src": "897:231:1"
											},
											{
												"body": {
													"nativeSrc": "1203:110:1",
													"nodeType": "YulBlock",
													"src": "1203:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1249:16:1",
																"nodeType": "YulBlock",
																"src": "1249:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1258:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1258:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1261:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1261:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1251:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:1"
																			},
																			"nativeSrc": "1251:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1251:12:1"
																		},
																		"nativeSrc": "1251:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1251:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1224:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1224:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1233:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1233:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nativeSrc": "1220:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:1"
																},
																"nativeSrc": "1216:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1216:32:1"
															},
															"nativeSrc": "1213:52:1",
															"nodeType": "YulIf",
															"src": "1213:52:1"
														},
														{
															"nativeSrc": "1274:33:1",
															"nodeType": "YulAssignment",
															"src": "1274:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1297:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1297:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1284:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1284:12:1"
																},
																"nativeSrc": "1284:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1284:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1274:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1274:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1133:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1169:9:1",
														"nodeType": "YulTypedName",
														"src": "1169:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1180:7:1",
														"nodeType": "YulTypedName",
														"src": "1180:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1192:6:1",
														"nodeType": "YulTypedName",
														"src": "1192:6:1",
														"type": ""
													}
												],
												"src": "1133:180:1"
											},
											{
												"body": {
													"nativeSrc": "1419:102:1",
													"nodeType": "YulBlock",
													"src": "1419:102:1",
													"statements": [
														{
															"nativeSrc": "1429:26:1",
															"nodeType": "YulAssignment",
															"src": "1429:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1441:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1452:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1437:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1437:3:1"
																},
																"nativeSrc": "1437:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1437:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1429:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1429:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1471:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1471:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1486:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1486:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1502:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1502:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1507:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1507:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1498:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1498:3:1"
																						},
																						"nativeSrc": "1498:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1498:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1511:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1511:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1494:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:1"
																				},
																				"nativeSrc": "1494:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1482:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1482:3:1"
																		},
																		"nativeSrc": "1482:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1464:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:1"
																},
																"nativeSrc": "1464:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1464:51:1"
															},
															"nativeSrc": "1464:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1464:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1318:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1388:9:1",
														"nodeType": "YulTypedName",
														"src": "1388:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1399:6:1",
														"nodeType": "YulTypedName",
														"src": "1399:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1410:4:1",
														"nodeType": "YulTypedName",
														"src": "1410:4:1",
														"type": ""
													}
												],
												"src": "1318:203:1"
											},
											{
												"body": {
													"nativeSrc": "1575:124:1",
													"nodeType": "YulBlock",
													"src": "1575:124:1",
													"statements": [
														{
															"nativeSrc": "1585:29:1",
															"nodeType": "YulAssignment",
															"src": "1585:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1607:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1607:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1594:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1594:12:1"
																},
																"nativeSrc": "1594:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1594:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1585:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1585:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1677:16:1",
																"nodeType": "YulBlock",
																"src": "1677:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1686:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1689:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1689:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1679:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1679:6:1"
																			},
																			"nativeSrc": "1679:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1679:12:1"
																		},
																		"nativeSrc": "1679:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1679:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1636:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1636:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1647:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1647:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1662:3:1",
																										"nodeType": "YulLiteral",
																										"src": "1662:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1667:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1667:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1658:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1658:3:1"
																								},
																								"nativeSrc": "1658:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1658:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1671:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1671:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1654:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1654:3:1"
																						},
																						"nativeSrc": "1654:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1654:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1643:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1643:3:1"
																				},
																				"nativeSrc": "1643:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1643:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1633:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1633:2:1"
																		},
																		"nativeSrc": "1633:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1633:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:1"
																},
																"nativeSrc": "1626:50:1",
																"nodeType": "YulFunctionCall",
																"src": "1626:50:1"
															},
															"nativeSrc": "1623:70:1",
															"nodeType": "YulIf",
															"src": "1623:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1526:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1554:6:1",
														"nodeType": "YulTypedName",
														"src": "1554:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1565:5:1",
														"nodeType": "YulTypedName",
														"src": "1565:5:1",
														"type": ""
													}
												],
												"src": "1526:173:1"
											},
											{
												"body": {
													"nativeSrc": "1791:167:1",
													"nodeType": "YulBlock",
													"src": "1791:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1837:16:1",
																"nodeType": "YulBlock",
																"src": "1837:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1849:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1849:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1839:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:1"
																			},
																			"nativeSrc": "1839:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:12:1"
																		},
																		"nativeSrc": "1839:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1812:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1812:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1821:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1821:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1808:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:1"
																		},
																		"nativeSrc": "1808:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1833:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1833:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1804:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:1"
																},
																"nativeSrc": "1804:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1804:32:1"
															},
															"nativeSrc": "1801:52:1",
															"nodeType": "YulIf",
															"src": "1801:52:1"
														},
														{
															"nativeSrc": "1862:39:1",
															"nodeType": "YulAssignment",
															"src": "1862:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1891:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1891:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1872:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1872:18:1"
																},
																"nativeSrc": "1872:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1872:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1862:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1862:6:1"
																}
															]
														},
														{
															"nativeSrc": "1910:42:1",
															"nodeType": "YulAssignment",
															"src": "1910:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1937:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1948:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1948:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1933:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1933:3:1"
																		},
																		"nativeSrc": "1933:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1933:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1920:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1920:12:1"
																},
																"nativeSrc": "1920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1920:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1910:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1910:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1704:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1749:9:1",
														"nodeType": "YulTypedName",
														"src": "1749:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1760:7:1",
														"nodeType": "YulTypedName",
														"src": "1760:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1772:6:1",
														"nodeType": "YulTypedName",
														"src": "1772:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1780:6:1",
														"nodeType": "YulTypedName",
														"src": "1780:6:1",
														"type": ""
													}
												],
												"src": "1704:254:1"
											},
											{
												"body": {
													"nativeSrc": "2067:224:1",
													"nodeType": "YulBlock",
													"src": "2067:224:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2113:16:1",
																"nodeType": "YulBlock",
																"src": "2113:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2122:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2122:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2125:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2125:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2115:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2115:6:1"
																			},
																			"nativeSrc": "2115:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2115:12:1"
																		},
																		"nativeSrc": "2115:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2115:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2088:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2088:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2097:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2097:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2084:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2084:3:1"
																		},
																		"nativeSrc": "2084:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2084:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2109:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2109:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2080:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2080:3:1"
																},
																"nativeSrc": "2080:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2080:32:1"
															},
															"nativeSrc": "2077:52:1",
															"nodeType": "YulIf",
															"src": "2077:52:1"
														},
														{
															"nativeSrc": "2138:39:1",
															"nodeType": "YulAssignment",
															"src": "2138:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2167:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2148:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2148:18:1"
																},
																"nativeSrc": "2148:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2148:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2138:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:1"
																}
															]
														},
														{
															"nativeSrc": "2186:48:1",
															"nodeType": "YulAssignment",
															"src": "2186:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2219:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2219:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2230:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2230:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2215:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2215:3:1"
																		},
																		"nativeSrc": "2215:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2215:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2196:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2196:18:1"
																},
																"nativeSrc": "2196:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2196:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2186:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2186:6:1"
																}
															]
														},
														{
															"nativeSrc": "2243:42:1",
															"nodeType": "YulAssignment",
															"src": "2243:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2270:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2270:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2281:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2281:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2266:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2266:3:1"
																		},
																		"nativeSrc": "2266:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2266:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2253:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2253:12:1"
																},
																"nativeSrc": "2253:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2253:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2243:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1963:328:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2017:9:1",
														"nodeType": "YulTypedName",
														"src": "2017:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2028:7:1",
														"nodeType": "YulTypedName",
														"src": "2028:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2040:6:1",
														"nodeType": "YulTypedName",
														"src": "2040:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2048:6:1",
														"nodeType": "YulTypedName",
														"src": "2048:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2056:6:1",
														"nodeType": "YulTypedName",
														"src": "2056:6:1",
														"type": ""
													}
												],
												"src": "1963:328:1"
											},
											{
												"body": {
													"nativeSrc": "2366:116:1",
													"nodeType": "YulBlock",
													"src": "2366:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2412:16:1",
																"nodeType": "YulBlock",
																"src": "2412:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2421:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2421:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2424:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2424:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2414:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:1"
																			},
																			"nativeSrc": "2414:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2414:12:1"
																		},
																		"nativeSrc": "2414:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2414:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2387:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2387:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2396:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2396:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2383:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2383:3:1"
																		},
																		"nativeSrc": "2383:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2383:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2408:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2408:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2379:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2379:3:1"
																},
																"nativeSrc": "2379:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2379:32:1"
															},
															"nativeSrc": "2376:52:1",
															"nodeType": "YulIf",
															"src": "2376:52:1"
														},
														{
															"nativeSrc": "2437:39:1",
															"nodeType": "YulAssignment",
															"src": "2437:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2466:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2466:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2447:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2447:18:1"
																},
																"nativeSrc": "2447:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2447:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2437:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2437:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2296:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2332:9:1",
														"nodeType": "YulTypedName",
														"src": "2332:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2343:7:1",
														"nodeType": "YulTypedName",
														"src": "2343:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2355:6:1",
														"nodeType": "YulTypedName",
														"src": "2355:6:1",
														"type": ""
													}
												],
												"src": "2296:186:1"
											},
											{
												"body": {
													"nativeSrc": "2588:76:1",
													"nodeType": "YulBlock",
													"src": "2588:76:1",
													"statements": [
														{
															"nativeSrc": "2598:26:1",
															"nodeType": "YulAssignment",
															"src": "2598:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2610:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2610:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2621:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2621:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2606:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2606:3:1"
																},
																"nativeSrc": "2606:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2606:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2598:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2598:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2640:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2640:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2651:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2651:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2633:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:1"
																},
																"nativeSrc": "2633:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2633:25:1"
															},
															"nativeSrc": "2633:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "2633:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2487:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2557:9:1",
														"nodeType": "YulTypedName",
														"src": "2557:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2568:6:1",
														"nodeType": "YulTypedName",
														"src": "2568:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2579:4:1",
														"nodeType": "YulTypedName",
														"src": "2579:4:1",
														"type": ""
													}
												],
												"src": "2487:177:1"
											},
											{
												"body": {
													"nativeSrc": "2753:263:1",
													"nodeType": "YulBlock",
													"src": "2753:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2799:16:1",
																"nodeType": "YulBlock",
																"src": "2799:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2808:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2808:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2811:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2811:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2801:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2801:6:1"
																			},
																			"nativeSrc": "2801:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2801:12:1"
																		},
																		"nativeSrc": "2801:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2801:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2774:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2774:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2783:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2783:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2770:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:1"
																		},
																		"nativeSrc": "2770:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2770:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2795:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2795:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2766:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2766:3:1"
																},
																"nativeSrc": "2766:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2766:32:1"
															},
															"nativeSrc": "2763:52:1",
															"nodeType": "YulIf",
															"src": "2763:52:1"
														},
														{
															"nativeSrc": "2824:39:1",
															"nodeType": "YulAssignment",
															"src": "2824:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2853:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2853:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2834:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2834:18:1"
																},
																"nativeSrc": "2834:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2834:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2824:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2824:6:1"
																}
															]
														},
														{
															"nativeSrc": "2872:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2872:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2902:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2902:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2913:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2913:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2898:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2898:3:1"
																		},
																		"nativeSrc": "2898:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2898:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2885:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2885:12:1"
																},
																"nativeSrc": "2885:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2885:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2876:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2876:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2970:16:1",
																"nodeType": "YulBlock",
																"src": "2970:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2979:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2979:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2982:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2982:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2972:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2972:6:1"
																			},
																			"nativeSrc": "2972:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2972:12:1"
																		},
																		"nativeSrc": "2972:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2972:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2939:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2939:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2960:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2960:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2953:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2953:6:1"
																						},
																						"nativeSrc": "2953:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2953:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2946:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2946:6:1"
																				},
																				"nativeSrc": "2946:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2946:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2936:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2936:2:1"
																		},
																		"nativeSrc": "2936:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2936:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2929:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2929:6:1"
																},
																"nativeSrc": "2929:40:1",
																"nodeType": "YulFunctionCall",
																"src": "2929:40:1"
															},
															"nativeSrc": "2926:60:1",
															"nodeType": "YulIf",
															"src": "2926:60:1"
														},
														{
															"nativeSrc": "2995:15:1",
															"nodeType": "YulAssignment",
															"src": "2995:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "3005:5:1",
																"nodeType": "YulIdentifier",
																"src": "3005:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2995:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2995:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2669:347:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2711:9:1",
														"nodeType": "YulTypedName",
														"src": "2711:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2722:7:1",
														"nodeType": "YulTypedName",
														"src": "2722:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2734:6:1",
														"nodeType": "YulTypedName",
														"src": "2734:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2742:6:1",
														"nodeType": "YulTypedName",
														"src": "2742:6:1",
														"type": ""
													}
												],
												"src": "2669:347:1"
											},
											{
												"body": {
													"nativeSrc": "3053:95:1",
													"nodeType": "YulBlock",
													"src": "3053:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3070:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3070:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3077:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3077:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3082:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3082:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3073:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3073:3:1"
																		},
																		"nativeSrc": "3073:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3073:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3063:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3063:6:1"
																},
																"nativeSrc": "3063:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3063:31:1"
															},
															"nativeSrc": "3063:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3063:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3110:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3110:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3113:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3113:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3103:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3103:6:1"
																},
																"nativeSrc": "3103:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3103:15:1"
															},
															"nativeSrc": "3103:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3103:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3134:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3134:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3137:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3137:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3127:6:1"
																},
																"nativeSrc": "3127:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3127:15:1"
															},
															"nativeSrc": "3127:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3127:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3021:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3021:127:1"
											},
											{
												"body": {
													"nativeSrc": "3283:1008:1",
													"nodeType": "YulBlock",
													"src": "3283:1008:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3330:16:1",
																"nodeType": "YulBlock",
																"src": "3330:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3339:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3342:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3342:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3332:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:1"
																			},
																			"nativeSrc": "3332:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3332:12:1"
																		},
																		"nativeSrc": "3332:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3304:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3304:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3313:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3313:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3300:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3300:3:1"
																		},
																		"nativeSrc": "3300:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3300:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3325:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3325:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3296:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3296:3:1"
																},
																"nativeSrc": "3296:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3296:33:1"
															},
															"nativeSrc": "3293:53:1",
															"nodeType": "YulIf",
															"src": "3293:53:1"
														},
														{
															"nativeSrc": "3355:39:1",
															"nodeType": "YulAssignment",
															"src": "3355:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3384:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3384:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3365:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3365:18:1"
																},
																"nativeSrc": "3365:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3365:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3355:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3355:6:1"
																}
															]
														},
														{
															"nativeSrc": "3403:48:1",
															"nodeType": "YulAssignment",
															"src": "3403:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3436:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3436:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3447:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3447:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3432:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3432:3:1"
																		},
																		"nativeSrc": "3432:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3432:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3413:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3413:18:1"
																},
																"nativeSrc": "3413:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3413:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3403:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:1"
																}
															]
														},
														{
															"nativeSrc": "3460:42:1",
															"nodeType": "YulAssignment",
															"src": "3460:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3487:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3487:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3498:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3498:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3483:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3483:3:1"
																		},
																		"nativeSrc": "3483:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3483:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3470:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3470:12:1"
																},
																"nativeSrc": "3470:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3470:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3460:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:1"
																}
															]
														},
														{
															"nativeSrc": "3511:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3511:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3542:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3542:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3553:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3553:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3538:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3538:3:1"
																		},
																		"nativeSrc": "3538:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3538:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3525:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3525:12:1"
																},
																"nativeSrc": "3525:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3525:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3515:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3515:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3566:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3566:28:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3576:18:1",
																"nodeType": "YulLiteral",
																"src": "3576:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3570:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3570:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3621:16:1",
																"nodeType": "YulBlock",
																"src": "3621:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3630:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3630:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3633:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3633:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3623:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3623:6:1"
																			},
																			"nativeSrc": "3623:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3623:12:1"
																		},
																		"nativeSrc": "3623:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3623:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3609:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3609:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3617:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3617:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3606:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3606:2:1"
																},
																"nativeSrc": "3606:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3606:14:1"
															},
															"nativeSrc": "3603:34:1",
															"nodeType": "YulIf",
															"src": "3603:34:1"
														},
														{
															"nativeSrc": "3646:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3646:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3660:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3660:9:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3671:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3656:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3656:3:1"
																},
																"nativeSrc": "3656:22:1",
																"nodeType": "YulFunctionCall",
																"src": "3656:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3650:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3650:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3726:16:1",
																"nodeType": "YulBlock",
																"src": "3726:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3735:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3735:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3738:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3738:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3728:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3728:6:1"
																			},
																			"nativeSrc": "3728:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3728:12:1"
																		},
																		"nativeSrc": "3728:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3728:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3705:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3705:2:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3709:4:1",
																						"nodeType": "YulLiteral",
																						"src": "3709:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3701:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3701:3:1"
																				},
																				"nativeSrc": "3701:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3701:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3716:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3716:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3697:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3697:3:1"
																		},
																		"nativeSrc": "3697:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3697:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3690:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3690:6:1"
																},
																"nativeSrc": "3690:35:1",
																"nodeType": "YulFunctionCall",
																"src": "3690:35:1"
															},
															"nativeSrc": "3687:55:1",
															"nodeType": "YulIf",
															"src": "3687:55:1"
														},
														{
															"nativeSrc": "3751:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3751:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3774:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3761:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3761:12:1"
																},
																"nativeSrc": "3761:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3761:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3755:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3755:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3800:22:1",
																"nodeType": "YulBlock",
																"src": "3800:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3802:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3802:16:1"
																			},
																			"nativeSrc": "3802:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3802:18:1"
																		},
																		"nativeSrc": "3802:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3802:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "3792:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3792:2:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3796:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3796:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3789:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3789:2:1"
																},
																"nativeSrc": "3789:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3789:10:1"
															},
															"nativeSrc": "3786:36:1",
															"nodeType": "YulIf",
															"src": "3786:36:1"
														},
														{
															"nativeSrc": "3831:17:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3831:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3845:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3845:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3841:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:1"
																},
																"nativeSrc": "3841:7:1",
																"nodeType": "YulFunctionCall",
																"src": "3841:7:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "3835:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3835:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3857:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3857:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3877:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3877:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3871:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3871:5:1"
																},
																"nativeSrc": "3871:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3871:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3861:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3861:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3889:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3889:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3911:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3911:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "3935:2:1",
																										"nodeType": "YulIdentifier",
																										"src": "3935:2:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3939:4:1",
																										"nodeType": "YulLiteral",
																										"src": "3939:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3931:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3931:3:1"
																								},
																								"nativeSrc": "3931:13:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3931:13:1"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "3946:2:1",
																								"nodeType": "YulIdentifier",
																								"src": "3946:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "3927:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3927:3:1"
																						},
																						"nativeSrc": "3927:22:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3927:22:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3951:2:1",
																						"nodeType": "YulLiteral",
																						"src": "3951:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3923:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3923:3:1"
																				},
																				"nativeSrc": "3923:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3923:31:1"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "3956:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3956:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3919:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3919:3:1"
																		},
																		"nativeSrc": "3919:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3919:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3907:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3907:3:1"
																},
																"nativeSrc": "3907:53:1",
																"nodeType": "YulFunctionCall",
																"src": "3907:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3893:10:1",
																	"nodeType": "YulTypedName",
																	"src": "3893:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4019:22:1",
																"nodeType": "YulBlock",
																"src": "4019:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4021:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4021:16:1"
																			},
																			"nativeSrc": "4021:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4021:18:1"
																		},
																		"nativeSrc": "4021:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4021:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3978:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "3978:10:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3990:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3990:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3975:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3975:2:1"
																		},
																		"nativeSrc": "3975:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3975:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3998:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "3998:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4010:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3995:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3995:2:1"
																		},
																		"nativeSrc": "3995:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3972:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3972:2:1"
																},
																"nativeSrc": "3972:46:1",
																"nodeType": "YulFunctionCall",
																"src": "3972:46:1"
															},
															"nativeSrc": "3969:72:1",
															"nodeType": "YulIf",
															"src": "3969:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4057:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4057:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4061:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "4061:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4050:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4050:6:1"
																},
																"nativeSrc": "4050:22:1",
																"nodeType": "YulFunctionCall",
																"src": "4050:22:1"
															},
															"nativeSrc": "4050:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "4050:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4088:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4088:6:1"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4096:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "4096:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4081:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4081:6:1"
																},
																"nativeSrc": "4081:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4081:18:1"
															},
															"nativeSrc": "4081:18:1",
															"nodeType": "YulExpressionStatement",
															"src": "4081:18:1"
														},
														{
															"body": {
																"nativeSrc": "4145:16:1",
																"nodeType": "YulBlock",
																"src": "4145:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4154:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4154:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4157:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4157:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4147:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4147:6:1"
																			},
																			"nativeSrc": "4147:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4147:12:1"
																		},
																		"nativeSrc": "4147:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4147:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4122:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4122:2:1"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4126:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4126:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4118:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4118:3:1"
																				},
																				"nativeSrc": "4118:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4118:11:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4131:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4131:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4114:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4114:3:1"
																		},
																		"nativeSrc": "4114:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4114:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4136:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4136:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4111:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4111:2:1"
																},
																"nativeSrc": "4111:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4111:33:1"
															},
															"nativeSrc": "4108:53:1",
															"nodeType": "YulIf",
															"src": "4108:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4187:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4187:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4195:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4195:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4183:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4183:3:1"
																		},
																		"nativeSrc": "4183:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4204:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4204:2:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4208:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4208:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4200:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4200:3:1"
																		},
																		"nativeSrc": "4200:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:11:1"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4213:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "4213:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4170:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4170:12:1"
																},
																"nativeSrc": "4170:46:1",
																"nodeType": "YulFunctionCall",
																"src": "4170:46:1"
															},
															"nativeSrc": "4170:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "4170:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4240:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4240:6:1"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4248:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4248:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4236:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4236:3:1"
																				},
																				"nativeSrc": "4236:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4236:15:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4253:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4253:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4232:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4232:3:1"
																		},
																		"nativeSrc": "4232:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4232:24:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4258:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4258:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4225:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4225:6:1"
																},
																"nativeSrc": "4225:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4225:35:1"
															},
															"nativeSrc": "4225:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4225:35:1"
														},
														{
															"nativeSrc": "4269:16:1",
															"nodeType": "YulAssignment",
															"src": "4269:16:1",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4279:6:1",
																"nodeType": "YulIdentifier",
																"src": "4279:6:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4269:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4269:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3153:1138:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3225:9:1",
														"nodeType": "YulTypedName",
														"src": "3225:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3236:7:1",
														"nodeType": "YulTypedName",
														"src": "3236:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3248:6:1",
														"nodeType": "YulTypedName",
														"src": "3248:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3256:6:1",
														"nodeType": "YulTypedName",
														"src": "3256:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3264:6:1",
														"nodeType": "YulTypedName",
														"src": "3264:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3272:6:1",
														"nodeType": "YulTypedName",
														"src": "3272:6:1",
														"type": ""
													}
												],
												"src": "3153:1138:1"
											},
											{
												"body": {
													"nativeSrc": "4383:173:1",
													"nodeType": "YulBlock",
													"src": "4383:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4429:16:1",
																"nodeType": "YulBlock",
																"src": "4429:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4438:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4438:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4441:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4441:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4431:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4431:6:1"
																			},
																			"nativeSrc": "4431:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4431:12:1"
																		},
																		"nativeSrc": "4431:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4431:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4404:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4404:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4413:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4413:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4400:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4400:3:1"
																		},
																		"nativeSrc": "4400:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4400:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4425:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4425:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4396:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4396:3:1"
																},
																"nativeSrc": "4396:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4396:32:1"
															},
															"nativeSrc": "4393:52:1",
															"nodeType": "YulIf",
															"src": "4393:52:1"
														},
														{
															"nativeSrc": "4454:39:1",
															"nodeType": "YulAssignment",
															"src": "4454:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4483:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4483:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4464:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4464:18:1"
																},
																"nativeSrc": "4464:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4464:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4454:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:1"
																}
															]
														},
														{
															"nativeSrc": "4502:48:1",
															"nodeType": "YulAssignment",
															"src": "4502:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4535:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4535:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4546:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4546:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4531:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4531:3:1"
																		},
																		"nativeSrc": "4531:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4531:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4512:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4512:18:1"
																},
																"nativeSrc": "4512:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4512:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4502:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4502:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4296:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4341:9:1",
														"nodeType": "YulTypedName",
														"src": "4341:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4352:7:1",
														"nodeType": "YulTypedName",
														"src": "4352:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4364:6:1",
														"nodeType": "YulTypedName",
														"src": "4364:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4372:6:1",
														"nodeType": "YulTypedName",
														"src": "4372:6:1",
														"type": ""
													}
												],
												"src": "4296:260:1"
											},
											{
												"body": {
													"nativeSrc": "4616:325:1",
													"nodeType": "YulBlock",
													"src": "4616:325:1",
													"statements": [
														{
															"nativeSrc": "4626:22:1",
															"nodeType": "YulAssignment",
															"src": "4626:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4640:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4640:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4643:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4643:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4636:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4636:3:1"
																},
																"nativeSrc": "4636:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4636:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4626:6:1"
																}
															]
														},
														{
															"nativeSrc": "4657:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4657:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4687:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4687:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4693:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4693:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4683:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4683:3:1"
																},
																"nativeSrc": "4683:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4683:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4661:18:1",
																	"nodeType": "YulTypedName",
																	"src": "4661:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4734:31:1",
																"nodeType": "YulBlock",
																"src": "4734:31:1",
																"statements": [
																	{
																		"nativeSrc": "4736:27:1",
																		"nodeType": "YulAssignment",
																		"src": "4736:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4750:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4750:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4758:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4758:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4746:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4746:3:1"
																			},
																			"nativeSrc": "4746:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4746:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4736:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4736:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4714:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "4714:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4707:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4707:6:1"
																},
																"nativeSrc": "4707:26:1",
																"nodeType": "YulFunctionCall",
																"src": "4707:26:1"
															},
															"nativeSrc": "4704:61:1",
															"nodeType": "YulIf",
															"src": "4704:61:1"
														},
														{
															"body": {
																"nativeSrc": "4824:111:1",
																"nodeType": "YulBlock",
																"src": "4824:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4845:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4845:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4852:3:1",
																							"nodeType": "YulLiteral",
																							"src": "4852:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4857:10:1",
																							"nodeType": "YulLiteral",
																							"src": "4857:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4848:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4848:3:1"
																					},
																					"nativeSrc": "4848:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4848:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4838:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4838:6:1"
																			},
																			"nativeSrc": "4838:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4838:31:1"
																		},
																		"nativeSrc": "4838:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4838:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4889:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4889:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4892:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4892:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4882:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4882:6:1"
																			},
																			"nativeSrc": "4882:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4882:15:1"
																		},
																		"nativeSrc": "4882:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4882:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4917:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4917:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4920:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4920:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4910:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4910:6:1"
																			},
																			"nativeSrc": "4910:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4910:15:1"
																		},
																		"nativeSrc": "4910:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4910:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4780:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "4780:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4803:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4803:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4811:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4811:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4800:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4800:2:1"
																		},
																		"nativeSrc": "4800:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4777:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4777:2:1"
																},
																"nativeSrc": "4777:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4777:38:1"
															},
															"nativeSrc": "4774:161:1",
															"nodeType": "YulIf",
															"src": "4774:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4561:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4596:4:1",
														"nodeType": "YulTypedName",
														"src": "4596:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4605:6:1",
														"nodeType": "YulTypedName",
														"src": "4605:6:1",
														"type": ""
													}
												],
												"src": "4561:380:1"
											},
											{
												"body": {
													"nativeSrc": "5120:223:1",
													"nodeType": "YulBlock",
													"src": "5120:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5130:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:1"
																},
																"nativeSrc": "5130:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5130:21:1"
															},
															"nativeSrc": "5130:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5171:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5182:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5167:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:1"
																		},
																		"nativeSrc": "5167:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5187:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:1"
																},
																"nativeSrc": "5160:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5160:30:1"
															},
															"nativeSrc": "5160:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5210:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5221:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5206:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:1"
																		},
																		"nativeSrc": "5206:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "5226:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:1",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5199:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:1"
																},
																"nativeSrc": "5199:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5199:62:1"
															},
															"nativeSrc": "5199:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5281:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5277:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:1"
																		},
																		"nativeSrc": "5277:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:1"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "5297:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5297:3:1",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5270:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:1"
																},
																"nativeSrc": "5270:31:1",
																"nodeType": "YulFunctionCall",
																"src": "5270:31:1"
															},
															"nativeSrc": "5270:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "5270:31:1"
														},
														{
															"nativeSrc": "5310:27:1",
															"nodeType": "YulAssignment",
															"src": "5310:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5322:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5322:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5333:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5333:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5318:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5318:3:1"
																},
																"nativeSrc": "5318:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5318:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5310:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5310:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4946:397:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5097:9:1",
														"nodeType": "YulTypedName",
														"src": "5097:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5111:4:1",
														"nodeType": "YulTypedName",
														"src": "5111:4:1",
														"type": ""
													}
												],
												"src": "4946:397:1"
											},
											{
												"body": {
													"nativeSrc": "5522:251:1",
													"nodeType": "YulBlock",
													"src": "5522:251:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5539:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5539:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5550:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5550:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5532:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5532:6:1"
																},
																"nativeSrc": "5532:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5532:21:1"
															},
															"nativeSrc": "5532:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5532:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5573:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5573:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5584:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5584:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5569:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5569:3:1"
																		},
																		"nativeSrc": "5569:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5569:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5589:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5589:2:1",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5562:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5562:6:1"
																},
																"nativeSrc": "5562:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5562:30:1"
															},
															"nativeSrc": "5562:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5562:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5612:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5612:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5623:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5623:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5608:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5608:3:1"
																		},
																		"nativeSrc": "5608:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5608:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nativeSrc": "5628:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5628:34:1",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5601:6:1"
																},
																"nativeSrc": "5601:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5601:62:1"
															},
															"nativeSrc": "5601:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5601:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5683:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5683:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5694:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5694:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5679:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5679:3:1"
																		},
																		"nativeSrc": "5679:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5679:18:1"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "5699:31:1",
																		"nodeType": "YulLiteral",
																		"src": "5699:31:1",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5672:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5672:6:1"
																},
																"nativeSrc": "5672:59:1",
																"nodeType": "YulFunctionCall",
																"src": "5672:59:1"
															},
															"nativeSrc": "5672:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "5672:59:1"
														},
														{
															"nativeSrc": "5740:27:1",
															"nodeType": "YulAssignment",
															"src": "5740:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5752:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5752:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5763:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5763:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5748:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5748:3:1"
																},
																"nativeSrc": "5748:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5748:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5740:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5740:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5348:425:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5499:9:1",
														"nodeType": "YulTypedName",
														"src": "5499:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5513:4:1",
														"nodeType": "YulTypedName",
														"src": "5513:4:1",
														"type": ""
													}
												],
												"src": "5348:425:1"
											},
											{
												"body": {
													"nativeSrc": "5952:235:1",
													"nodeType": "YulBlock",
													"src": "5952:235:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5969:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5969:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5980:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5980:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5962:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5962:6:1"
																},
																"nativeSrc": "5962:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5962:21:1"
															},
															"nativeSrc": "5962:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5962:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6003:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6003:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6014:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5999:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5999:3:1"
																		},
																		"nativeSrc": "5999:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5999:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:1",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5992:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5992:6:1"
																},
																"nativeSrc": "5992:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5992:30:1"
															},
															"nativeSrc": "5992:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5992:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6042:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6042:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6053:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6053:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6038:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6038:3:1"
																		},
																		"nativeSrc": "6038:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6038:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nativeSrc": "6058:34:1",
																		"nodeType": "YulLiteral",
																		"src": "6058:34:1",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6031:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6031:6:1"
																},
																"nativeSrc": "6031:62:1",
																"nodeType": "YulFunctionCall",
																"src": "6031:62:1"
															},
															"nativeSrc": "6031:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "6031:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6113:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6113:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6124:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6124:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6109:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6109:3:1"
																		},
																		"nativeSrc": "6109:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6109:18:1"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "6129:15:1",
																		"nodeType": "YulLiteral",
																		"src": "6129:15:1",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6102:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6102:6:1"
																},
																"nativeSrc": "6102:43:1",
																"nodeType": "YulFunctionCall",
																"src": "6102:43:1"
															},
															"nativeSrc": "6102:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "6102:43:1"
														},
														{
															"nativeSrc": "6154:27:1",
															"nodeType": "YulAssignment",
															"src": "6154:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6166:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6166:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6177:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6177:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6162:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6162:3:1"
																},
																"nativeSrc": "6162:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6162:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6154:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6154:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5778:409:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5929:9:1",
														"nodeType": "YulTypedName",
														"src": "5929:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5943:4:1",
														"nodeType": "YulTypedName",
														"src": "5943:4:1",
														"type": ""
													}
												],
												"src": "5778:409:1"
											},
											{
												"body": {
													"nativeSrc": "6366:174:1",
													"nodeType": "YulBlock",
													"src": "6366:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6383:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6383:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6394:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6394:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6376:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6376:6:1"
																},
																"nativeSrc": "6376:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6376:21:1"
															},
															"nativeSrc": "6376:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6376:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6417:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6417:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6428:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6428:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6413:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6413:3:1"
																		},
																		"nativeSrc": "6413:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6413:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6433:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6433:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6406:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6406:6:1"
																},
																"nativeSrc": "6406:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6406:30:1"
															},
															"nativeSrc": "6406:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6406:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6456:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6456:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6467:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6467:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6452:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6452:3:1"
																		},
																		"nativeSrc": "6452:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6452:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nativeSrc": "6472:26:1",
																		"nodeType": "YulLiteral",
																		"src": "6472:26:1",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6445:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6445:6:1"
																},
																"nativeSrc": "6445:54:1",
																"nodeType": "YulFunctionCall",
																"src": "6445:54:1"
															},
															"nativeSrc": "6445:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "6445:54:1"
														},
														{
															"nativeSrc": "6508:26:1",
															"nodeType": "YulAssignment",
															"src": "6508:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6520:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6520:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6531:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6531:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6516:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6516:3:1"
																},
																"nativeSrc": "6516:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6516:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6508:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6508:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6192:348:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6343:9:1",
														"nodeType": "YulTypedName",
														"src": "6343:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6357:4:1",
														"nodeType": "YulTypedName",
														"src": "6357:4:1",
														"type": ""
													}
												],
												"src": "6192:348:1"
											},
											{
												"body": {
													"nativeSrc": "6719:231:1",
													"nodeType": "YulBlock",
													"src": "6719:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6736:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6736:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6747:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6747:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6729:6:1"
																},
																"nativeSrc": "6729:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6729:21:1"
															},
															"nativeSrc": "6729:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6729:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6770:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6770:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6781:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6781:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6766:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6766:3:1"
																		},
																		"nativeSrc": "6766:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6766:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6786:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6786:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:1"
																},
																"nativeSrc": "6759:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6759:30:1"
															},
															"nativeSrc": "6759:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6759:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6809:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6809:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6820:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6820:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6805:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6805:3:1"
																		},
																		"nativeSrc": "6805:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6805:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nativeSrc": "6825:34:1",
																		"nodeType": "YulLiteral",
																		"src": "6825:34:1",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6798:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:1"
																},
																"nativeSrc": "6798:62:1",
																"nodeType": "YulFunctionCall",
																"src": "6798:62:1"
															},
															"nativeSrc": "6798:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "6798:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6880:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6880:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6891:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6891:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6876:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6876:3:1"
																		},
																		"nativeSrc": "6876:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6876:18:1"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nativeSrc": "6896:11:1",
																		"nodeType": "YulLiteral",
																		"src": "6896:11:1",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6869:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6869:6:1"
																},
																"nativeSrc": "6869:39:1",
																"nodeType": "YulFunctionCall",
																"src": "6869:39:1"
															},
															"nativeSrc": "6869:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "6869:39:1"
														},
														{
															"nativeSrc": "6917:27:1",
															"nodeType": "YulAssignment",
															"src": "6917:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6929:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6929:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6940:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6940:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6925:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:1"
																},
																"nativeSrc": "6925:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6925:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6917:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6917:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6545:405:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6696:9:1",
														"nodeType": "YulTypedName",
														"src": "6696:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6710:4:1",
														"nodeType": "YulTypedName",
														"src": "6710:4:1",
														"type": ""
													}
												],
												"src": "6545:405:1"
											},
											{
												"body": {
													"nativeSrc": "7005:162:1",
													"nodeType": "YulBlock",
													"src": "7005:162:1",
													"statements": [
														{
															"nativeSrc": "7015:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7015:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7035:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7035:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7029:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7029:5:1"
																},
																"nativeSrc": "7029:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7029:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7019:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7019:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7056:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7056:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7065:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7065:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7072:4:1",
																				"nodeType": "YulLiteral",
																				"src": "7072:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7061:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7061:3:1"
																		},
																		"nativeSrc": "7061:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7061:16:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7079:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7079:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7050:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7050:5:1"
																},
																"nativeSrc": "7050:36:1",
																"nodeType": "YulFunctionCall",
																"src": "7050:36:1"
															},
															"nativeSrc": "7050:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "7050:36:1"
														},
														{
															"nativeSrc": "7095:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7095:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7109:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7109:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7114:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7114:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7105:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7105:3:1"
																},
																"nativeSrc": "7105:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7105:16:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7099:2:1",
																	"nodeType": "YulTypedName",
																	"src": "7099:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "7137:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "7137:2:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7141:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7141:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7130:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7130:6:1"
																},
																"nativeSrc": "7130:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7130:13:1"
															},
															"nativeSrc": "7130:13:1",
															"nodeType": "YulExpressionStatement",
															"src": "7130:13:1"
														},
														{
															"nativeSrc": "7152:9:1",
															"nodeType": "YulAssignment",
															"src": "7152:9:1",
															"value": {
																"name": "_1",
																"nativeSrc": "7159:2:1",
																"nodeType": "YulIdentifier",
																"src": "7159:2:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7152:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7152:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "6955:212:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6982:5:1",
														"nodeType": "YulTypedName",
														"src": "6982:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6989:3:1",
														"nodeType": "YulTypedName",
														"src": "6989:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6997:3:1",
														"nodeType": "YulTypedName",
														"src": "6997:3:1",
														"type": ""
													}
												],
												"src": "6955:212:1"
											},
											{
												"body": {
													"nativeSrc": "7359:80:1",
													"nodeType": "YulBlock",
													"src": "7359:80:1",
													"statements": [
														{
															"nativeSrc": "7369:64:1",
															"nodeType": "YulAssignment",
															"src": "7369:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7394:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7420:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7420:6:1"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "7428:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7428:3:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "7402:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "7402:17:1"
																		},
																		"nativeSrc": "7402:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7402:30:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7376:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7376:17:1"
																},
																"nativeSrc": "7376:57:1",
																"nodeType": "YulFunctionCall",
																"src": "7376:57:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7369:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7369:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7172:267:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7327:3:1",
														"nodeType": "YulTypedName",
														"src": "7327:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7332:6:1",
														"nodeType": "YulTypedName",
														"src": "7332:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7340:6:1",
														"nodeType": "YulTypedName",
														"src": "7340:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7351:3:1",
														"nodeType": "YulTypedName",
														"src": "7351:3:1",
														"type": ""
													}
												],
												"src": "7172:267:1"
											},
											{
												"body": {
													"nativeSrc": "7618:227:1",
													"nodeType": "YulBlock",
													"src": "7618:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7635:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7635:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7646:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7646:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7628:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7628:6:1"
																},
																"nativeSrc": "7628:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7628:21:1"
															},
															"nativeSrc": "7628:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7628:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7669:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7669:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7680:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7680:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7665:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7665:3:1"
																		},
																		"nativeSrc": "7665:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7665:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7685:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7685:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7658:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7658:6:1"
																},
																"nativeSrc": "7658:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7658:30:1"
															},
															"nativeSrc": "7658:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7658:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7708:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7708:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7719:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7704:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7704:3:1"
																		},
																		"nativeSrc": "7704:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7704:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nativeSrc": "7724:34:1",
																		"nodeType": "YulLiteral",
																		"src": "7724:34:1",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7697:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7697:6:1"
																},
																"nativeSrc": "7697:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7697:62:1"
															},
															"nativeSrc": "7697:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "7697:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7779:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7779:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7790:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7790:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7775:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7775:3:1"
																		},
																		"nativeSrc": "7775:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7775:18:1"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nativeSrc": "7795:7:1",
																		"nodeType": "YulLiteral",
																		"src": "7795:7:1",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7768:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7768:6:1"
																},
																"nativeSrc": "7768:35:1",
																"nodeType": "YulFunctionCall",
																"src": "7768:35:1"
															},
															"nativeSrc": "7768:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "7768:35:1"
														},
														{
															"nativeSrc": "7812:27:1",
															"nodeType": "YulAssignment",
															"src": "7812:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7824:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7824:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7835:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7835:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7820:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7820:3:1"
																},
																"nativeSrc": "7820:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7820:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7812:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7812:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7444:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7595:9:1",
														"nodeType": "YulTypedName",
														"src": "7595:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7609:4:1",
														"nodeType": "YulTypedName",
														"src": "7609:4:1",
														"type": ""
													}
												],
												"src": "7444:401:1"
											},
											{
												"body": {
													"nativeSrc": "8024:226:1",
													"nodeType": "YulBlock",
													"src": "8024:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8041:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8041:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8052:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8052:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8034:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:1"
																},
																"nativeSrc": "8034:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8034:21:1"
															},
															"nativeSrc": "8034:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8034:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8075:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8075:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8086:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8086:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8071:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8071:3:1"
																		},
																		"nativeSrc": "8071:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8071:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8091:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8091:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8064:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8064:6:1"
																},
																"nativeSrc": "8064:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8064:30:1"
															},
															"nativeSrc": "8064:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8064:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8114:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8125:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8125:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8110:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8110:3:1"
																		},
																		"nativeSrc": "8110:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8110:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "8130:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8130:34:1",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8103:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8103:6:1"
																},
																"nativeSrc": "8103:62:1",
																"nodeType": "YulFunctionCall",
																"src": "8103:62:1"
															},
															"nativeSrc": "8103:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "8103:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8185:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8185:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8196:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8196:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8181:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8181:3:1"
																		},
																		"nativeSrc": "8181:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8181:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "8201:6:1",
																		"nodeType": "YulLiteral",
																		"src": "8201:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8174:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8174:6:1"
																},
																"nativeSrc": "8174:34:1",
																"nodeType": "YulFunctionCall",
																"src": "8174:34:1"
															},
															"nativeSrc": "8174:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "8174:34:1"
														},
														{
															"nativeSrc": "8217:27:1",
															"nodeType": "YulAssignment",
															"src": "8217:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8229:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8229:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8240:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8240:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8225:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8225:3:1"
																},
																"nativeSrc": "8225:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8225:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8217:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8217:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7850:400:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8001:9:1",
														"nodeType": "YulTypedName",
														"src": "8001:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8015:4:1",
														"nodeType": "YulTypedName",
														"src": "8015:4:1",
														"type": ""
													}
												],
												"src": "7850:400:1"
											},
											{
												"body": {
													"nativeSrc": "8429:175:1",
													"nodeType": "YulBlock",
													"src": "8429:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8446:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8446:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8457:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8457:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8439:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8439:6:1"
																},
																"nativeSrc": "8439:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8439:21:1"
															},
															"nativeSrc": "8439:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8439:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8480:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8480:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8491:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8491:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8476:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8476:3:1"
																		},
																		"nativeSrc": "8476:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8476:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8496:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8469:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8469:6:1"
																},
																"nativeSrc": "8469:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8469:30:1"
															},
															"nativeSrc": "8469:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8469:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8519:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8519:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8530:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8530:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8515:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8515:3:1"
																		},
																		"nativeSrc": "8515:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8515:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "8535:27:1",
																		"nodeType": "YulLiteral",
																		"src": "8535:27:1",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8508:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:1"
																},
																"nativeSrc": "8508:55:1",
																"nodeType": "YulFunctionCall",
																"src": "8508:55:1"
															},
															"nativeSrc": "8508:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "8508:55:1"
														},
														{
															"nativeSrc": "8572:26:1",
															"nodeType": "YulAssignment",
															"src": "8572:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8584:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8584:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8595:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8595:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8580:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8580:3:1"
																},
																"nativeSrc": "8580:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8580:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8572:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8572:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8255:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8406:9:1",
														"nodeType": "YulTypedName",
														"src": "8406:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8420:4:1",
														"nodeType": "YulTypedName",
														"src": "8420:4:1",
														"type": ""
													}
												],
												"src": "8255:349:1"
											},
											{
												"body": {
													"nativeSrc": "8783:240:1",
													"nodeType": "YulBlock",
													"src": "8783:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8800:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8800:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8811:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8811:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8793:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8793:6:1"
																},
																"nativeSrc": "8793:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8793:21:1"
															},
															"nativeSrc": "8793:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8793:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8834:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8834:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8845:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8845:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8830:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8830:3:1"
																		},
																		"nativeSrc": "8830:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8830:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8850:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8850:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8823:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8823:6:1"
																},
																"nativeSrc": "8823:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8823:30:1"
															},
															"nativeSrc": "8823:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8823:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8873:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8873:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8884:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8884:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8869:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8869:3:1"
																		},
																		"nativeSrc": "8869:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8869:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nativeSrc": "8889:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8889:34:1",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8862:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8862:6:1"
																},
																"nativeSrc": "8862:62:1",
																"nodeType": "YulFunctionCall",
																"src": "8862:62:1"
															},
															"nativeSrc": "8862:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "8862:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8944:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8944:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8955:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8955:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8940:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8940:3:1"
																		},
																		"nativeSrc": "8940:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8940:18:1"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nativeSrc": "8960:20:1",
																		"nodeType": "YulLiteral",
																		"src": "8960:20:1",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8933:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8933:6:1"
																},
																"nativeSrc": "8933:48:1",
																"nodeType": "YulFunctionCall",
																"src": "8933:48:1"
															},
															"nativeSrc": "8933:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "8933:48:1"
														},
														{
															"nativeSrc": "8990:27:1",
															"nodeType": "YulAssignment",
															"src": "8990:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9002:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9002:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9013:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9013:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8998:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8998:3:1"
																},
																"nativeSrc": "8998:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8998:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8990:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8990:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8609:414:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8760:9:1",
														"nodeType": "YulTypedName",
														"src": "8760:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8774:4:1",
														"nodeType": "YulTypedName",
														"src": "8774:4:1",
														"type": ""
													}
												],
												"src": "8609:414:1"
											},
											{
												"body": {
													"nativeSrc": "9060:95:1",
													"nodeType": "YulBlock",
													"src": "9060:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9077:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9077:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9084:3:1",
																				"nodeType": "YulLiteral",
																				"src": "9084:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9089:10:1",
																				"nodeType": "YulLiteral",
																				"src": "9089:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9080:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:1"
																		},
																		"nativeSrc": "9080:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9070:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9070:6:1"
																},
																"nativeSrc": "9070:31:1",
																"nodeType": "YulFunctionCall",
																"src": "9070:31:1"
															},
															"nativeSrc": "9070:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "9070:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9117:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9117:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9120:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9120:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9110:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9110:6:1"
																},
																"nativeSrc": "9110:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9110:15:1"
															},
															"nativeSrc": "9110:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9110:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9141:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9141:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9144:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9144:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9134:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9134:6:1"
																},
																"nativeSrc": "9134:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9134:15:1"
															},
															"nativeSrc": "9134:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9134:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9028:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "9028:127:1"
											},
											{
												"body": {
													"nativeSrc": "9192:95:1",
													"nodeType": "YulBlock",
													"src": "9192:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9209:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9209:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9216:3:1",
																				"nodeType": "YulLiteral",
																				"src": "9216:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9221:10:1",
																				"nodeType": "YulLiteral",
																				"src": "9221:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9212:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9212:3:1"
																		},
																		"nativeSrc": "9212:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9212:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9202:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9202:6:1"
																},
																"nativeSrc": "9202:31:1",
																"nodeType": "YulFunctionCall",
																"src": "9202:31:1"
															},
															"nativeSrc": "9202:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "9202:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9249:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9249:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9252:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9252:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9242:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9242:6:1"
																},
																"nativeSrc": "9242:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9242:15:1"
															},
															"nativeSrc": "9242:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9242:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9276:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9276:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9266:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9266:6:1"
																},
																"nativeSrc": "9266:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9266:15:1"
															},
															"nativeSrc": "9266:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9266:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9160:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "9160:127:1"
											},
											{
												"body": {
													"nativeSrc": "9341:79:1",
													"nodeType": "YulBlock",
													"src": "9341:79:1",
													"statements": [
														{
															"nativeSrc": "9351:17:1",
															"nodeType": "YulAssignment",
															"src": "9351:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9363:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9363:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9366:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9366:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9359:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9359:3:1"
																},
																"nativeSrc": "9359:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9359:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9351:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9351:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9392:22:1",
																"nodeType": "YulBlock",
																"src": "9392:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9394:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9394:16:1"
																			},
																			"nativeSrc": "9394:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9394:18:1"
																		},
																		"nativeSrc": "9394:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9394:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9383:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9383:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9389:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9389:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9380:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9380:2:1"
																},
																"nativeSrc": "9380:11:1",
																"nodeType": "YulFunctionCall",
																"src": "9380:11:1"
															},
															"nativeSrc": "9377:37:1",
															"nodeType": "YulIf",
															"src": "9377:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9292:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9323:1:1",
														"nodeType": "YulTypedName",
														"src": "9323:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9326:1:1",
														"nodeType": "YulTypedName",
														"src": "9326:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9332:4:1",
														"nodeType": "YulTypedName",
														"src": "9332:4:1",
														"type": ""
													}
												],
												"src": "9292:128:1"
											},
											{
												"body": {
													"nativeSrc": "9473:77:1",
													"nodeType": "YulBlock",
													"src": "9473:77:1",
													"statements": [
														{
															"nativeSrc": "9483:16:1",
															"nodeType": "YulAssignment",
															"src": "9483:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9494:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9494:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9497:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9497:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9490:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9490:3:1"
																},
																"nativeSrc": "9490:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9490:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9483:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9483:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9522:22:1",
																"nodeType": "YulBlock",
																"src": "9522:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9524:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9524:16:1"
																			},
																			"nativeSrc": "9524:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9524:18:1"
																		},
																		"nativeSrc": "9524:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9524:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9514:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9514:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9517:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9517:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9511:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9511:2:1"
																},
																"nativeSrc": "9511:10:1",
																"nodeType": "YulFunctionCall",
																"src": "9511:10:1"
															},
															"nativeSrc": "9508:36:1",
															"nodeType": "YulIf",
															"src": "9508:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9425:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9456:1:1",
														"nodeType": "YulTypedName",
														"src": "9456:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9459:1:1",
														"nodeType": "YulTypedName",
														"src": "9459:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9465:3:1",
														"nodeType": "YulTypedName",
														"src": "9465:3:1",
														"type": ""
													}
												],
												"src": "9425:125:1"
											},
											{
												"body": {
													"nativeSrc": "9758:297:1",
													"nodeType": "YulBlock",
													"src": "9758:297:1",
													"statements": [
														{
															"nativeSrc": "9768:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9768:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9786:3:1",
																				"nodeType": "YulLiteral",
																				"src": "9786:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9791:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9791:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9782:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9782:3:1"
																		},
																		"nativeSrc": "9782:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9782:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9795:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9795:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9778:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9778:3:1"
																},
																"nativeSrc": "9778:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9778:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9772:2:1",
																	"nodeType": "YulTypedName",
																	"src": "9772:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9813:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9813:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9828:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9828:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9836:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "9836:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9824:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9824:3:1"
																		},
																		"nativeSrc": "9824:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9824:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9806:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9806:6:1"
																},
																"nativeSrc": "9806:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9806:34:1"
															},
															"nativeSrc": "9806:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9806:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9860:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9860:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9871:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9871:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9856:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9856:3:1"
																		},
																		"nativeSrc": "9856:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9856:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9880:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9880:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9888:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "9888:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9876:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9876:3:1"
																		},
																		"nativeSrc": "9876:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9876:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9849:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9849:6:1"
																},
																"nativeSrc": "9849:43:1",
																"nodeType": "YulFunctionCall",
																"src": "9849:43:1"
															},
															"nativeSrc": "9849:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "9849:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9912:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9912:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9923:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9923:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9908:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9908:3:1"
																		},
																		"nativeSrc": "9908:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9908:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9928:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9928:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9901:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9901:6:1"
																},
																"nativeSrc": "9901:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9901:34:1"
															},
															"nativeSrc": "9901:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9901:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9955:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9955:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9966:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9966:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9951:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9951:3:1"
																		},
																		"nativeSrc": "9951:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9951:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9971:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9971:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9944:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9944:6:1"
																},
																"nativeSrc": "9944:31:1",
																"nodeType": "YulFunctionCall",
																"src": "9944:31:1"
															},
															"nativeSrc": "9944:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "9944:31:1"
														},
														{
															"nativeSrc": "9984:65:1",
															"nodeType": "YulAssignment",
															"src": "9984:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10021:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10021:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10033:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10033:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10044:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10044:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10029:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10029:3:1"
																		},
																		"nativeSrc": "10029:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10029:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "9992:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "9992:28:1"
																},
																"nativeSrc": "9992:57:1",
																"nodeType": "YulFunctionCall",
																"src": "9992:57:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9984:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9984:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9555:500:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9703:9:1",
														"nodeType": "YulTypedName",
														"src": "9703:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9714:6:1",
														"nodeType": "YulTypedName",
														"src": "9714:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9722:6:1",
														"nodeType": "YulTypedName",
														"src": "9722:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9730:6:1",
														"nodeType": "YulTypedName",
														"src": "9730:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9738:6:1",
														"nodeType": "YulTypedName",
														"src": "9738:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9749:4:1",
														"nodeType": "YulTypedName",
														"src": "9749:4:1",
														"type": ""
													}
												],
												"src": "9555:500:1"
											},
											{
												"body": {
													"nativeSrc": "10140:169:1",
													"nodeType": "YulBlock",
													"src": "10140:169:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10186:16:1",
																"nodeType": "YulBlock",
																"src": "10186:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10195:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10195:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10198:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10198:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10188:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10188:6:1"
																			},
																			"nativeSrc": "10188:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10188:12:1"
																		},
																		"nativeSrc": "10188:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10188:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10161:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10161:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10170:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10170:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10157:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10157:3:1"
																		},
																		"nativeSrc": "10157:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10157:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10182:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10182:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10153:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10153:3:1"
																},
																"nativeSrc": "10153:32:1",
																"nodeType": "YulFunctionCall",
																"src": "10153:32:1"
															},
															"nativeSrc": "10150:52:1",
															"nodeType": "YulIf",
															"src": "10150:52:1"
														},
														{
															"nativeSrc": "10211:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10211:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10230:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10230:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10224:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "10224:5:1"
																},
																"nativeSrc": "10224:16:1",
																"nodeType": "YulFunctionCall",
																"src": "10224:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10215:5:1",
																	"nodeType": "YulTypedName",
																	"src": "10215:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10273:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "10273:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "10249:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "10249:23:1"
																},
																"nativeSrc": "10249:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10249:30:1"
															},
															"nativeSrc": "10249:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10249:30:1"
														},
														{
															"nativeSrc": "10288:15:1",
															"nodeType": "YulAssignment",
															"src": "10288:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "10298:5:1",
																"nodeType": "YulIdentifier",
																"src": "10298:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10288:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10288:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "10060:249:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10106:9:1",
														"nodeType": "YulTypedName",
														"src": "10106:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10117:7:1",
														"nodeType": "YulTypedName",
														"src": "10117:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10129:6:1",
														"nodeType": "YulTypedName",
														"src": "10129:6:1",
														"type": ""
													}
												],
												"src": "10060:249:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x15F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0xFF PUSH2 0x546 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x22A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x245 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xF2D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF2D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2E4 DUP3 PUSH2 0x639 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x309 DUP3 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x397 DUP2 CALLER PUSH2 0x60C JUMP JUMPDEST PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 PUSH2 0x69A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x422 CALLER DUP3 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xF65 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 DUP4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x564 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x52B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x560 CALLER DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x56E CALLER DUP4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xF65 JUMP JUMPDEST PUSH2 0x596 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5A7 DUP3 PUSH2 0x639 JUMP JUMPDEST PUSH0 PUSH2 0x5BC PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x605 JUMP JUMPDEST DUP1 PUSH2 0x5E4 DUP5 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F5 SWAP3 SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6CE DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x712 DUP4 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x739 JUMPI POP PUSH2 0x739 DUP2 DUP6 PUSH2 0x60C JUMP JUMPDEST DUP1 PUSH2 0x75D JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x752 DUP5 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x778 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x80D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA64 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x820 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9AC DUP5 DUP5 DUP5 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x9B8 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x9E0 DUP4 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FF JUMPI PUSH2 0x9FF PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA29 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA33 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAA3 SWAP1 DUP5 SWAP1 PUSH2 0x1088 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xADF SWAP1 DUP5 SWAP1 PUSH2 0x109B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB2D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB67 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB64 SWAP2 DUP2 ADD SWAP1 PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBC2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1022 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x75D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC25 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC51 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC6F JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC87 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC9B JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCAD JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x245 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x697 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x605 DUP2 PUSH2 0xCBE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x605 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCEE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD3E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD5B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD71 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7A DUP4 PUSH2 0xD45 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD9A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDA3 DUP5 PUSH2 0xD45 JUMP JUMPDEST SWAP3 POP PUSH2 0xDB1 PUSH1 0x20 DUP6 ADD PUSH2 0xD45 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x605 DUP3 PUSH2 0xD45 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDEB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDF4 DUP4 PUSH2 0xD45 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE08 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE3A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE43 DUP6 PUSH2 0xD45 JUMP JUMPDEST SWAP4 POP PUSH2 0xE51 PUSH1 0x20 DUP7 ADD PUSH2 0xD45 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE74 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE87 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE99 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEC1 JUMPI PUSH2 0xEC1 PUSH2 0xE13 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xED9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF0D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF16 DUP4 PUSH2 0xD45 JUMP JUMPDEST SWAP2 POP PUSH2 0xF24 PUSH1 0x20 DUP5 ADD PUSH2 0xD45 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF41 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x75D PUSH2 0xFD7 DUP4 DUP7 PUSH2 0xFB2 JUMP JUMPDEST DUP5 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x245 JUMPI PUSH2 0x245 PUSH2 0x1074 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x245 JUMPI PUSH2 0x245 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x10E0 SWAP1 DUP4 ADD DUP5 PUSH2 0xCEE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x605 DUP2 PUSH2 0xCBE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD XOR DUP16 STOP EXTCODECOPY REVERT 0xBB PUSH7 0xDC898F66050C72 0xAA 0xCC 0xE8 SUB 0xE3 ADDMOD PUSH18 0x70D377F7C73BC5F58C664736F6C63430008 NOT STOP CALLER ",
							"sourceMap": "40505:16327:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41447:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:1;;558:22;540:41;;528:2;513:18;41447:300:0;;;;;;;;42348:98;;;:::i;:::-;;;;;;;:::i;43812:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1482:32:1;;;1464:51;;1452:2;1437:18;43812:167:0;1318:203:1;43345:406:0;;;;;;:::i;:::-;;:::i;:::-;;44489:326;;;;;;:::i;:::-;;:::i;44881:179::-;;;;;;:::i;:::-;;:::i;42067:219::-;;;;;;:::i;:::-;;:::i;41806:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2633:25:1;;;2621:2;2606:18;41806:204:0;2487:177:1;42510:102:0;;;:::i;44046:153::-;;;;;;:::i;:::-;;:::i;45126:314::-;;;;;;:::i;:::-;;:::i;42678:276::-;;;;;;:::i;:::-;;:::i;44265:162::-;;;;;;:::i;:::-;;:::i;41447:300::-;41549:4;-1:-1:-1;;;;;;41584:40:0;;-1:-1:-1;;;41584:40:0;;:104;;-1:-1:-1;;;;;;;41640:48:0;;-1:-1:-1;;;41640:48:0;41584:104;:156;;;-1:-1:-1;;;;;;;;;;34300:40:0;;;41704:36;41565:175;41447:300;-1:-1:-1;;41447:300:0:o;42348:98::-;42402:13;42434:5;42427:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42348:98;:::o;43812:167::-;43888:7;43907:23;43922:7;43907:14;:23::i;:::-;-1:-1:-1;43948:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;43948:24:0;;43812:167::o;43345:406::-;43425:13;43441:23;43456:7;43441:14;:23::i;:::-;43425:39;;43488:5;-1:-1:-1;;;;;43482:11:0;:2;-1:-1:-1;;;;;43482:11:0;;43474:57;;;;-1:-1:-1;;;43474:57:0;;5148:2:1;43474:57:0;;;5130:21:1;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:1;;;5270:31;5318:19;;43474:57:0;;;;;;;;;16970:10;-1:-1:-1;;;;;43563:21:0;;;;:62;;-1:-1:-1;43588:37:0;43605:5;16970:10;44265:162;:::i;43588:37::-;43542:170;;;;-1:-1:-1;;;43542:170:0;;5550:2:1;43542:170:0;;;5532:21:1;5589:2;5569:18;;;5562:30;5628:34;5608:18;;;5601:62;5699:31;5679:18;;;5672:59;5748:19;;43542:170:0;5348:425:1;43542:170:0;43723:21;43732:2;43736:7;43723:8;:21::i;:::-;43415:336;43345:406;;:::o;44489:326::-;44678:41;16970:10;44711:7;44678:18;:41::i;:::-;44670:99;;;;-1:-1:-1;;;44670:99:0;;;;;;;:::i;:::-;44780:28;44790:4;44796:2;44800:7;44780:9;:28::i;44881:179::-;45014:39;45031:4;45037:2;45041:7;45014:39;;;;;;;;;;;;:16;:39::i;42067:219::-;42139:7;46807:16;;;:7;:16;;;;;;-1:-1:-1;;;;;46807:16:0;;42201:56;;;;-1:-1:-1;;;42201:56:0;;6394:2:1;42201:56:0;;;6376:21:1;6433:2;6413:18;;;6406:30;-1:-1:-1;;;6452:18:1;;;6445:54;6516:18;;42201:56:0;6192:348:1;41806:204:0;41878:7;-1:-1:-1;;;;;41905:19:0;;41897:73;;;;-1:-1:-1;;;41897:73:0;;6747:2:1;41897:73:0;;;6729:21:1;6786:2;6766:18;;;6759:30;6825:34;6805:18;;;6798:62;-1:-1:-1;;;6876:18:1;;;6869:39;6925:19;;41897:73:0;6545:405:1;41897:73:0;-1:-1:-1;;;;;;41987:16:0;;;;;:9;:16;;;;;;;41806:204::o;42510:102::-;42566:13;42598:7;42591:14;;;;;:::i;44046:153::-;44140:52;16970:10;44173:8;44183;44140:18;:52::i;:::-;44046:153;;:::o;45126:314::-;45294:41;16970:10;45327:7;45294:18;:41::i;:::-;45286:99;;;;-1:-1:-1;;;45286:99:0;;;;;;;:::i;:::-;45395:38;45409:4;45415:2;45419:7;45428:4;45395:13;:38::i;:::-;45126:314;;;;:::o;42678:276::-;42751:13;42776:23;42791:7;42776:14;:23::i;:::-;42810:21;42834:10;43272:9;;;;;;;;;-1:-1:-1;43272:9:0;;;43196:92;42834:10;42810:34;;42885:1;42867:7;42861:21;:25;:86;;;;;;;;;;;;;;;;;42913:7;42922:18;:7;:16;:18::i;:::-;42896:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;42861:86;42854:93;42678:276;-1:-1:-1;;;42678:276:0:o;44265:162::-;-1:-1:-1;;;;;44385:25:0;;;44362:4;44385:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;44265:162::o;53343:133::-;47198:4;46807:16;;;:7;:16;;;;;;-1:-1:-1;;;;;46807:16:0;53416:53;;;;-1:-1:-1;;;53416:53:0;;6394:2:1;53416:53:0;;;6376:21:1;6433:2;6413:18;;;6406:30;-1:-1:-1;;;6452:18:1;;;6445:54;6516:18;;53416:53:0;6192:348:1;53416:53:0;53343:133;:::o;52645:171::-;52719:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;52719:29:0;-1:-1:-1;;;;;52719:29:0;;;;;;;;:24;;52772:23;52719:24;52772:14;:23::i;:::-;-1:-1:-1;;;;;52763:46:0;;;;;;;;;;;52645:171;;:::o;47417:261::-;47510:4;47526:13;47542:23;47557:7;47542:14;:23::i;:::-;47526:39;;47594:5;-1:-1:-1;;;;;47583:16:0;:7;-1:-1:-1;;;;;47583:16:0;;:52;;;;47603:32;47620:5;47627:7;47603:16;:32::i;:::-;47583:87;;;;47663:7;-1:-1:-1;;;;;47639:31:0;:20;47651:7;47639:11;:20::i;:::-;-1:-1:-1;;;;;47639:31:0;;47583:87;47575:96;47417:261;-1:-1:-1;;;;47417:261:0:o;51300:1233::-;51454:4;-1:-1:-1;;;;;51427:31:0;:23;51442:7;51427:14;:23::i;:::-;-1:-1:-1;;;;;51427:31:0;;51419:81;;;;-1:-1:-1;;;51419:81:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;51518:16:0;;51510:65;;;;-1:-1:-1;;;51510:65:0;;8052:2:1;51510:65:0;;;8034:21:1;8091:2;8071:18;;;8064:30;8130:34;8110:18;;;8103:62;-1:-1:-1;;;8181:18:1;;;8174:34;8225:19;;51510:65:0;7850:400:1;51510:65:0;51586:42;51607:4;51613:2;51617:7;51626:1;51586:20;:42::i;:::-;51755:4;-1:-1:-1;;;;;51728:31:0;:23;51743:7;51728:14;:23::i;:::-;-1:-1:-1;;;;;51728:31:0;;51720:81;;;;-1:-1:-1;;;51720:81:0;;;;;;;:::i;:::-;51870:24;;;;:15;:24;;;;;;;;51863:31;;-1:-1:-1;;;;;;51863:31:0;;;;;;-1:-1:-1;;;;;52338:15:0;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;52338:20:0;;;52372:13;;;;;;;;;:18;;51863:31;52372:18;;;52410:16;;;:7;:16;;;;;;:21;;;;;;;;;;52447:27;;51886:7;;52447:27;;;43415:336;43345:406;;:::o;52952:307::-;53102:8;-1:-1:-1;;;;;53093:17:0;:5;-1:-1:-1;;;;;53093:17:0;;53085:55;;;;-1:-1:-1;;;53085:55:0;;8457:2:1;53085:55:0;;;8439:21:1;8496:2;8476:18;;;8469:30;8535:27;8515:18;;;8508:55;8580:18;;53085:55:0;8255:349:1;53085:55:0;-1:-1:-1;;;;;53150:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;53150:46:0;;;;;;;;;;53211:41;;540::1;;;53211::0;;513:18:1;53211:41:0;;;;;;;52952:307;;;:::o;46301:305::-;46451:28;46461:4;46467:2;46471:7;46451:9;:28::i;:::-;46497:47;46520:4;46526:2;46530:7;46539:4;46497:22;:47::i;:::-;46489:110;;;;-1:-1:-1;;;46489:110:0;;;;;;;:::i;14390:696::-;14446:13;14495:14;14512:17;14523:5;14512:10;:17::i;:::-;14532:1;14512:21;14495:38;;14547:20;14581:6;14570:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14570:18:0;-1:-1:-1;14547:41:0;-1:-1:-1;14708:28:0;;;14724:2;14708:28;14763:280;-1:-1:-1;;14794:5:0;-1:-1:-1;;;14928:2:0;14917:14;;14912:30;14794:5;14899:44;14987:2;14978:11;;;-1:-1:-1;15007:21:0;14763:280;15007:21;-1:-1:-1;15063:6:0;14390:696;-1:-1:-1;;;14390:696:0:o;55575:396::-;55759:1;55747:9;:13;55743:222;;;-1:-1:-1;;;;;55780:18:0;;;55776:85;;-1:-1:-1;;;;;55818:15:0;;;;;;:9;:15;;;;;:28;;55837:9;;55818:15;:28;;55837:9;;55818:28;:::i;:::-;;;;-1:-1:-1;;55776:85:0;-1:-1:-1;;;;;55878:16:0;;;55874:81;;-1:-1:-1;;;;;55914:13:0;;;;;;:9;:13;;;;;:26;;55931:9;;55914:13;:26;;55931:9;;55914:26;:::i;:::-;;;;-1:-1:-1;;55575:396:0;;;;:::o;54028:831::-;54177:4;-1:-1:-1;;;;;54197:13:0;;23745:19;:23;54193:660;;54232:71;;-1:-1:-1;;;54232:71:0;;-1:-1:-1;;;;;54232:36:0;;;;;:71;;16970:10;;54283:4;;54289:7;;54298:4;;54232:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;54232:71:0;;;;;;;;-1:-1:-1;;54232:71:0;;;;;;;;;;;;:::i;:::-;;;54228:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54470:6;:13;54487:1;54470:18;54466:321;;54512:60;;-1:-1:-1;;;54512:60:0;;;;;;;:::i;54466:321::-;54739:6;54733:13;54724:6;54720:2;54716:15;54709:38;54228:573;-1:-1:-1;;;;;;54353:51:0;-1:-1:-1;;;54353:51:0;;-1:-1:-1;54346:58:0;;54193:660;-1:-1:-1;54838:4:0;54028:831;;;;;;:::o;11363:890::-;11416:7;;-1:-1:-1;;;11491:15:0;;11487:99;;-1:-1:-1;;;11526:15:0;;;-1:-1:-1;11569:2:0;11559:12;11487:99;11612:6;11603:5;:15;11599:99;;11647:6;11638:15;;;-1:-1:-1;11681:2:0;11671:12;11599:99;11724:6;11715:5;:15;11711:99;;11759:6;11750:15;;;-1:-1:-1;11793:2:0;11783:12;11711:99;11836:5;11827;:14;11823:96;;11870:5;11861:14;;;-1:-1:-1;11903:1:0;11893:11;11823:96;11945:5;11936;:14;11932:96;;11979:5;11970:14;;;-1:-1:-1;12012:1:0;12002:11;11932:96;12054:5;12045;:14;12041:96;;12088:5;12079:14;;;-1:-1:-1;12121:1:0;12111:11;12041:96;12163:5;12154;:14;12150:64;;12198:1;12188:11;12240:6;11363:890;-1:-1:-1;;11363:890:0:o;14:131:1:-;-1:-1:-1;;;;;;88:32:1;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:300::-;645:3;683:5;677:12;710:6;705:3;698:19;766:6;759:4;752:5;748:16;741:4;736:3;732:14;726:47;818:1;811:4;802:6;797:3;793:16;789:27;782:38;881:4;874:2;870:7;865:2;857:6;853:15;849:29;844:3;840:39;836:50;829:57;;;592:300;;;;:::o;897:231::-;1046:2;1035:9;1028:21;1009:4;1066:56;1118:2;1107:9;1103:18;1095:6;1066:56;:::i;1133:180::-;1192:6;1245:2;1233:9;1224:7;1220:23;1216:32;1213:52;;;1261:1;1258;1251:12;1213:52;-1:-1:-1;1284:23:1;;1133:180;-1:-1:-1;1133:180:1:o;1526:173::-;1594:20;;-1:-1:-1;;;;;1643:31:1;;1633:42;;1623:70;;1689:1;1686;1679:12;1623:70;1526:173;;;:::o;1704:254::-;1772:6;1780;1833:2;1821:9;1812:7;1808:23;1804:32;1801:52;;;1849:1;1846;1839:12;1801:52;1872:29;1891:9;1872:29;:::i;:::-;1862:39;1948:2;1933:18;;;;1920:32;;-1:-1:-1;;;1704:254:1:o;1963:328::-;2040:6;2048;2056;2109:2;2097:9;2088:7;2084:23;2080:32;2077:52;;;2125:1;2122;2115:12;2077:52;2148:29;2167:9;2148:29;:::i;:::-;2138:39;;2196:38;2230:2;2219:9;2215:18;2196:38;:::i;:::-;2186:48;;2281:2;2270:9;2266:18;2253:32;2243:42;;1963:328;;;;;:::o;2296:186::-;2355:6;2408:2;2396:9;2387:7;2383:23;2379:32;2376:52;;;2424:1;2421;2414:12;2376:52;2447:29;2466:9;2447:29;:::i;2669:347::-;2734:6;2742;2795:2;2783:9;2774:7;2770:23;2766:32;2763:52;;;2811:1;2808;2801:12;2763:52;2834:29;2853:9;2834:29;:::i;:::-;2824:39;;2913:2;2902:9;2898:18;2885:32;2960:5;2953:13;2946:21;2939:5;2936:32;2926:60;;2982:1;2979;2972:12;2926:60;3005:5;2995:15;;;2669:347;;;;;:::o;3021:127::-;3082:10;3077:3;3073:20;3070:1;3063:31;3113:4;3110:1;3103:15;3137:4;3134:1;3127:15;3153:1138;3248:6;3256;3264;3272;3325:3;3313:9;3304:7;3300:23;3296:33;3293:53;;;3342:1;3339;3332:12;3293:53;3365:29;3384:9;3365:29;:::i;:::-;3355:39;;3413:38;3447:2;3436:9;3432:18;3413:38;:::i;:::-;3403:48;;3498:2;3487:9;3483:18;3470:32;3460:42;;3553:2;3542:9;3538:18;3525:32;3576:18;3617:2;3609:6;3606:14;3603:34;;;3633:1;3630;3623:12;3603:34;3671:6;3660:9;3656:22;3646:32;;3716:7;3709:4;3705:2;3701:13;3697:27;3687:55;;3738:1;3735;3728:12;3687:55;3774:2;3761:16;3796:2;3792;3789:10;3786:36;;;3802:18;;:::i;:::-;3877:2;3871:9;3845:2;3931:13;;-1:-1:-1;;3927:22:1;;;3951:2;3923:31;3919:40;3907:53;;;3975:18;;;3995:22;;;3972:46;3969:72;;;4021:18;;:::i;:::-;4061:10;4057:2;4050:22;4096:2;4088:6;4081:18;4136:7;4131:2;4126;4122;4118:11;4114:20;4111:33;4108:53;;;4157:1;4154;4147:12;4108:53;4213:2;4208;4204;4200:11;4195:2;4187:6;4183:15;4170:46;4258:1;4253:2;4248;4240:6;4236:15;4232:24;4225:35;4279:6;4269:16;;;;;;;3153:1138;;;;;;;:::o;4296:260::-;4364:6;4372;4425:2;4413:9;4404:7;4400:23;4396:32;4393:52;;;4441:1;4438;4431:12;4393:52;4464:29;4483:9;4464:29;:::i;:::-;4454:39;;4512:38;4546:2;4535:9;4531:18;4512:38;:::i;:::-;4502:48;;4296:260;;;;;:::o;4561:380::-;4640:1;4636:12;;;;4683;;;4704:61;;4758:4;4750:6;4746:17;4736:27;;4704:61;4811:2;4803:6;4800:14;4780:18;4777:38;4774:161;;4857:10;4852:3;4848:20;4845:1;4838:31;4892:4;4889:1;4882:15;4920:4;4917:1;4910:15;4774:161;;4561:380;;;:::o;5778:409::-;5980:2;5962:21;;;6019:2;5999:18;;;5992:30;6058:34;6053:2;6038:18;;6031:62;-1:-1:-1;;;6124:2:1;6109:18;;6102:43;6177:3;6162:19;;5778:409::o;6955:212::-;6997:3;7035:5;7029:12;7079:6;7072:4;7065:5;7061:16;7056:3;7050:36;7141:1;7105:16;;7130:13;;;-1:-1:-1;7105:16:1;;6955:212;-1:-1:-1;6955:212:1:o;7172:267::-;7351:3;7376:57;7402:30;7428:3;7420:6;7402:30;:::i;:::-;7394:6;7376:57;:::i;7444:401::-;7646:2;7628:21;;;7685:2;7665:18;;;7658:30;7724:34;7719:2;7704:18;;7697:62;-1:-1:-1;;;7790:2:1;7775:18;;7768:35;7835:3;7820:19;;7444:401::o;8609:414::-;8811:2;8793:21;;;8850:2;8830:18;;;8823:30;8889:34;8884:2;8869:18;;8862:62;-1:-1:-1;;;8955:2:1;8940:18;;8933:48;9013:3;8998:19;;8609:414::o;9160:127::-;9221:10;9216:3;9212:20;9209:1;9202:31;9252:4;9249:1;9242:15;9276:4;9273:1;9266:15;9292:128;9359:9;;;9380:11;;;9377:37;;;9394:18;;:::i;9425:125::-;9490:9;;;9511:10;;;9508:36;;;9524:18;;:::i;9555:500::-;-1:-1:-1;;;;;9824:15:1;;;9806:34;;9876:15;;9871:2;9856:18;;9849:43;9923:2;9908:18;;9901:34;;;9971:3;9966:2;9951:18;;9944:31;;;9749:4;;9992:57;;10029:19;;10021:6;9992:57;:::i;:::-;9984:65;9555:500;-1:-1:-1;;;;;;9555:500:1:o;10060:249::-;10129:6;10182:2;10170:9;10161:7;10157:23;10153:32;10150:52;;;10198:1;10195;10188:12;10150:52;10230:9;10224:16;10249:30;10273:5;10249:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "882200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2630",
								"getApproved(uint256)": "4764",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2558",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26702",
								"supportsInterface(bytes4)": "508",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "24512",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 40505,
									"end": 56832,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 40505,
									"end": 56832,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40505,
									"end": 56832,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 41267,
									"end": 41380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 41333,
									"end": 41338,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41333,
									"end": 41346,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 41341,
									"end": 41346,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 41333,
									"end": 41338,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41333,
									"end": 41346,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 41333,
									"end": 41346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 41333,
									"end": 41346,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 41333,
									"end": 41346,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 41356,
									"end": 41363,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 41356,
									"end": 41373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 41366,
									"end": 41373,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41356,
									"end": 41363,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41356,
									"end": 41373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 41356,
									"end": 41373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 41356,
									"end": 41373,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 41356,
									"end": 41373,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 41356,
									"end": 41373,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40505,
									"end": 56832,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 40505,
									"end": 56832,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 862,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 709,
									"end": 712,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 702,
									"end": 706,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 697,
									"end": 699,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 689,
									"end": 695,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 685,
									"end": 700,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 681,
									"end": 707,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 678,
									"end": 713,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 675,
									"end": 730,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 675,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 726,
									"end": 727,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 723,
									"end": 724,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 716,
									"end": 728,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 675,
									"end": 730,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 783,
									"end": 785,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 776,
									"end": 780,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 768,
									"end": 774,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 764,
									"end": 781,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 757,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 749,
									"end": 755,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 745,
									"end": 762,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 739,
									"end": 786,
									"name": "MCOPY",
									"source": 1
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 810,
									"end": 816,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 806,
									"end": 821,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 802,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 795,
									"end": 832,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 850,
									"end": 856,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 841,
									"end": 856,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 966,
									"end": 972,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 980,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1029,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1015,
									"end": 1024,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1013,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1025,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 998,
									"end": 1030,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1044,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1045,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1086,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1086,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1163,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1159,
									"end": 1160,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1152,
									"end": 1164,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1238,
									"end": 1245,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1229,
									"end": 1235,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1218,
									"end": 1227,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1214,
									"end": 1236,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1185,
									"end": 1246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1294,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1281,
									"end": 1290,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1277,
									"end": 1295,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1296,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 1323,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1319,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1324,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1337,
									"end": 1338,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1334,
									"end": 1335,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1327,
									"end": 1339,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1415,
									"end": 1422,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1404,
									"end": 1412,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1393,
									"end": 1402,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1413,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1360,
									"end": 1423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 867,
									"end": 1429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1635,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1623,
									"end": 1629,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1619,
									"end": 1636,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1609,
									"end": 1636,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1609,
									"end": 1636,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1676,
									"end": 1682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1673,
									"end": 1687,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1653,
									"end": 1671,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1688,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1725,
									"end": 1728,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1721,
									"end": 1741,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1718,
									"end": 1719,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1765,
									"end": 1769,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1762,
									"end": 1763,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1755,
									"end": 1770,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1797,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1790,
									"end": 1791,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1783,
									"end": 1798,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2047,
									"end": 2049,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2042,
									"end": 2045,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2050,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2088,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2080,
									"end": 2081,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2073,
									"end": 2089,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2131,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2124,
									"end": 2125,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2197,
									"end": 2199,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2185,
									"end": 2195,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2181,
									"end": 2200,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 2179,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2168,
									"end": 2172,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2202,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2233,
									"end": 2237,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2221,
									"end": 2231,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2218,
									"end": 2238,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2256,
									"end": 2260,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2311,
									"end": 2313,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2306,
									"end": 2309,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2302,
									"end": 2314,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2299,
									"end": 2300,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2295,
									"end": 2315,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2293,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2285,
									"end": 2316,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2275,
									"end": 2316,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2275,
									"end": 2316,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2384,
									"end": 2386,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2382,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2374,
									"end": 2387,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2443,
									"end": 2444,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2445,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2445,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2411,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2399,
									"end": 2412,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 2463,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2759,
									"end": 2769,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2759,
									"end": 2769,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2781,
									"end": 2811,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2781,
									"end": 2811,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2814,
									"end": 2832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2933,
									"end": 2939,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2925,
									"end": 2929,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2919,
									"end": 2930,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2893,
									"end": 2931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2887,
									"end": 2891,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2843,
									"end": 2940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 2999,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2995,
									"end": 2999,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3054,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3041,
									"end": 3055,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3041,
									"end": 3055,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3069,
									"end": 3070,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3771,
									"end": 3772,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3788,
									"end": 3794,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3834,
									"end": 3860,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2596,
									"end": 2597,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2612,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2584,
									"end": 2613,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2574,
									"end": 2614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2620,
									"end": 2621,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2628,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3887,
									"end": 3968,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3887,
									"end": 3968,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1892,
									"end": 1893,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1929,
									"end": 1933,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1916,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1916,
									"end": 1934,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3232,
									"end": 3239,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3226,
									"end": 3240,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3315,
									"end": 3341,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3300,
									"end": 3342,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3300,
									"end": 3342,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3381,
									"end": 3382,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3248,
									"end": 3267,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3248,
									"end": 3267,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3482,
									"end": 3488,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3473,
									"end": 3480,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3470,
									"end": 3489,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3537,
									"end": 3563,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3626,
									"end": 3627,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3638,
									"end": 3641,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3618,
									"end": 3642,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3614,
									"end": 3651,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3610,
									"end": 3652,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3595,
									"end": 3653,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3580,
									"end": 3654,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3580,
									"end": 3654,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3714,
									"end": 3715,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3705,
									"end": 3711,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3702,
									"end": 3703,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3694,
									"end": 3716,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3688,
									"end": 3692,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3681,
									"end": 3717,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2639,
									"end": 3984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 40505,
									"end": 56832,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40505,
									"end": 56832,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40505,
									"end": 56832,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40505,
									"end": 56832,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40505,
									"end": 56832,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 40505,
									"end": 56832,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40505,
									"end": 56832,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd188f003cfdbb66dc898f66050c72aacce803e30871070d377f7c73bc5f58c664736f6c63430008190033",
									".code": [
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40505,
											"end": 56832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41447,
											"end": 41747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 41447,
											"end": 41747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42348,
											"end": 42446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 42348,
											"end": 42446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 43812,
											"end": 43979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 43812,
											"end": 43979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 43345,
											"end": 43751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 43345,
											"end": 43751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44489,
											"end": 44815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 44489,
											"end": 44815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44881,
											"end": 45060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 44881,
											"end": 45060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 42067,
											"end": 42286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 42067,
											"end": 42286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 41806,
											"end": 42010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 41806,
											"end": 42010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2487,
											"end": 2664,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42510,
											"end": 42612,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 42510,
											"end": 42612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 42510,
											"end": 42612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 42510,
											"end": 42612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44046,
											"end": 44199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 44046,
											"end": 44199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 45126,
											"end": 45440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 45126,
											"end": 45440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 42678,
											"end": 42954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 42678,
											"end": 42954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 44265,
											"end": 44427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 44265,
											"end": 44427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41549,
											"end": 41553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 41584,
											"end": 41624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41584,
											"end": 41624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41584,
											"end": 41624,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41584,
											"end": 41624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41584,
											"end": 41688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 41584,
											"end": 41688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 41640,
											"end": 41688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41640,
											"end": 41688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41640,
											"end": 41688,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41584,
											"end": 41688,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 41584,
											"end": 41688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41584,
											"end": 41740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41584,
											"end": 41740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 41584,
											"end": 41740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34300,
											"end": 34340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34300,
											"end": 34340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34300,
											"end": 34340,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41704,
											"end": 41740,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 41704,
											"end": 41740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41565,
											"end": 41740,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41447,
											"end": 41747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42402,
											"end": 42415,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42434,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 42427,
											"end": 42439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 42427,
											"end": 42439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43888,
											"end": 43895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43907,
											"end": 43930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 43922,
											"end": 43929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43907,
											"end": 43921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 43907,
											"end": 43930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43907,
											"end": 43930,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 43907,
											"end": 43930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43425,
											"end": 43438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43441,
											"end": 43464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 43456,
											"end": 43463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43441,
											"end": 43455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 43441,
											"end": 43464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43441,
											"end": 43464,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 43441,
											"end": 43464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43425,
											"end": 43464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43425,
											"end": 43464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43488,
											"end": 43493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43482,
											"end": 43493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43482,
											"end": 43484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43482,
											"end": 43493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43482,
											"end": 43493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5337,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5318,
											"end": 5337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43563,
											"end": 43584,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43563,
											"end": 43584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43563,
											"end": 43584,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43563,
											"end": 43584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43563,
											"end": 43625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 43563,
											"end": 43625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43588,
											"end": 43625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 43605,
											"end": 43610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 44265,
											"end": 44427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43588,
											"end": 43625,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 43588,
											"end": 43625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5550,
											"end": 5552,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5591,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 5569,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5569,
											"end": 5587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5569,
											"end": 5587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5628,
											"end": 5662,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5730,
											"name": "PUSH",
											"source": 1,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5748,
											"end": 5767,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5748,
											"end": 5767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5348,
											"end": 5773,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43723,
											"end": 43744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 43732,
											"end": 43734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43736,
											"end": 43743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43723,
											"end": 43731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 43723,
											"end": 43744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43723,
											"end": 43744,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 43723,
											"end": 43744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43415,
											"end": 43751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44678,
											"end": 44719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44678,
											"end": 44696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 44678,
											"end": 44719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44678,
											"end": 44719,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 44678,
											"end": 44719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 44670,
											"end": 44769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44780,
											"end": 44808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 44790,
											"end": 44794,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44796,
											"end": 44798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44800,
											"end": 44807,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44780,
											"end": 44789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 44780,
											"end": 44808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 45031,
											"end": 45035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45037,
											"end": 45039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45041,
											"end": 45048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 45014,
											"end": 45053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42139,
											"end": 42146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46814,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6394,
											"end": 6396,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6435,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6413,
											"end": 6431,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6413,
											"end": 6431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 6534,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6516,
											"end": 6534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6192,
											"end": 6540,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41878,
											"end": 41885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41905,
											"end": 41924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41905,
											"end": 41924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6747,
											"end": 6749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6729,
											"end": 6750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6788,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6759,
											"end": 6789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6798,
											"end": 6860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6944,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6925,
											"end": 6944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6545,
											"end": 6950,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 41996,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42612,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 42510,
											"end": 42612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42566,
											"end": 42579,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42598,
											"end": 42605,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42591,
											"end": 42605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42591,
											"end": 42605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42591,
											"end": 42605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 42591,
											"end": 42605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42591,
											"end": 42605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 42591,
											"end": 42605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44140,
											"end": 44192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 44173,
											"end": 44181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44183,
											"end": 44191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44140,
											"end": 44158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 44140,
											"end": 44192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44140,
											"end": 44192,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 44140,
											"end": 44192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45294,
											"end": 45335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 45327,
											"end": 45334,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45294,
											"end": 45312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 45294,
											"end": 45335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45294,
											"end": 45335,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 45294,
											"end": 45335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 45286,
											"end": 45385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45395,
											"end": 45433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 45409,
											"end": 45413,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45415,
											"end": 45417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45419,
											"end": 45426,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45428,
											"end": 45432,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45395,
											"end": 45408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 45395,
											"end": 45433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45395,
											"end": 45433,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 45395,
											"end": 45433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42751,
											"end": 42764,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42776,
											"end": 42799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 42791,
											"end": 42798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42776,
											"end": 42790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 42776,
											"end": 42799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42776,
											"end": 42799,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 42776,
											"end": 42799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42810,
											"end": 42831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42834,
											"end": 42844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 43272,
											"end": 43281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43272,
											"end": 43281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43272,
											"end": 43281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43272,
											"end": 43281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43272,
											"end": 43281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43272,
											"end": 43281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43272,
											"end": 43281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43272,
											"end": 43281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43272,
											"end": 43281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 43272,
											"end": 43281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43272,
											"end": 43281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43272,
											"end": 43281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43288,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42834,
											"end": 42844,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 42834,
											"end": 42844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42810,
											"end": 42844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42810,
											"end": 42844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42885,
											"end": 42886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42867,
											"end": 42874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42886,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42913,
											"end": 42920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 42922,
											"end": 42929,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 42922,
											"end": 42940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42940,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 42922,
											"end": 42940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 42896,
											"end": 42941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42854,
											"end": 42947,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42678,
											"end": 42954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44362,
											"end": 44366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44403,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53343,
											"end": 53476,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 53343,
											"end": 53476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47198,
											"end": 47202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46814,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6394,
											"end": 6396,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6435,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6413,
											"end": 6431,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6413,
											"end": 6431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 6534,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6516,
											"end": 6534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6192,
											"end": 6540,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53343,
											"end": 53476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53343,
											"end": 53476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52645,
											"end": 52816,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 52645,
											"end": 52816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52734,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52772,
											"end": 52795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52772,
											"end": 52786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 52772,
											"end": 52795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52772,
											"end": 52795,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 52772,
											"end": 52795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 52645,
											"end": 52816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52645,
											"end": 52816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52645,
											"end": 52816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47417,
											"end": 47678,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 47417,
											"end": 47678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47510,
											"end": 47514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47526,
											"end": 47539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47542,
											"end": 47565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 47557,
											"end": 47564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47542,
											"end": 47556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 47542,
											"end": 47565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47542,
											"end": 47565,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 47542,
											"end": 47565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47526,
											"end": 47565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47526,
											"end": 47565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47594,
											"end": 47599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47583,
											"end": 47599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47583,
											"end": 47599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47599,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 47583,
											"end": 47635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47603,
											"end": 47635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 47620,
											"end": 47625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47627,
											"end": 47634,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47603,
											"end": 47619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 47603,
											"end": 47635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47603,
											"end": 47635,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 47603,
											"end": 47635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 47583,
											"end": 47670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47663,
											"end": 47670,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47639,
											"end": 47670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47639,
											"end": 47659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 47651,
											"end": 47658,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47639,
											"end": 47650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 47639,
											"end": 47659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47639,
											"end": 47659,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 47639,
											"end": 47659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47639,
											"end": 47670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47639,
											"end": 47670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47670,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 47583,
											"end": 47670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47575,
											"end": 47671,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47417,
											"end": 47678,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47417,
											"end": 47678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51300,
											"end": 52533,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 51300,
											"end": 52533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51454,
											"end": 51458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51427,
											"end": 51458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51427,
											"end": 51450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 51442,
											"end": 51449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51427,
											"end": 51441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 51427,
											"end": 51450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51427,
											"end": 51450,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 51427,
											"end": 51450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51427,
											"end": 51458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51427,
											"end": 51458,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 51419,
											"end": 51500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51518,
											"end": 51534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51518,
											"end": 51534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8034,
											"end": 8055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8091,
											"end": 8093,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8071,
											"end": 8089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8164,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8181,
											"end": 8199,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8181,
											"end": 8199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8181,
											"end": 8199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8244,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8225,
											"end": 8244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7850,
											"end": 8250,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51586,
											"end": 51628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 51607,
											"end": 51611,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51613,
											"end": 51615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51617,
											"end": 51624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51626,
											"end": 51627,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51586,
											"end": 51606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 51586,
											"end": 51628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51586,
											"end": 51628,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 51586,
											"end": 51628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51755,
											"end": 51759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51728,
											"end": 51759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51728,
											"end": 51751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 51743,
											"end": 51750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51728,
											"end": 51742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 51728,
											"end": 51751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51728,
											"end": 51751,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 51728,
											"end": 51751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51728,
											"end": 51759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51728,
											"end": 51759,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 51720,
											"end": 51801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51885,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52347,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52338,
											"end": 52358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52358,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52372,
											"end": 52390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52390,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52417,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52447,
											"end": 52474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52447,
											"end": 52474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51886,
											"end": 51893,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51886,
											"end": 51893,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52447,
											"end": 52474,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 52447,
											"end": 52474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52447,
											"end": 52474,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 43415,
											"end": 43751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52952,
											"end": 53259,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 52952,
											"end": 53259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53102,
											"end": 53110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53093,
											"end": 53110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53093,
											"end": 53098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53093,
											"end": 53110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53093,
											"end": 53110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8457,
											"end": 8459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8496,
											"end": 8498,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 8476,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8476,
											"end": 8494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8476,
											"end": 8494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8562,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8255,
											"end": 8604,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53168,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 52952,
											"end": 53259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52952,
											"end": 53259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52952,
											"end": 53259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52952,
											"end": 53259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46301,
											"end": 46606,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 46301,
											"end": 46606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46451,
											"end": 46479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 46461,
											"end": 46465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 46469,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46471,
											"end": 46478,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46451,
											"end": 46460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 46451,
											"end": 46479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46451,
											"end": 46479,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 46451,
											"end": 46479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46497,
											"end": 46544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 46520,
											"end": 46524,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46526,
											"end": 46528,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46530,
											"end": 46537,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46539,
											"end": 46543,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46497,
											"end": 46519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 46497,
											"end": 46544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46497,
											"end": 46544,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 46497,
											"end": 46544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 46489,
											"end": 46599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14390,
											"end": 15086,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 14390,
											"end": 15086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14446,
											"end": 14459,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14495,
											"end": 14509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14512,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 14523,
											"end": 14528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14512,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 14512,
											"end": 14529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14512,
											"end": 14529,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 14512,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14532,
											"end": 14533,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14512,
											"end": 14533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14495,
											"end": 14533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14495,
											"end": 14533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14581,
											"end": 14587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 14570,
											"end": 14588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14708,
											"end": 14736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14708,
											"end": 14736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14708,
											"end": 14736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14724,
											"end": 14726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14708,
											"end": 14736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14763,
											"end": 15043,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 14763,
											"end": 15043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14794,
											"end": 14799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14928,
											"end": 14930,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14917,
											"end": 14931,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14917,
											"end": 14931,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 14912,
											"end": 14942,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 14794,
											"end": 14799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 14943,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 14987,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14978,
											"end": 14989,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14978,
											"end": 14989,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14978,
											"end": 14989,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15007,
											"end": 15028,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14763,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 15007,
											"end": 15028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15063,
											"end": 15069,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14390,
											"end": 15086,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14390,
											"end": 15086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55575,
											"end": 55971,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 55575,
											"end": 55971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55759,
											"end": 55760,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55747,
											"end": 55756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55747,
											"end": 55760,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55743,
											"end": 55965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55743,
											"end": 55965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 55743,
											"end": 55965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55780,
											"end": 55798,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55780,
											"end": 55798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55780,
											"end": 55798,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55776,
											"end": 55861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 55776,
											"end": 55861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55827,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55846,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55846,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 55818,
											"end": 55846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55776,
											"end": 55861,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 55776,
											"end": 55861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55878,
											"end": 55894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55878,
											"end": 55894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55878,
											"end": 55894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55874,
											"end": 55955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 55874,
											"end": 55955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55923,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55931,
											"end": 55940,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55931,
											"end": 55940,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55931,
											"end": 55940,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55931,
											"end": 55940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 55914,
											"end": 55940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55575,
											"end": 55971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55575,
											"end": 55971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55575,
											"end": 55971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55575,
											"end": 55971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55575,
											"end": 55971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54177,
											"end": 54181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54197,
											"end": 54210,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54197,
											"end": 54210,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23745,
											"end": 23764,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 23745,
											"end": 23768,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54193,
											"end": 54853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 54193,
											"end": 54853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54232,
											"end": 54268,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54268,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 54232,
											"end": 54268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54283,
											"end": 54287,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 54283,
											"end": 54287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54289,
											"end": 54296,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 54289,
											"end": 54296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54302,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 54232,
											"end": 54303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 54232,
											"end": 54303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54470,
											"end": 54476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54470,
											"end": 54483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54487,
											"end": 54488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54470,
											"end": 54488,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54466,
											"end": 54787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 54466,
											"end": 54787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 54512,
											"end": 54572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54466,
											"end": 54787,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 54466,
											"end": 54787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54739,
											"end": 54745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54733,
											"end": 54746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54724,
											"end": 54730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54720,
											"end": 54722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54716,
											"end": 54731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54709,
											"end": 54747,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54353,
											"end": 54404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54353,
											"end": 54404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54353,
											"end": 54404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54346,
											"end": 54404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 54346,
											"end": 54404,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54193,
											"end": 54853,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 54193,
											"end": 54853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54838,
											"end": 54842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11363,
											"end": 12253,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 11363,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11416,
											"end": 11423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11416,
											"end": 11423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11491,
											"end": 11506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11491,
											"end": 11506,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 11487,
											"end": 11586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11526,
											"end": 11541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11526,
											"end": 11541,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11526,
											"end": 11541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11569,
											"end": 11571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11559,
											"end": 11571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11586,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 11487,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11612,
											"end": 11618,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 11603,
											"end": 11608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11603,
											"end": 11618,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 11599,
											"end": 11698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11653,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 11638,
											"end": 11653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11638,
											"end": 11653,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11638,
											"end": 11653,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11681,
											"end": 11683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11671,
											"end": 11683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11698,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 11599,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11724,
											"end": 11730,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 11715,
											"end": 11720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11715,
											"end": 11730,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 11750,
											"end": 11765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11750,
											"end": 11765,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11750,
											"end": 11765,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11793,
											"end": 11795,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11783,
											"end": 11795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11841,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 11827,
											"end": 11832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11841,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 11823,
											"end": 11919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11875,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 11861,
											"end": 11875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 11875,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 11875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11903,
											"end": 11904,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11893,
											"end": 11904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 11919,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 11823,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11945,
											"end": 11950,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 11936,
											"end": 11941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11936,
											"end": 11950,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11932,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 11932,
											"end": 12028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11979,
											"end": 11984,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 11970,
											"end": 11984,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 11984,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 11984,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12012,
											"end": 12013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12002,
											"end": 12013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11932,
											"end": 12028,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 11932,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12059,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12045,
											"end": 12050,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12045,
											"end": 12059,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 12041,
											"end": 12137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12088,
											"end": 12093,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12079,
											"end": 12093,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12093,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12093,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12121,
											"end": 12122,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12111,
											"end": 12122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12137,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 12041,
											"end": 12137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12168,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 12154,
											"end": 12159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12168,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12150,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12150,
											"end": 12214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12199,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12188,
											"end": 12199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12246,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11363,
											"end": 12253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11363,
											"end": 12253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 592,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 677,
											"end": 689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 705,
											"end": 708,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 698,
											"end": 717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 757,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 748,
											"end": 764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 741,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 732,
											"end": 746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 726,
											"end": 773,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 818,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 797,
											"end": 800,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 793,
											"end": 809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 789,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 820,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 881,
											"end": 885,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 849,
											"end": 878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 840,
											"end": 879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1066,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1243,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1263,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1284,
											"end": 1307,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1614,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1643,
											"end": 1674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1674,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1675,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1691,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1704,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1819,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1836,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1851,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 1891,
											"end": 1900,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1872,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1901,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2111,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2097,
											"end": 2106,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2095,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2107,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2112,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2115,
											"end": 2127,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 2077,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2148,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 2230,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2228,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2196,
											"end": 2234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 2196,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2279,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2285,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2243,
											"end": 2285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2482,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2296,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2379,
											"end": 2411,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2426,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2447,
											"end": 2476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2781,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2793,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2813,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2853,
											"end": 2862,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2834,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2917,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2960,
											"end": 2965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2967,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2968,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2926,
											"end": 2986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2986,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2926,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3148,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3021,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3077,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3073,
											"end": 3093,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3117,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3103,
											"end": 3118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3134,
											"end": 3135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3328,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3313,
											"end": 3322,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3323,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3329,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3344,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3384,
											"end": 3393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3365,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3394,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3413,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3496,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3502,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3555,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3557,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3617,
											"end": 3619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3620,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3637,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 3603,
											"end": 3637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3633,
											"end": 3634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3637,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 3603,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3669,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3723,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3713,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3705,
											"end": 3707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3724,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3687,
											"end": 3742,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3740,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3742,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3687,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3777,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3799,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3802,
											"end": 3820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3871,
											"end": 3880,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3847,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3931,
											"end": 3944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3927,
											"end": 3949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3949,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3953,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3923,
											"end": 3954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3993,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3993,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4017,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 4018,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3969,
											"end": 4041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4021,
											"end": 4039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4059,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4050,
											"end": 4072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4144,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4161,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4108,
											"end": 4161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4159,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4161,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4108,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4187,
											"end": 4193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4216,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4246,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4425,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4413,
											"end": 4422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4411,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4423,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4428,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4445,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4393,
											"end": 4445,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4441,
											"end": 4442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4445,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4393,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4464,
											"end": 4493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4493,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4464,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4535,
											"end": 4544,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4531,
											"end": 4549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4512,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4941,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4561,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4636,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4648,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4704,
											"end": 4765,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 4750,
											"end": 4756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4763,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 4763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 4763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4765,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4704,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4803,
											"end": 4809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4800,
											"end": 4814,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4780,
											"end": 4798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4815,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4774,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 4774,
											"end": 4935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4852,
											"end": 4855,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4892,
											"end": 4896,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4882,
											"end": 4897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4917,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4925,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4774,
											"end": 4935,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 4774,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4774,
											"end": 4935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 6187,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5778,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5980,
											"end": 5982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 1,
											"value": "2D"
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5992,
											"end": 6022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6092,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 6053,
											"end": 6055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6124,
											"end": 6126,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6177,
											"end": 6180,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6162,
											"end": 6181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 6187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 7167,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 6955,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7029,
											"end": 7041,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7072,
											"end": 7076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7070,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7061,
											"end": 7077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7086,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 7141,
											"end": 7142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7121,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7105,
											"end": 7121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 7167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6955,
											"end": 7167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7172,
											"end": 7439,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7172,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7351,
											"end": 7354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7376,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7402,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7428,
											"end": 7431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 7402,
											"end": 7432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7432,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7402,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7376,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 7376,
											"end": 7433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7845,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7444,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7628,
											"end": 7649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7628,
											"end": 7649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7628,
											"end": 7649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7685,
											"end": 7687,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7758,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 7719,
											"end": 7721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7704,
											"end": 7722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7790,
											"end": 7792,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7775,
											"end": 7793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 7793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7838,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7820,
											"end": 7839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7820,
											"end": 7839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8609,
											"end": 9023,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8609,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8811,
											"end": 8813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8793,
											"end": 8814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8793,
											"end": 8814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8793,
											"end": 8814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8852,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 8923,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 8884,
											"end": 8886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8869,
											"end": 8887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 8924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8955,
											"end": 8957,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8940,
											"end": 8958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8940,
											"end": 8958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8933,
											"end": 8981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9013,
											"end": 9016,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8998,
											"end": 9017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8998,
											"end": 9017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8609,
											"end": 9023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9160,
											"end": 9287,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 9160,
											"end": 9287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9231,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9216,
											"end": 9219,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9212,
											"end": 9232,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9209,
											"end": 9210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9202,
											"end": 9233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9252,
											"end": 9256,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9249,
											"end": 9250,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9242,
											"end": 9257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9276,
											"end": 9280,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9273,
											"end": 9274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9266,
											"end": 9281,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9292,
											"end": 9420,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 9292,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9359,
											"end": 9368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9359,
											"end": 9368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9359,
											"end": 9368,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9380,
											"end": 9391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9380,
											"end": 9391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9380,
											"end": 9391,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9377,
											"end": 9414,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9377,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 9377,
											"end": 9414,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9394,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 9394,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 9394,
											"end": 9412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9425,
											"end": 9550,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 9425,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9521,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9508,
											"end": 9544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9508,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 9508,
											"end": 9544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 9524,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 9524,
											"end": 9542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9555,
											"end": 10055,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9555,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9824,
											"end": 9839,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9891,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9891,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9871,
											"end": 9873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9874,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9849,
											"end": 9892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9923,
											"end": 9925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 9974,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9966,
											"end": 9968,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9951,
											"end": 9969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9951,
											"end": 9969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9992,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 9992,
											"end": 10049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10021,
											"end": 10027,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9992,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 9992,
											"end": 10049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9992,
											"end": 10049,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 9992,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9984,
											"end": 10049,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 9555,
											"end": 10055,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9555,
											"end": 10055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10060,
											"end": 10309,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 10060,
											"end": 10309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10129,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10182,
											"end": 10184,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10170,
											"end": 10179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10161,
											"end": 10168,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10185,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10150,
											"end": 10202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10198,
											"end": 10199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10195,
											"end": 10196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10188,
											"end": 10200,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10202,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10150,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10224,
											"end": 10240,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 10273,
											"end": 10278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 10249,
											"end": 10279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/shoToken/ShoToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1884,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1886,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1890,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1894,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1898,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1904,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be burned (destroyed).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"ERC721Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1884,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1886,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1890,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1894,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1898,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1904,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/shoToken/ShoToken_flattened.sol\":1676:13978  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":1676:13978  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cf799453c653e94ac78950ad863387a335df16678b8e8a4b1777f6dbbad323ed64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cf799453c653e94ac78950ad863387a335df16678b8e8a4b1777f6dbbad323ed64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF PUSH26 0x9453C653E94AC78950AD863387A335DF16678B8E8A4B1777F6DB 0xBA 0xD3 0x23 0xED PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1676:12302:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1676:12302:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cf799453c653e94ac78950ad863387a335df16678b8e8a4b1777f6dbbad323ed64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF PUSH26 0x9453C653E94AC78950AD863387A335DF16678B8E8A4B1777F6DB 0xBA 0xD3 0x23 0xED PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1676:12302:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1676,
									"end": 13978,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cf799453c653e94ac78950ad863387a335df16678b8e8a4b1777f6dbbad323ed64736f6c63430008190033",
									".code": [
										{
											"begin": 1676,
											"end": 13978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 13978,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 13978,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 13978,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1676,
											"end": 13978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 13978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 13978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 13978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 13978,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/shoToken/ShoToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1137,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1258,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ShoToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "WasBorn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "supportcs@ntiloyalty.com",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/shoToken/ShoToken_flattened.sol\":57721:60162  contract ShoToken is ERC721, Pausable, Ownable, ERC721Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":58619:58664  constructor() ERC721(\"ShoToken\", \"SHOTKN\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41267:41380  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc1, 0x29b437aa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd1, 0x29a427aa25a7)\n  dup2\n  mstore\n  pop\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41341:41346  name_ */\n  dup2\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41333:41338  _name */\n  0x00\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41333:41346  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41356:41363  _symbol */\n  0x01\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41356:41373  _symbol = symbol_ */\n  tag_9\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41366:41373  symbol_ */\n  dup3\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41356:41363  _symbol */\n  dup3\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":41356:41373  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":20701:20708  _paused */\n  0x06\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":20701:20716  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":18023:18055  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n  caller\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":18023:18041  _transferOwnership */\n  tag_15\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":18023:18055  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":57721:60162  contract ShoToken is ERC721, Pausable, Ownable, ERC721Burnable {... */\n  jump(tag_25)\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":19520:19707  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":19612:19618  _owner */\n  0x06\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":19628:19645  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":19612:19618  _owner */\n  0x0100\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":19628:19645  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":19660:19700  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":19612:19618  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":19660:19700  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":19593:19609  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":19660:19700  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":19583:19707  {... */\n  pop\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":19520:19707  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_20:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_21:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_28:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_29:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_23:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_33\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_33:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_34:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_32:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_8:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_40\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1555:1652   */\n  tag_41\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_42\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_21\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_23\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_45\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_45:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_43)\n    /* \"#utility.yul\":1776:2439   */\ntag_44:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_48:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_48)\ntag_50:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_51:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_43:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\ntag_25:\n    /* \"contracts/shoToken/ShoToken_flattened.sol\":57721:60162  contract ShoToken is ERC721, Pausable, Ownable, ERC721Burnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":57721:60162  contract ShoToken is ERC721, Pausable, Ownable, ERC721Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x18160ddd\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41447:41747  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41447:41747  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42348:42446  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43812:43979  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1464:1515   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1452:1454   */\n      0x20\n        /* \"#utility.yul\":1437:1455   */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43812:43979  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_33\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43345:43751  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59391:59636  function mint() external onlyOwner returns (uint256) {... */\n    tag_7:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2109:2134   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2097:2099   */\n      0x20\n        /* \"#utility.yul\":2082:2100   */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59391:59636  function mint() external onlyOwner returns (uint256) {... */\n      tag_33\n        /* \"#utility.yul\":1963:2140   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59719:59823  function totalSupply() external view returns (uint256) {... */\n    tag_8:\n      tag_49\n      tag_54\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44489:44815  function transferFrom(... */\n    tag_9:\n      tag_45\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59982:60160  function withdraw() external onlyOwner {... */\n    tag_10:\n      tag_45\n      tag_61\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58873:58936  function unpause() public onlyOwner {... */\n    tag_11:\n      tag_45\n      tag_63\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44881:45060  function safeTransferFrom(... */\n    tag_12:\n      tag_45\n      tag_65\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":57351:57589  function burn(uint256 tokenId) public virtual {... */\n    tag_13:\n      tag_45\n      tag_68\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21320:21404  function paused() public view virtual returns (bool) {... */\n    tag_14:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21390:21397  _paused */\n      and(0xff, sload(0x06))\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21320:21404  function paused() public view virtual returns (bool) {... */\n      jump(tag_29)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42067:42286  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_15:\n      tag_39\n      tag_74\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41806:42010  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_16:\n      tag_49\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18918:19019  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_45\n      tag_83\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58808:58867  function pause() public onlyOwner {... */\n    tag_18:\n      tag_45\n      tag_85\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18288:18373  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18360:18366  _owner */\n      sload(0x06)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18288:18373  function owner() public view virtual returns (address) {... */\n      jump(tag_39)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42510:42612  function symbol() public view virtual override returns (string memory) {... */\n    tag_20:\n      tag_35\n      tag_90\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44046:44199  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_21:\n      tag_45\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45126:45440  function safeTransferFrom(... */\n    tag_22:\n      tag_45\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42678:42954  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_23:\n      tag_35\n      tag_101\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44265:44427  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_24:\n      tag_29\n      tag_105\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19168:19366  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_45\n      tag_110\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41447:41747  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_32:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41549:41553  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41584:41624  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41584:41688  interfaceId == type(IERC721).interfaceId ||... */\n      tag_113\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41640:41688  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41584:41688  interfaceId == type(IERC721).interfaceId ||... */\n    tag_113:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41584:41740  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_115\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":34300:34340  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41704:41740  super.supportsInterface(interfaceId) */\n    tag_115:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41565:41740  return... */\n      swap3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41447:41747  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42348:42446  function name() public view virtual override returns (string memory) {... */\n    tag_36:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42402:42415  string memory */\n      0x60\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42434:42439  _name */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42427:42439  return _name */\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_119\n      jump\t// in\n    tag_120:\n      dup1\n      iszero\n      tag_121\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_122\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_121)\n    tag_122:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_123:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_123\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42348:42446  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43812:43979  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_42:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43888:43895  address */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43907:43930  _requireMinted(tokenId) */\n      tag_125\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43922:43929  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43907:43921  _requireMinted */\n      tag_126\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43907:43930  _requireMinted(tokenId) */\n      jump\t// in\n    tag_125:\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43948:43972  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43948:43963  _tokenApprovals */\n      0x04\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43948:43972  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43812:43979  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43345:43751  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_48:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43425:43438  address owner */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43441:43464  ERC721.ownerOf(tokenId) */\n      tag_128\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43456:43463  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43441:43455  ERC721.ownerOf */\n      tag_75\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43441:43464  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43425:43464  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43488:43493  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43482:43493  to != owner */\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43482:43484  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43482:43493  to != owner */\n      and\n      sub\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43474:43531  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43474:43531  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x21\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5301   */\n      mstore\n        /* \"#utility.yul\":5318:5337   */\n      0x84\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43474:43531  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43563:43584  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43563:43625  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_135\n      jumpi\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43588:43625  isApprovedForAll(owner, _msgSender()) */\n      tag_135\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43605:43610  owner */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44265:44427  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_107\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43588:43625  isApprovedForAll(owner, _msgSender()) */\n    tag_135:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43542:43712  require(... */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5550:5552   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43542:43712  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5532:5553   */\n      mstore\n        /* \"#utility.yul\":5589:5591   */\n      0x3d\n        /* \"#utility.yul\":5569:5587   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5562:5592   */\n      mstore\n        /* \"#utility.yul\":5628:5662   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":5608:5626   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5601:5663   */\n      mstore\n        /* \"#utility.yul\":5699:5730   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":5679:5697   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5672:5731   */\n      mstore\n        /* \"#utility.yul\":5748:5767   */\n      0x84\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43542:43712  require(... */\n      tag_130\n        /* \"#utility.yul\":5348:5773   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43542:43712  require(... */\n    tag_137:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43723:43744  _approve(to, tokenId) */\n      tag_140\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43732:43734  to */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43736:43743  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43723:43731  _approve */\n      tag_141\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43723:43744  _approve(to, tokenId) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43415:43751  {... */\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43345:43751  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59391:59636  function mint() external onlyOwner returns (uint256) {... */\n    tag_50:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59435:59442  uint256 */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18194  _checkOwner() */\n      tag_143\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18192  _checkOwner */\n      tag_144\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18194  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59454:59481  _tokenIdCounter.increment() */\n      tag_146\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59454:59469  _tokenIdCounter */\n      0x07\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":1086:1105  counter._value += 1 */\n      dup1\n      sload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":1104:1105  1 */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":1086:1105  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":999:1122  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59454:59481  _tokenIdCounter.increment() */\n    tag_146:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59491:59506  uint256 tokenId */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59509:59534  _tokenIdCounter.current() */\n      tag_148\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59509:59524  _tokenIdCounter */\n      0x07\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":972:986  counter._value */\n      sload\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":881:993  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59509:59534  _tokenIdCounter.current() */\n    tag_148:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59491:59534  uint256 tokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59545:59572  _safeMint(owner(), tokenId) */\n      tag_150\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59555:59562  owner() */\n      tag_151\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18360:18366  _owner */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18288:18373  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59555:59562  owner() */\n    tag_151:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59564:59571  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59545:59554  _safeMint */\n      tag_152\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59545:59572  _safeMint(owner(), tokenId) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59588:59604  WasBorn(tokenId) */\n      mload(0x40)\n        /* \"#utility.yul\":2109:2134   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59588:59604  WasBorn(tokenId) */\n      0xd762d6ab69e51adef66de5ac13b45b3345367b5f0056d1ce4a46b4e5d6ba00e7\n      swap1\n        /* \"#utility.yul\":2097:2099   */\n      0x20\n        /* \"#utility.yul\":2082:2100   */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59588:59604  WasBorn(tokenId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59622:59629  tokenId */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59391:59636  function mint() external onlyOwner returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59719:59823  function totalSupply() external view returns (uint256) {... */\n    tag_54:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59765:59772  uint256 */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59791:59816  _tokenIdCounter.current() */\n      tag_155\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59791:59806  _tokenIdCounter */\n      0x07\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":972:986  counter._value */\n      sload\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":881:993  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59791:59816  _tokenIdCounter.current() */\n    tag_155:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59784:59816  return _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59719:59823  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44489:44815  function transferFrom(... */\n    tag_59:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44678:44719  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_157\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44697:44709  _msgSender() */\n    tag_158:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44711:44718  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44678:44696  _isApprovedOrOwner */\n      tag_159\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44678:44719  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44670:44769  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_162\n      jump\t// in\n    tag_160:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44780:44808  _transfer(from, to, tokenId) */\n      tag_140\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44790:44794  from */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44796:44798  to */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44800:44807  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44780:44789  _transfer */\n      tag_164\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44780:44808  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59982:60160  function withdraw() external onlyOwner {... */\n    tag_61:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18194  _checkOwner() */\n      tag_166\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18192  _checkOwner */\n      tag_144\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18194  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18360:18366  _owner */\n      sload(0x06)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60050:60127  payable(owner()).call{value: address(this).balance}(... */\n      mload(0x40)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60032:60044  bool success */\n      0x00\n      swap2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18360:18366  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60079:60100  address(this).balance */\n      selfbalance\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60032:60044  bool success */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60050:60127  payable(owner()).call{value: address(this).balance}(... */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60032:60044  bool success */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60050:60127  payable(owner()).call{value: address(this).balance}(... */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60079:60100  address(this).balance */\n      dup6\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18360:18366  _owner */\n      dup8\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60050:60127  payable(owner()).call{value: address(this).balance}(... */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_173\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_172)\n    tag_173:\n      0x60\n      swap2\n      pop\n    tag_172:\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60031:60127  (bool success, ) = payable(owner()).call{value: address(this).balance}(... */\n      pop\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60145:60152  success */\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60137:60153  require(success) */\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":60021:60160  {... */\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59982:60160  function withdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58873:58936  function unpause() public onlyOwner {... */\n    tag_63:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18194  _checkOwner() */\n      tag_176\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18192  _checkOwner */\n      tag_144\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18194  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58919:58929  _unpause() */\n      tag_178\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58919:58927  _unpause */\n      tag_179\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58919:58929  _unpause() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58873:58936  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44881:45060  function safeTransferFrom(... */\n    tag_66:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45014:45053  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_140\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45031:45035  from */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45037:45039  to */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45041:45048  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45014:45053  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45014:45030  safeTransferFrom */\n      tag_99\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45014:45053  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":57351:57589  function burn(uint256 tokenId) public virtual {... */\n    tag_69:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":57467:57508  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_183\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":57486:57498  _msgSender() */\n      tag_158\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16891:16987  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":57467:57508  _isApprovedOrOwner(_msgSender(), tokenId) */\n    tag_183:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":57459:57558  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_162\n      jump\t// in\n    tag_185:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":57568:57582  _burn(tokenId) */\n      tag_174\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":57574:57581  tokenId */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":57568:57573  _burn */\n      tag_188\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":57568:57582  _burn(tokenId) */\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42067:42286  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_75:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42139:42146  address */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46823  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46814  _owners */\n      0x02\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46823  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42201:42257  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6604:6606   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42201:42257  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6586:6607   */\n      mstore\n        /* \"#utility.yul\":6643:6645   */\n      0x18\n        /* \"#utility.yul\":6623:6641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6616:6646   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6662:6680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6655:6709   */\n      mstore\n        /* \"#utility.yul\":6726:6744   */\n      0x64\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42201:42257  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_130\n        /* \"#utility.yul\":6402:6750   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41806:42010  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_80:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41878:41885  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41905:41924  owner != address(0) */\n      dup3\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41897:41970  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6957:6959   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41897:41970  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6939:6960   */\n      mstore\n        /* \"#utility.yul\":6996:6998   */\n      0x29\n        /* \"#utility.yul\":6976:6994   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6969:6999   */\n      mstore\n        /* \"#utility.yul\":7035:7069   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7015:7033   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7008:7070   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":7086:7104   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7079:7118   */\n      mstore\n        /* \"#utility.yul\":7135:7154   */\n      0x84\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41897:41970  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_130\n        /* \"#utility.yul\":6755:7160   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41897:41970  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_197:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41987:42003  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41987:41996  _balances */\n      0x03\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41987:42003  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":41806:42010  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18918:19019  function renounceOwnership() public virtual onlyOwner {... */\n    tag_83:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18194  _checkOwner() */\n      tag_201\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18192  _checkOwner */\n      tag_144\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18194  _checkOwner() */\n      jump\t// in\n    tag_201:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18982:19012  _transferOwnership(address(0)) */\n      tag_178\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19009:19010  0 */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18982:19000  _transferOwnership */\n      tag_204\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18982:19012  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58808:58867  function pause() public onlyOwner {... */\n    tag_85:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18194  _checkOwner() */\n      tag_206\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18192  _checkOwner */\n      tag_144\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18194  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58852:58860  _pause() */\n      tag_178\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58852:58858  _pause */\n      tag_209\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58852:58860  _pause() */\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42510:42612  function symbol() public view virtual override returns (string memory) {... */\n    tag_90:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42566:42579  string memory */\n      0x60\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42598:42605  _symbol */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42591:42605  return _symbol */\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44046:44199  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_95:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44140:44192  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_218\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44173:44181  operator */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44183:44191  approved */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44140:44158  _setApprovalForAll */\n      tag_220\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44140:44192  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44046:44199  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45126:45440  function safeTransferFrom(... */\n    tag_99:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45294:45335  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_222\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45327:45334  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45294:45312  _isApprovedOrOwner */\n      tag_159\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45294:45335  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_222:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45286:45385  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_162\n      jump\t// in\n    tag_224:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45395:45433  _safeTransfer(from, to, tokenId, data) */\n      tag_226\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45409:45413  from */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45415:45417  to */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45419:45426  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45428:45432  data */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45395:45408  _safeTransfer */\n      tag_227\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45395:45433  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":45126:45440  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42678:42954  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_102:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42751:42764  string memory */\n      0x60\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42776:42799  _requireMinted(tokenId) */\n      tag_229\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42791:42798  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42776:42790  _requireMinted */\n      tag_126\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42776:42799  _requireMinted(tokenId) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42810:42831  string memory baseURI */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42834:42844  _baseURI() */\n      tag_230\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42834:42842  _baseURI */\n      tag_231\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42834:42844  _baseURI() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42810:42844  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42885:42886  0 */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42867:42874  baseURI */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42861:42882  bytes(baseURI).length */\n      mload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42861:42886  bytes(baseURI).length > 0 */\n      gt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42861:42947  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_232\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_233)\n    tag_232:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42913:42920  baseURI */\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42922:42940  tokenId.toString() */\n      tag_234\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42922:42929  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42922:42938  tokenId.toString */\n      tag_235\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42922:42940  tokenId.toString() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42896:42941  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_236\n      swap3\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42861:42947  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_233:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42854:42947  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":42678:42954  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44265:44427  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44385:44410  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44362:44366  bool */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44385:44410  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44385:44403  _operatorApprovals */\n      0x05\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44385:44410  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44385:44420  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44265:44427  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19168:19366  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_111:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18194  _checkOwner() */\n      tag_240\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18192  _checkOwner */\n      tag_144\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18181:18194  _checkOwner() */\n      jump\t// in\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19256:19278  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19248:19321  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7856:7858   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19248:19321  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7838:7859   */\n      mstore\n        /* \"#utility.yul\":7895:7897   */\n      0x26\n        /* \"#utility.yul\":7875:7893   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7868:7898   */\n      mstore\n        /* \"#utility.yul\":7934:7968   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7914:7932   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7907:7969   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7985:8003   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7978:8014   */\n      mstore\n        /* \"#utility.yul\":8031:8050   */\n      0x84\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19248:19321  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_130\n        /* \"#utility.yul\":7654:8056   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19248:19321  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_242:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19331:19359  _transferOwnership(newOwner) */\n      tag_174\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19350:19358  newOwner */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19331:19349  _transferOwnership */\n      tag_204\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19331:19359  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53343:53476  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_126:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47198:47202  bool */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46823  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46814  _owners */\n      0x02\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46823  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53416:53469  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6604:6606   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53416:53469  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6586:6607   */\n      mstore\n        /* \"#utility.yul\":6643:6645   */\n      0x18\n        /* \"#utility.yul\":6623:6641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6616:6646   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6662:6680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6655:6709   */\n      mstore\n        /* \"#utility.yul\":6726:6744   */\n      0x64\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53416:53469  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_130\n        /* \"#utility.yul\":6402:6750   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52645:52816  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_141:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52719:52743  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52719:52734  _tokenApprovals */\n      0x04\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52719:52743  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52719:52748  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52719:52743  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52772:52795  ERC721.ownerOf(tokenId) */\n      tag_254\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52719:52743  _tokenApprovals[tokenId] */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52772:52786  ERC721.ownerOf */\n      tag_75\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52772:52795  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52763:52809  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52645:52816  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18446:18576  function _checkOwner() internal view virtual {... */\n    tag_144:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18360:18366  _owner */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18509:18532  owner() == _msgSender() */\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18501:18569  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8263:8265   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18501:18569  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8245:8266   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8282:8300   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8275:8305   */\n      mstore\n        /* \"#utility.yul\":8341:8375   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8321:8339   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8314:8376   */\n      mstore\n        /* \"#utility.yul\":8393:8411   */\n      0x64\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":18501:18569  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n        /* \"#utility.yul\":8061:8417   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48008:48116  function _safeMint(address to, uint256 tokenId) internal virtual {... */\n    tag_152:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48083:48109  _safeMint(to, tokenId, \"\") */\n      tag_218\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48093:48095  to */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48097:48104  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48083:48109  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48083:48092  _safeMint */\n      tag_265\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48083:48109  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47417:47678  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_159:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47510:47514  bool */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47526:47539  address owner */\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47542:47565  ERC721.ownerOf(tokenId) */\n      tag_267\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47557:47564  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47542:47556  ERC721.ownerOf */\n      tag_75\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47542:47565  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47526:47565  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47594:47599  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47583:47599  spender == owner */\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47583:47590  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47583:47599  spender == owner */\n      and\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47583:47635  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_269\n      jumpi\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47603:47635  isApprovedForAll(owner, spender) */\n      tag_269\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47620:47625  owner */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47627:47634  spender */\n      dup6\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47603:47619  isApprovedForAll */\n      tag_107\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47603:47635  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47583:47670  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_270\n      jumpi\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47663:47670  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47639:47670  getApproved(tokenId) == spender */\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47639:47659  getApproved(tokenId) */\n      tag_271\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47651:47658  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47639:47650  getApproved */\n      tag_42\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47639:47659  getApproved(tokenId) */\n      jump\t// in\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47639:47670  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47583:47670  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_270:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47575:47671  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47417:47678  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51300:52533  function _transfer(... */\n    tag_164:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51454:51458  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51427:51458  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51427:51450  ERC721.ownerOf(tokenId) */\n      tag_273\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51442:51449  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51427:51441  ERC721.ownerOf */\n      tag_75\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51427:51450  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51427:51458  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51419:51500  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_276\n      jump\t// in\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51518:51534  to != address(0) */\n      dup3\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51510:51575  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9030:9032   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51510:51575  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9012:9033   */\n      mstore\n        /* \"#utility.yul\":9069:9071   */\n      0x24\n        /* \"#utility.yul\":9049:9067   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9042:9072   */\n      mstore\n        /* \"#utility.yul\":9108:9142   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":9088:9106   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9081:9143   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":9159:9177   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9152:9186   */\n      mstore\n        /* \"#utility.yul\":9203:9222   */\n      0x84\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51510:51575  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_130\n        /* \"#utility.yul\":8828:9228   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51510:51575  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_277:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51586:51628  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_280\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51607:51611  from */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51613:51615  to */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51617:51624  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51626:51627  1 */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51586:51606  _beforeTokenTransfer */\n      tag_281\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51586:51628  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51755:51759  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51728:51759  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51728:51751  ERC721.ownerOf(tokenId) */\n      tag_282\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51743:51750  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51728:51742  ERC721.ownerOf */\n      tag_75\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51728:51751  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51728:51759  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51720:51801  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_276\n      jump\t// in\n    tag_283:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51870:51894  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51870:51885  _tokenApprovals */\n      0x04\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51870:51894  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51863:51894  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52338:52353  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52338:52347  _balances */\n      0x03\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52338:52353  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52338:52358  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52372:52385  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52372:52390  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51863:51894  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52372:52390  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52410:52426  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52410:52417  _owners */\n      0x02\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52410:52426  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52410:52431  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52447:52474  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":51886:51893  tokenId */\n      dup5\n      swap4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52447:52474  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43415:43751  {... */\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":43345:43751  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":22138:22255  function _unpause() internal virtual whenPaused {... */\n    tag_179:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21191:21207  _requirePaused() */\n      tag_288\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21191:21205  _requirePaused */\n      tag_289\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21191:21207  _requirePaused() */\n      jump\t// in\n    tag_288:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":22196:22203  _paused */\n      0x06\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":22196:22211  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":22226:22248  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":22235:22247  _msgSender() */\n    tag_291:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":22226:22248  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1464:1515   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1452:1454   */\n      0x20\n        /* \"#utility.yul\":1437:1455   */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":22226:22248  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":22138:22255  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50214:50976  function _burn(uint256 tokenId) internal virtual {... */\n    tag_188:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50273:50286  address owner */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50289:50312  ERC721.ownerOf(tokenId) */\n      tag_294\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50304:50311  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50289:50303  ERC721.ownerOf */\n      tag_75\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50289:50312  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50273:50312  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50323:50374  _beforeTokenTransfer(owner, address(0), tokenId, 1) */\n      tag_295\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50344:50349  owner */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50359:50360  0 */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50363:50370  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50372:50373  1 */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50323:50343  _beforeTokenTransfer */\n      tag_281\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50323:50374  _beforeTokenTransfer(owner, address(0), tokenId, 1) */\n      jump\t// in\n    tag_295:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50484:50507  ERC721.ownerOf(tokenId) */\n      tag_296\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50499:50506  tokenId */\n      dup3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50484:50498  ERC721.ownerOf */\n      tag_75\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50484:50507  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_296:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50552:50576  _tokenApprovals[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50552:50567  _tokenApprovals */\n      0x04\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50552:50576  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50545:50576  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50792:50808  _balances[owner] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50792:50801  _balances */\n      0x03\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50792:50808  _balances[owner] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50792:50813  _balances[owner] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50840:50856  _owners[tokenId] */\n      dup8\n      dup6\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50840:50847  _owners */\n      0x02\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50840:50856  _owners[tokenId] */\n      swap1\n      swap4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50833:50856  delete _owners[tokenId] */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50872:50908  Transfer(owner, address(0), tokenId) */\n      mload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50476:50507  owner = ERC721.ownerOf(tokenId) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50568:50575  tokenId */\n      dup5\n      swap3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50872:50908  Transfer(owner, address(0), tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50552:50576  _tokenApprovals[tokenId] */\n      dup4\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":50872:50908  Transfer(owner, address(0), tokenId) */\n      log4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44046:44199  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19520:19707  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_204:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19612:19618  _owner */\n      0x06\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19628:19645  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19612:19618  _owner */\n      0x0100\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19628:19645  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19660:19700  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19612:19618  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19660:19700  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19593:19609  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19660:19700  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19583:19707  {... */\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":19520:19707  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21891:22006  function _pause() internal virtual whenNotPaused {... */\n    tag_209:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":20944:20963  _requireNotPaused() */\n      tag_301\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":20944:20961  _requireNotPaused */\n      tag_302\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":20944:20963  _requireNotPaused() */\n      jump\t// in\n    tag_301:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21950:21957  _paused */\n      0x06\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21950:21964  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21960:21964  true */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21950:21964  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21979:21999  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21986:21998  _msgSender() */\n      tag_291\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16891:16987  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52952:53259  function _setApprovalForAll(... */\n    tag_220:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53102:53110  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53093:53110  owner != operator */\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53093:53098  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53093:53110  owner != operator */\n      and\n      sub\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53085:53140  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9435:9437   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53085:53140  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9417:9438   */\n      mstore\n        /* \"#utility.yul\":9474:9476   */\n      0x19\n        /* \"#utility.yul\":9454:9472   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9447:9477   */\n      mstore\n        /* \"#utility.yul\":9513:9540   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":9493:9511   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9486:9541   */\n      mstore\n        /* \"#utility.yul\":9558:9576   */\n      0x64\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53085:53140  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_130\n        /* \"#utility.yul\":9233:9582   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53085:53140  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_307:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53150:53175  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53150:53168  _operatorApprovals */\n      0x05\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53150:53175  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53150:53185  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53150:53196  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53211:53252  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53211:53252  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":53211:53252  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":52952:53259  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46301:46606  function _safeTransfer(... */\n    tag_227:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46451:46479  _transfer(from, to, tokenId) */\n      tag_312\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46461:46465  from */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46467:46469  to */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46471:46478  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46451:46460  _transfer */\n      tag_164\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46451:46479  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_312:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46497:46544  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_313\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46520:46524  from */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46526:46528  to */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46530:46537  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46539:46543  data */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46497:46519  _checkOnERC721Received */\n      tag_314\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46497:46544  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_313:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46489:46599  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_317\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58670:58802  function _baseURI() internal pure override returns (string memory) {... */\n    tag_231:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58722:58735  string memory */\n      0x60\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58747:58795  return \"https://nft.cryptoshopee.ntiloyalty.com\" */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_603ff1b036ccea40d792a56f2419e3771ff45fc7074f6ef4e17b4481431d5dd2\n      0x27\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58670:58802  function _baseURI() internal pure override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14390:15086  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_235:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14446:14459  string memory */\n      0x60\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14495:14509  uint256 length */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14512:14529  Math.log10(value) */\n      tag_320\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14523:14528  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14512:14522  Math.log10 */\n      tag_321\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14512:14529  Math.log10(value) */\n      jump\t// in\n    tag_320:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14532:14533  1 */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14512:14533  Math.log10(value) + 1 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14495:14533  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14547:14567  string memory buffer */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14581:14587  length */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14570:14588  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_323\n      jumpi\n      tag_323\n      tag_324\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_325\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_325:\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14547:14588  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14708:14736  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14724:14726  32 */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14708:14736  add(buffer, add(32, length)) */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14763:15043  while (true) {... */\n    tag_326:\n      not(0x00)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14794:14799  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14928:14930  10 */\n      0x0a\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14917:14931  mod(value, 10) */\n      dup7\n      mod\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14912:14942  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14794:14799  ptr-- */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14899:14943  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14987:14989  10 */\n      0x0a\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14978:14989  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":15007:15028  if (value == 0) break */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14763:15043  while (true) {... */\n      tag_326\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":15007:15028  if (value == 0) break */\n      jumpi\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":15063:15069  buffer */\n      swap4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14390:15086  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48337:48646  function _safeMint(... */\n    tag_265:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48461:48479  _mint(to, tokenId) */\n      tag_335\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48467:48469  to */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48471:48478  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48461:48466  _mint */\n      tag_336\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48461:48479  _mint(to, tokenId) */\n      jump\t// in\n    tag_335:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48510:48563  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_337\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48541:48542  0 */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48545:48547  to */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48549:48556  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48558:48562  data */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48510:48532  _checkOnERC721Received */\n      tag_314\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48510:48563  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_337:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48489:48639  require(... */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_317\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":58942:59177  function _beforeTokenTransfer(... */\n    tag_281:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":20944:20963  _requireNotPaused() */\n      tag_341\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":20944:20961  _requireNotPaused */\n      tag_302\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":20944:20963  _requireNotPaused() */\n      jump\t// in\n    tag_341:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59114:59170  super._beforeTokenTransfer(from, to, tokenId, batchSize) */\n      tag_226\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59141:59145  from */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59147:59149  to */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59151:59158  tokenId */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59160:59169  batchSize */\n      dup5\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59114:59140  super._beforeTokenTransfer */\n      tag_344\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":59114:59170  super._beforeTokenTransfer(from, to, tokenId, batchSize) */\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21650:21756  function _requirePaused() internal view virtual {... */\n    tag_289:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21390:21397  _paused */\n      and(0xff, sload(0x06))\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21708:21749  require(paused(), \"Pausable: not paused\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10340:10342   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21708:21749  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10322:10343   */\n      mstore\n        /* \"#utility.yul\":10379:10381   */\n      0x14\n        /* \"#utility.yul\":10359:10377   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10352:10382   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":10398:10416   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10391:10441   */\n      mstore\n        /* \"#utility.yul\":10458:10476   */\n      0x64\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21708:21749  require(paused(), \"Pausable: not paused\") */\n      tag_130\n        /* \"#utility.yul\":10138:10482   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21472:21578  function _requireNotPaused() internal view virtual {... */\n    tag_302:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21390:21397  _paused */\n      and(0xff, sload(0x06))\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21541:21550  !paused() */\n      iszero\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21533:21571  require(!paused(), \"Pausable: paused\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10689:10691   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21533:21571  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10671:10692   */\n      mstore\n        /* \"#utility.yul\":10728:10730   */\n      0x10\n        /* \"#utility.yul\":10708:10726   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10701:10731   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":10747:10765   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10740:10786   */\n      mstore\n        /* \"#utility.yul\":10803:10821   */\n      0x64\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":21533:21571  require(!paused(), \"Pausable: paused\") */\n      tag_130\n        /* \"#utility.yul\":10487:10827   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54028:54859  function _checkOnERC721Received(... */\n    tag_314:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54177:54181  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54197:54210  to.isContract */\n      dup5\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":23745:23764  account.code.length */\n      extcodesize\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":23745:23768  account.code.length > 0 */\n      iszero\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54193:54853  if (to.isContract()) {... */\n      tag_359\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54232:54303  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54232:54268  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54232:54303  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_361\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":16970:16980  msg.sender */\n      caller\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54283:54287  from */\n      dup10\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54289:54296  tokenId */\n      dup9\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54298:54302  data */\n      dup9\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54232:54303  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_362\n      jump\t// in\n    tag_361:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_363\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_364\n      swap2\n      dup2\n      add\n      swap1\n      tag_365\n      jump\t// in\n    tag_364:\n      0x01\n    tag_363:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54228:54801  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_366\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_371\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_370)\n    tag_371:\n      0x60\n      swap2\n      pop\n    tag_370:\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54470:54476  reason */\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54470:54483  reason.length */\n      mload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54487:54488  0 */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54470:54488  reason.length == 0 */\n      sub\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54466:54787  if (reason.length == 0) {... */\n      tag_372\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54512:54572  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_317\n      jump\t// in\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54466:54787  if (reason.length == 0) {... */\n    tag_372:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54739:54745  reason */\n      dup1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54733:54746  mload(reason) */\n      mload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54724:54730  reason */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54720:54722  32 */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54716:54731  add(32, reason) */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54709:54747  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54228:54801  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_366:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54353:54404  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54346:54404  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_270)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54193:54853  if (to.isContract()) {... */\n    tag_359:\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54838:54842  true */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":54028:54859  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11363:12253  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_321:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11416:11423  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11491:11506  value >= 10**64 */\n      dup4\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11487:11586  if (value >= 10**64) {... */\n      tag_378\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11526:11541  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11569:11571  64 */\n      0x40\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11559:11571  result += 64 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11487:11586  if (value >= 10**64) {... */\n    tag_378:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11612:11618  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11603:11608  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11603:11618  value >= 10**32 */\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11599:11698  if (value >= 10**32) {... */\n      tag_381\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11647:11653  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11638:11653  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11681:11683  32 */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11671:11683  result += 32 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11599:11698  if (value >= 10**32) {... */\n    tag_381:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11724:11730  10**16 */\n      0x2386f26fc10000\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11715:11720  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11715:11730  value >= 10**16 */\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11711:11810  if (value >= 10**16) {... */\n      tag_384\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11759:11765  10**16 */\n      0x2386f26fc10000\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11750:11765  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11793:11795  16 */\n      0x10\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11783:11795  result += 16 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11711:11810  if (value >= 10**16) {... */\n    tag_384:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11836:11841  10**8 */\n      0x05f5e100\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11827:11832  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11827:11841  value >= 10**8 */\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11823:11919  if (value >= 10**8) {... */\n      tag_387\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11870:11875  10**8 */\n      0x05f5e100\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11861:11875  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11903:11904  8 */\n      0x08\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11893:11904  result += 8 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11823:11919  if (value >= 10**8) {... */\n    tag_387:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11945:11950  10**4 */\n      0x2710\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11936:11941  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11936:11950  value >= 10**4 */\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11932:12028  if (value >= 10**4) {... */\n      tag_390\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11979:11984  10**4 */\n      0x2710\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11970:11984  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12012:12013  4 */\n      0x04\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12002:12013  result += 4 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11932:12028  if (value >= 10**4) {... */\n    tag_390:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12054:12059  10**2 */\n      0x64\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12045:12050  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12045:12059  value >= 10**2 */\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12041:12137  if (value >= 10**2) {... */\n      tag_393\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12088:12093  10**2 */\n      0x64\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12079:12093  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12121:12122  2 */\n      0x02\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12111:12122  result += 2 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12041:12137  if (value >= 10**2) {... */\n    tag_393:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12163:12168  10**1 */\n      0x0a\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12154:12159  value */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12154:12168  value >= 10**1 */\n      lt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12150:12214  if (value >= 10**1) {... */\n      tag_115\n      jumpi\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12198:12199  1 */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12188:12199  result += 1 */\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":12240:12246  result */\n      swap3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":11363:12253  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":48968:49888  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_336:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49047:49063  to != address(0) */\n      dup3\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49039:49100  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_398\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11793:11795   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49039:49100  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11775:11796   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11812:11830   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11805:11835   */\n      mstore\n        /* \"#utility.yul\":11871:11905   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":11851:11869   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11844:11906   */\n      mstore\n        /* \"#utility.yul\":11923:11941   */\n      0x64\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49039:49100  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_130\n        /* \"#utility.yul\":11591:11947   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49039:49100  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_398:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47198:47202  bool */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46823  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46814  _owners */\n      0x02\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46823  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47221:47252  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49110:49168  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_402\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12154:12156   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49110:49168  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12136:12157   */\n      mstore\n        /* \"#utility.yul\":12193:12195   */\n      0x1c\n        /* \"#utility.yul\":12173:12191   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12166:12196   */\n      mstore\n        /* \"#utility.yul\":12232:12262   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":12212:12230   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12205:12263   */\n      mstore\n        /* \"#utility.yul\":12280:12298   */\n      0x64\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49110:49168  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_130\n        /* \"#utility.yul\":11952:12304   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49110:49168  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_402:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49179:49227  _beforeTokenTransfer(address(0), to, tokenId, 1) */\n      tag_405\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49208:49209  0 */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49212:49214  to */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49216:49223  tokenId */\n      dup4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49225:49226  1 */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49179:49199  _beforeTokenTransfer */\n      tag_281\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49179:49227  _beforeTokenTransfer(address(0), to, tokenId, 1) */\n      jump\t// in\n    tag_405:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47198:47202  bool */\n      0x00\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46823  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46814  _owners */\n      0x02\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":46807:46823  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":47221:47252  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49314:49372  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_407\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12154:12156   */\n      0x20\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49314:49372  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12136:12157   */\n      mstore\n        /* \"#utility.yul\":12193:12195   */\n      0x1c\n        /* \"#utility.yul\":12173:12191   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12166:12196   */\n      mstore\n        /* \"#utility.yul\":12232:12262   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":12212:12230   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12205:12263   */\n      mstore\n        /* \"#utility.yul\":12280:12298   */\n      0x64\n      add\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49314:49372  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_130\n        /* \"#utility.yul\":11952:12304   */\n      jump\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49314:49372  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_407:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49714:49727  _balances[to] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49714:49723  _balances */\n      0x03\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49714:49727  _balances[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49714:49732  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49731:49732  1 */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49714:49732  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49753:49769  _owners[tokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49753:49760  _owners */\n      0x02\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49753:49769  _owners[tokenId] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49753:49774  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup5\n      or\n      swap1\n      sstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49790:49823  Transfer(address(0), to, tokenId) */\n      mload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49761:49768  tokenId */\n      dup4\n      swap3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49714:49727  _balances[to] */\n      swap2\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49790:49823  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49714:49727  _balances[to] */\n      dup3\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":49790:49823  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":44046:44199  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55575:55971  function _beforeTokenTransfer(... */\n    tag_344:\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55759:55760  1 */\n      0x01\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55747:55756  batchSize */\n      dup2\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55747:55760  batchSize > 1 */\n      gt\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55743:55965  if (batchSize > 1) {... */\n      iszero\n      tag_226\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55780:55798  from != address(0) */\n      dup5\n      and\n      iszero\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55776:55861  if (from != address(0)) {... */\n      tag_412\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55833  _balances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55827  _balances */\n      0x03\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55833  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55846  _balances[from] -= batchSize */\n      dup1\n      sload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55837:55846  batchSize */\n      dup4\n      swap3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55833  _balances[from] */\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55846  _balances[from] -= batchSize */\n      tag_413\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55837:55846  batchSize */\n      dup5\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55818:55846  _balances[from] -= batchSize */\n      tag_414\n      jump\t// in\n    tag_413:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55776:55861  if (from != address(0)) {... */\n    tag_412:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55878:55894  to != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55874:55955  if (to != address(0)) {... */\n      tag_226\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55927  _balances[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55923  _balances */\n      0x03\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55927  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55940  _balances[to] += batchSize */\n      dup1\n      sload\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55931:55940  batchSize */\n      dup4\n      swap3\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55927  _balances[to] */\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55940  _balances[to] += batchSize */\n      tag_416\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55931:55940  batchSize */\n      dup5\n      swap1\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55914:55940  _balances[to] += batchSize */\n      tag_417\n      jump\t// in\n    tag_416:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":55575:55971  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_419:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_31:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_428:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_233\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_419\n      jump\t// in\n        /* \"#utility.yul\":592:892   */\n    tag_420:\n        /* \"#utility.yul\":645:648   */\n      0x00\n        /* \"#utility.yul\":683:688   */\n      dup2\n        /* \"#utility.yul\":677:689   */\n      mload\n        /* \"#utility.yul\":710:716   */\n      dup1\n        /* \"#utility.yul\":705:708   */\n      dup5\n        /* \"#utility.yul\":698:717   */\n      mstore\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":759:763   */\n      0x20\n        /* \"#utility.yul\":752:757   */\n      dup5\n        /* \"#utility.yul\":748:764   */\n      add\n        /* \"#utility.yul\":741:745   */\n      0x20\n        /* \"#utility.yul\":736:739   */\n      dup7\n        /* \"#utility.yul\":732:746   */\n      add\n        /* \"#utility.yul\":726:773   */\n      mcopy\n        /* \"#utility.yul\":818:819   */\n      0x00\n        /* \"#utility.yul\":811:815   */\n      0x20\n        /* \"#utility.yul\":802:808   */\n      dup3\n        /* \"#utility.yul\":797:800   */\n      dup7\n        /* \"#utility.yul\":793:809   */\n      add\n        /* \"#utility.yul\":789:816   */\n      add\n        /* \"#utility.yul\":782:820   */\n      mstore\n        /* \"#utility.yul\":881:885   */\n      0x20\n        /* \"#utility.yul\":874:876   */\n      0x1f\n        /* \"#utility.yul\":870:877   */\n      not\n        /* \"#utility.yul\":865:867   */\n      0x1f\n        /* \"#utility.yul\":857:863   */\n      dup4\n        /* \"#utility.yul\":853:868   */\n      add\n        /* \"#utility.yul\":849:878   */\n      and\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":840:879   */\n      add\n        /* \"#utility.yul\":836:886   */\n      add\n        /* \"#utility.yul\":829:886   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":592:892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1128   */\n    tag_38:\n        /* \"#utility.yul\":1046:1048   */\n      0x20\n        /* \"#utility.yul\":1035:1044   */\n      dup2\n        /* \"#utility.yul\":1028:1049   */\n      mstore\n        /* \"#utility.yul\":1009:1013   */\n      0x00\n        /* \"#utility.yul\":1066:1122   */\n      tag_233\n        /* \"#utility.yul\":1118:1120   */\n      0x20\n        /* \"#utility.yul\":1107:1116   */\n      dup4\n        /* \"#utility.yul\":1103:1121   */\n      add\n        /* \"#utility.yul\":1095:1101   */\n      dup5\n        /* \"#utility.yul\":1066:1122   */\n      tag_420\n      jump\t// in\n        /* \"#utility.yul\":1133:1313   */\n    tag_41:\n        /* \"#utility.yul\":1192:1198   */\n      0x00\n        /* \"#utility.yul\":1245:1247   */\n      0x20\n        /* \"#utility.yul\":1233:1242   */\n      dup3\n        /* \"#utility.yul\":1224:1231   */\n      dup5\n        /* \"#utility.yul\":1220:1243   */\n      sub\n        /* \"#utility.yul\":1216:1248   */\n      slt\n        /* \"#utility.yul\":1213:1265   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":1261:1262   */\n      0x00\n        /* \"#utility.yul\":1258:1259   */\n      dup1\n        /* \"#utility.yul\":1251:1263   */\n      revert\n        /* \"#utility.yul\":1213:1265   */\n    tag_435:\n      pop\n        /* \"#utility.yul\":1284:1307   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1133:1313   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1526:1699   */\n    tag_421:\n        /* \"#utility.yul\":1594:1614   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1643:1674   */\n      dup2\n      and\n        /* \"#utility.yul\":1633:1675   */\n      dup2\n      eq\n        /* \"#utility.yul\":1623:1693   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":1689:1690   */\n      0x00\n        /* \"#utility.yul\":1686:1687   */\n      dup1\n        /* \"#utility.yul\":1679:1691   */\n      revert\n        /* \"#utility.yul\":1623:1693   */\n    tag_438:\n        /* \"#utility.yul\":1526:1699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1704:1958   */\n    tag_47:\n        /* \"#utility.yul\":1772:1778   */\n      0x00\n        /* \"#utility.yul\":1780:1786   */\n      dup1\n        /* \"#utility.yul\":1833:1835   */\n      0x40\n        /* \"#utility.yul\":1821:1830   */\n      dup4\n        /* \"#utility.yul\":1812:1819   */\n      dup6\n        /* \"#utility.yul\":1808:1831   */\n      sub\n        /* \"#utility.yul\":1804:1836   */\n      slt\n        /* \"#utility.yul\":1801:1853   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":1849:1850   */\n      0x00\n        /* \"#utility.yul\":1846:1847   */\n      dup1\n        /* \"#utility.yul\":1839:1851   */\n      revert\n        /* \"#utility.yul\":1801:1853   */\n    tag_440:\n        /* \"#utility.yul\":1872:1901   */\n      tag_441\n        /* \"#utility.yul\":1891:1900   */\n      dup4\n        /* \"#utility.yul\":1872:1901   */\n      tag_421\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":1862:1901   */\n      swap5\n        /* \"#utility.yul\":1948:1950   */\n      0x20\n        /* \"#utility.yul\":1933:1951   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1920:1952   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1704:1958   */\n      jump\t// out\n        /* \"#utility.yul\":2145:2473   */\n    tag_58:\n        /* \"#utility.yul\":2222:2228   */\n      0x00\n        /* \"#utility.yul\":2230:2236   */\n      dup1\n        /* \"#utility.yul\":2238:2244   */\n      0x00\n        /* \"#utility.yul\":2291:2293   */\n      0x60\n        /* \"#utility.yul\":2279:2288   */\n      dup5\n        /* \"#utility.yul\":2270:2277   */\n      dup7\n        /* \"#utility.yul\":2266:2289   */\n      sub\n        /* \"#utility.yul\":2262:2294   */\n      slt\n        /* \"#utility.yul\":2259:2311   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":2307:2308   */\n      0x00\n        /* \"#utility.yul\":2304:2305   */\n      dup1\n        /* \"#utility.yul\":2297:2309   */\n      revert\n        /* \"#utility.yul\":2259:2311   */\n    tag_444:\n        /* \"#utility.yul\":2330:2359   */\n      tag_445\n        /* \"#utility.yul\":2349:2358   */\n      dup5\n        /* \"#utility.yul\":2330:2359   */\n      tag_421\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":2320:2359   */\n      swap3\n      pop\n        /* \"#utility.yul\":2378:2416   */\n      tag_446\n        /* \"#utility.yul\":2412:2414   */\n      0x20\n        /* \"#utility.yul\":2401:2410   */\n      dup6\n        /* \"#utility.yul\":2397:2415   */\n      add\n        /* \"#utility.yul\":2378:2416   */\n      tag_421\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":2368:2416   */\n      swap2\n      pop\n        /* \"#utility.yul\":2463:2465   */\n      0x40\n        /* \"#utility.yul\":2452:2461   */\n      dup5\n        /* \"#utility.yul\":2448:2466   */\n      add\n        /* \"#utility.yul\":2435:2467   */\n      calldataload\n        /* \"#utility.yul\":2425:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2145:2473   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2478:2664   */\n    tag_79:\n        /* \"#utility.yul\":2537:2543   */\n      0x00\n        /* \"#utility.yul\":2590:2592   */\n      0x20\n        /* \"#utility.yul\":2578:2587   */\n      dup3\n        /* \"#utility.yul\":2569:2576   */\n      dup5\n        /* \"#utility.yul\":2565:2588   */\n      sub\n        /* \"#utility.yul\":2561:2593   */\n      slt\n        /* \"#utility.yul\":2558:2610   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":2606:2607   */\n      0x00\n        /* \"#utility.yul\":2603:2604   */\n      dup1\n        /* \"#utility.yul\":2596:2608   */\n      revert\n        /* \"#utility.yul\":2558:2610   */\n    tag_448:\n        /* \"#utility.yul\":2629:2658   */\n      tag_233\n        /* \"#utility.yul\":2648:2657   */\n      dup3\n        /* \"#utility.yul\":2629:2658   */\n      tag_421\n      jump\t// in\n        /* \"#utility.yul\":2669:3016   */\n    tag_94:\n        /* \"#utility.yul\":2734:2740   */\n      0x00\n        /* \"#utility.yul\":2742:2748   */\n      dup1\n        /* \"#utility.yul\":2795:2797   */\n      0x40\n        /* \"#utility.yul\":2783:2792   */\n      dup4\n        /* \"#utility.yul\":2774:2781   */\n      dup6\n        /* \"#utility.yul\":2770:2793   */\n      sub\n        /* \"#utility.yul\":2766:2798   */\n      slt\n        /* \"#utility.yul\":2763:2815   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":2811:2812   */\n      0x00\n        /* \"#utility.yul\":2808:2809   */\n      dup1\n        /* \"#utility.yul\":2801:2813   */\n      revert\n        /* \"#utility.yul\":2763:2815   */\n    tag_451:\n        /* \"#utility.yul\":2834:2863   */\n      tag_452\n        /* \"#utility.yul\":2853:2862   */\n      dup4\n        /* \"#utility.yul\":2834:2863   */\n      tag_421\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2824:2863   */\n      swap2\n      pop\n        /* \"#utility.yul\":2913:2915   */\n      0x20\n        /* \"#utility.yul\":2902:2911   */\n      dup4\n        /* \"#utility.yul\":2898:2916   */\n      add\n        /* \"#utility.yul\":2885:2917   */\n      calldataload\n        /* \"#utility.yul\":2960:2965   */\n      dup1\n        /* \"#utility.yul\":2953:2966   */\n      iszero\n        /* \"#utility.yul\":2946:2967   */\n      iszero\n        /* \"#utility.yul\":2939:2944   */\n      dup2\n        /* \"#utility.yul\":2936:2968   */\n      eq\n        /* \"#utility.yul\":2926:2986   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":2982:2983   */\n      0x00\n        /* \"#utility.yul\":2979:2980   */\n      dup1\n        /* \"#utility.yul\":2972:2984   */\n      revert\n        /* \"#utility.yul\":2926:2986   */\n    tag_453:\n        /* \"#utility.yul\":3005:3010   */\n      dup1\n        /* \"#utility.yul\":2995:3010   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2669:3016   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3148   */\n    tag_324:\n        /* \"#utility.yul\":3082:3092   */\n      0x4e487b71\n        /* \"#utility.yul\":3077:3080   */\n      0xe0\n        /* \"#utility.yul\":3073:3093   */\n      shl\n        /* \"#utility.yul\":3070:3071   */\n      0x00\n        /* \"#utility.yul\":3063:3094   */\n      mstore\n        /* \"#utility.yul\":3113:3117   */\n      0x41\n        /* \"#utility.yul\":3110:3111   */\n      0x04\n        /* \"#utility.yul\":3103:3118   */\n      mstore\n        /* \"#utility.yul\":3137:3141   */\n      0x24\n        /* \"#utility.yul\":3134:3135   */\n      0x00\n        /* \"#utility.yul\":3127:3142   */\n      revert\n        /* \"#utility.yul\":3153:4291   */\n    tag_98:\n        /* \"#utility.yul\":3248:3254   */\n      0x00\n        /* \"#utility.yul\":3256:3262   */\n      dup1\n        /* \"#utility.yul\":3264:3270   */\n      0x00\n        /* \"#utility.yul\":3272:3278   */\n      dup1\n        /* \"#utility.yul\":3325:3328   */\n      0x80\n        /* \"#utility.yul\":3313:3322   */\n      dup6\n        /* \"#utility.yul\":3304:3311   */\n      dup8\n        /* \"#utility.yul\":3300:3323   */\n      sub\n        /* \"#utility.yul\":3296:3329   */\n      slt\n        /* \"#utility.yul\":3293:3346   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3339:3340   */\n      dup1\n        /* \"#utility.yul\":3332:3344   */\n      revert\n        /* \"#utility.yul\":3293:3346   */\n    tag_456:\n        /* \"#utility.yul\":3365:3394   */\n      tag_457\n        /* \"#utility.yul\":3384:3393   */\n      dup6\n        /* \"#utility.yul\":3365:3394   */\n      tag_421\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":3355:3394   */\n      swap4\n      pop\n        /* \"#utility.yul\":3413:3451   */\n      tag_458\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3436:3445   */\n      dup7\n        /* \"#utility.yul\":3432:3450   */\n      add\n        /* \"#utility.yul\":3413:3451   */\n      tag_421\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3403:3451   */\n      swap3\n      pop\n        /* \"#utility.yul\":3498:3500   */\n      0x40\n        /* \"#utility.yul\":3487:3496   */\n      dup6\n        /* \"#utility.yul\":3483:3501   */\n      add\n        /* \"#utility.yul\":3470:3502   */\n      calldataload\n        /* \"#utility.yul\":3460:3502   */\n      swap2\n      pop\n        /* \"#utility.yul\":3553:3555   */\n      0x60\n        /* \"#utility.yul\":3542:3551   */\n      dup6\n        /* \"#utility.yul\":3538:3556   */\n      add\n        /* \"#utility.yul\":3525:3557   */\n      calldataload\n        /* \"#utility.yul\":3576:3594   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3617:3619   */\n      dup1\n        /* \"#utility.yul\":3609:3615   */\n      dup3\n        /* \"#utility.yul\":3606:3620   */\n      gt\n        /* \"#utility.yul\":3603:3637   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":3633:3634   */\n      0x00\n        /* \"#utility.yul\":3630:3631   */\n      dup1\n        /* \"#utility.yul\":3623:3635   */\n      revert\n        /* \"#utility.yul\":3603:3637   */\n    tag_459:\n        /* \"#utility.yul\":3671:3677   */\n      dup2\n        /* \"#utility.yul\":3660:3669   */\n      dup8\n        /* \"#utility.yul\":3656:3678   */\n      add\n        /* \"#utility.yul\":3646:3678   */\n      swap2\n      pop\n        /* \"#utility.yul\":3716:3723   */\n      dup8\n        /* \"#utility.yul\":3709:3713   */\n      0x1f\n        /* \"#utility.yul\":3705:3707   */\n      dup4\n        /* \"#utility.yul\":3701:3714   */\n      add\n        /* \"#utility.yul\":3697:3724   */\n      slt\n        /* \"#utility.yul\":3687:3742   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":3738:3739   */\n      0x00\n        /* \"#utility.yul\":3735:3736   */\n      dup1\n        /* \"#utility.yul\":3728:3740   */\n      revert\n        /* \"#utility.yul\":3687:3742   */\n    tag_460:\n        /* \"#utility.yul\":3774:3776   */\n      dup2\n        /* \"#utility.yul\":3761:3777   */\n      calldataload\n        /* \"#utility.yul\":3796:3798   */\n      dup2\n        /* \"#utility.yul\":3792:3794   */\n      dup2\n        /* \"#utility.yul\":3789:3799   */\n      gt\n        /* \"#utility.yul\":3786:3822   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":3802:3820   */\n      tag_462\n      tag_324\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3877:3879   */\n      0x40\n        /* \"#utility.yul\":3871:3880   */\n      mload\n        /* \"#utility.yul\":3845:3847   */\n      0x1f\n        /* \"#utility.yul\":3931:3944   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3927:3949   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3951:3953   */\n      0x3f\n        /* \"#utility.yul\":3923:3954   */\n      add\n        /* \"#utility.yul\":3919:3959   */\n      and\n        /* \"#utility.yul\":3907:3960   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3975:3993   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":3995:4017   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3972:4018   */\n      or\n        /* \"#utility.yul\":3969:4041   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":4021:4039   */\n      tag_464\n      tag_324\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":4061:4071   */\n      dup2\n        /* \"#utility.yul\":4057:4059   */\n      0x40\n        /* \"#utility.yul\":4050:4072   */\n      mstore\n        /* \"#utility.yul\":4096:4098   */\n      dup3\n        /* \"#utility.yul\":4088:4094   */\n      dup2\n        /* \"#utility.yul\":4081:4099   */\n      mstore\n        /* \"#utility.yul\":4136:4143   */\n      dup11\n        /* \"#utility.yul\":4131:4133   */\n      0x20\n        /* \"#utility.yul\":4126:4128   */\n      dup5\n        /* \"#utility.yul\":4122:4124   */\n      dup8\n        /* \"#utility.yul\":4118:4129   */\n      add\n        /* \"#utility.yul\":4114:4134   */\n      add\n        /* \"#utility.yul\":4111:4144   */\n      gt\n        /* \"#utility.yul\":4108:4161   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":4157:4158   */\n      0x00\n        /* \"#utility.yul\":4154:4155   */\n      dup1\n        /* \"#utility.yul\":4147:4159   */\n      revert\n        /* \"#utility.yul\":4108:4161   */\n    tag_465:\n        /* \"#utility.yul\":4213:4215   */\n      dup3\n        /* \"#utility.yul\":4208:4210   */\n      0x20\n        /* \"#utility.yul\":4204:4206   */\n      dup7\n        /* \"#utility.yul\":4200:4211   */\n      add\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"#utility.yul\":4187:4193   */\n      dup4\n        /* \"#utility.yul\":4183:4198   */\n      add\n        /* \"#utility.yul\":4170:4216   */\n      calldatacopy\n        /* \"#utility.yul\":4258:4259   */\n      0x00\n        /* \"#utility.yul\":4253:4255   */\n      0x20\n        /* \"#utility.yul\":4248:4250   */\n      dup5\n        /* \"#utility.yul\":4240:4246   */\n      dup4\n        /* \"#utility.yul\":4236:4251   */\n      add\n        /* \"#utility.yul\":4232:4256   */\n      add\n        /* \"#utility.yul\":4225:4260   */\n      mstore\n        /* \"#utility.yul\":4279:4285   */\n      dup1\n        /* \"#utility.yul\":4269:4285   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3153:4291   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4296:4556   */\n    tag_106:\n        /* \"#utility.yul\":4364:4370   */\n      0x00\n        /* \"#utility.yul\":4372:4378   */\n      dup1\n        /* \"#utility.yul\":4425:4427   */\n      0x40\n        /* \"#utility.yul\":4413:4422   */\n      dup4\n        /* \"#utility.yul\":4404:4411   */\n      dup6\n        /* \"#utility.yul\":4400:4423   */\n      sub\n        /* \"#utility.yul\":4396:4428   */\n      slt\n        /* \"#utility.yul\":4393:4445   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":4441:4442   */\n      0x00\n        /* \"#utility.yul\":4438:4439   */\n      dup1\n        /* \"#utility.yul\":4431:4443   */\n      revert\n        /* \"#utility.yul\":4393:4445   */\n    tag_467:\n        /* \"#utility.yul\":4464:4493   */\n      tag_468\n        /* \"#utility.yul\":4483:4492   */\n      dup4\n        /* \"#utility.yul\":4464:4493   */\n      tag_421\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":4454:4493   */\n      swap2\n      pop\n        /* \"#utility.yul\":4512:4550   */\n      tag_469\n        /* \"#utility.yul\":4546:4548   */\n      0x20\n        /* \"#utility.yul\":4535:4544   */\n      dup5\n        /* \"#utility.yul\":4531:4549   */\n      add\n        /* \"#utility.yul\":4512:4550   */\n      tag_421\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4502:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4296:4556   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4561:4941   */\n    tag_119:\n        /* \"#utility.yul\":4640:4641   */\n      0x01\n        /* \"#utility.yul\":4636:4648   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4683:4695   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4704:4765   */\n      tag_471\n      jumpi\n        /* \"#utility.yul\":4758:4762   */\n      0x7f\n        /* \"#utility.yul\":4750:4756   */\n      dup3\n        /* \"#utility.yul\":4746:4763   */\n      and\n        /* \"#utility.yul\":4736:4763   */\n      swap2\n      pop\n        /* \"#utility.yul\":4704:4765   */\n    tag_471:\n        /* \"#utility.yul\":4811:4813   */\n      0x20\n        /* \"#utility.yul\":4803:4809   */\n      dup3\n        /* \"#utility.yul\":4800:4814   */\n      lt\n        /* \"#utility.yul\":4780:4798   */\n      dup2\n        /* \"#utility.yul\":4777:4815   */\n      sub\n        /* \"#utility.yul\":4774:4935   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":4857:4867   */\n      0x4e487b71\n        /* \"#utility.yul\":4852:4855   */\n      0xe0\n        /* \"#utility.yul\":4848:4868   */\n      shl\n        /* \"#utility.yul\":4845:4846   */\n      0x00\n        /* \"#utility.yul\":4838:4869   */\n      mstore\n        /* \"#utility.yul\":4892:4896   */\n      0x22\n        /* \"#utility.yul\":4889:4890   */\n      0x04\n        /* \"#utility.yul\":4882:4897   */\n      mstore\n        /* \"#utility.yul\":4920:4924   */\n      0x24\n        /* \"#utility.yul\":4917:4918   */\n      0x00\n        /* \"#utility.yul\":4910:4925   */\n      revert\n        /* \"#utility.yul\":4774:4935   */\n    tag_472:\n      pop\n        /* \"#utility.yul\":4561:4941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5778:6187   */\n    tag_162:\n        /* \"#utility.yul\":5980:5982   */\n      0x20\n        /* \"#utility.yul\":5962:5983   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6019:6021   */\n      0x2d\n        /* \"#utility.yul\":5999:6017   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5992:6022   */\n      mstore\n        /* \"#utility.yul\":6058:6092   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":6053:6055   */\n      0x40\n        /* \"#utility.yul\":6038:6056   */\n      dup3\n      add\n        /* \"#utility.yul\":6031:6093   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6124:6126   */\n      0x60\n        /* \"#utility.yul\":6109:6127   */\n      dup3\n      add\n        /* \"#utility.yul\":6102:6145   */\n      mstore\n        /* \"#utility.yul\":6177:6180   */\n      0x80\n        /* \"#utility.yul\":6162:6181   */\n      add\n      swap1\n        /* \"#utility.yul\":5778:6187   */\n      jump\t// out\n        /* \"#utility.yul\":7165:7377   */\n    tag_422:\n        /* \"#utility.yul\":7207:7210   */\n      0x00\n        /* \"#utility.yul\":7245:7250   */\n      dup2\n        /* \"#utility.yul\":7239:7251   */\n      mload\n        /* \"#utility.yul\":7289:7295   */\n      dup1\n        /* \"#utility.yul\":7282:7286   */\n      0x20\n        /* \"#utility.yul\":7275:7280   */\n      dup5\n        /* \"#utility.yul\":7271:7287   */\n      add\n        /* \"#utility.yul\":7266:7269   */\n      dup6\n        /* \"#utility.yul\":7260:7296   */\n      mcopy\n        /* \"#utility.yul\":7351:7352   */\n      0x00\n        /* \"#utility.yul\":7315:7331   */\n      swap4\n      add\n        /* \"#utility.yul\":7340:7353   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":7315:7331   */\n      swap1\n      swap2\n        /* \"#utility.yul\":7165:7377   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7382:7649   */\n    tag_237:\n        /* \"#utility.yul\":7561:7564   */\n      0x00\n        /* \"#utility.yul\":7586:7643   */\n      tag_270\n        /* \"#utility.yul\":7612:7642   */\n      tag_482\n        /* \"#utility.yul\":7638:7641   */\n      dup4\n        /* \"#utility.yul\":7630:7636   */\n      dup7\n        /* \"#utility.yul\":7612:7642   */\n      tag_422\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":7604:7610   */\n      dup5\n        /* \"#utility.yul\":7586:7643   */\n      tag_422\n      jump\t// in\n        /* \"#utility.yul\":8422:8823   */\n    tag_276:\n        /* \"#utility.yul\":8624:8626   */\n      0x20\n        /* \"#utility.yul\":8606:8627   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8663:8665   */\n      0x25\n        /* \"#utility.yul\":8643:8661   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8636:8666   */\n      mstore\n        /* \"#utility.yul\":8702:8736   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":8697:8699   */\n      0x40\n        /* \"#utility.yul\":8682:8700   */\n      dup3\n      add\n        /* \"#utility.yul\":8675:8737   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":8768:8770   */\n      0x60\n        /* \"#utility.yul\":8753:8771   */\n      dup3\n      add\n        /* \"#utility.yul\":8746:8781   */\n      mstore\n        /* \"#utility.yul\":8813:8816   */\n      0x80\n        /* \"#utility.yul\":8798:8817   */\n      add\n      swap1\n        /* \"#utility.yul\":8422:8823   */\n      jump\t// out\n        /* \"#utility.yul\":9587:10001   */\n    tag_317:\n        /* \"#utility.yul\":9789:9791   */\n      0x20\n        /* \"#utility.yul\":9771:9792   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9828:9830   */\n      0x32\n        /* \"#utility.yul\":9808:9826   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9801:9831   */\n      mstore\n        /* \"#utility.yul\":9867:9901   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":9862:9864   */\n      0x40\n        /* \"#utility.yul\":9847:9865   */\n      dup3\n      add\n        /* \"#utility.yul\":9840:9902   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9933:9935   */\n      0x60\n        /* \"#utility.yul\":9918:9936   */\n      dup3\n      add\n        /* \"#utility.yul\":9911:9959   */\n      mstore\n        /* \"#utility.yul\":9991:9994   */\n      0x80\n        /* \"#utility.yul\":9976:9995   */\n      add\n      swap1\n        /* \"#utility.yul\":9587:10001   */\n      jump\t// out\n        /* \"#utility.yul\":10832:11332   */\n    tag_362:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11101:11116   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11083:11117   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11153:11168   */\n      dup5\n      and\n        /* \"#utility.yul\":11148:11150   */\n      0x20\n        /* \"#utility.yul\":11133:11151   */\n      dup3\n      add\n        /* \"#utility.yul\":11126:11169   */\n      mstore\n        /* \"#utility.yul\":11200:11202   */\n      0x40\n        /* \"#utility.yul\":11185:11203   */\n      dup2\n      add\n        /* \"#utility.yul\":11178:11212   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11248:11251   */\n      0x80\n        /* \"#utility.yul\":11243:11245   */\n      0x60\n        /* \"#utility.yul\":11228:11246   */\n      dup3\n      add\n        /* \"#utility.yul\":11221:11252   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11026:11030   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11269:11326   */\n      tag_493\n      swap1\n        /* \"#utility.yul\":11306:11325   */\n      dup4\n      add\n        /* \"#utility.yul\":11298:11304   */\n      dup5\n        /* \"#utility.yul\":11269:11326   */\n      tag_420\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":11261:11326   */\n      swap7\n        /* \"#utility.yul\":10832:11332   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11337:11586   */\n    tag_365:\n        /* \"#utility.yul\":11406:11412   */\n      0x00\n        /* \"#utility.yul\":11459:11461   */\n      0x20\n        /* \"#utility.yul\":11447:11456   */\n      dup3\n        /* \"#utility.yul\":11438:11445   */\n      dup5\n        /* \"#utility.yul\":11434:11457   */\n      sub\n        /* \"#utility.yul\":11430:11462   */\n      slt\n        /* \"#utility.yul\":11427:11479   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":11475:11476   */\n      0x00\n        /* \"#utility.yul\":11472:11473   */\n      dup1\n        /* \"#utility.yul\":11465:11477   */\n      revert\n        /* \"#utility.yul\":11427:11479   */\n    tag_495:\n        /* \"#utility.yul\":11507:11516   */\n      dup2\n        /* \"#utility.yul\":11501:11517   */\n      mload\n        /* \"#utility.yul\":11526:11556   */\n      tag_233\n        /* \"#utility.yul\":11550:11555   */\n      dup2\n        /* \"#utility.yul\":11526:11556   */\n      tag_419\n      jump\t// in\n        /* \"#utility.yul\":12309:12436   */\n    tag_423:\n        /* \"#utility.yul\":12370:12380   */\n      0x4e487b71\n        /* \"#utility.yul\":12365:12368   */\n      0xe0\n        /* \"#utility.yul\":12361:12381   */\n      shl\n        /* \"#utility.yul\":12358:12359   */\n      0x00\n        /* \"#utility.yul\":12351:12382   */\n      mstore\n        /* \"#utility.yul\":12401:12405   */\n      0x11\n        /* \"#utility.yul\":12398:12399   */\n      0x04\n        /* \"#utility.yul\":12391:12406   */\n      mstore\n        /* \"#utility.yul\":12425:12429   */\n      0x24\n        /* \"#utility.yul\":12422:12423   */\n      0x00\n        /* \"#utility.yul\":12415:12430   */\n      revert\n        /* \"#utility.yul\":12441:12569   */\n    tag_414:\n        /* \"#utility.yul\":12508:12517   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":12529:12540   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":12526:12563   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":12543:12561   */\n      tag_115\n      tag_423\n      jump\t// in\n        /* \"#utility.yul\":12574:12699   */\n    tag_417:\n        /* \"#utility.yul\":12639:12648   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12660:12670   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12657:12693   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":12673:12691   */\n      tag_115\n      tag_423\n      jump\t// in\n    stop\n    data_603ff1b036ccea40d792a56f2419e3771ff45fc7074f6ef4e17b4481431d5dd2 68747470733a2f2f6e66742e63727970746f73686f7065652e6e74696c6f79616c74792e636f6d\n\n    auxdata: 0xa264697066735822122055b7c88e3b91a44024b1bbda43267bee10ed6ea7a94e982849628063a4daa0b564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1153": {
									"entryPoint": null,
									"id": 1153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1267": {
									"entryPoint": null,
									"id": 1267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1921": {
									"entryPoint": null,
									"id": 1921,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2862": {
									"entryPoint": null,
									"id": 2862,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1121": {
									"entryPoint": null,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1241": {
									"entryPoint": 134,
									"id": 1241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2698:1",
										"nodeType": "YulBlock",
										"src": "0:2698:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "201:325:1",
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nativeSrc": "211:22:1",
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:1",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nativeSrc": "221:12:1",
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nativeSrc": "242:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nativeSrc": "268:12:1",
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:1",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:1",
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nativeSrc": "321:27:1",
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:1",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nativeSrc": "331:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nativeSrc": "292:26:1",
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nativeSrc": "289:61:1",
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nativeSrc": "409:111:1",
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:1",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:1",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:1",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nativeSrc": "433:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nativeSrc": "423:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nativeSrc": "423:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:1",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:1",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nativeSrc": "467:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nativeSrc": "467:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:1",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:1",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nativeSrc": "495:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nativeSrc": "495:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:1",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nativeSrc": "385:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nativeSrc": "362:38:1",
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nativeSrc": "359:161:1",
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:1",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:1",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nativeSrc": "587:65:1",
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:1",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nativeSrc": "597:14:1",
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nativeSrc": "597:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nativeSrc": "620:26:1",
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:1",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:1",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nativeSrc": "628:18:1",
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:1",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:1",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nativeSrc": "738:437:1",
													"nodeType": "YulBlock",
													"src": "738:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:1",
																"nodeType": "YulBlock",
																"src": "771:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:1",
																					"nodeType": "YulLiteral",
																					"src": "792:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:1"
																			},
																			"nativeSrc": "785:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:1"
																		},
																		"nativeSrc": "785:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:1"
																	},
																	{
																		"nativeSrc": "814:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:1",
																					"nodeType": "YulLiteral",
																					"src": "836:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:1",
																					"nodeType": "YulLiteral",
																					"src": "839:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:1"
																			},
																			"nativeSrc": "826:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:1",
																				"nodeType": "YulTypedName",
																				"src": "818:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:1",
																							"nodeType": "YulLiteral",
																							"src": "890:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:1",
																									"nodeType": "YulLiteral",
																									"src": "909:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:1"
																							},
																							"nativeSrc": "893:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:1"
																					},
																					"nativeSrc": "886:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:1"
																			},
																			"nativeSrc": "876:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:1",
																				"nodeType": "YulTypedName",
																				"src": "861:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:1",
																			"nodeType": "YulBlock",
																			"src": "951:23:1",
																			"statements": [
																				{
																					"nativeSrc": "953:19:1",
																					"nodeType": "YulAssignment",
																					"src": "953:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:1",
																					"nodeType": "YulLiteral",
																					"src": "945:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:1"
																			},
																			"nativeSrc": "930:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:1"
																		},
																		"nativeSrc": "927:47:1",
																		"nodeType": "YulIf",
																		"src": "927:47:1"
																	},
																	{
																		"nativeSrc": "987:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:1"
																							},
																							"nativeSrc": "1014:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:1"
																					},
																					"nativeSrc": "1007:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:1"
																			},
																			"nativeSrc": "997:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:1",
																				"nodeType": "YulTypedName",
																				"src": "991:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:1",
																			"nodeType": "YulBlock",
																			"src": "1139:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:1"
																						},
																						"nativeSrc": "1141:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:1"
																					},
																					"nativeSrc": "1141:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:1"
																			},
																			"nativeSrc": "1086:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:1"
																		},
																		"nativeSrc": "1078:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:1",
																			"nodeType": "YulBlock",
																			"src": "1100:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:1"
																						},
																						"nativeSrc": "1111:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:1",
																			"nodeType": "YulBlock",
																			"src": "1082:3:1",
																			"statements": []
																		},
																		"src": "1078:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:1",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nativeSrc": "751:11:1",
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nativeSrc": "748:421:1",
															"nodeType": "YulIf",
															"src": "748:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:1",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:1",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:1",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:518:1"
											},
											{
												"body": {
													"nativeSrc": "1265:81:1",
													"nodeType": "YulBlock",
													"src": "1265:81:1",
													"statements": [
														{
															"nativeSrc": "1275:65:1",
															"nodeType": "YulAssignment",
															"src": "1275:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:1"
																								},
																								"nativeSrc": "1304:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:1"
																								},
																								"nativeSrc": "1317:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:1"
																						},
																						"nativeSrc": "1300:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:1"
																				},
																				"nativeSrc": "1296:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:1"
																		},
																		"nativeSrc": "1286:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:1"
																		},
																		"nativeSrc": "1328:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:1"
																},
																"nativeSrc": "1283:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:1",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:1",
														"nodeType": "YulTypedName",
														"src": "1248:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:1",
														"nodeType": "YulTypedName",
														"src": "1256:4:1",
														"type": ""
													}
												],
												"src": "1180:166:1"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:1",
													"nodeType": "YulBlock",
													"src": "1447:1249:1",
													"statements": [
														{
															"nativeSrc": "1457:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:1"
																},
																"nativeSrc": "1471:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:1",
																"nodeType": "YulBlock",
																"src": "1524:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:1"
																			},
																			"nativeSrc": "1526:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:1"
																		},
																		"nativeSrc": "1526:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:1"
																				},
																				"nativeSrc": "1508:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:1"
																		},
																		"nativeSrc": "1504:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:1"
																},
																"nativeSrc": "1493:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:1"
															},
															"nativeSrc": "1490:56:1",
															"nodeType": "YulIf",
															"src": "1490:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:1"
																				},
																				"nativeSrc": "1631:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:1"
																		},
																		"nativeSrc": "1605:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:1"
																},
																"nativeSrc": "1555:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:1"
															},
															"nativeSrc": "1555:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:1"
														},
														{
															"nativeSrc": "1661:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:1",
																"nodeType": "YulLiteral",
																"src": "1678:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:1",
																"nodeType": "YulLiteral",
																"src": "1707:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:1",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:1",
															"nodeType": "YulAssignment",
															"src": "1720:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:1",
																"nodeType": "YulLiteral",
																"src": "1733:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:1",
																		"nodeType": "YulBlock",
																		"src": "1783:656:1",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:1"
																							},
																							"nativeSrc": "1824:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:1"
																					},
																					"nativeSrc": "1812:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:1",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:1"
																					},
																					"nativeSrc": "1859:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:1",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:1",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:1",
																					"nodeType": "YulBlock",
																					"src": "1994:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:1"
																												},
																												"nativeSrc": "2033:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:1"
																										},
																										"nativeSrc": "2027:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:1"
																								},
																								"nativeSrc": "2012:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:1"
																							},
																							"nativeSrc": "2012:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:1"
																						},
																						{
																							"nativeSrc": "2071:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:1"
																								},
																								"nativeSrc": "2081:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:1",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:1"
																								},
																								"nativeSrc": "2125:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:1"
																					},
																					"nativeSrc": "1938:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:1"
																				},
																				"nativeSrc": "1930:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:1",
																					"nodeType": "YulBlock",
																					"src": "1953:28:1",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:1",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:1"
																								},
																								"nativeSrc": "1960:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:1",
																					"nodeType": "YulBlock",
																					"src": "1934:3:1",
																					"statements": []
																				},
																				"src": "1930:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:1",
																					"nodeType": "YulBlock",
																					"src": "2214:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:1"
																										},
																										"nativeSrc": "2255:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:1"
																								},
																								"nativeSrc": "2249:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:1"
																																		},
																																		"nativeSrc": "2334:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:1"
																																},
																																"nativeSrc": "2330:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:1"
																																},
																																"nativeSrc": "2356:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:1"
																														},
																														"nativeSrc": "2326:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:1"
																												},
																												"nativeSrc": "2322:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:1"
																										},
																										"nativeSrc": "2307:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:1"
																								},
																								"nativeSrc": "2292:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:1"
																							},
																							"nativeSrc": "2292:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:1"
																					},
																					"nativeSrc": "2182:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:1"
																				},
																				"nativeSrc": "2179:201:1",
																				"nodeType": "YulIf",
																				"src": "2179:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:1"
																									},
																									"nativeSrc": "2410:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:1"
																							},
																							"nativeSrc": "2406:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:1"
																					},
																					"nativeSrc": "2393:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:1"
																				},
																				"nativeSrc": "2393:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:1"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:1",
																	"nodeType": "YulCase",
																	"src": "1776:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:1",
																		"nodeType": "YulBlock",
																		"src": "2456:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:1",
																					"nodeType": "YulBlock",
																					"src": "2519:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:1"
																										},
																										"nativeSrc": "2552:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:1"
																								},
																								"nativeSrc": "2546:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:1"
																				},
																				"nativeSrc": "2497:89:1",
																				"nodeType": "YulIf",
																				"src": "2497:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:1"
																							},
																							"nativeSrc": "2612:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:1"
																					},
																					"nativeSrc": "2599:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:1"
																				},
																				"nativeSrc": "2599:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:1",
																	"nodeType": "YulCase",
																	"src": "2448:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:1"
																},
																"nativeSrc": "1753:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:1"
															},
															"nativeSrc": "1746:944:1",
															"nodeType": "YulSwitch",
															"src": "1746:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:1",
														"nodeType": "YulTypedName",
														"src": "1432:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:1",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1351:1345:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280600881526020016729b437aa37b5b2b760c11b8152506040518060400160405280600681526020016529a427aa25a760d11b815250815f908161005e9190610177565b50600161006b8282610177565b50506006805460ff191690555061008133610086565b610236565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061010757607f821691505b60208210810361012557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561017257805f5260205f20601f840160051c810160208510156101505750805b601f840160051c820191505b8181101561016f575f815560010161015c565b50505b505050565b81516001600160401b03811115610190576101906100df565b6101a48161019e84546100f3565b8461012b565b602080601f8311600181146101d7575f84156101c05750858301515b5f19600386901b1c1916600185901b17855561022e565b5f85815260208120601f198616915b82811015610205578886015182559484019460019091019084016101e6565b508582101561022257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6118a0806102435f395ff3fe608060405234801561000f575f80fd5b5060043610610148575f3560e01c80635c975abb116100bf57806395d89b411161007957806395d89b4114610287578063a22cb4651461028f578063b88d4fde146102a2578063c87b56dd146102b5578063e985e9c5146102c8578063f2fde38b146102db575f80fd5b80635c975abb146102305780636352211e1461023b57806370a082311461024e578063715018a6146102615780638456cb59146102695780638da5cb5b14610271575f80fd5b806318160ddd1161011057806318160ddd146101df57806323b872dd146101e75780633ccfd60b146101fa5780633f4ba83a1461020257806342842e0e1461020a57806342966c681461021d575f80fd5b806301ffc9a71461014c57806306fdde0314610174578063081812fc14610189578063095ea7b3146101b45780631249c58b146101c9575b5f80fd5b61015f61015a366004611411565b6102ee565b60405190151581526020015b60405180910390f35b61017c61033f565b60405161016b919061145a565b61019c61019736600461146c565b6103ce565b6040516001600160a01b03909116815260200161016b565b6101c76101c236600461149e565b6103f3565b005b6101d161050c565b60405190815260200161016b565b6101d1610588565b6101c76101f53660046114c6565b610597565b6101c76105c9565b6101c7610635565b6101c76102183660046114c6565b610647565b6101c761022b36600461146c565b610661565b60065460ff1661015f565b61019c61024936600461146c565b61068f565b6101d161025c3660046114ff565b6106ee565b6101c7610772565b6101c7610783565b60065461010090046001600160a01b031661019c565b61017c610793565b6101c761029d366004611518565b6107a2565b6101c76102b0366004611565565b6107b1565b61017c6102c336600461146c565b6107e9565b61015f6102d636600461163a565b61084d565b6101c76102e93660046114ff565b61087a565b5f6001600160e01b031982166380ac58cd60e01b148061031e57506001600160e01b03198216635b5e139f60e01b145b8061033957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f805461034d9061166b565b80601f01602080910402602001604051908101604052809291908181526020018280546103799061166b565b80156103c45780601f1061039b576101008083540402835291602001916103c4565b820191905f5260205f20905b8154815290600101906020018083116103a757829003601f168201915b5050505050905090565b5f6103d8826108f0565b505f908152600460205260409020546001600160a01b031690565b5f6103fd8261068f565b9050806001600160a01b0316836001600160a01b03160361046f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061048b575061048b813361084d565b6104fd5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610466565b610507838361094e565b505050565b5f6105156109bb565b610523600780546001019055565b5f61052d60075490565b905061055061054a6006546001600160a01b036101009091041690565b82610a1b565b6040518181527fd762d6ab69e51adef66de5ac13b45b3345367b5f0056d1ce4a46b4e5d6ba00e79060200160405180910390a1905090565b5f61059260075490565b905090565b6105a2335b82610a34565b6105be5760405162461bcd60e51b8152600401610466906116a3565b610507838383610a92565b6105d16109bb565b6006546040515f9161010090046001600160a01b03169047908381818185875af1925050503d805f8114610620576040519150601f19603f3d011682016040523d82523d5f602084013e610625565b606091505b5050905080610632575f80fd5b50565b61063d6109bb565b610645610c01565b565b61050783838360405180602001604052805f8152506107b1565b61066a3361059c565b6106865760405162461bcd60e51b8152600401610466906116a3565b61063281610c53565b5f818152600260205260408120546001600160a01b0316806103395760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610466565b5f6001600160a01b0382166107575760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610466565b506001600160a01b03165f9081526003602052604090205490565b61077a6109bb565b6106455f610cf2565b61078b6109bb565b610645610d4b565b60606001805461034d9061166b565b6107ad338383610d88565b5050565b6107bb3383610a34565b6107d75760405162461bcd60e51b8152600401610466906116a3565b6107e384848484610e55565b50505050565b60606107f4826108f0565b5f6107fd610e88565b90505f81511161081b5760405180602001604052805f815250610846565b8061082584610ea8565b604051602001610836929190611707565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6108826109bb565b6001600160a01b0381166108e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610466565b61063281610cf2565b5f818152600260205260409020546001600160a01b03166106325760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610466565b5f81815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109828261068f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6006546001600160a01b036101009091041633146106455760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610466565b6107ad828260405180602001604052805f815250610f38565b5f80610a3f8361068f565b9050806001600160a01b0316846001600160a01b03161480610a665750610a66818561084d565b80610a8a5750836001600160a01b0316610a7f846103ce565b6001600160a01b0316145b949350505050565b826001600160a01b0316610aa58261068f565b6001600160a01b031614610acb5760405162461bcd60e51b81526004016104669061171b565b6001600160a01b038216610b2d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610466565b610b3a8383836001610f6a565b826001600160a01b0316610b4d8261068f565b6001600160a01b031614610b735760405162461bcd60e51b81526004016104669061171b565b5f81815260046020908152604080832080546001600160a01b03199081169091556001600160a01b038781168086526003855283862080545f1901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610c09610f7e565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b5f610c5d8261068f565b9050610c6c815f846001610f6a565b610c758261068f565b5f83815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080545f190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b610d53610fc7565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c363390565b816001600160a01b0316836001600160a01b031603610de95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610466565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e60848484610a92565b610e6c8484848461100d565b6107e35760405162461bcd60e51b815260040161046690611760565b606060405180606001604052806027815260200161184460279139905090565b60605f610eb48361110a565b60010190505f8167ffffffffffffffff811115610ed357610ed3611551565b6040519080825280601f01601f191660200182016040528015610efd576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610f0757509392505050565b610f4283836111e1565b610f4e5f84848461100d565b6105075760405162461bcd60e51b815260040161046690611760565b610f72610fc7565b6107e384848484611376565b60065460ff166106455760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610466565b60065460ff16156106455760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610466565b5f6001600160a01b0384163b156110ff57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110509033908990889088906004016117b2565b6020604051808303815f875af192505050801561108a575060408051601f3d908101601f19168201909252611087918101906117ee565b60015b6110e5573d8080156110b7576040519150601f19603f3d011682016040523d82523d5f602084013e6110bc565b606091505b5080515f036110dd5760405162461bcd60e51b815260040161046690611760565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a8a565b506001949350505050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111485772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611174576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061119257662386f26fc10000830492506010015b6305f5e10083106111aa576305f5e100830492506008015b61271083106111be57612710830492506004015b606483106111d0576064830492506002015b600a83106103395760010192915050565b6001600160a01b0382166112375760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610466565b5f818152600260205260409020546001600160a01b03161561129b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610466565b6112a85f83836001610f6a565b5f818152600260205260409020546001600160a01b03161561130c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610466565b6001600160a01b0382165f81815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60018111156107e3576001600160a01b038416156113bb576001600160a01b0384165f90815260036020526040812080548392906113b590849061181d565b90915550505b6001600160a01b038316156107e3576001600160a01b0383165f90815260036020526040812080548392906113f1908490611830565b909155505050505050565b6001600160e01b031981168114610632575f80fd5b5f60208284031215611421575f80fd5b8135610846816113fc565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610846602083018461142c565b5f6020828403121561147c575f80fd5b5035919050565b80356001600160a01b0381168114611499575f80fd5b919050565b5f80604083850312156114af575f80fd5b6114b883611483565b946020939093013593505050565b5f805f606084860312156114d8575f80fd5b6114e184611483565b92506114ef60208501611483565b9150604084013590509250925092565b5f6020828403121561150f575f80fd5b61084682611483565b5f8060408385031215611529575f80fd5b61153283611483565b915060208301358015158114611546575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215611578575f80fd5b61158185611483565b935061158f60208601611483565b925060408501359150606085013567ffffffffffffffff808211156115b2575f80fd5b818701915087601f8301126115c5575f80fd5b8135818111156115d7576115d7611551565b604051601f8201601f19908116603f011681019083821181831017156115ff576115ff611551565b816040528281528a6020848701011115611617575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f806040838503121561164b575f80fd5b61165483611483565b915061166260208401611483565b90509250929050565b600181811c9082168061167f57607f821691505b60208210810361169d57634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b5f81518060208401855e5f93019283525090919050565b5f610a8a61171583866116f0565b846116f0565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f906117e49083018461142c565b9695505050505050565b5f602082840312156117fe575f80fd5b8151610846816113fc565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561033957610339611809565b808201808211156103395761033961180956fe68747470733a2f2f6e66742e63727970746f73686f7065652e6e74696c6f79616c74792e636f6da264697066735822122055b7c88e3b91a44024b1bbda43267bee10ed6ea7a94e982849628063a4daa0b564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x29B437AA37B5B2B7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x29A427AA25A7 PUSH1 0xD1 SHL DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x5E SWAP2 SWAP1 PUSH2 0x177 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x6B DUP3 DUP3 PUSH2 0x177 JUMP JUMPDEST POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH2 0x81 CALLER PUSH2 0x86 JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x107 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x125 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x172 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x150 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16F JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x190 JUMPI PUSH2 0x190 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x19E DUP5 SLOAD PUSH2 0xF3 JUMP JUMPDEST DUP5 PUSH2 0x12B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D7 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1C0 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x22E JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x205 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E6 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x222 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18A0 DUP1 PUSH2 0x243 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x148 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xBF JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15F PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x146C JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x149E JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x588 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x146C JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x15F JUMP JUMPDEST PUSH2 0x19C PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x146C JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x14FF JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19C JUMP JUMPDEST PUSH2 0x17C PUSH2 0x793 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x146C JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x163A JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x14FF JUMP JUMPDEST PUSH2 0x87A JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x31E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x339 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x166B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x379 SWAP1 PUSH2 0x166B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3D8 DUP3 PUSH2 0x8F0 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3FD DUP3 PUSH2 0x68F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x48B JUMPI POP PUSH2 0x48B DUP2 CALLER PUSH2 0x84D JUMP JUMPDEST PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x507 DUP4 DUP4 PUSH2 0x94E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x515 PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x523 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x52D PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x550 PUSH2 0x54A PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xD762D6AB69E51ADEF66DE5AC13B45B3345367B5F0056D1CE4A46B4E5D6BA00E7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x592 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5A2 CALLER JUMPDEST DUP3 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x507 DUP4 DUP4 DUP4 PUSH2 0xA92 JUMP JUMPDEST PUSH2 0x5D1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x625 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x632 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x63D PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x645 PUSH2 0xC01 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x507 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x66A CALLER PUSH2 0x59C JUMP JUMPDEST PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x632 DUP2 PUSH2 0xC53 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x339 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x77A PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x645 PUSH0 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0x78B PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x645 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x7AD CALLER DUP4 DUP4 PUSH2 0xD88 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7BB CALLER DUP4 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x7E3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE55 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7F4 DUP3 PUSH2 0x8F0 JUMP JUMPDEST PUSH0 PUSH2 0x7FD PUSH2 0xE88 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x846 JUMP JUMPDEST DUP1 PUSH2 0x825 DUP5 PUSH2 0xEA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x836 SWAP3 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x882 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x632 DUP2 PUSH2 0xCF2 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x982 DUP3 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x7AD DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xF38 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA3F DUP4 PUSH2 0x68F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xA66 JUMPI POP PUSH2 0xA66 DUP2 DUP6 PUSH2 0x84D JUMP JUMPDEST DUP1 PUSH2 0xA8A JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA7F DUP5 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAA5 DUP3 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0xB3A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB4D DUP3 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xC09 PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH2 0xC5D DUP3 PUSH2 0x68F JUMP JUMPDEST SWAP1 POP PUSH2 0xC6C DUP2 PUSH0 DUP5 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0xC75 DUP3 PUSH2 0x68F JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x3 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE DUP8 DUP6 MSTORE PUSH1 0x2 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE MLOAD SWAP3 SWAP4 POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xD53 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC36 CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xE60 DUP5 DUP5 DUP5 PUSH2 0xA92 JUMP JUMPDEST PUSH2 0xE6C DUP5 DUP5 DUP5 DUP5 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1844 PUSH1 0x27 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xEB4 DUP4 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED3 JUMPI PUSH2 0xED3 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEFD JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xF07 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF42 DUP4 DUP4 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0xF4E PUSH0 DUP5 DUP5 DUP5 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0xF72 PUSH2 0xFC7 JUMP JUMPDEST PUSH2 0x7E3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x10FF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1050 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x108A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1087 SWAP2 DUP2 ADD SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10E5 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x1760 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xA8A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1148 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1174 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1192 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x11AA JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x11BE JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x11D0 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x339 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1237 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x129B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x12A8 PUSH0 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x130C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x13BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13B5 SWAP1 DUP5 SWAP1 PUSH2 0x181D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13F1 SWAP1 DUP5 SWAP1 PUSH2 0x1830 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x632 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1421 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x846 DUP2 PUSH2 0x13FC JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x846 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x142C JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1499 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14B8 DUP4 PUSH2 0x1483 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14E1 DUP5 PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP PUSH2 0x14EF PUSH1 0x20 DUP6 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x846 DUP3 PUSH2 0x1483 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1529 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1532 DUP4 PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1546 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1578 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1581 DUP6 PUSH2 0x1483 JUMP JUMPDEST SWAP4 POP PUSH2 0x158F PUSH1 0x20 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D7 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x15FF JUMPI PUSH2 0x15FF PUSH2 0x1551 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1617 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x164B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1654 DUP4 PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP PUSH2 0x1662 PUSH1 0x20 DUP5 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x167F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x169D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA8A PUSH2 0x1715 DUP4 DUP7 PUSH2 0x16F0 JUMP JUMPDEST DUP5 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x17E4 SWAP1 DUP4 ADD DUP5 PUSH2 0x142C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x846 DUP2 PUSH2 0x13FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x339 JUMPI PUSH2 0x339 PUSH2 0x1809 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x339 JUMPI PUSH2 0x339 PUSH2 0x1809 JUMP INVALID PUSH9 0x747470733A2F2F6E66 PUSH21 0x2E63727970746F73686F7065652E6E74696C6F7961 PUSH13 0x74792E636F6DA2646970667358 0x22 SLT KECCAK256 SSTORE 0xB7 0xC8 DUP15 EXTCODESIZE SWAP2 LOG4 BLOCKHASH 0x24 0xB1 0xBB 0xDA NUMBER 0x26 PUSH28 0xEE10ED6EA7A94E982849628063A4DAA0B564736F6C63430008190033 ",
							"sourceMap": "57721:2441:0:-:0;;;58619:45;;;;;;;;;;41267:113;;;;;;;;;;;;;-1:-1:-1;;;41267:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;41267:113:0;;;41341:5;41333;:13;;;;;;:::i;:::-;-1:-1:-1;41356:7:0;:17;41366:7;41356;:17;:::i;:::-;-1:-1:-1;;20701:7:0;:15;;-1:-1:-1;;20701:15:0;;;-1:-1:-1;18023:32:0;16970:10;18023:18;:32::i;:::-;57721:2441;;19520:187;19612:6;;;-1:-1:-1;;;;;19628:17:0;;;19612:6;19628:17;;;-1:-1:-1;;;;;;19628:17:0;;;;;;19660:40;;19612:6;;;;;;;;19660:40;;19593:16;;19660:40;19583:124;19520:187;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:1;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:1;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:1;;;2546:26;2497:89;-1:-1:-1;;1308:1:1;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:1;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:1;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;:::-;57721:2441:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_2802": {
									"entryPoint": null,
									"id": 2802,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2635": {
									"entryPoint": 2382,
									"id": 2635,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_2871": {
									"entryPoint": 3720,
									"id": 2871,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_2789": {
									"entryPoint": 4982,
									"id": 2789,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2913": {
									"entryPoint": 3946,
									"id": 2913,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_2526": {
									"entryPoint": 3155,
									"id": 2526,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2743": {
									"entryPoint": 4109,
									"id": 2743,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_1184": {
									"entryPoint": 2491,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_2304": {
									"entryPoint": null,
									"id": 2304,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_2338": {
									"entryPoint": 2612,
									"id": 2338,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_2459": {
									"entryPoint": 4577,
									"id": 2459,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1121": {
									"entryPoint": null,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2286": {
									"entryPoint": null,
									"id": 2286,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_pause_1331": {
									"entryPoint": 3403,
									"id": 1331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireMinted_2681": {
									"entryPoint": 2288,
									"id": 2681,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_requireNotPaused_1304": {
									"entryPoint": 4039,
									"id": 1304,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1315": {
									"entryPoint": 3966,
									"id": 1315,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_safeMint_2353": {
									"entryPoint": 2587,
									"id": 2353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_2382": {
									"entryPoint": 3896,
									"id": 2382,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_2273": {
									"entryPoint": 3669,
									"id": 2273,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2667": {
									"entryPoint": 3464,
									"id": 2667,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_1241": {
									"entryPoint": 3314,
									"id": 1241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_2611": {
									"entryPoint": 2706,
									"id": 2611,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1347": {
									"entryPoint": 3073,
									"id": 1347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_2115": {
									"entryPoint": 1011,
									"id": 2115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1976": {
									"entryPoint": 1774,
									"id": 1976,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_2829": {
									"entryPoint": 1633,
									"id": 2829,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_2133": {
									"entryPoint": 974,
									"id": 2133,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_2168": {
									"entryPoint": 2125,
									"id": 2168,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1365": {
									"entryPoint": null,
									"id": 1365,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_774": {
									"entryPoint": 4362,
									"id": 774,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_2945": {
									"entryPoint": 1292,
									"id": 2945,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_2014": {
									"entryPoint": 831,
									"id": 2014,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_2004": {
									"entryPoint": 1679,
									"id": 2004,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1170": {
									"entryPoint": null,
									"id": 1170,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2880": {
									"entryPoint": 1923,
									"id": 2880,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1292": {
									"entryPoint": null,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1198": {
									"entryPoint": 1906,
									"id": 1198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2214": {
									"entryPoint": 1607,
									"id": 2214,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2244": {
									"entryPoint": 1969,
									"id": 2244,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_2150": {
									"entryPoint": 1954,
									"id": 2150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1726": {
									"entryPoint": null,
									"id": 1726,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1952": {
									"entryPoint": 750,
									"id": 1952,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_2024": {
									"entryPoint": 1939,
									"id": 2024,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_993": {
									"entryPoint": 3752,
									"id": 993,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2063": {
									"entryPoint": 2025,
									"id": 2063,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_2955": {
									"entryPoint": 1416,
									"id": 2955,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2195": {
									"entryPoint": 1431,
									"id": 2195,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_1221": {
									"entryPoint": 2170,
									"id": 1221,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_2889": {
									"entryPoint": 1589,
									"id": 2889,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_2982": {
									"entryPoint": 1481,
									"id": 2982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 5164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6066,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12701:1",
										"nodeType": "YulBlock",
										"src": "0:12701:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:1",
													"nodeType": "YulBlock",
													"src": "58:87:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:1",
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:1",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:1",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nativeSrc": "125:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nativeSrc": "125:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:1",
																								"nodeType": "YulLiteral",
																								"src": "103:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:1",
																								"nodeType": "YulLiteral",
																								"src": "108:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:1"
																						},
																						"nativeSrc": "99:20:1",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:1"
																				},
																				"nativeSrc": "88:32:1",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:1"
																		},
																		"nativeSrc": "78:43:1",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:1"
																},
																"nativeSrc": "71:51:1",
																"nodeType": "YulFunctionCall",
																"src": "71:51:1"
															},
															"nativeSrc": "68:71:1",
															"nodeType": "YulIf",
															"src": "68:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:1",
														"nodeType": "YulTypedName",
														"src": "47:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nativeSrc": "219:176:1",
													"nodeType": "YulBlock",
													"src": "219:176:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:1",
																"nodeType": "YulBlock",
																"src": "265:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:1",
																					"nodeType": "YulLiteral",
																					"src": "274:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:1",
																					"nodeType": "YulLiteral",
																					"src": "277:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:1"
																			},
																			"nativeSrc": "267:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:1"
																		},
																		"nativeSrc": "267:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:1"
																		},
																		"nativeSrc": "236:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:1",
																		"nodeType": "YulLiteral",
																		"src": "261:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:1"
																},
																"nativeSrc": "232:32:1",
																"nodeType": "YulFunctionCall",
																"src": "232:32:1"
															},
															"nativeSrc": "229:52:1",
															"nodeType": "YulIf",
															"src": "229:52:1"
														},
														{
															"nativeSrc": "290:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:1"
																},
																"nativeSrc": "303:23:1",
																"nodeType": "YulFunctionCall",
																"src": "303:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:1",
																	"nodeType": "YulTypedName",
																	"src": "294:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:1"
																},
																"nativeSrc": "335:30:1",
																"nodeType": "YulFunctionCall",
																"src": "335:30:1"
															},
															"nativeSrc": "335:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:1"
														},
														{
															"nativeSrc": "374:15:1",
															"nodeType": "YulAssignment",
															"src": "374:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:1",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:1",
														"nodeType": "YulTypedName",
														"src": "185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:1",
														"nodeType": "YulTypedName",
														"src": "196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:1",
														"nodeType": "YulTypedName",
														"src": "208:6:1",
														"type": ""
													}
												],
												"src": "150:245:1"
											},
											{
												"body": {
													"nativeSrc": "495:92:1",
													"nodeType": "YulBlock",
													"src": "495:92:1",
													"statements": [
														{
															"nativeSrc": "505:26:1",
															"nodeType": "YulAssignment",
															"src": "505:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:1",
																		"nodeType": "YulLiteral",
																		"src": "528:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:1"
																},
																"nativeSrc": "513:18:1",
																"nodeType": "YulFunctionCall",
																"src": "513:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:1"
																				},
																				"nativeSrc": "565:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:1"
																		},
																		"nativeSrc": "558:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:1"
																},
																"nativeSrc": "540:41:1",
																"nodeType": "YulFunctionCall",
																"src": "540:41:1"
															},
															"nativeSrc": "540:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:1",
														"nodeType": "YulTypedName",
														"src": "464:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:1",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:1",
														"nodeType": "YulTypedName",
														"src": "486:4:1",
														"type": ""
													}
												],
												"src": "400:187:1"
											},
											{
												"body": {
													"nativeSrc": "653:239:1",
													"nodeType": "YulBlock",
													"src": "653:239:1",
													"statements": [
														{
															"nativeSrc": "663:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "663:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "683:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "683:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "677:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "677:5:1"
																},
																"nativeSrc": "677:12:1",
																"nodeType": "YulFunctionCall",
																"src": "677:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "667:6:1",
																	"nodeType": "YulTypedName",
																	"src": "667:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "705:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "705:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "710:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "710:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "698:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:1"
																},
																"nativeSrc": "698:19:1",
																"nodeType": "YulFunctionCall",
																"src": "698:19:1"
															},
															"nativeSrc": "698:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "698:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "736:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "736:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "741:4:1",
																				"nodeType": "YulLiteral",
																				"src": "741:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "732:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:1"
																		},
																		"nativeSrc": "732:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "732:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "752:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "752:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "759:4:1",
																				"nodeType": "YulLiteral",
																				"src": "759:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "748:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:1"
																		},
																		"nativeSrc": "748:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "748:16:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "766:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "766:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "726:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:5:1"
																},
																"nativeSrc": "726:47:1",
																"nodeType": "YulFunctionCall",
																"src": "726:47:1"
															},
															"nativeSrc": "726:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "726:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "797:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "797:3:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "802:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "802:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "793:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "793:3:1"
																				},
																				"nativeSrc": "793:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "793:16:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "811:4:1",
																				"nodeType": "YulLiteral",
																				"src": "811:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:1"
																		},
																		"nativeSrc": "789:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "789:27:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "818:1:1",
																		"nodeType": "YulLiteral",
																		"src": "818:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "782:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:1"
																},
																"nativeSrc": "782:38:1",
																"nodeType": "YulFunctionCall",
																"src": "782:38:1"
															},
															"nativeSrc": "782:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "782:38:1"
														},
														{
															"nativeSrc": "829:57:1",
															"nodeType": "YulAssignment",
															"src": "829:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "844:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "844:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "857:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "857:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "865:2:1",
																								"nodeType": "YulLiteral",
																								"src": "865:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "853:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "853:3:1"
																						},
																						"nativeSrc": "853:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "853:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "874:2:1",
																								"nodeType": "YulLiteral",
																								"src": "874:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "870:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "870:3:1"
																						},
																						"nativeSrc": "870:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "870:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "849:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "849:3:1"
																				},
																				"nativeSrc": "849:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "849:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nativeSrc": "840:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "840:39:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "881:4:1",
																		"nodeType": "YulLiteral",
																		"src": "881:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nativeSrc": "836:50:1",
																"nodeType": "YulFunctionCall",
																"src": "836:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "829:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "592:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "630:5:1",
														"nodeType": "YulTypedName",
														"src": "630:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "637:3:1",
														"nodeType": "YulTypedName",
														"src": "637:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "645:3:1",
														"nodeType": "YulTypedName",
														"src": "645:3:1",
														"type": ""
													}
												],
												"src": "592:300:1"
											},
											{
												"body": {
													"nativeSrc": "1018:110:1",
													"nodeType": "YulBlock",
													"src": "1018:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1035:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1046:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1046:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1028:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:1"
																},
																"nativeSrc": "1028:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1028:21:1"
															},
															"nativeSrc": "1028:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1028:21:1"
														},
														{
															"nativeSrc": "1058:64:1",
															"nodeType": "YulAssignment",
															"src": "1058:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1095:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1095:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1107:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1107:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1118:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1118:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1103:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1103:3:1"
																		},
																		"nativeSrc": "1103:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1103:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1066:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1066:28:1"
																},
																"nativeSrc": "1066:56:1",
																"nodeType": "YulFunctionCall",
																"src": "1066:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1058:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1058:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "897:231:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "987:9:1",
														"nodeType": "YulTypedName",
														"src": "987:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "998:6:1",
														"nodeType": "YulTypedName",
														"src": "998:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1009:4:1",
														"nodeType": "YulTypedName",
														"src": "1009:4:1",
														"type": ""
													}
												],
												"src": "897:231:1"
											},
											{
												"body": {
													"nativeSrc": "1203:110:1",
													"nodeType": "YulBlock",
													"src": "1203:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1249:16:1",
																"nodeType": "YulBlock",
																"src": "1249:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1258:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1258:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1261:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1261:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1251:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:1"
																			},
																			"nativeSrc": "1251:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1251:12:1"
																		},
																		"nativeSrc": "1251:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1251:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1224:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1224:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1233:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1233:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nativeSrc": "1220:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:1"
																},
																"nativeSrc": "1216:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1216:32:1"
															},
															"nativeSrc": "1213:52:1",
															"nodeType": "YulIf",
															"src": "1213:52:1"
														},
														{
															"nativeSrc": "1274:33:1",
															"nodeType": "YulAssignment",
															"src": "1274:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1297:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1297:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1284:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1284:12:1"
																},
																"nativeSrc": "1284:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1284:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1274:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1274:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1133:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1169:9:1",
														"nodeType": "YulTypedName",
														"src": "1169:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1180:7:1",
														"nodeType": "YulTypedName",
														"src": "1180:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1192:6:1",
														"nodeType": "YulTypedName",
														"src": "1192:6:1",
														"type": ""
													}
												],
												"src": "1133:180:1"
											},
											{
												"body": {
													"nativeSrc": "1419:102:1",
													"nodeType": "YulBlock",
													"src": "1419:102:1",
													"statements": [
														{
															"nativeSrc": "1429:26:1",
															"nodeType": "YulAssignment",
															"src": "1429:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1441:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1452:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1437:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1437:3:1"
																},
																"nativeSrc": "1437:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1437:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1429:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1429:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1471:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1471:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1486:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1486:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1502:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1502:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1507:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1507:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1498:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1498:3:1"
																						},
																						"nativeSrc": "1498:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1498:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1511:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1511:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1494:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:1"
																				},
																				"nativeSrc": "1494:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1482:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1482:3:1"
																		},
																		"nativeSrc": "1482:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1464:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:1"
																},
																"nativeSrc": "1464:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1464:51:1"
															},
															"nativeSrc": "1464:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1464:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1318:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1388:9:1",
														"nodeType": "YulTypedName",
														"src": "1388:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1399:6:1",
														"nodeType": "YulTypedName",
														"src": "1399:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1410:4:1",
														"nodeType": "YulTypedName",
														"src": "1410:4:1",
														"type": ""
													}
												],
												"src": "1318:203:1"
											},
											{
												"body": {
													"nativeSrc": "1575:124:1",
													"nodeType": "YulBlock",
													"src": "1575:124:1",
													"statements": [
														{
															"nativeSrc": "1585:29:1",
															"nodeType": "YulAssignment",
															"src": "1585:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1607:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1607:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1594:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1594:12:1"
																},
																"nativeSrc": "1594:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1594:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1585:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1585:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1677:16:1",
																"nodeType": "YulBlock",
																"src": "1677:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1686:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1689:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1689:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1679:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1679:6:1"
																			},
																			"nativeSrc": "1679:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1679:12:1"
																		},
																		"nativeSrc": "1679:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1679:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1636:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1636:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1647:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1647:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1662:3:1",
																										"nodeType": "YulLiteral",
																										"src": "1662:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1667:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1667:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1658:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1658:3:1"
																								},
																								"nativeSrc": "1658:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1658:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1671:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1671:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1654:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1654:3:1"
																						},
																						"nativeSrc": "1654:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1654:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1643:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1643:3:1"
																				},
																				"nativeSrc": "1643:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1643:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1633:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1633:2:1"
																		},
																		"nativeSrc": "1633:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1633:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:1"
																},
																"nativeSrc": "1626:50:1",
																"nodeType": "YulFunctionCall",
																"src": "1626:50:1"
															},
															"nativeSrc": "1623:70:1",
															"nodeType": "YulIf",
															"src": "1623:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1526:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1554:6:1",
														"nodeType": "YulTypedName",
														"src": "1554:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1565:5:1",
														"nodeType": "YulTypedName",
														"src": "1565:5:1",
														"type": ""
													}
												],
												"src": "1526:173:1"
											},
											{
												"body": {
													"nativeSrc": "1791:167:1",
													"nodeType": "YulBlock",
													"src": "1791:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1837:16:1",
																"nodeType": "YulBlock",
																"src": "1837:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1849:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1849:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1839:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:1"
																			},
																			"nativeSrc": "1839:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:12:1"
																		},
																		"nativeSrc": "1839:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1812:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1812:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1821:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1821:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1808:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:1"
																		},
																		"nativeSrc": "1808:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1833:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1833:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1804:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:1"
																},
																"nativeSrc": "1804:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1804:32:1"
															},
															"nativeSrc": "1801:52:1",
															"nodeType": "YulIf",
															"src": "1801:52:1"
														},
														{
															"nativeSrc": "1862:39:1",
															"nodeType": "YulAssignment",
															"src": "1862:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1891:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1891:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1872:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1872:18:1"
																},
																"nativeSrc": "1872:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1872:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1862:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1862:6:1"
																}
															]
														},
														{
															"nativeSrc": "1910:42:1",
															"nodeType": "YulAssignment",
															"src": "1910:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1937:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1948:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1948:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1933:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1933:3:1"
																		},
																		"nativeSrc": "1933:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1933:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1920:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1920:12:1"
																},
																"nativeSrc": "1920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1920:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1910:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1910:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1704:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1749:9:1",
														"nodeType": "YulTypedName",
														"src": "1749:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1760:7:1",
														"nodeType": "YulTypedName",
														"src": "1760:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1772:6:1",
														"nodeType": "YulTypedName",
														"src": "1772:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1780:6:1",
														"nodeType": "YulTypedName",
														"src": "1780:6:1",
														"type": ""
													}
												],
												"src": "1704:254:1"
											},
											{
												"body": {
													"nativeSrc": "2064:76:1",
													"nodeType": "YulBlock",
													"src": "2064:76:1",
													"statements": [
														{
															"nativeSrc": "2074:26:1",
															"nodeType": "YulAssignment",
															"src": "2074:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2086:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2086:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2097:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2097:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2082:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2082:3:1"
																},
																"nativeSrc": "2082:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2082:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2074:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2074:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2116:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2116:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2127:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2127:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2109:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2109:6:1"
																},
																"nativeSrc": "2109:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2109:25:1"
															},
															"nativeSrc": "2109:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "2109:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1963:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2033:9:1",
														"nodeType": "YulTypedName",
														"src": "2033:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2044:6:1",
														"nodeType": "YulTypedName",
														"src": "2044:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2055:4:1",
														"nodeType": "YulTypedName",
														"src": "2055:4:1",
														"type": ""
													}
												],
												"src": "1963:177:1"
											},
											{
												"body": {
													"nativeSrc": "2249:224:1",
													"nodeType": "YulBlock",
													"src": "2249:224:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2295:16:1",
																"nodeType": "YulBlock",
																"src": "2295:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2304:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2304:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2307:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2307:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2297:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2297:6:1"
																			},
																			"nativeSrc": "2297:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2297:12:1"
																		},
																		"nativeSrc": "2297:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2297:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2270:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2270:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2279:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2279:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2266:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2266:3:1"
																		},
																		"nativeSrc": "2266:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2266:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2291:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2291:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2262:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2262:3:1"
																},
																"nativeSrc": "2262:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2262:32:1"
															},
															"nativeSrc": "2259:52:1",
															"nodeType": "YulIf",
															"src": "2259:52:1"
														},
														{
															"nativeSrc": "2320:39:1",
															"nodeType": "YulAssignment",
															"src": "2320:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2349:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2349:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2330:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2330:18:1"
																},
																"nativeSrc": "2330:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2330:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2320:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2320:6:1"
																}
															]
														},
														{
															"nativeSrc": "2368:48:1",
															"nodeType": "YulAssignment",
															"src": "2368:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2401:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2401:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2412:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2412:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2397:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2397:3:1"
																		},
																		"nativeSrc": "2397:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2397:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2378:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2378:18:1"
																},
																"nativeSrc": "2378:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2378:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2368:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2368:6:1"
																}
															]
														},
														{
															"nativeSrc": "2425:42:1",
															"nodeType": "YulAssignment",
															"src": "2425:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2452:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2452:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2463:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2463:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2448:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:1"
																		},
																		"nativeSrc": "2448:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2448:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2435:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2435:12:1"
																},
																"nativeSrc": "2435:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2435:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2425:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2425:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2145:328:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2199:9:1",
														"nodeType": "YulTypedName",
														"src": "2199:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2210:7:1",
														"nodeType": "YulTypedName",
														"src": "2210:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2222:6:1",
														"nodeType": "YulTypedName",
														"src": "2222:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2230:6:1",
														"nodeType": "YulTypedName",
														"src": "2230:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2238:6:1",
														"nodeType": "YulTypedName",
														"src": "2238:6:1",
														"type": ""
													}
												],
												"src": "2145:328:1"
											},
											{
												"body": {
													"nativeSrc": "2548:116:1",
													"nodeType": "YulBlock",
													"src": "2548:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2594:16:1",
																"nodeType": "YulBlock",
																"src": "2594:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2603:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2603:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2606:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2606:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2596:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2596:6:1"
																			},
																			"nativeSrc": "2596:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2596:12:1"
																		},
																		"nativeSrc": "2596:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2596:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2569:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2569:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2578:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2578:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2565:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2565:3:1"
																		},
																		"nativeSrc": "2565:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2565:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2590:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2590:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2561:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2561:3:1"
																},
																"nativeSrc": "2561:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2561:32:1"
															},
															"nativeSrc": "2558:52:1",
															"nodeType": "YulIf",
															"src": "2558:52:1"
														},
														{
															"nativeSrc": "2619:39:1",
															"nodeType": "YulAssignment",
															"src": "2619:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2648:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2648:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2629:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2629:18:1"
																},
																"nativeSrc": "2629:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2629:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2619:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2619:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2478:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2514:9:1",
														"nodeType": "YulTypedName",
														"src": "2514:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2525:7:1",
														"nodeType": "YulTypedName",
														"src": "2525:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2537:6:1",
														"nodeType": "YulTypedName",
														"src": "2537:6:1",
														"type": ""
													}
												],
												"src": "2478:186:1"
											},
											{
												"body": {
													"nativeSrc": "2753:263:1",
													"nodeType": "YulBlock",
													"src": "2753:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2799:16:1",
																"nodeType": "YulBlock",
																"src": "2799:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2808:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2808:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2811:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2811:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2801:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2801:6:1"
																			},
																			"nativeSrc": "2801:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2801:12:1"
																		},
																		"nativeSrc": "2801:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2801:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2774:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2774:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2783:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2783:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2770:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:1"
																		},
																		"nativeSrc": "2770:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2770:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2795:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2795:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2766:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2766:3:1"
																},
																"nativeSrc": "2766:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2766:32:1"
															},
															"nativeSrc": "2763:52:1",
															"nodeType": "YulIf",
															"src": "2763:52:1"
														},
														{
															"nativeSrc": "2824:39:1",
															"nodeType": "YulAssignment",
															"src": "2824:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2853:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2853:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2834:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2834:18:1"
																},
																"nativeSrc": "2834:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2834:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2824:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2824:6:1"
																}
															]
														},
														{
															"nativeSrc": "2872:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2872:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2902:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2902:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2913:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2913:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2898:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2898:3:1"
																		},
																		"nativeSrc": "2898:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2898:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2885:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2885:12:1"
																},
																"nativeSrc": "2885:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2885:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2876:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2876:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2970:16:1",
																"nodeType": "YulBlock",
																"src": "2970:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2979:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2979:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2982:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2982:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2972:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2972:6:1"
																			},
																			"nativeSrc": "2972:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2972:12:1"
																		},
																		"nativeSrc": "2972:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2972:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2939:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2939:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2960:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2960:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2953:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2953:6:1"
																						},
																						"nativeSrc": "2953:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2953:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2946:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2946:6:1"
																				},
																				"nativeSrc": "2946:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2946:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2936:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2936:2:1"
																		},
																		"nativeSrc": "2936:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2936:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2929:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2929:6:1"
																},
																"nativeSrc": "2929:40:1",
																"nodeType": "YulFunctionCall",
																"src": "2929:40:1"
															},
															"nativeSrc": "2926:60:1",
															"nodeType": "YulIf",
															"src": "2926:60:1"
														},
														{
															"nativeSrc": "2995:15:1",
															"nodeType": "YulAssignment",
															"src": "2995:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "3005:5:1",
																"nodeType": "YulIdentifier",
																"src": "3005:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2995:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2995:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2669:347:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2711:9:1",
														"nodeType": "YulTypedName",
														"src": "2711:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2722:7:1",
														"nodeType": "YulTypedName",
														"src": "2722:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2734:6:1",
														"nodeType": "YulTypedName",
														"src": "2734:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2742:6:1",
														"nodeType": "YulTypedName",
														"src": "2742:6:1",
														"type": ""
													}
												],
												"src": "2669:347:1"
											},
											{
												"body": {
													"nativeSrc": "3053:95:1",
													"nodeType": "YulBlock",
													"src": "3053:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3070:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3070:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3077:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3077:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3082:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3082:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3073:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3073:3:1"
																		},
																		"nativeSrc": "3073:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3073:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3063:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3063:6:1"
																},
																"nativeSrc": "3063:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3063:31:1"
															},
															"nativeSrc": "3063:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3063:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3110:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3110:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3113:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3113:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3103:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3103:6:1"
																},
																"nativeSrc": "3103:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3103:15:1"
															},
															"nativeSrc": "3103:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3103:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3134:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3134:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3137:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3137:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3127:6:1"
																},
																"nativeSrc": "3127:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3127:15:1"
															},
															"nativeSrc": "3127:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3127:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3021:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3021:127:1"
											},
											{
												"body": {
													"nativeSrc": "3283:1008:1",
													"nodeType": "YulBlock",
													"src": "3283:1008:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3330:16:1",
																"nodeType": "YulBlock",
																"src": "3330:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3339:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3342:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3342:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3332:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:1"
																			},
																			"nativeSrc": "3332:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3332:12:1"
																		},
																		"nativeSrc": "3332:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3304:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3304:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3313:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3313:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3300:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3300:3:1"
																		},
																		"nativeSrc": "3300:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3300:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3325:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3325:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3296:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3296:3:1"
																},
																"nativeSrc": "3296:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3296:33:1"
															},
															"nativeSrc": "3293:53:1",
															"nodeType": "YulIf",
															"src": "3293:53:1"
														},
														{
															"nativeSrc": "3355:39:1",
															"nodeType": "YulAssignment",
															"src": "3355:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3384:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3384:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3365:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3365:18:1"
																},
																"nativeSrc": "3365:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3365:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3355:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3355:6:1"
																}
															]
														},
														{
															"nativeSrc": "3403:48:1",
															"nodeType": "YulAssignment",
															"src": "3403:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3436:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3436:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3447:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3447:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3432:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3432:3:1"
																		},
																		"nativeSrc": "3432:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3432:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3413:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3413:18:1"
																},
																"nativeSrc": "3413:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3413:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3403:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:1"
																}
															]
														},
														{
															"nativeSrc": "3460:42:1",
															"nodeType": "YulAssignment",
															"src": "3460:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3487:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3487:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3498:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3498:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3483:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3483:3:1"
																		},
																		"nativeSrc": "3483:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3483:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3470:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3470:12:1"
																},
																"nativeSrc": "3470:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3470:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3460:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:1"
																}
															]
														},
														{
															"nativeSrc": "3511:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3511:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3542:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3542:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3553:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3553:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3538:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3538:3:1"
																		},
																		"nativeSrc": "3538:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3538:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3525:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3525:12:1"
																},
																"nativeSrc": "3525:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3525:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3515:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3515:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3566:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3566:28:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3576:18:1",
																"nodeType": "YulLiteral",
																"src": "3576:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3570:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3570:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3621:16:1",
																"nodeType": "YulBlock",
																"src": "3621:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3630:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3630:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3633:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3633:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3623:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3623:6:1"
																			},
																			"nativeSrc": "3623:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3623:12:1"
																		},
																		"nativeSrc": "3623:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3623:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3609:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3609:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3617:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3617:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3606:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3606:2:1"
																},
																"nativeSrc": "3606:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3606:14:1"
															},
															"nativeSrc": "3603:34:1",
															"nodeType": "YulIf",
															"src": "3603:34:1"
														},
														{
															"nativeSrc": "3646:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3646:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3660:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3660:9:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3671:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3656:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3656:3:1"
																},
																"nativeSrc": "3656:22:1",
																"nodeType": "YulFunctionCall",
																"src": "3656:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3650:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3650:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3726:16:1",
																"nodeType": "YulBlock",
																"src": "3726:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3735:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3735:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3738:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3738:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3728:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3728:6:1"
																			},
																			"nativeSrc": "3728:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3728:12:1"
																		},
																		"nativeSrc": "3728:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3728:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3705:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3705:2:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3709:4:1",
																						"nodeType": "YulLiteral",
																						"src": "3709:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3701:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3701:3:1"
																				},
																				"nativeSrc": "3701:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3701:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3716:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3716:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3697:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3697:3:1"
																		},
																		"nativeSrc": "3697:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3697:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3690:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3690:6:1"
																},
																"nativeSrc": "3690:35:1",
																"nodeType": "YulFunctionCall",
																"src": "3690:35:1"
															},
															"nativeSrc": "3687:55:1",
															"nodeType": "YulIf",
															"src": "3687:55:1"
														},
														{
															"nativeSrc": "3751:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3751:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3774:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3761:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3761:12:1"
																},
																"nativeSrc": "3761:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3761:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3755:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3755:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3800:22:1",
																"nodeType": "YulBlock",
																"src": "3800:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3802:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3802:16:1"
																			},
																			"nativeSrc": "3802:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3802:18:1"
																		},
																		"nativeSrc": "3802:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3802:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "3792:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3792:2:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3796:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3796:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3789:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3789:2:1"
																},
																"nativeSrc": "3789:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3789:10:1"
															},
															"nativeSrc": "3786:36:1",
															"nodeType": "YulIf",
															"src": "3786:36:1"
														},
														{
															"nativeSrc": "3831:17:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3831:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3845:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3845:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3841:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:1"
																},
																"nativeSrc": "3841:7:1",
																"nodeType": "YulFunctionCall",
																"src": "3841:7:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "3835:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3835:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3857:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3857:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3877:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3877:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3871:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3871:5:1"
																},
																"nativeSrc": "3871:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3871:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3861:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3861:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3889:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3889:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3911:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3911:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "3935:2:1",
																										"nodeType": "YulIdentifier",
																										"src": "3935:2:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3939:4:1",
																										"nodeType": "YulLiteral",
																										"src": "3939:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3931:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3931:3:1"
																								},
																								"nativeSrc": "3931:13:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3931:13:1"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "3946:2:1",
																								"nodeType": "YulIdentifier",
																								"src": "3946:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "3927:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3927:3:1"
																						},
																						"nativeSrc": "3927:22:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3927:22:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3951:2:1",
																						"nodeType": "YulLiteral",
																						"src": "3951:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3923:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3923:3:1"
																				},
																				"nativeSrc": "3923:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3923:31:1"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "3956:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3956:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3919:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3919:3:1"
																		},
																		"nativeSrc": "3919:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3919:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3907:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3907:3:1"
																},
																"nativeSrc": "3907:53:1",
																"nodeType": "YulFunctionCall",
																"src": "3907:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3893:10:1",
																	"nodeType": "YulTypedName",
																	"src": "3893:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4019:22:1",
																"nodeType": "YulBlock",
																"src": "4019:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4021:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4021:16:1"
																			},
																			"nativeSrc": "4021:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4021:18:1"
																		},
																		"nativeSrc": "4021:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4021:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3978:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "3978:10:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3990:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3990:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3975:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3975:2:1"
																		},
																		"nativeSrc": "3975:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3975:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3998:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "3998:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4010:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3995:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3995:2:1"
																		},
																		"nativeSrc": "3995:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3972:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3972:2:1"
																},
																"nativeSrc": "3972:46:1",
																"nodeType": "YulFunctionCall",
																"src": "3972:46:1"
															},
															"nativeSrc": "3969:72:1",
															"nodeType": "YulIf",
															"src": "3969:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4057:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4057:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4061:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "4061:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4050:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4050:6:1"
																},
																"nativeSrc": "4050:22:1",
																"nodeType": "YulFunctionCall",
																"src": "4050:22:1"
															},
															"nativeSrc": "4050:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "4050:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4088:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4088:6:1"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4096:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "4096:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4081:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4081:6:1"
																},
																"nativeSrc": "4081:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4081:18:1"
															},
															"nativeSrc": "4081:18:1",
															"nodeType": "YulExpressionStatement",
															"src": "4081:18:1"
														},
														{
															"body": {
																"nativeSrc": "4145:16:1",
																"nodeType": "YulBlock",
																"src": "4145:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4154:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4154:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4157:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4157:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4147:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4147:6:1"
																			},
																			"nativeSrc": "4147:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4147:12:1"
																		},
																		"nativeSrc": "4147:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4147:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4122:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4122:2:1"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4126:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4126:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4118:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4118:3:1"
																				},
																				"nativeSrc": "4118:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4118:11:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4131:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4131:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4114:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4114:3:1"
																		},
																		"nativeSrc": "4114:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4114:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4136:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4136:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4111:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4111:2:1"
																},
																"nativeSrc": "4111:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4111:33:1"
															},
															"nativeSrc": "4108:53:1",
															"nodeType": "YulIf",
															"src": "4108:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4187:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4187:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4195:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4195:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4183:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4183:3:1"
																		},
																		"nativeSrc": "4183:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4204:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4204:2:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4208:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4208:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4200:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4200:3:1"
																		},
																		"nativeSrc": "4200:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:11:1"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4213:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "4213:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4170:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4170:12:1"
																},
																"nativeSrc": "4170:46:1",
																"nodeType": "YulFunctionCall",
																"src": "4170:46:1"
															},
															"nativeSrc": "4170:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "4170:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4240:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4240:6:1"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4248:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4248:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4236:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4236:3:1"
																				},
																				"nativeSrc": "4236:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4236:15:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4253:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4253:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4232:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4232:3:1"
																		},
																		"nativeSrc": "4232:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4232:24:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4258:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4258:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4225:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4225:6:1"
																},
																"nativeSrc": "4225:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4225:35:1"
															},
															"nativeSrc": "4225:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4225:35:1"
														},
														{
															"nativeSrc": "4269:16:1",
															"nodeType": "YulAssignment",
															"src": "4269:16:1",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4279:6:1",
																"nodeType": "YulIdentifier",
																"src": "4279:6:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4269:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4269:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3153:1138:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3225:9:1",
														"nodeType": "YulTypedName",
														"src": "3225:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3236:7:1",
														"nodeType": "YulTypedName",
														"src": "3236:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3248:6:1",
														"nodeType": "YulTypedName",
														"src": "3248:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3256:6:1",
														"nodeType": "YulTypedName",
														"src": "3256:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3264:6:1",
														"nodeType": "YulTypedName",
														"src": "3264:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3272:6:1",
														"nodeType": "YulTypedName",
														"src": "3272:6:1",
														"type": ""
													}
												],
												"src": "3153:1138:1"
											},
											{
												"body": {
													"nativeSrc": "4383:173:1",
													"nodeType": "YulBlock",
													"src": "4383:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4429:16:1",
																"nodeType": "YulBlock",
																"src": "4429:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4438:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4438:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4441:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4441:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4431:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4431:6:1"
																			},
																			"nativeSrc": "4431:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4431:12:1"
																		},
																		"nativeSrc": "4431:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4431:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4404:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4404:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4413:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4413:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4400:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4400:3:1"
																		},
																		"nativeSrc": "4400:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4400:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4425:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4425:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4396:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4396:3:1"
																},
																"nativeSrc": "4396:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4396:32:1"
															},
															"nativeSrc": "4393:52:1",
															"nodeType": "YulIf",
															"src": "4393:52:1"
														},
														{
															"nativeSrc": "4454:39:1",
															"nodeType": "YulAssignment",
															"src": "4454:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4483:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4483:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4464:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4464:18:1"
																},
																"nativeSrc": "4464:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4464:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4454:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:1"
																}
															]
														},
														{
															"nativeSrc": "4502:48:1",
															"nodeType": "YulAssignment",
															"src": "4502:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4535:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4535:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4546:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4546:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4531:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4531:3:1"
																		},
																		"nativeSrc": "4531:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4531:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4512:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4512:18:1"
																},
																"nativeSrc": "4512:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4512:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4502:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4502:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4296:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4341:9:1",
														"nodeType": "YulTypedName",
														"src": "4341:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4352:7:1",
														"nodeType": "YulTypedName",
														"src": "4352:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4364:6:1",
														"nodeType": "YulTypedName",
														"src": "4364:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4372:6:1",
														"nodeType": "YulTypedName",
														"src": "4372:6:1",
														"type": ""
													}
												],
												"src": "4296:260:1"
											},
											{
												"body": {
													"nativeSrc": "4616:325:1",
													"nodeType": "YulBlock",
													"src": "4616:325:1",
													"statements": [
														{
															"nativeSrc": "4626:22:1",
															"nodeType": "YulAssignment",
															"src": "4626:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4640:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4640:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4643:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4643:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4636:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4636:3:1"
																},
																"nativeSrc": "4636:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4636:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4626:6:1"
																}
															]
														},
														{
															"nativeSrc": "4657:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4657:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4687:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4687:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4693:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4693:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4683:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4683:3:1"
																},
																"nativeSrc": "4683:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4683:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4661:18:1",
																	"nodeType": "YulTypedName",
																	"src": "4661:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4734:31:1",
																"nodeType": "YulBlock",
																"src": "4734:31:1",
																"statements": [
																	{
																		"nativeSrc": "4736:27:1",
																		"nodeType": "YulAssignment",
																		"src": "4736:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4750:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4750:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4758:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4758:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4746:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4746:3:1"
																			},
																			"nativeSrc": "4746:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4746:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4736:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4736:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4714:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "4714:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4707:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4707:6:1"
																},
																"nativeSrc": "4707:26:1",
																"nodeType": "YulFunctionCall",
																"src": "4707:26:1"
															},
															"nativeSrc": "4704:61:1",
															"nodeType": "YulIf",
															"src": "4704:61:1"
														},
														{
															"body": {
																"nativeSrc": "4824:111:1",
																"nodeType": "YulBlock",
																"src": "4824:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4845:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4845:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4852:3:1",
																							"nodeType": "YulLiteral",
																							"src": "4852:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4857:10:1",
																							"nodeType": "YulLiteral",
																							"src": "4857:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4848:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4848:3:1"
																					},
																					"nativeSrc": "4848:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4848:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4838:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4838:6:1"
																			},
																			"nativeSrc": "4838:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4838:31:1"
																		},
																		"nativeSrc": "4838:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4838:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4889:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4889:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4892:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4892:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4882:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4882:6:1"
																			},
																			"nativeSrc": "4882:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4882:15:1"
																		},
																		"nativeSrc": "4882:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4882:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4917:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4917:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4920:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4920:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4910:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4910:6:1"
																			},
																			"nativeSrc": "4910:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4910:15:1"
																		},
																		"nativeSrc": "4910:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4910:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4780:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "4780:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4803:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4803:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4811:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4811:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4800:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4800:2:1"
																		},
																		"nativeSrc": "4800:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4777:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4777:2:1"
																},
																"nativeSrc": "4777:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4777:38:1"
															},
															"nativeSrc": "4774:161:1",
															"nodeType": "YulIf",
															"src": "4774:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4561:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4596:4:1",
														"nodeType": "YulTypedName",
														"src": "4596:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4605:6:1",
														"nodeType": "YulTypedName",
														"src": "4605:6:1",
														"type": ""
													}
												],
												"src": "4561:380:1"
											},
											{
												"body": {
													"nativeSrc": "5120:223:1",
													"nodeType": "YulBlock",
													"src": "5120:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5130:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:1"
																},
																"nativeSrc": "5130:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5130:21:1"
															},
															"nativeSrc": "5130:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5171:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5182:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5167:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:1"
																		},
																		"nativeSrc": "5167:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5187:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:1"
																},
																"nativeSrc": "5160:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5160:30:1"
															},
															"nativeSrc": "5160:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5210:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5221:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5206:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:1"
																		},
																		"nativeSrc": "5206:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "5226:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:1",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5199:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:1"
																},
																"nativeSrc": "5199:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5199:62:1"
															},
															"nativeSrc": "5199:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5281:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5277:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:1"
																		},
																		"nativeSrc": "5277:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:1"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "5297:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5297:3:1",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5270:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:1"
																},
																"nativeSrc": "5270:31:1",
																"nodeType": "YulFunctionCall",
																"src": "5270:31:1"
															},
															"nativeSrc": "5270:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "5270:31:1"
														},
														{
															"nativeSrc": "5310:27:1",
															"nodeType": "YulAssignment",
															"src": "5310:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5322:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5322:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5333:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5333:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5318:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5318:3:1"
																},
																"nativeSrc": "5318:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5318:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5310:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5310:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4946:397:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5097:9:1",
														"nodeType": "YulTypedName",
														"src": "5097:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5111:4:1",
														"nodeType": "YulTypedName",
														"src": "5111:4:1",
														"type": ""
													}
												],
												"src": "4946:397:1"
											},
											{
												"body": {
													"nativeSrc": "5522:251:1",
													"nodeType": "YulBlock",
													"src": "5522:251:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5539:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5539:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5550:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5550:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5532:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5532:6:1"
																},
																"nativeSrc": "5532:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5532:21:1"
															},
															"nativeSrc": "5532:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5532:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5573:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5573:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5584:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5584:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5569:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5569:3:1"
																		},
																		"nativeSrc": "5569:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5569:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5589:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5589:2:1",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5562:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5562:6:1"
																},
																"nativeSrc": "5562:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5562:30:1"
															},
															"nativeSrc": "5562:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5562:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5612:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5612:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5623:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5623:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5608:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5608:3:1"
																		},
																		"nativeSrc": "5608:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5608:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nativeSrc": "5628:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5628:34:1",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5601:6:1"
																},
																"nativeSrc": "5601:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5601:62:1"
															},
															"nativeSrc": "5601:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5601:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5683:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5683:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5694:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5694:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5679:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5679:3:1"
																		},
																		"nativeSrc": "5679:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5679:18:1"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "5699:31:1",
																		"nodeType": "YulLiteral",
																		"src": "5699:31:1",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5672:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5672:6:1"
																},
																"nativeSrc": "5672:59:1",
																"nodeType": "YulFunctionCall",
																"src": "5672:59:1"
															},
															"nativeSrc": "5672:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "5672:59:1"
														},
														{
															"nativeSrc": "5740:27:1",
															"nodeType": "YulAssignment",
															"src": "5740:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5752:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5752:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5763:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5763:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5748:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5748:3:1"
																},
																"nativeSrc": "5748:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5748:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5740:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5740:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5348:425:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5499:9:1",
														"nodeType": "YulTypedName",
														"src": "5499:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5513:4:1",
														"nodeType": "YulTypedName",
														"src": "5513:4:1",
														"type": ""
													}
												],
												"src": "5348:425:1"
											},
											{
												"body": {
													"nativeSrc": "5952:235:1",
													"nodeType": "YulBlock",
													"src": "5952:235:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5969:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5969:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5980:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5980:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5962:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5962:6:1"
																},
																"nativeSrc": "5962:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5962:21:1"
															},
															"nativeSrc": "5962:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5962:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6003:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6003:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6014:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5999:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5999:3:1"
																		},
																		"nativeSrc": "5999:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5999:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:1",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5992:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5992:6:1"
																},
																"nativeSrc": "5992:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5992:30:1"
															},
															"nativeSrc": "5992:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5992:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6042:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6042:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6053:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6053:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6038:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6038:3:1"
																		},
																		"nativeSrc": "6038:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6038:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nativeSrc": "6058:34:1",
																		"nodeType": "YulLiteral",
																		"src": "6058:34:1",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6031:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6031:6:1"
																},
																"nativeSrc": "6031:62:1",
																"nodeType": "YulFunctionCall",
																"src": "6031:62:1"
															},
															"nativeSrc": "6031:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "6031:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6113:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6113:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6124:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6124:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6109:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6109:3:1"
																		},
																		"nativeSrc": "6109:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6109:18:1"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "6129:15:1",
																		"nodeType": "YulLiteral",
																		"src": "6129:15:1",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6102:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6102:6:1"
																},
																"nativeSrc": "6102:43:1",
																"nodeType": "YulFunctionCall",
																"src": "6102:43:1"
															},
															"nativeSrc": "6102:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "6102:43:1"
														},
														{
															"nativeSrc": "6154:27:1",
															"nodeType": "YulAssignment",
															"src": "6154:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6166:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6166:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6177:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6177:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6162:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6162:3:1"
																},
																"nativeSrc": "6162:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6162:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6154:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6154:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5778:409:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5929:9:1",
														"nodeType": "YulTypedName",
														"src": "5929:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5943:4:1",
														"nodeType": "YulTypedName",
														"src": "5943:4:1",
														"type": ""
													}
												],
												"src": "5778:409:1"
											},
											{
												"body": {
													"nativeSrc": "6383:14:1",
													"nodeType": "YulBlock",
													"src": "6383:14:1",
													"statements": [
														{
															"nativeSrc": "6385:10:1",
															"nodeType": "YulAssignment",
															"src": "6385:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "6392:3:1",
																"nodeType": "YulIdentifier",
																"src": "6392:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6385:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6385:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6192:205:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6367:3:1",
														"nodeType": "YulTypedName",
														"src": "6367:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6375:3:1",
														"nodeType": "YulTypedName",
														"src": "6375:3:1",
														"type": ""
													}
												],
												"src": "6192:205:1"
											},
											{
												"body": {
													"nativeSrc": "6576:174:1",
													"nodeType": "YulBlock",
													"src": "6576:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6593:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6593:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6604:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6586:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6586:6:1"
																},
																"nativeSrc": "6586:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6586:21:1"
															},
															"nativeSrc": "6586:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6586:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6627:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6627:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6638:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6638:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6623:3:1"
																		},
																		"nativeSrc": "6623:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6623:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6643:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6643:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6616:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6616:6:1"
																},
																"nativeSrc": "6616:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6616:30:1"
															},
															"nativeSrc": "6616:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6616:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6666:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6666:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6677:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6677:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6662:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6662:3:1"
																		},
																		"nativeSrc": "6662:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6662:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nativeSrc": "6682:26:1",
																		"nodeType": "YulLiteral",
																		"src": "6682:26:1",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6655:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6655:6:1"
																},
																"nativeSrc": "6655:54:1",
																"nodeType": "YulFunctionCall",
																"src": "6655:54:1"
															},
															"nativeSrc": "6655:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "6655:54:1"
														},
														{
															"nativeSrc": "6718:26:1",
															"nodeType": "YulAssignment",
															"src": "6718:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6730:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6730:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6741:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6741:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6726:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6726:3:1"
																},
																"nativeSrc": "6726:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6726:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6718:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6718:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6402:348:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6553:9:1",
														"nodeType": "YulTypedName",
														"src": "6553:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6567:4:1",
														"nodeType": "YulTypedName",
														"src": "6567:4:1",
														"type": ""
													}
												],
												"src": "6402:348:1"
											},
											{
												"body": {
													"nativeSrc": "6929:231:1",
													"nodeType": "YulBlock",
													"src": "6929:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6946:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6946:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6957:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6957:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6939:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6939:6:1"
																},
																"nativeSrc": "6939:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6939:21:1"
															},
															"nativeSrc": "6939:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6939:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6980:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6980:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6991:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6991:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6976:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6976:3:1"
																		},
																		"nativeSrc": "6976:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6976:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6996:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6996:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6969:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6969:6:1"
																},
																"nativeSrc": "6969:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6969:30:1"
															},
															"nativeSrc": "6969:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6969:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7019:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7019:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7030:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7030:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7015:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7015:3:1"
																		},
																		"nativeSrc": "7015:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7015:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nativeSrc": "7035:34:1",
																		"nodeType": "YulLiteral",
																		"src": "7035:34:1",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7008:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7008:6:1"
																},
																"nativeSrc": "7008:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7008:62:1"
															},
															"nativeSrc": "7008:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "7008:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7090:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7090:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7101:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7101:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7086:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7086:3:1"
																		},
																		"nativeSrc": "7086:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7086:18:1"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nativeSrc": "7106:11:1",
																		"nodeType": "YulLiteral",
																		"src": "7106:11:1",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7079:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7079:6:1"
																},
																"nativeSrc": "7079:39:1",
																"nodeType": "YulFunctionCall",
																"src": "7079:39:1"
															},
															"nativeSrc": "7079:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "7079:39:1"
														},
														{
															"nativeSrc": "7127:27:1",
															"nodeType": "YulAssignment",
															"src": "7127:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7139:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7139:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7150:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7150:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7135:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7135:3:1"
																},
																"nativeSrc": "7135:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7135:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7127:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7127:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6755:405:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6906:9:1",
														"nodeType": "YulTypedName",
														"src": "6906:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6920:4:1",
														"nodeType": "YulTypedName",
														"src": "6920:4:1",
														"type": ""
													}
												],
												"src": "6755:405:1"
											},
											{
												"body": {
													"nativeSrc": "7215:162:1",
													"nodeType": "YulBlock",
													"src": "7215:162:1",
													"statements": [
														{
															"nativeSrc": "7225:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7225:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7245:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7245:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7239:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7239:5:1"
																},
																"nativeSrc": "7239:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7239:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7229:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7229:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7266:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7266:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7275:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7275:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7282:4:1",
																				"nodeType": "YulLiteral",
																				"src": "7282:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7271:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7271:3:1"
																		},
																		"nativeSrc": "7271:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7271:16:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7289:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7289:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7260:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7260:5:1"
																},
																"nativeSrc": "7260:36:1",
																"nodeType": "YulFunctionCall",
																"src": "7260:36:1"
															},
															"nativeSrc": "7260:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "7260:36:1"
														},
														{
															"nativeSrc": "7305:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7305:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7319:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7319:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7324:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7324:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7315:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7315:3:1"
																},
																"nativeSrc": "7315:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7315:16:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7309:2:1",
																	"nodeType": "YulTypedName",
																	"src": "7309:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "7347:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "7347:2:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7351:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7351:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7340:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7340:6:1"
																},
																"nativeSrc": "7340:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7340:13:1"
															},
															"nativeSrc": "7340:13:1",
															"nodeType": "YulExpressionStatement",
															"src": "7340:13:1"
														},
														{
															"nativeSrc": "7362:9:1",
															"nodeType": "YulAssignment",
															"src": "7362:9:1",
															"value": {
																"name": "_1",
																"nativeSrc": "7369:2:1",
																"nodeType": "YulIdentifier",
																"src": "7369:2:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7362:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7362:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "7165:212:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7192:5:1",
														"nodeType": "YulTypedName",
														"src": "7192:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7199:3:1",
														"nodeType": "YulTypedName",
														"src": "7199:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7207:3:1",
														"nodeType": "YulTypedName",
														"src": "7207:3:1",
														"type": ""
													}
												],
												"src": "7165:212:1"
											},
											{
												"body": {
													"nativeSrc": "7569:80:1",
													"nodeType": "YulBlock",
													"src": "7569:80:1",
													"statements": [
														{
															"nativeSrc": "7579:64:1",
															"nodeType": "YulAssignment",
															"src": "7579:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7604:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7604:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7630:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7630:6:1"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "7638:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7638:3:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "7612:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "7612:17:1"
																		},
																		"nativeSrc": "7612:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7612:30:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7586:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7586:17:1"
																},
																"nativeSrc": "7586:57:1",
																"nodeType": "YulFunctionCall",
																"src": "7586:57:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7579:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7579:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7382:267:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7537:3:1",
														"nodeType": "YulTypedName",
														"src": "7537:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7542:6:1",
														"nodeType": "YulTypedName",
														"src": "7542:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7550:6:1",
														"nodeType": "YulTypedName",
														"src": "7550:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7561:3:1",
														"nodeType": "YulTypedName",
														"src": "7561:3:1",
														"type": ""
													}
												],
												"src": "7382:267:1"
											},
											{
												"body": {
													"nativeSrc": "7828:228:1",
													"nodeType": "YulBlock",
													"src": "7828:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7845:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7845:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7856:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7856:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7838:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7838:6:1"
																},
																"nativeSrc": "7838:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7838:21:1"
															},
															"nativeSrc": "7838:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7838:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7879:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7879:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7890:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7890:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7875:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7875:3:1"
																		},
																		"nativeSrc": "7875:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7875:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7895:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7895:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7868:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7868:6:1"
																},
																"nativeSrc": "7868:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7868:30:1"
															},
															"nativeSrc": "7868:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7868:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7918:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7918:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7929:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7929:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7914:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7914:3:1"
																		},
																		"nativeSrc": "7914:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7914:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "7934:34:1",
																		"nodeType": "YulLiteral",
																		"src": "7934:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7907:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7907:6:1"
																},
																"nativeSrc": "7907:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7907:62:1"
															},
															"nativeSrc": "7907:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "7907:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7989:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7989:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8000:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8000:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7985:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:1"
																		},
																		"nativeSrc": "7985:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7985:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "8005:8:1",
																		"nodeType": "YulLiteral",
																		"src": "8005:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7978:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7978:6:1"
																},
																"nativeSrc": "7978:36:1",
																"nodeType": "YulFunctionCall",
																"src": "7978:36:1"
															},
															"nativeSrc": "7978:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "7978:36:1"
														},
														{
															"nativeSrc": "8023:27:1",
															"nodeType": "YulAssignment",
															"src": "8023:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8035:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8035:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8046:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8046:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8031:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8031:3:1"
																},
																"nativeSrc": "8031:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8031:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8023:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8023:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7654:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7805:9:1",
														"nodeType": "YulTypedName",
														"src": "7805:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7819:4:1",
														"nodeType": "YulTypedName",
														"src": "7819:4:1",
														"type": ""
													}
												],
												"src": "7654:402:1"
											},
											{
												"body": {
													"nativeSrc": "8235:182:1",
													"nodeType": "YulBlock",
													"src": "8235:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8252:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8252:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8263:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8263:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8245:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8245:6:1"
																},
																"nativeSrc": "8245:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8245:21:1"
															},
															"nativeSrc": "8245:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8245:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8286:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8286:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8297:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8297:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8282:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8282:3:1"
																		},
																		"nativeSrc": "8282:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8282:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8302:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8302:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8275:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8275:6:1"
																},
																"nativeSrc": "8275:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8275:30:1"
															},
															"nativeSrc": "8275:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8275:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8325:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8325:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8336:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8336:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8321:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8321:3:1"
																		},
																		"nativeSrc": "8321:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8321:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "8341:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8341:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8314:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8314:6:1"
																},
																"nativeSrc": "8314:62:1",
																"nodeType": "YulFunctionCall",
																"src": "8314:62:1"
															},
															"nativeSrc": "8314:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "8314:62:1"
														},
														{
															"nativeSrc": "8385:26:1",
															"nodeType": "YulAssignment",
															"src": "8385:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8397:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8397:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8408:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8408:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8393:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8393:3:1"
																},
																"nativeSrc": "8393:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8393:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8385:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8385:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8061:356:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8212:9:1",
														"nodeType": "YulTypedName",
														"src": "8212:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8226:4:1",
														"nodeType": "YulTypedName",
														"src": "8226:4:1",
														"type": ""
													}
												],
												"src": "8061:356:1"
											},
											{
												"body": {
													"nativeSrc": "8596:227:1",
													"nodeType": "YulBlock",
													"src": "8596:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8613:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8613:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8624:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8624:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8606:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8606:6:1"
																},
																"nativeSrc": "8606:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8606:21:1"
															},
															"nativeSrc": "8606:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8606:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8647:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8647:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8658:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8658:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8643:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8643:3:1"
																		},
																		"nativeSrc": "8643:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8643:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8663:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8663:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8636:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8636:6:1"
																},
																"nativeSrc": "8636:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8636:30:1"
															},
															"nativeSrc": "8636:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8636:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8686:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8686:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8697:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8697:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8682:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8682:3:1"
																		},
																		"nativeSrc": "8682:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8682:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nativeSrc": "8702:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8702:34:1",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8675:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8675:6:1"
																},
																"nativeSrc": "8675:62:1",
																"nodeType": "YulFunctionCall",
																"src": "8675:62:1"
															},
															"nativeSrc": "8675:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "8675:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8757:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8757:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8768:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8768:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8753:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8753:3:1"
																		},
																		"nativeSrc": "8753:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8753:18:1"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nativeSrc": "8773:7:1",
																		"nodeType": "YulLiteral",
																		"src": "8773:7:1",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8746:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8746:6:1"
																},
																"nativeSrc": "8746:35:1",
																"nodeType": "YulFunctionCall",
																"src": "8746:35:1"
															},
															"nativeSrc": "8746:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "8746:35:1"
														},
														{
															"nativeSrc": "8790:27:1",
															"nodeType": "YulAssignment",
															"src": "8790:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8802:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8802:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8813:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8813:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8798:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8798:3:1"
																},
																"nativeSrc": "8798:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8798:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8790:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8790:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8422:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8573:9:1",
														"nodeType": "YulTypedName",
														"src": "8573:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8587:4:1",
														"nodeType": "YulTypedName",
														"src": "8587:4:1",
														"type": ""
													}
												],
												"src": "8422:401:1"
											},
											{
												"body": {
													"nativeSrc": "9002:226:1",
													"nodeType": "YulBlock",
													"src": "9002:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9019:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9019:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9030:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9030:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9012:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9012:6:1"
																},
																"nativeSrc": "9012:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9012:21:1"
															},
															"nativeSrc": "9012:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9012:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9053:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9064:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9064:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9049:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:1"
																		},
																		"nativeSrc": "9049:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9049:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9069:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9069:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9042:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9042:6:1"
																},
																"nativeSrc": "9042:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9042:30:1"
															},
															"nativeSrc": "9042:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9042:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9092:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9092:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9103:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9103:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9088:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9088:3:1"
																		},
																		"nativeSrc": "9088:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9088:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "9108:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9108:34:1",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9081:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9081:6:1"
																},
																"nativeSrc": "9081:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9081:62:1"
															},
															"nativeSrc": "9081:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "9081:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9163:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9163:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9174:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9174:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9159:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9159:3:1"
																		},
																		"nativeSrc": "9159:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9159:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "9179:6:1",
																		"nodeType": "YulLiteral",
																		"src": "9179:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9152:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9152:6:1"
																},
																"nativeSrc": "9152:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9152:34:1"
															},
															"nativeSrc": "9152:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9152:34:1"
														},
														{
															"nativeSrc": "9195:27:1",
															"nodeType": "YulAssignment",
															"src": "9195:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9207:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9207:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9218:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9218:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9203:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9203:3:1"
																},
																"nativeSrc": "9203:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9203:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9195:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9195:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8828:400:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8979:9:1",
														"nodeType": "YulTypedName",
														"src": "8979:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8993:4:1",
														"nodeType": "YulTypedName",
														"src": "8993:4:1",
														"type": ""
													}
												],
												"src": "8828:400:1"
											},
											{
												"body": {
													"nativeSrc": "9407:175:1",
													"nodeType": "YulBlock",
													"src": "9407:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9424:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9424:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9435:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9435:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9417:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9417:6:1"
																},
																"nativeSrc": "9417:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9417:21:1"
															},
															"nativeSrc": "9417:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9417:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9458:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9458:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9469:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9469:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9454:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9454:3:1"
																		},
																		"nativeSrc": "9454:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9454:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9474:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9474:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9447:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9447:6:1"
																},
																"nativeSrc": "9447:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9447:30:1"
															},
															"nativeSrc": "9447:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9447:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9497:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9497:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9508:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9508:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9493:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:1"
																		},
																		"nativeSrc": "9493:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9493:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "9513:27:1",
																		"nodeType": "YulLiteral",
																		"src": "9513:27:1",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9486:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:1"
																},
																"nativeSrc": "9486:55:1",
																"nodeType": "YulFunctionCall",
																"src": "9486:55:1"
															},
															"nativeSrc": "9486:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "9486:55:1"
														},
														{
															"nativeSrc": "9550:26:1",
															"nodeType": "YulAssignment",
															"src": "9550:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9562:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9562:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9573:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9573:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9558:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9558:3:1"
																},
																"nativeSrc": "9558:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9558:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9550:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9550:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9233:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9384:9:1",
														"nodeType": "YulTypedName",
														"src": "9384:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9398:4:1",
														"nodeType": "YulTypedName",
														"src": "9398:4:1",
														"type": ""
													}
												],
												"src": "9233:349:1"
											},
											{
												"body": {
													"nativeSrc": "9761:240:1",
													"nodeType": "YulBlock",
													"src": "9761:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9778:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9778:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9789:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9789:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9771:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9771:6:1"
																},
																"nativeSrc": "9771:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9771:21:1"
															},
															"nativeSrc": "9771:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9771:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9812:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9812:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9823:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9823:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9808:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9808:3:1"
																		},
																		"nativeSrc": "9808:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9808:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9828:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9828:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9801:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9801:6:1"
																},
																"nativeSrc": "9801:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9801:30:1"
															},
															"nativeSrc": "9801:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9801:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9851:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9851:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9862:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9862:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9847:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9847:3:1"
																		},
																		"nativeSrc": "9847:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9847:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nativeSrc": "9867:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9867:34:1",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9840:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9840:6:1"
																},
																"nativeSrc": "9840:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9840:62:1"
															},
															"nativeSrc": "9840:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "9840:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9922:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9922:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9933:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9933:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9918:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9918:3:1"
																		},
																		"nativeSrc": "9918:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9918:18:1"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nativeSrc": "9938:20:1",
																		"nodeType": "YulLiteral",
																		"src": "9938:20:1",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9911:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9911:6:1"
																},
																"nativeSrc": "9911:48:1",
																"nodeType": "YulFunctionCall",
																"src": "9911:48:1"
															},
															"nativeSrc": "9911:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "9911:48:1"
														},
														{
															"nativeSrc": "9968:27:1",
															"nodeType": "YulAssignment",
															"src": "9968:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9980:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9980:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9991:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9991:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9976:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9976:3:1"
																},
																"nativeSrc": "9976:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9976:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9968:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9968:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9587:414:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9738:9:1",
														"nodeType": "YulTypedName",
														"src": "9738:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9752:4:1",
														"nodeType": "YulTypedName",
														"src": "9752:4:1",
														"type": ""
													}
												],
												"src": "9587:414:1"
											},
											{
												"body": {
													"nativeSrc": "10038:95:1",
													"nodeType": "YulBlock",
													"src": "10038:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10055:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10055:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10062:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10062:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10067:10:1",
																				"nodeType": "YulLiteral",
																				"src": "10067:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10058:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10058:3:1"
																		},
																		"nativeSrc": "10058:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10058:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10048:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10048:6:1"
																},
																"nativeSrc": "10048:31:1",
																"nodeType": "YulFunctionCall",
																"src": "10048:31:1"
															},
															"nativeSrc": "10048:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "10048:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10095:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10095:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10098:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10098:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10088:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10088:6:1"
																},
																"nativeSrc": "10088:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10088:15:1"
															},
															"nativeSrc": "10088:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10088:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10119:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10119:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10122:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10122:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10112:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10112:6:1"
																},
																"nativeSrc": "10112:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10112:15:1"
															},
															"nativeSrc": "10112:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10112:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10006:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10006:127:1"
											},
											{
												"body": {
													"nativeSrc": "10312:170:1",
													"nodeType": "YulBlock",
													"src": "10312:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10329:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10329:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10340:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10340:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10322:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10322:6:1"
																},
																"nativeSrc": "10322:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10322:21:1"
															},
															"nativeSrc": "10322:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10322:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10363:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10363:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10374:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10374:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10359:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10359:3:1"
																		},
																		"nativeSrc": "10359:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10359:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10379:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10379:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10352:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10352:6:1"
																},
																"nativeSrc": "10352:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10352:30:1"
															},
															"nativeSrc": "10352:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10352:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10402:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10402:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10413:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10413:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10398:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10398:3:1"
																		},
																		"nativeSrc": "10398:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10398:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "10418:22:1",
																		"nodeType": "YulLiteral",
																		"src": "10418:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10391:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10391:6:1"
																},
																"nativeSrc": "10391:50:1",
																"nodeType": "YulFunctionCall",
																"src": "10391:50:1"
															},
															"nativeSrc": "10391:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "10391:50:1"
														},
														{
															"nativeSrc": "10450:26:1",
															"nodeType": "YulAssignment",
															"src": "10450:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10462:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10462:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10473:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10473:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10458:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10458:3:1"
																},
																"nativeSrc": "10458:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10458:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10450:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10450:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10138:344:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10289:9:1",
														"nodeType": "YulTypedName",
														"src": "10289:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10303:4:1",
														"nodeType": "YulTypedName",
														"src": "10303:4:1",
														"type": ""
													}
												],
												"src": "10138:344:1"
											},
											{
												"body": {
													"nativeSrc": "10661:166:1",
													"nodeType": "YulBlock",
													"src": "10661:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10678:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10678:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10689:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10689:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10671:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10671:6:1"
																},
																"nativeSrc": "10671:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10671:21:1"
															},
															"nativeSrc": "10671:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10671:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10712:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10712:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10723:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10723:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10708:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10708:3:1"
																		},
																		"nativeSrc": "10708:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10708:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10728:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10728:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10701:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10701:6:1"
																},
																"nativeSrc": "10701:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10701:30:1"
															},
															"nativeSrc": "10701:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10701:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10751:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10751:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10762:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10762:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10747:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10747:3:1"
																		},
																		"nativeSrc": "10747:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10747:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "10767:18:1",
																		"nodeType": "YulLiteral",
																		"src": "10767:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10740:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10740:6:1"
																},
																"nativeSrc": "10740:46:1",
																"nodeType": "YulFunctionCall",
																"src": "10740:46:1"
															},
															"nativeSrc": "10740:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "10740:46:1"
														},
														{
															"nativeSrc": "10795:26:1",
															"nodeType": "YulAssignment",
															"src": "10795:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10807:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10807:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10818:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10818:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10803:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10803:3:1"
																},
																"nativeSrc": "10803:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10803:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10795:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10795:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10487:340:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10638:9:1",
														"nodeType": "YulTypedName",
														"src": "10638:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10652:4:1",
														"nodeType": "YulTypedName",
														"src": "10652:4:1",
														"type": ""
													}
												],
												"src": "10487:340:1"
											},
											{
												"body": {
													"nativeSrc": "11035:297:1",
													"nodeType": "YulBlock",
													"src": "11035:297:1",
													"statements": [
														{
															"nativeSrc": "11045:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11045:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11063:3:1",
																				"nodeType": "YulLiteral",
																				"src": "11063:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11068:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11068:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11059:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11059:3:1"
																		},
																		"nativeSrc": "11059:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11059:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11072:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11072:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11055:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11055:3:1"
																},
																"nativeSrc": "11055:19:1",
																"nodeType": "YulFunctionCall",
																"src": "11055:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11049:2:1",
																	"nodeType": "YulTypedName",
																	"src": "11049:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11090:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11090:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11105:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11105:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11113:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "11113:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11101:3:1"
																		},
																		"nativeSrc": "11101:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11101:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11083:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11083:6:1"
																},
																"nativeSrc": "11083:34:1",
																"nodeType": "YulFunctionCall",
																"src": "11083:34:1"
															},
															"nativeSrc": "11083:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "11083:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11137:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11137:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11148:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11148:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11133:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11133:3:1"
																		},
																		"nativeSrc": "11133:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11133:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11157:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11157:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11165:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "11165:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11153:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11153:3:1"
																		},
																		"nativeSrc": "11153:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11153:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11126:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11126:6:1"
																},
																"nativeSrc": "11126:43:1",
																"nodeType": "YulFunctionCall",
																"src": "11126:43:1"
															},
															"nativeSrc": "11126:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "11126:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11189:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11189:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11200:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11200:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11185:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11185:3:1"
																		},
																		"nativeSrc": "11185:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11185:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11205:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11205:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11178:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11178:6:1"
																},
																"nativeSrc": "11178:34:1",
																"nodeType": "YulFunctionCall",
																"src": "11178:34:1"
															},
															"nativeSrc": "11178:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "11178:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11232:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11232:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11243:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11243:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11228:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11228:3:1"
																		},
																		"nativeSrc": "11228:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11228:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11248:3:1",
																		"nodeType": "YulLiteral",
																		"src": "11248:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11221:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11221:6:1"
																},
																"nativeSrc": "11221:31:1",
																"nodeType": "YulFunctionCall",
																"src": "11221:31:1"
															},
															"nativeSrc": "11221:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "11221:31:1"
														},
														{
															"nativeSrc": "11261:65:1",
															"nodeType": "YulAssignment",
															"src": "11261:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11298:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11298:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11310:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11310:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11321:3:1",
																				"nodeType": "YulLiteral",
																				"src": "11321:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11306:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11306:3:1"
																		},
																		"nativeSrc": "11306:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11306:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "11269:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "11269:28:1"
																},
																"nativeSrc": "11269:57:1",
																"nodeType": "YulFunctionCall",
																"src": "11269:57:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11261:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11261:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "10832:500:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10980:9:1",
														"nodeType": "YulTypedName",
														"src": "10980:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10991:6:1",
														"nodeType": "YulTypedName",
														"src": "10991:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10999:6:1",
														"nodeType": "YulTypedName",
														"src": "10999:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11007:6:1",
														"nodeType": "YulTypedName",
														"src": "11007:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11015:6:1",
														"nodeType": "YulTypedName",
														"src": "11015:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11026:4:1",
														"nodeType": "YulTypedName",
														"src": "11026:4:1",
														"type": ""
													}
												],
												"src": "10832:500:1"
											},
											{
												"body": {
													"nativeSrc": "11417:169:1",
													"nodeType": "YulBlock",
													"src": "11417:169:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11463:16:1",
																"nodeType": "YulBlock",
																"src": "11463:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11472:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11472:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11475:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11475:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11465:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11465:6:1"
																			},
																			"nativeSrc": "11465:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11465:12:1"
																		},
																		"nativeSrc": "11465:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11465:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11438:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11438:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11447:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11447:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11434:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11434:3:1"
																		},
																		"nativeSrc": "11434:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11434:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11459:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11459:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11430:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11430:3:1"
																},
																"nativeSrc": "11430:32:1",
																"nodeType": "YulFunctionCall",
																"src": "11430:32:1"
															},
															"nativeSrc": "11427:52:1",
															"nodeType": "YulIf",
															"src": "11427:52:1"
														},
														{
															"nativeSrc": "11488:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11488:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11507:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11507:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11501:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11501:5:1"
																},
																"nativeSrc": "11501:16:1",
																"nodeType": "YulFunctionCall",
																"src": "11501:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11492:5:1",
																	"nodeType": "YulTypedName",
																	"src": "11492:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11550:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "11526:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "11526:23:1"
																},
																"nativeSrc": "11526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11526:30:1"
															},
															"nativeSrc": "11526:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "11526:30:1"
														},
														{
															"nativeSrc": "11565:15:1",
															"nodeType": "YulAssignment",
															"src": "11565:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "11575:5:1",
																"nodeType": "YulIdentifier",
																"src": "11575:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11565:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11565:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "11337:249:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11383:9:1",
														"nodeType": "YulTypedName",
														"src": "11383:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11394:7:1",
														"nodeType": "YulTypedName",
														"src": "11394:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11406:6:1",
														"nodeType": "YulTypedName",
														"src": "11406:6:1",
														"type": ""
													}
												],
												"src": "11337:249:1"
											},
											{
												"body": {
													"nativeSrc": "11765:182:1",
													"nodeType": "YulBlock",
													"src": "11765:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11782:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11782:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11793:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11793:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11775:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11775:6:1"
																},
																"nativeSrc": "11775:21:1",
																"nodeType": "YulFunctionCall",
																"src": "11775:21:1"
															},
															"nativeSrc": "11775:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "11775:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11816:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11816:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11827:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11827:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11812:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11812:3:1"
																		},
																		"nativeSrc": "11812:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11812:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11832:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11832:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11805:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11805:6:1"
																},
																"nativeSrc": "11805:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11805:30:1"
															},
															"nativeSrc": "11805:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "11805:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11855:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11855:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11866:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11866:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11851:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11851:3:1"
																		},
																		"nativeSrc": "11851:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11851:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "11871:34:1",
																		"nodeType": "YulLiteral",
																		"src": "11871:34:1",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11844:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11844:6:1"
																},
																"nativeSrc": "11844:62:1",
																"nodeType": "YulFunctionCall",
																"src": "11844:62:1"
															},
															"nativeSrc": "11844:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "11844:62:1"
														},
														{
															"nativeSrc": "11915:26:1",
															"nodeType": "YulAssignment",
															"src": "11915:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11927:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11927:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11938:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11938:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11923:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11923:3:1"
																},
																"nativeSrc": "11923:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11923:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11915:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11915:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11591:356:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11742:9:1",
														"nodeType": "YulTypedName",
														"src": "11742:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11756:4:1",
														"nodeType": "YulTypedName",
														"src": "11756:4:1",
														"type": ""
													}
												],
												"src": "11591:356:1"
											},
											{
												"body": {
													"nativeSrc": "12126:178:1",
													"nodeType": "YulBlock",
													"src": "12126:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12143:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12143:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12154:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12154:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12136:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12136:6:1"
																},
																"nativeSrc": "12136:21:1",
																"nodeType": "YulFunctionCall",
																"src": "12136:21:1"
															},
															"nativeSrc": "12136:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "12136:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12177:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12177:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12188:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12188:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12173:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12173:3:1"
																		},
																		"nativeSrc": "12173:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12173:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12193:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12193:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12166:6:1"
																},
																"nativeSrc": "12166:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12166:30:1"
															},
															"nativeSrc": "12166:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "12166:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12216:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12216:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12227:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12227:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12212:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12212:3:1"
																		},
																		"nativeSrc": "12212:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12212:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nativeSrc": "12232:30:1",
																		"nodeType": "YulLiteral",
																		"src": "12232:30:1",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12205:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12205:6:1"
																},
																"nativeSrc": "12205:58:1",
																"nodeType": "YulFunctionCall",
																"src": "12205:58:1"
															},
															"nativeSrc": "12205:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "12205:58:1"
														},
														{
															"nativeSrc": "12272:26:1",
															"nodeType": "YulAssignment",
															"src": "12272:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12284:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12284:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12295:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12295:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12280:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12280:3:1"
																},
																"nativeSrc": "12280:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12280:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12272:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12272:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11952:352:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12103:9:1",
														"nodeType": "YulTypedName",
														"src": "12103:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12117:4:1",
														"nodeType": "YulTypedName",
														"src": "12117:4:1",
														"type": ""
													}
												],
												"src": "11952:352:1"
											},
											{
												"body": {
													"nativeSrc": "12341:95:1",
													"nodeType": "YulBlock",
													"src": "12341:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12358:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12358:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12365:3:1",
																				"nodeType": "YulLiteral",
																				"src": "12365:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12370:10:1",
																				"nodeType": "YulLiteral",
																				"src": "12370:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12361:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12361:3:1"
																		},
																		"nativeSrc": "12361:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12361:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12351:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12351:6:1"
																},
																"nativeSrc": "12351:31:1",
																"nodeType": "YulFunctionCall",
																"src": "12351:31:1"
															},
															"nativeSrc": "12351:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "12351:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12398:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12398:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12401:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12401:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12391:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12391:6:1"
																},
																"nativeSrc": "12391:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12391:15:1"
															},
															"nativeSrc": "12391:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "12391:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12422:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12425:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12425:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12415:6:1"
																},
																"nativeSrc": "12415:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12415:15:1"
															},
															"nativeSrc": "12415:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "12415:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12309:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "12309:127:1"
											},
											{
												"body": {
													"nativeSrc": "12490:79:1",
													"nodeType": "YulBlock",
													"src": "12490:79:1",
													"statements": [
														{
															"nativeSrc": "12500:17:1",
															"nodeType": "YulAssignment",
															"src": "12500:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12512:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12512:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12515:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12515:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12508:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12508:3:1"
																},
																"nativeSrc": "12508:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12508:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12500:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12500:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12541:22:1",
																"nodeType": "YulBlock",
																"src": "12541:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12543:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12543:16:1"
																			},
																			"nativeSrc": "12543:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12543:18:1"
																		},
																		"nativeSrc": "12543:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12543:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12532:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "12532:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12538:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12538:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12529:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12529:2:1"
																},
																"nativeSrc": "12529:11:1",
																"nodeType": "YulFunctionCall",
																"src": "12529:11:1"
															},
															"nativeSrc": "12526:37:1",
															"nodeType": "YulIf",
															"src": "12526:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12441:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12472:1:1",
														"nodeType": "YulTypedName",
														"src": "12472:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12475:1:1",
														"nodeType": "YulTypedName",
														"src": "12475:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12481:4:1",
														"nodeType": "YulTypedName",
														"src": "12481:4:1",
														"type": ""
													}
												],
												"src": "12441:128:1"
											},
											{
												"body": {
													"nativeSrc": "12622:77:1",
													"nodeType": "YulBlock",
													"src": "12622:77:1",
													"statements": [
														{
															"nativeSrc": "12632:16:1",
															"nodeType": "YulAssignment",
															"src": "12632:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12643:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12643:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12646:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12646:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12639:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12639:3:1"
																},
																"nativeSrc": "12639:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12639:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12632:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12632:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12671:22:1",
																"nodeType": "YulBlock",
																"src": "12671:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12673:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12673:16:1"
																			},
																			"nativeSrc": "12673:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12673:18:1"
																		},
																		"nativeSrc": "12673:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12673:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12663:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12663:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12666:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12666:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12660:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12660:2:1"
																},
																"nativeSrc": "12660:10:1",
																"nodeType": "YulFunctionCall",
																"src": "12660:10:1"
															},
															"nativeSrc": "12657:36:1",
															"nodeType": "YulIf",
															"src": "12657:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12574:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12605:1:1",
														"nodeType": "YulTypedName",
														"src": "12605:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12608:1:1",
														"nodeType": "YulTypedName",
														"src": "12608:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12614:3:1",
														"nodeType": "YulTypedName",
														"src": "12614:3:1",
														"type": ""
													}
												],
												"src": "12574:125:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610148575f3560e01c80635c975abb116100bf57806395d89b411161007957806395d89b4114610287578063a22cb4651461028f578063b88d4fde146102a2578063c87b56dd146102b5578063e985e9c5146102c8578063f2fde38b146102db575f80fd5b80635c975abb146102305780636352211e1461023b57806370a082311461024e578063715018a6146102615780638456cb59146102695780638da5cb5b14610271575f80fd5b806318160ddd1161011057806318160ddd146101df57806323b872dd146101e75780633ccfd60b146101fa5780633f4ba83a1461020257806342842e0e1461020a57806342966c681461021d575f80fd5b806301ffc9a71461014c57806306fdde0314610174578063081812fc14610189578063095ea7b3146101b45780631249c58b146101c9575b5f80fd5b61015f61015a366004611411565b6102ee565b60405190151581526020015b60405180910390f35b61017c61033f565b60405161016b919061145a565b61019c61019736600461146c565b6103ce565b6040516001600160a01b03909116815260200161016b565b6101c76101c236600461149e565b6103f3565b005b6101d161050c565b60405190815260200161016b565b6101d1610588565b6101c76101f53660046114c6565b610597565b6101c76105c9565b6101c7610635565b6101c76102183660046114c6565b610647565b6101c761022b36600461146c565b610661565b60065460ff1661015f565b61019c61024936600461146c565b61068f565b6101d161025c3660046114ff565b6106ee565b6101c7610772565b6101c7610783565b60065461010090046001600160a01b031661019c565b61017c610793565b6101c761029d366004611518565b6107a2565b6101c76102b0366004611565565b6107b1565b61017c6102c336600461146c565b6107e9565b61015f6102d636600461163a565b61084d565b6101c76102e93660046114ff565b61087a565b5f6001600160e01b031982166380ac58cd60e01b148061031e57506001600160e01b03198216635b5e139f60e01b145b8061033957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f805461034d9061166b565b80601f01602080910402602001604051908101604052809291908181526020018280546103799061166b565b80156103c45780601f1061039b576101008083540402835291602001916103c4565b820191905f5260205f20905b8154815290600101906020018083116103a757829003601f168201915b5050505050905090565b5f6103d8826108f0565b505f908152600460205260409020546001600160a01b031690565b5f6103fd8261068f565b9050806001600160a01b0316836001600160a01b03160361046f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061048b575061048b813361084d565b6104fd5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610466565b610507838361094e565b505050565b5f6105156109bb565b610523600780546001019055565b5f61052d60075490565b905061055061054a6006546001600160a01b036101009091041690565b82610a1b565b6040518181527fd762d6ab69e51adef66de5ac13b45b3345367b5f0056d1ce4a46b4e5d6ba00e79060200160405180910390a1905090565b5f61059260075490565b905090565b6105a2335b82610a34565b6105be5760405162461bcd60e51b8152600401610466906116a3565b610507838383610a92565b6105d16109bb565b6006546040515f9161010090046001600160a01b03169047908381818185875af1925050503d805f8114610620576040519150601f19603f3d011682016040523d82523d5f602084013e610625565b606091505b5050905080610632575f80fd5b50565b61063d6109bb565b610645610c01565b565b61050783838360405180602001604052805f8152506107b1565b61066a3361059c565b6106865760405162461bcd60e51b8152600401610466906116a3565b61063281610c53565b5f818152600260205260408120546001600160a01b0316806103395760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610466565b5f6001600160a01b0382166107575760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610466565b506001600160a01b03165f9081526003602052604090205490565b61077a6109bb565b6106455f610cf2565b61078b6109bb565b610645610d4b565b60606001805461034d9061166b565b6107ad338383610d88565b5050565b6107bb3383610a34565b6107d75760405162461bcd60e51b8152600401610466906116a3565b6107e384848484610e55565b50505050565b60606107f4826108f0565b5f6107fd610e88565b90505f81511161081b5760405180602001604052805f815250610846565b8061082584610ea8565b604051602001610836929190611707565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6108826109bb565b6001600160a01b0381166108e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610466565b61063281610cf2565b5f818152600260205260409020546001600160a01b03166106325760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610466565b5f81815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109828261068f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6006546001600160a01b036101009091041633146106455760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610466565b6107ad828260405180602001604052805f815250610f38565b5f80610a3f8361068f565b9050806001600160a01b0316846001600160a01b03161480610a665750610a66818561084d565b80610a8a5750836001600160a01b0316610a7f846103ce565b6001600160a01b0316145b949350505050565b826001600160a01b0316610aa58261068f565b6001600160a01b031614610acb5760405162461bcd60e51b81526004016104669061171b565b6001600160a01b038216610b2d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610466565b610b3a8383836001610f6a565b826001600160a01b0316610b4d8261068f565b6001600160a01b031614610b735760405162461bcd60e51b81526004016104669061171b565b5f81815260046020908152604080832080546001600160a01b03199081169091556001600160a01b038781168086526003855283862080545f1901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610c09610f7e565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b5f610c5d8261068f565b9050610c6c815f846001610f6a565b610c758261068f565b5f83815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080545f190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b610d53610fc7565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c363390565b816001600160a01b0316836001600160a01b031603610de95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610466565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e60848484610a92565b610e6c8484848461100d565b6107e35760405162461bcd60e51b815260040161046690611760565b606060405180606001604052806027815260200161184460279139905090565b60605f610eb48361110a565b60010190505f8167ffffffffffffffff811115610ed357610ed3611551565b6040519080825280601f01601f191660200182016040528015610efd576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610f0757509392505050565b610f4283836111e1565b610f4e5f84848461100d565b6105075760405162461bcd60e51b815260040161046690611760565b610f72610fc7565b6107e384848484611376565b60065460ff166106455760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610466565b60065460ff16156106455760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610466565b5f6001600160a01b0384163b156110ff57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110509033908990889088906004016117b2565b6020604051808303815f875af192505050801561108a575060408051601f3d908101601f19168201909252611087918101906117ee565b60015b6110e5573d8080156110b7576040519150601f19603f3d011682016040523d82523d5f602084013e6110bc565b606091505b5080515f036110dd5760405162461bcd60e51b815260040161046690611760565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a8a565b506001949350505050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111485772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611174576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061119257662386f26fc10000830492506010015b6305f5e10083106111aa576305f5e100830492506008015b61271083106111be57612710830492506004015b606483106111d0576064830492506002015b600a83106103395760010192915050565b6001600160a01b0382166112375760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610466565b5f818152600260205260409020546001600160a01b03161561129b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610466565b6112a85f83836001610f6a565b5f818152600260205260409020546001600160a01b03161561130c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610466565b6001600160a01b0382165f81815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60018111156107e3576001600160a01b038416156113bb576001600160a01b0384165f90815260036020526040812080548392906113b590849061181d565b90915550505b6001600160a01b038316156107e3576001600160a01b0383165f90815260036020526040812080548392906113f1908490611830565b909155505050505050565b6001600160e01b031981168114610632575f80fd5b5f60208284031215611421575f80fd5b8135610846816113fc565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610846602083018461142c565b5f6020828403121561147c575f80fd5b5035919050565b80356001600160a01b0381168114611499575f80fd5b919050565b5f80604083850312156114af575f80fd5b6114b883611483565b946020939093013593505050565b5f805f606084860312156114d8575f80fd5b6114e184611483565b92506114ef60208501611483565b9150604084013590509250925092565b5f6020828403121561150f575f80fd5b61084682611483565b5f8060408385031215611529575f80fd5b61153283611483565b915060208301358015158114611546575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215611578575f80fd5b61158185611483565b935061158f60208601611483565b925060408501359150606085013567ffffffffffffffff808211156115b2575f80fd5b818701915087601f8301126115c5575f80fd5b8135818111156115d7576115d7611551565b604051601f8201601f19908116603f011681019083821181831017156115ff576115ff611551565b816040528281528a6020848701011115611617575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f806040838503121561164b575f80fd5b61165483611483565b915061166260208401611483565b90509250929050565b600181811c9082168061167f57607f821691505b60208210810361169d57634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b5f81518060208401855e5f93019283525090919050565b5f610a8a61171583866116f0565b846116f0565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f906117e49083018461142c565b9695505050505050565b5f602082840312156117fe575f80fd5b8151610846816113fc565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561033957610339611809565b808201808211156103395761033961180956fe68747470733a2f2f6e66742e63727970746f73686f7065652e6e74696c6f79616c74792e636f6da264697066735822122055b7c88e3b91a44024b1bbda43267bee10ed6ea7a94e982849628063a4daa0b564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x148 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xBF JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15F PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x146C JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x149E JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x588 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x146C JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x15F JUMP JUMPDEST PUSH2 0x19C PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x146C JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x14FF JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19C JUMP JUMPDEST PUSH2 0x17C PUSH2 0x793 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x146C JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x163A JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x14FF JUMP JUMPDEST PUSH2 0x87A JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x31E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x339 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x166B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x379 SWAP1 PUSH2 0x166B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3D8 DUP3 PUSH2 0x8F0 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3FD DUP3 PUSH2 0x68F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x48B JUMPI POP PUSH2 0x48B DUP2 CALLER PUSH2 0x84D JUMP JUMPDEST PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x507 DUP4 DUP4 PUSH2 0x94E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x515 PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x523 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x52D PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x550 PUSH2 0x54A PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xD762D6AB69E51ADEF66DE5AC13B45B3345367B5F0056D1CE4A46B4E5D6BA00E7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x592 PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5A2 CALLER JUMPDEST DUP3 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x507 DUP4 DUP4 DUP4 PUSH2 0xA92 JUMP JUMPDEST PUSH2 0x5D1 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x625 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x632 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x63D PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x645 PUSH2 0xC01 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x507 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x66A CALLER PUSH2 0x59C JUMP JUMPDEST PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x632 DUP2 PUSH2 0xC53 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x339 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x77A PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x645 PUSH0 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0x78B PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x645 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x7AD CALLER DUP4 DUP4 PUSH2 0xD88 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7BB CALLER DUP4 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x7E3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE55 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7F4 DUP3 PUSH2 0x8F0 JUMP JUMPDEST PUSH0 PUSH2 0x7FD PUSH2 0xE88 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x846 JUMP JUMPDEST DUP1 PUSH2 0x825 DUP5 PUSH2 0xEA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x836 SWAP3 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x882 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x632 DUP2 PUSH2 0xCF2 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x982 DUP3 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x7AD DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xF38 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA3F DUP4 PUSH2 0x68F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xA66 JUMPI POP PUSH2 0xA66 DUP2 DUP6 PUSH2 0x84D JUMP JUMPDEST DUP1 PUSH2 0xA8A JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA7F DUP5 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAA5 DUP3 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0xB3A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB4D DUP3 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xC09 PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH2 0xC5D DUP3 PUSH2 0x68F JUMP JUMPDEST SWAP1 POP PUSH2 0xC6C DUP2 PUSH0 DUP5 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0xC75 DUP3 PUSH2 0x68F JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x3 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE DUP8 DUP6 MSTORE PUSH1 0x2 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE MLOAD SWAP3 SWAP4 POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xD53 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC36 CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xE60 DUP5 DUP5 DUP5 PUSH2 0xA92 JUMP JUMPDEST PUSH2 0xE6C DUP5 DUP5 DUP5 DUP5 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1844 PUSH1 0x27 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xEB4 DUP4 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED3 JUMPI PUSH2 0xED3 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEFD JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xF07 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF42 DUP4 DUP4 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0xF4E PUSH0 DUP5 DUP5 DUP5 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0xF72 PUSH2 0xFC7 JUMP JUMPDEST PUSH2 0x7E3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x10FF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1050 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x108A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1087 SWAP2 DUP2 ADD SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10E5 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x1760 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xA8A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1148 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1174 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1192 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x11AA JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x11BE JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x11D0 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x339 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1237 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x129B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x12A8 PUSH0 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x130C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x466 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x13BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13B5 SWAP1 DUP5 SWAP1 PUSH2 0x181D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13F1 SWAP1 DUP5 SWAP1 PUSH2 0x1830 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x632 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1421 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x846 DUP2 PUSH2 0x13FC JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x846 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x142C JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1499 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14B8 DUP4 PUSH2 0x1483 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14E1 DUP5 PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP PUSH2 0x14EF PUSH1 0x20 DUP6 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x846 DUP3 PUSH2 0x1483 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1529 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1532 DUP4 PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1546 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1578 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1581 DUP6 PUSH2 0x1483 JUMP JUMPDEST SWAP4 POP PUSH2 0x158F PUSH1 0x20 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D7 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x15FF JUMPI PUSH2 0x15FF PUSH2 0x1551 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1617 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x164B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1654 DUP4 PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP PUSH2 0x1662 PUSH1 0x20 DUP5 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x167F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x169D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA8A PUSH2 0x1715 DUP4 DUP7 PUSH2 0x16F0 JUMP JUMPDEST DUP5 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x17E4 SWAP1 DUP4 ADD DUP5 PUSH2 0x142C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x846 DUP2 PUSH2 0x13FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x339 JUMPI PUSH2 0x339 PUSH2 0x1809 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x339 JUMPI PUSH2 0x339 PUSH2 0x1809 JUMP INVALID PUSH9 0x747470733A2F2F6E66 PUSH21 0x2E63727970746F73686F7065652E6E74696C6F7961 PUSH13 0x74792E636F6DA2646970667358 0x22 SLT KECCAK256 SSTORE 0xB7 0xC8 DUP15 EXTCODESIZE SWAP2 LOG4 BLOCKHASH 0x24 0xB1 0xBB 0xDA NUMBER 0x26 PUSH28 0xEE10ED6EA7A94E982849628063A4DAA0B564736F6C63430008190033 ",
							"sourceMap": "57721:2441:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41447:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:1;;558:22;540:41;;528:2;513:18;41447:300:0;;;;;;;;42348:98;;;:::i;:::-;;;;;;;:::i;43812:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1482:32:1;;;1464:51;;1452:2;1437:18;43812:167:0;1318:203:1;43345:406:0;;;;;;:::i;:::-;;:::i;:::-;;59391:245;;;:::i;:::-;;;2109:25:1;;;2097:2;2082:18;59391:245:0;1963:177:1;59719:104:0;;;:::i;44489:326::-;;;;;;:::i;:::-;;:::i;59982:178::-;;;:::i;58873:63::-;;;:::i;44881:179::-;;;;;;:::i;:::-;;:::i;57351:238::-;;;;;;:::i;:::-;;:::i;21320:84::-;21390:7;;;;21320:84;;42067:219;;;;;;:::i;:::-;;:::i;41806:204::-;;;;;;:::i;:::-;;:::i;18918:101::-;;;:::i;58808:59::-;;;:::i;18288:85::-;18360:6;;;;;-1:-1:-1;;;;;18360:6:0;18288:85;;42510:102;;;:::i;44046:153::-;;;;;;:::i;:::-;;:::i;45126:314::-;;;;;;:::i;:::-;;:::i;42678:276::-;;;;;;:::i;:::-;;:::i;44265:162::-;;;;;;:::i;:::-;;:::i;19168:198::-;;;;;;:::i;:::-;;:::i;41447:300::-;41549:4;-1:-1:-1;;;;;;41584:40:0;;-1:-1:-1;;;41584:40:0;;:104;;-1:-1:-1;;;;;;;41640:48:0;;-1:-1:-1;;;41640:48:0;41584:104;:156;;;-1:-1:-1;;;;;;;;;;34300:40:0;;;41704:36;41565:175;41447:300;-1:-1:-1;;41447:300:0:o;42348:98::-;42402:13;42434:5;42427:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42348:98;:::o;43812:167::-;43888:7;43907:23;43922:7;43907:14;:23::i;:::-;-1:-1:-1;43948:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;43948:24:0;;43812:167::o;43345:406::-;43425:13;43441:23;43456:7;43441:14;:23::i;:::-;43425:39;;43488:5;-1:-1:-1;;;;;43482:11:0;:2;-1:-1:-1;;;;;43482:11:0;;43474:57;;;;-1:-1:-1;;;43474:57:0;;5148:2:1;43474:57:0;;;5130:21:1;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:1;;;5270:31;5318:19;;43474:57:0;;;;;;;;;16970:10;-1:-1:-1;;;;;43563:21:0;;;;:62;;-1:-1:-1;43588:37:0;43605:5;16970:10;44265:162;:::i;43588:37::-;43542:170;;;;-1:-1:-1;;;43542:170:0;;5550:2:1;43542:170:0;;;5532:21:1;5589:2;5569:18;;;5562:30;5628:34;5608:18;;;5601:62;5699:31;5679:18;;;5672:59;5748:19;;43542:170:0;5348:425:1;43542:170:0;43723:21;43732:2;43736:7;43723:8;:21::i;:::-;43415:336;43345:406;;:::o;59391:245::-;59435:7;18181:13;:11;:13::i;:::-;59454:27:::1;:15;1086:19:::0;;1104:1;1086:19;;;999:123;59454:27:::1;59491:15;59509:25;:15;972:14:::0;;881:112;59509:25:::1;59491:43;;59545:27;59555:7;18360:6:::0;;-1:-1:-1;;;;;18360:6:0;;;;;;18288:85;59555:7:::1;59564;59545:9;:27::i;:::-;59588:16;::::0;2109:25:1;;;59588:16:0::1;::::0;2097:2:1;2082:18;59588:16:0::1;;;;;;;59622:7:::0;-1:-1:-1;59391:245:0;:::o;59719:104::-;59765:7;59791:25;:15;972:14;;881:112;59791:25;59784:32;;59719:104;:::o;44489:326::-;44678:41;16970:10;44697:12;44711:7;44678:18;:41::i;:::-;44670:99;;;;-1:-1:-1;;;44670:99:0;;;;;;;:::i;:::-;44780:28;44790:4;44796:2;44800:7;44780:9;:28::i;59982:178::-;18181:13;:11;:13::i;:::-;18360:6;;60050:77:::1;::::0;60032:12:::1;::::0;18360:6;;;-1:-1:-1;;;;;18360:6:0;;60079:21:::1;::::0;60032:12;60050:77;60032:12;60050:77;60079:21;18360:6;60050:77:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;60031:96;;;60145:7;60137:16;;;::::0;::::1;;60021:139;59982:178::o:0;58873:63::-;18181:13;:11;:13::i;:::-;58919:10:::1;:8;:10::i;:::-;58873:63::o:0;44881:179::-;45014:39;45031:4;45037:2;45041:7;45014:39;;;;;;;;;;;;:16;:39::i;57351:238::-;57467:41;16970:10;57486:12;16891:96;57467:41;57459:99;;;;-1:-1:-1;;;57459:99:0;;;;;;;:::i;:::-;57568:14;57574:7;57568:5;:14::i;42067:219::-;42139:7;46807:16;;;:7;:16;;;;;;-1:-1:-1;;;;;46807:16:0;;42201:56;;;;-1:-1:-1;;;42201:56:0;;6604:2:1;42201:56:0;;;6586:21:1;6643:2;6623:18;;;6616:30;-1:-1:-1;;;6662:18:1;;;6655:54;6726:18;;42201:56:0;6402:348:1;41806:204:0;41878:7;-1:-1:-1;;;;;41905:19:0;;41897:73;;;;-1:-1:-1;;;41897:73:0;;6957:2:1;41897:73:0;;;6939:21:1;6996:2;6976:18;;;6969:30;7035:34;7015:18;;;7008:62;-1:-1:-1;;;7086:18:1;;;7079:39;7135:19;;41897:73:0;6755:405:1;41897:73:0;-1:-1:-1;;;;;;41987:16:0;;;;;:9;:16;;;;;;;41806:204::o;18918:101::-;18181:13;:11;:13::i;:::-;18982:30:::1;19009:1;18982:18;:30::i;58808:59::-:0;18181:13;:11;:13::i;:::-;58852:8:::1;:6;:8::i;42510:102::-:0;42566:13;42598:7;42591:14;;;;;:::i;44046:153::-;44140:52;16970:10;44173:8;44183;44140:18;:52::i;:::-;44046:153;;:::o;45126:314::-;45294:41;16970:10;45327:7;45294:18;:41::i;:::-;45286:99;;;;-1:-1:-1;;;45286:99:0;;;;;;;:::i;:::-;45395:38;45409:4;45415:2;45419:7;45428:4;45395:13;:38::i;:::-;45126:314;;;;:::o;42678:276::-;42751:13;42776:23;42791:7;42776:14;:23::i;:::-;42810:21;42834:10;:8;:10::i;:::-;42810:34;;42885:1;42867:7;42861:21;:25;:86;;;;;;;;;;;;;;;;;42913:7;42922:18;:7;:16;:18::i;:::-;42896:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;42861:86;42854:93;42678:276;-1:-1:-1;;;42678:276:0:o;44265:162::-;-1:-1:-1;;;;;44385:25:0;;;44362:4;44385:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;44265:162::o;19168:198::-;18181:13;:11;:13::i;:::-;-1:-1:-1;;;;;19256:22:0;::::1;19248:73;;;::::0;-1:-1:-1;;;19248:73:0;;7856:2:1;19248:73:0::1;::::0;::::1;7838:21:1::0;7895:2;7875:18;;;7868:30;7934:34;7914:18;;;7907:62;-1:-1:-1;;;7985:18:1;;;7978:36;8031:19;;19248:73:0::1;7654:402:1::0;19248:73:0::1;19331:28;19350:8;19331:18;:28::i;53343:133::-:0;47198:4;46807:16;;;:7;:16;;;;;;-1:-1:-1;;;;;46807:16:0;53416:53;;;;-1:-1:-1;;;53416:53:0;;6604:2:1;53416:53:0;;;6586:21:1;6643:2;6623:18;;;6616:30;-1:-1:-1;;;6662:18:1;;;6655:54;6726:18;;53416:53:0;6402:348:1;52645:171:0;52719:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;52719:29:0;-1:-1:-1;;;;;52719:29:0;;;;;;;;:24;;52772:23;52719:24;52772:14;:23::i;:::-;-1:-1:-1;;;;;52763:46:0;;;;;;;;;;;52645:171;;:::o;18446:130::-;18360:6;;-1:-1:-1;;;;;18360:6:0;;;;;16970:10;18509:23;18501:68;;;;-1:-1:-1;;;18501:68:0;;8263:2:1;18501:68:0;;;8245:21:1;;;8282:18;;;8275:30;8341:34;8321:18;;;8314:62;8393:18;;18501:68:0;8061:356:1;48008:108:0;48083:26;48093:2;48097:7;48083:26;;;;;;;;;;;;:9;:26::i;47417:261::-;47510:4;47526:13;47542:23;47557:7;47542:14;:23::i;:::-;47526:39;;47594:5;-1:-1:-1;;;;;47583:16:0;:7;-1:-1:-1;;;;;47583:16:0;;:52;;;;47603:32;47620:5;47627:7;47603:16;:32::i;:::-;47583:87;;;;47663:7;-1:-1:-1;;;;;47639:31:0;:20;47651:7;47639:11;:20::i;:::-;-1:-1:-1;;;;;47639:31:0;;47583:87;47575:96;47417:261;-1:-1:-1;;;;47417:261:0:o;51300:1233::-;51454:4;-1:-1:-1;;;;;51427:31:0;:23;51442:7;51427:14;:23::i;:::-;-1:-1:-1;;;;;51427:31:0;;51419:81;;;;-1:-1:-1;;;51419:81:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;51518:16:0;;51510:65;;;;-1:-1:-1;;;51510:65:0;;9030:2:1;51510:65:0;;;9012:21:1;9069:2;9049:18;;;9042:30;9108:34;9088:18;;;9081:62;-1:-1:-1;;;9159:18:1;;;9152:34;9203:19;;51510:65:0;8828:400:1;51510:65:0;51586:42;51607:4;51613:2;51617:7;51626:1;51586:20;:42::i;:::-;51755:4;-1:-1:-1;;;;;51728:31:0;:23;51743:7;51728:14;:23::i;:::-;-1:-1:-1;;;;;51728:31:0;;51720:81;;;;-1:-1:-1;;;51720:81:0;;;;;;;:::i;:::-;51870:24;;;;:15;:24;;;;;;;;51863:31;;-1:-1:-1;;;;;;51863:31:0;;;;;;-1:-1:-1;;;;;52338:15:0;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;52338:20:0;;;52372:13;;;;;;;;;:18;;51863:31;52372:18;;;52410:16;;;:7;:16;;;;;;:21;;;;;;;;;;52447:27;;51886:7;;52447:27;;;43415:336;43345:406;;:::o;22138:117::-;21191:16;:14;:16::i;:::-;22196:7:::1;:15:::0;;-1:-1:-1;;22196:15:0::1;::::0;;22226:22:::1;16970:10:::0;22235:12:::1;22226:22;::::0;-1:-1:-1;;;;;1482:32:1;;;1464:51;;1452:2;1437:18;22226:22:0::1;;;;;;;22138:117::o:0;50214:762::-;50273:13;50289:23;50304:7;50289:14;:23::i;:::-;50273:39;;50323:51;50344:5;50359:1;50363:7;50372:1;50323:20;:51::i;:::-;50484:23;50499:7;50484:14;:23::i;:::-;50552:24;;;;:15;:24;;;;;;;;50545:31;;-1:-1:-1;;;;;;50545:31:0;;;;;;-1:-1:-1;;;;;50792:16:0;;;;;:9;:16;;;;;:21;;-1:-1:-1;;50792:21:0;;;50840:16;;;:7;:16;;;;;;50833:23;;;;;;;50872:36;50476:31;;-1:-1:-1;50568:7:0;;50872:36;;50552:24;;50872:36;44046:153;;:::o;19520:187::-;19612:6;;;-1:-1:-1;;;;;19628:17:0;;;19612:6;19628:17;;;-1:-1:-1;;;;;;19628:17:0;;;;;;19660:40;;19612:6;;;;;;;;19660:40;;19593:16;;19660:40;19583:124;19520:187;:::o;21891:115::-;20944:19;:17;:19::i;:::-;21950:7:::1;:14:::0;;-1:-1:-1;;21950:14:0::1;21960:4;21950:14;::::0;;21979:20:::1;21986:12;16970:10:::0;;16891:96;52952:307;53102:8;-1:-1:-1;;;;;53093:17:0;:5;-1:-1:-1;;;;;53093:17:0;;53085:55;;;;-1:-1:-1;;;53085:55:0;;9435:2:1;53085:55:0;;;9417:21:1;9474:2;9454:18;;;9447:30;9513:27;9493:18;;;9486:55;9558:18;;53085:55:0;9233:349:1;53085:55:0;-1:-1:-1;;;;;53150:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;53150:46:0;;;;;;;;;;53211:41;;540::1;;;53211::0;;513:18:1;53211:41:0;;;;;;;52952:307;;;:::o;46301:305::-;46451:28;46461:4;46467:2;46471:7;46451:9;:28::i;:::-;46497:47;46520:4;46526:2;46530:7;46539:4;46497:22;:47::i;:::-;46489:110;;;;-1:-1:-1;;;46489:110:0;;;;;;;:::i;58670:132::-;58722:13;58747:48;;;;;;;;;;;;;;;;;;;58670:132;:::o;14390:696::-;14446:13;14495:14;14512:17;14523:5;14512:10;:17::i;:::-;14532:1;14512:21;14495:38;;14547:20;14581:6;14570:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14570:18:0;-1:-1:-1;14547:41:0;-1:-1:-1;14708:28:0;;;14724:2;14708:28;14763:280;-1:-1:-1;;14794:5:0;-1:-1:-1;;;14928:2:0;14917:14;;14912:30;14794:5;14899:44;14987:2;14978:11;;;-1:-1:-1;15007:21:0;14763:280;15007:21;-1:-1:-1;15063:6:0;14390:696;-1:-1:-1;;;14390:696:0:o;48337:309::-;48461:18;48467:2;48471:7;48461:5;:18::i;:::-;48510:53;48541:1;48545:2;48549:7;48558:4;48510:22;:53::i;:::-;48489:150;;;;-1:-1:-1;;;48489:150:0;;;;;;;:::i;58942:235::-;20944:19;:17;:19::i;:::-;59114:56:::1;59141:4;59147:2;59151:7;59160:9;59114:26;:56::i;21650:106::-:0;21390:7;;;;21708:41;;;;-1:-1:-1;;;21708:41:0;;10340:2:1;21708:41:0;;;10322:21:1;10379:2;10359:18;;;10352:30;-1:-1:-1;;;10398:18:1;;;10391:50;10458:18;;21708:41:0;10138:344:1;21472:106:0;21390:7;;;;21541:9;21533:38;;;;-1:-1:-1;;;21533:38:0;;10689:2:1;21533:38:0;;;10671:21:1;10728:2;10708:18;;;10701:30;-1:-1:-1;;;10747:18:1;;;10740:46;10803:18;;21533:38:0;10487:340:1;54028:831:0;54177:4;-1:-1:-1;;;;;54197:13:0;;23745:19;:23;54193:660;;54232:71;;-1:-1:-1;;;54232:71:0;;-1:-1:-1;;;;;54232:36:0;;;;;:71;;16970:10;;54283:4;;54289:7;;54298:4;;54232:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;54232:71:0;;;;;;;;-1:-1:-1;;54232:71:0;;;;;;;;;;;;:::i;:::-;;;54228:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54470:6;:13;54487:1;54470:18;54466:321;;54512:60;;-1:-1:-1;;;54512:60:0;;;;;;;:::i;54466:321::-;54739:6;54733:13;54724:6;54720:2;54716:15;54709:38;54228:573;-1:-1:-1;;;;;;54353:51:0;-1:-1:-1;;;54353:51:0;;-1:-1:-1;54346:58:0;;54193:660;-1:-1:-1;54838:4:0;54028:831;;;;;;:::o;11363:890::-;11416:7;;-1:-1:-1;;;11491:15:0;;11487:99;;-1:-1:-1;;;11526:15:0;;;-1:-1:-1;11569:2:0;11559:12;11487:99;11612:6;11603:5;:15;11599:99;;11647:6;11638:15;;;-1:-1:-1;11681:2:0;11671:12;11599:99;11724:6;11715:5;:15;11711:99;;11759:6;11750:15;;;-1:-1:-1;11793:2:0;11783:12;11711:99;11836:5;11827;:14;11823:96;;11870:5;11861:14;;;-1:-1:-1;11903:1:0;11893:11;11823:96;11945:5;11936;:14;11932:96;;11979:5;11970:14;;;-1:-1:-1;12012:1:0;12002:11;11932:96;12054:5;12045;:14;12041:96;;12088:5;12079:14;;;-1:-1:-1;12121:1:0;12111:11;12041:96;12163:5;12154;:14;12150:64;;12198:1;12188:11;12240:6;11363:890;-1:-1:-1;;11363:890:0:o;48968:920::-;-1:-1:-1;;;;;49047:16:0;;49039:61;;;;-1:-1:-1;;;49039:61:0;;11793:2:1;49039:61:0;;;11775:21:1;;;11812:18;;;11805:30;11871:34;11851:18;;;11844:62;11923:18;;49039:61:0;11591:356:1;49039:61:0;47198:4;46807:16;;;:7;:16;;;;;;-1:-1:-1;;;;;46807:16:0;47221:31;49110:58;;;;-1:-1:-1;;;49110:58:0;;12154:2:1;49110:58:0;;;12136:21:1;12193:2;12173:18;;;12166:30;12232;12212:18;;;12205:58;12280:18;;49110:58:0;11952:352:1;49110:58:0;49179:48;49208:1;49212:2;49216:7;49225:1;49179:20;:48::i;:::-;47198:4;46807:16;;;:7;:16;;;;;;-1:-1:-1;;;;;46807:16:0;47221:31;49314:58;;;;-1:-1:-1;;;49314:58:0;;12154:2:1;49314:58:0;;;12136:21:1;12193:2;12173:18;;;12166:30;12232;12212:18;;;12205:58;12280:18;;49314:58:0;11952:352:1;49314:58:0;-1:-1:-1;;;;;49714:13:0;;;;;;:9;:13;;;;;;;;:18;;49731:1;49714:18;;;49753:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;49753:21:0;;;;;49790:33;49761:7;;49714:13;;49790:33;;49714:13;;49790:33;44046:153;;:::o;55575:396::-;55759:1;55747:9;:13;55743:222;;;-1:-1:-1;;;;;55780:18:0;;;55776:85;;-1:-1:-1;;;;;55818:15:0;;;;;;:9;:15;;;;;:28;;55837:9;;55818:15;:28;;55837:9;;55818:28;:::i;:::-;;;;-1:-1:-1;;55776:85:0;-1:-1:-1;;;;;55878:16:0;;;55874:81;;-1:-1:-1;;;;;55914:13:0;;;;;;:9;:13;;;;;:26;;55931:9;;55914:13;:26;;55931:9;;55914:26;:::i;:::-;;;;-1:-1:-1;;55575:396:0;;;;:::o;14:131:1:-;-1:-1:-1;;;;;;88:32:1;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:300::-;645:3;683:5;677:12;710:6;705:3;698:19;766:6;759:4;752:5;748:16;741:4;736:3;732:14;726:47;818:1;811:4;802:6;797:3;793:16;789:27;782:38;881:4;874:2;870:7;865:2;857:6;853:15;849:29;844:3;840:39;836:50;829:57;;;592:300;;;;:::o;897:231::-;1046:2;1035:9;1028:21;1009:4;1066:56;1118:2;1107:9;1103:18;1095:6;1066:56;:::i;1133:180::-;1192:6;1245:2;1233:9;1224:7;1220:23;1216:32;1213:52;;;1261:1;1258;1251:12;1213:52;-1:-1:-1;1284:23:1;;1133:180;-1:-1:-1;1133:180:1:o;1526:173::-;1594:20;;-1:-1:-1;;;;;1643:31:1;;1633:42;;1623:70;;1689:1;1686;1679:12;1623:70;1526:173;;;:::o;1704:254::-;1772:6;1780;1833:2;1821:9;1812:7;1808:23;1804:32;1801:52;;;1849:1;1846;1839:12;1801:52;1872:29;1891:9;1872:29;:::i;:::-;1862:39;1948:2;1933:18;;;;1920:32;;-1:-1:-1;;;1704:254:1:o;2145:328::-;2222:6;2230;2238;2291:2;2279:9;2270:7;2266:23;2262:32;2259:52;;;2307:1;2304;2297:12;2259:52;2330:29;2349:9;2330:29;:::i;:::-;2320:39;;2378:38;2412:2;2401:9;2397:18;2378:38;:::i;:::-;2368:48;;2463:2;2452:9;2448:18;2435:32;2425:42;;2145:328;;;;;:::o;2478:186::-;2537:6;2590:2;2578:9;2569:7;2565:23;2561:32;2558:52;;;2606:1;2603;2596:12;2558:52;2629:29;2648:9;2629:29;:::i;2669:347::-;2734:6;2742;2795:2;2783:9;2774:7;2770:23;2766:32;2763:52;;;2811:1;2808;2801:12;2763:52;2834:29;2853:9;2834:29;:::i;:::-;2824:39;;2913:2;2902:9;2898:18;2885:32;2960:5;2953:13;2946:21;2939:5;2936:32;2926:60;;2982:1;2979;2972:12;2926:60;3005:5;2995:15;;;2669:347;;;;;:::o;3021:127::-;3082:10;3077:3;3073:20;3070:1;3063:31;3113:4;3110:1;3103:15;3137:4;3134:1;3127:15;3153:1138;3248:6;3256;3264;3272;3325:3;3313:9;3304:7;3300:23;3296:33;3293:53;;;3342:1;3339;3332:12;3293:53;3365:29;3384:9;3365:29;:::i;:::-;3355:39;;3413:38;3447:2;3436:9;3432:18;3413:38;:::i;:::-;3403:48;;3498:2;3487:9;3483:18;3470:32;3460:42;;3553:2;3542:9;3538:18;3525:32;3576:18;3617:2;3609:6;3606:14;3603:34;;;3633:1;3630;3623:12;3603:34;3671:6;3660:9;3656:22;3646:32;;3716:7;3709:4;3705:2;3701:13;3697:27;3687:55;;3738:1;3735;3728:12;3687:55;3774:2;3761:16;3796:2;3792;3789:10;3786:36;;;3802:18;;:::i;:::-;3877:2;3871:9;3845:2;3931:13;;-1:-1:-1;;3927:22:1;;;3951:2;3923:31;3919:40;3907:53;;;3975:18;;;3995:22;;;3972:46;3969:72;;;4021:18;;:::i;:::-;4061:10;4057:2;4050:22;4096:2;4088:6;4081:18;4136:7;4131:2;4126;4122;4118:11;4114:20;4111:33;4108:53;;;4157:1;4154;4147:12;4108:53;4213:2;4208;4204;4200:11;4195:2;4187:6;4183:15;4170:46;4258:1;4253:2;4248;4240:6;4236:15;4232:24;4225:35;4279:6;4269:16;;;;;;;3153:1138;;;;;;;:::o;4296:260::-;4364:6;4372;4425:2;4413:9;4404:7;4400:23;4396:32;4393:52;;;4441:1;4438;4431:12;4393:52;4464:29;4483:9;4464:29;:::i;:::-;4454:39;;4512:38;4546:2;4535:9;4531:18;4512:38;:::i;:::-;4502:48;;4296:260;;;;;:::o;4561:380::-;4640:1;4636:12;;;;4683;;;4704:61;;4758:4;4750:6;4746:17;4736:27;;4704:61;4811:2;4803:6;4800:14;4780:18;4777:38;4774:161;;4857:10;4852:3;4848:20;4845:1;4838:31;4892:4;4889:1;4882:15;4920:4;4917:1;4910:15;4774:161;;4561:380;;;:::o;5778:409::-;5980:2;5962:21;;;6019:2;5999:18;;;5992:30;6058:34;6053:2;6038:18;;6031:62;-1:-1:-1;;;6124:2:1;6109:18;;6102:43;6177:3;6162:19;;5778:409::o;7165:212::-;7207:3;7245:5;7239:12;7289:6;7282:4;7275:5;7271:16;7266:3;7260:36;7351:1;7315:16;;7340:13;;;-1:-1:-1;7315:16:1;;7165:212;-1:-1:-1;7165:212:1:o;7382:267::-;7561:3;7586:57;7612:30;7638:3;7630:6;7612:30;:::i;:::-;7604:6;7586:57;:::i;8422:401::-;8624:2;8606:21;;;8663:2;8643:18;;;8636:30;8702:34;8697:2;8682:18;;8675:62;-1:-1:-1;;;8768:2:1;8753:18;;8746:35;8813:3;8798:19;;8422:401::o;9587:414::-;9789:2;9771:21;;;9828:2;9808:18;;;9801:30;9867:34;9862:2;9847:18;;9840:62;-1:-1:-1;;;9933:2:1;9918:18;;9911:48;9991:3;9976:19;;9587:414::o;10832:500::-;-1:-1:-1;;;;;11101:15:1;;;11083:34;;11153:15;;11148:2;11133:18;;11126:43;11200:2;11185:18;;11178:34;;;11248:3;11243:2;11228:18;;11221:31;;;11026:4;;11269:57;;11306:19;;11298:6;11269:57;:::i;:::-;11261:65;10832:500;-1:-1:-1;;;;;;10832:500:1:o;11337:249::-;11406:6;11459:2;11447:9;11438:7;11434:23;11430:32;11427:52;;;11475:1;11472;11465:12;11427:52;11507:9;11501:16;11526:30;11550:5;11526:30;:::i;12309:127::-;12370:10;12365:3;12361:20;12358:1;12351:31;12401:4;12398:1;12391:15;12425:4;12422:1;12415:15;12441:128;12508:9;;;12529:11;;;12526:37;;;12543:18;;:::i;12574:125::-;12639:9;;;12660:10;;;12657:36;;;12673:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1260800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2652",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "4787",
								"isApprovedForAll(address,address)": "infinite",
								"mint()": "infinite",
								"name()": "infinite",
								"owner()": "2474",
								"ownerOf(uint256)": "2580",
								"pause()": "infinite",
								"paused()": "2315",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26724",
								"supportsInterface(bytes4)": "531",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2351",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28498",
								"unpause()": "infinite",
								"withdraw()": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57721,
									"end": 60162,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57721,
									"end": 60162,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57721,
									"end": 60162,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58664,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58664,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58664,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58664,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58619,
									"end": 58664,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58664,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58619,
									"end": 58664,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58664,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58664,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58619,
									"end": 58664,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58664,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29B437AA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29A427AA25A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41267,
									"end": 41380,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 41341,
									"end": 41346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41333,
									"end": 41338,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41333,
									"end": 41346,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41333,
									"end": 41346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41333,
									"end": 41346,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 41333,
									"end": 41346,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 41333,
									"end": 41346,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41333,
									"end": 41346,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 41333,
									"end": 41346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 41333,
									"end": 41346,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 41333,
									"end": 41346,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 41356,
									"end": 41363,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 41356,
									"end": 41373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 41366,
									"end": 41373,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41356,
									"end": 41363,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41356,
									"end": 41373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 41356,
									"end": 41373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 41356,
									"end": 41373,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 41356,
									"end": 41373,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20701,
									"end": 20708,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 20701,
									"end": 20716,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20701,
									"end": 20716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 20701,
									"end": 20716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20701,
									"end": 20716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20701,
									"end": 20716,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18023,
									"end": 18055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 16970,
									"end": 16980,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 18023,
									"end": 18041,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 18023,
									"end": 18055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18023,
									"end": 18055,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 18023,
									"end": 18055,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57721,
									"end": 60162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 57721,
									"end": 60162,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19520,
									"end": 19707,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 19520,
									"end": 19707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19612,
									"end": 19618,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 19612,
									"end": 19618,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19612,
									"end": 19618,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 19628,
									"end": 19645,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19628,
									"end": 19645,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19628,
									"end": 19645,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19612,
									"end": 19618,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 19628,
									"end": 19645,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19628,
									"end": 19645,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19628,
									"end": 19645,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 19628,
									"end": 19645,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 19628,
									"end": 19645,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19628,
									"end": 19645,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 19628,
									"end": 19645,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19628,
									"end": 19645,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 19628,
									"end": 19645,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19660,
									"end": 19700,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19660,
									"end": 19700,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19612,
									"end": 19618,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 19612,
									"end": 19618,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19612,
									"end": 19618,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 19612,
									"end": 19618,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 19612,
									"end": 19618,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19612,
									"end": 19618,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19612,
									"end": 19618,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19612,
									"end": 19618,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19660,
									"end": 19700,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 19660,
									"end": 19700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19593,
									"end": 19609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19593,
									"end": 19609,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19660,
									"end": 19700,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 19583,
									"end": 19707,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19520,
									"end": 19707,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19520,
									"end": 19707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 57721,
									"end": 60162,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57721,
									"end": 60162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57721,
									"end": 60162,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57721,
									"end": 60162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57721,
									"end": 60162,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57721,
									"end": 60162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57721,
									"end": 60162,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122055b7c88e3b91a44024b1bbda43267bee10ed6ea7a94e982849628063a4daa0b564736f6c63430008190033",
									".code": [
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "1249C58B"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57721,
											"end": 60162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 41447,
											"end": 41747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 41447,
											"end": 41747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 42348,
											"end": 42446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 42348,
											"end": 42446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 43812,
											"end": 43979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 43812,
											"end": 43979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 43345,
											"end": 43751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 43345,
											"end": 43751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 59391,
											"end": 59636,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 59391,
											"end": 59636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59391,
											"end": 59636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 59391,
											"end": 59636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 59391,
											"end": 59636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59391,
											"end": 59636,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 59391,
											"end": 59636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59391,
											"end": 59636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59391,
											"end": 59636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59391,
											"end": 59636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1963,
											"end": 2140,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 59719,
											"end": 59823,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 59719,
											"end": 59823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59719,
											"end": 59823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 59719,
											"end": 59823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 59719,
											"end": 59823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 44489,
											"end": 44815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 44489,
											"end": 44815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59982,
											"end": 60160,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 59982,
											"end": 60160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59982,
											"end": 60160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 59982,
											"end": 60160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 59982,
											"end": 60160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58873,
											"end": 58936,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 58873,
											"end": 58936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58873,
											"end": 58936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 58873,
											"end": 58936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 58873,
											"end": 58936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 44881,
											"end": 45060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 44881,
											"end": 45060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57589,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 57351,
											"end": 57589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 57351,
											"end": 57589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 57351,
											"end": 57589,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57589,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57351,
											"end": 57589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 57351,
											"end": 57589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57589,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 57351,
											"end": 57589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 57351,
											"end": 57589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21404,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 21320,
											"end": 21404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21397,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21390,
											"end": 21397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21397,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 21390,
											"end": 21397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 21320,
											"end": 21404,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 42067,
											"end": 42286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 42067,
											"end": 42286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 41806,
											"end": 42010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 41806,
											"end": 42010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18918,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 18918,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18918,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 18918,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 18918,
											"end": 19019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58808,
											"end": 58867,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 58808,
											"end": 58867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58808,
											"end": 58867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 58808,
											"end": 58867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 58808,
											"end": 58867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18288,
											"end": 18373,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 18288,
											"end": 18373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18288,
											"end": 18373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 18288,
											"end": 18373,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42612,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42510,
											"end": 42612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 42510,
											"end": 42612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 42510,
											"end": 42612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 44046,
											"end": 44199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 44046,
											"end": 44199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 45126,
											"end": 45440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 45126,
											"end": 45440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 42678,
											"end": 42954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 42678,
											"end": 42954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 44265,
											"end": 44427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 44265,
											"end": 44427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19168,
											"end": 19366,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 19168,
											"end": 19366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19168,
											"end": 19366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 19168,
											"end": 19366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19168,
											"end": 19366,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19168,
											"end": 19366,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19168,
											"end": 19366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 19168,
											"end": 19366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19168,
											"end": 19366,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19168,
											"end": 19366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19168,
											"end": 19366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 19168,
											"end": 19366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41549,
											"end": 41553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 41584,
											"end": 41624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41584,
											"end": 41624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41584,
											"end": 41624,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41584,
											"end": 41624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41584,
											"end": 41688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 41584,
											"end": 41688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 41640,
											"end": 41688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41640,
											"end": 41688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41640,
											"end": 41688,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41584,
											"end": 41688,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 41584,
											"end": 41688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41584,
											"end": 41740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41584,
											"end": 41740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 41584,
											"end": 41740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34300,
											"end": 34340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34300,
											"end": 34340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34300,
											"end": 34340,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41704,
											"end": 41740,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 41704,
											"end": 41740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41565,
											"end": 41740,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41447,
											"end": 41747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42402,
											"end": 42415,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42434,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 42427,
											"end": 42439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 42427,
											"end": 42439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 43812,
											"end": 43979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43888,
											"end": 43895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43907,
											"end": 43930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 43922,
											"end": 43929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43907,
											"end": 43921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 43907,
											"end": 43930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43907,
											"end": 43930,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 43907,
											"end": 43930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43948,
											"end": 43972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43812,
											"end": 43979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43425,
											"end": 43438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43441,
											"end": 43464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 43456,
											"end": 43463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43441,
											"end": 43455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 43441,
											"end": 43464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43441,
											"end": 43464,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 43441,
											"end": 43464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43425,
											"end": 43464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43425,
											"end": 43464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43488,
											"end": 43493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43482,
											"end": 43493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43482,
											"end": 43484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43482,
											"end": 43493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43482,
											"end": 43493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5337,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5318,
											"end": 5337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 43474,
											"end": 43531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43563,
											"end": 43584,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43563,
											"end": 43584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43563,
											"end": 43584,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43563,
											"end": 43584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43563,
											"end": 43625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 43563,
											"end": 43625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43588,
											"end": 43625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 43605,
											"end": 43610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 44265,
											"end": 44427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43588,
											"end": 43625,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 43588,
											"end": 43625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5550,
											"end": 5552,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5532,
											"end": 5553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5591,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 5569,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5569,
											"end": 5587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5569,
											"end": 5587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5628,
											"end": 5662,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5730,
											"name": "PUSH",
											"source": 1,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5748,
											"end": 5767,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5748,
											"end": 5767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5348,
											"end": 5773,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 43542,
											"end": 43712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43723,
											"end": 43744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 43732,
											"end": 43734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43736,
											"end": 43743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43723,
											"end": 43731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 43723,
											"end": 43744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43723,
											"end": 43744,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 43723,
											"end": 43744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43415,
											"end": 43751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59391,
											"end": 59636,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 59391,
											"end": 59636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59435,
											"end": 59442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 18181,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18181,
											"end": 18194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59454,
											"end": 59481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 59454,
											"end": 59469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1086,
											"end": 1105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1105,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1086,
											"end": 1105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1105,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1122,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59454,
											"end": 59481,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 59454,
											"end": 59481,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59491,
											"end": 59506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59509,
											"end": 59534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 59509,
											"end": 59524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 972,
											"end": 986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 972,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 881,
											"end": 993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59509,
											"end": 59534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 59509,
											"end": 59534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59491,
											"end": 59534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59491,
											"end": 59534,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59545,
											"end": 59572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 59555,
											"end": 59562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18288,
											"end": 18373,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59555,
											"end": 59562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 59555,
											"end": 59562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59564,
											"end": 59571,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59545,
											"end": 59554,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 59545,
											"end": 59572,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59545,
											"end": 59572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 59545,
											"end": 59572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59588,
											"end": 59604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59588,
											"end": 59604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 59588,
											"end": 59604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D762D6AB69E51ADEF66DE5AC13B45B3345367B5F0056D1CE4A46B4E5D6BA00E7"
										},
										{
											"begin": 59588,
											"end": 59604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59588,
											"end": 59604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59588,
											"end": 59604,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59588,
											"end": 59604,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59588,
											"end": 59604,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59588,
											"end": 59604,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59588,
											"end": 59604,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59588,
											"end": 59604,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 59622,
											"end": 59629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59391,
											"end": 59636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59391,
											"end": 59636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59719,
											"end": 59823,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 59719,
											"end": 59823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59765,
											"end": 59772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59791,
											"end": 59816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 59791,
											"end": 59806,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 972,
											"end": 986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 972,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 881,
											"end": 993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59791,
											"end": 59816,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 59791,
											"end": 59816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59784,
											"end": 59816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59784,
											"end": 59816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59719,
											"end": 59823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59719,
											"end": 59823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 44489,
											"end": 44815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44678,
											"end": 44719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 44697,
											"end": 44709,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 44697,
											"end": 44709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44711,
											"end": 44718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44678,
											"end": 44696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 44678,
											"end": 44719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44678,
											"end": 44719,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 44678,
											"end": 44719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 44670,
											"end": 44769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 44670,
											"end": 44769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44780,
											"end": 44808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 44790,
											"end": 44794,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44796,
											"end": 44798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44800,
											"end": 44807,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44780,
											"end": 44789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 44780,
											"end": 44808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59982,
											"end": 60160,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 59982,
											"end": 60160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 18181,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18181,
											"end": 18194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60050,
											"end": 60127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60032,
											"end": 60044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60032,
											"end": 60044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60079,
											"end": 60100,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 60079,
											"end": 60100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60032,
											"end": 60044,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60032,
											"end": 60044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60079,
											"end": 60100,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60050,
											"end": 60127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60031,
											"end": 60127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60031,
											"end": 60127,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60031,
											"end": 60127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60145,
											"end": 60152,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60137,
											"end": 60153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 60137,
											"end": 60153,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60137,
											"end": 60153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60137,
											"end": 60153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60137,
											"end": 60153,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60137,
											"end": 60153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 60137,
											"end": 60153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60021,
											"end": 60160,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59982,
											"end": 60160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58873,
											"end": 58936,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 58873,
											"end": 58936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18181,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18181,
											"end": 18194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58919,
											"end": 58929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 58919,
											"end": 58927,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 58919,
											"end": 58929,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58919,
											"end": 58929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 58919,
											"end": 58929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58873,
											"end": 58936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 44881,
											"end": 45060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 45031,
											"end": 45035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45037,
											"end": 45039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45041,
											"end": 45048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45014,
											"end": 45030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 45014,
											"end": 45053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57589,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 57351,
											"end": 57589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57467,
											"end": 57508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57486,
											"end": 57498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 16891,
											"end": 16987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57467,
											"end": 57508,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 57467,
											"end": 57508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 57459,
											"end": 57558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 57459,
											"end": 57558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57568,
											"end": 57582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 57574,
											"end": 57581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57568,
											"end": 57573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 57568,
											"end": 57582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 42067,
											"end": 42286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42139,
											"end": 42146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46814,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6604,
											"end": 6606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6586,
											"end": 6607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6645,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6616,
											"end": 6646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42201,
											"end": 42257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6402,
											"end": 6750,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 41806,
											"end": 42010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41878,
											"end": 41885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41905,
											"end": 41924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41905,
											"end": 41924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6939,
											"end": 6960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 6998,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7035,
											"end": 7069,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7015,
											"end": 7033,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7015,
											"end": 7033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7008,
											"end": 7070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7086,
											"end": 7104,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7086,
											"end": 7104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 7154,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7135,
											"end": 7154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6755,
											"end": 7160,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 41897,
											"end": 41970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 41996,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41806,
											"end": 42010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18918,
											"end": 19019,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 18918,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 18181,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18181,
											"end": 18194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18982,
											"end": 19012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 19009,
											"end": 19010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18982,
											"end": 19000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 18982,
											"end": 19012,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58808,
											"end": 58867,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 58808,
											"end": 58867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 18181,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18181,
											"end": 18194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58852,
											"end": 58860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 58852,
											"end": 58858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 58852,
											"end": 58860,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42612,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 42510,
											"end": 42612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42566,
											"end": 42579,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42598,
											"end": 42605,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42591,
											"end": 42605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42591,
											"end": 42605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42591,
											"end": 42605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 42591,
											"end": 42605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42591,
											"end": 42605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 42591,
											"end": 42605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44140,
											"end": 44192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 44173,
											"end": 44181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44183,
											"end": 44191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44140,
											"end": 44158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 44140,
											"end": 44192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44140,
											"end": 44192,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 44140,
											"end": 44192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45294,
											"end": 45335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 45327,
											"end": 45334,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45294,
											"end": 45312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 45294,
											"end": 45335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45294,
											"end": 45335,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 45294,
											"end": 45335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 45286,
											"end": 45385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 45286,
											"end": 45385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45395,
											"end": 45433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 45409,
											"end": 45413,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45415,
											"end": 45417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45419,
											"end": 45426,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45428,
											"end": 45432,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45395,
											"end": 45408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 45395,
											"end": 45433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45395,
											"end": 45433,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 45395,
											"end": 45433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45126,
											"end": 45440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42751,
											"end": 42764,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42776,
											"end": 42799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 42791,
											"end": 42798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42776,
											"end": 42790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 42776,
											"end": 42799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42776,
											"end": 42799,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 42776,
											"end": 42799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42810,
											"end": 42831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42834,
											"end": 42844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 42834,
											"end": 42842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 42834,
											"end": 42844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42834,
											"end": 42844,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 42834,
											"end": 42844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42810,
											"end": 42844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42810,
											"end": 42844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42885,
											"end": 42886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42867,
											"end": 42874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42886,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42913,
											"end": 42920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 42922,
											"end": 42929,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 42922,
											"end": 42940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42940,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 42922,
											"end": 42940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 42896,
											"end": 42941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42896,
											"end": 42941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 42861,
											"end": 42947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42854,
											"end": 42947,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42954,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42678,
											"end": 42954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 44265,
											"end": 44427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44362,
											"end": 44366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44403,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44410,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44385,
											"end": 44420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44265,
											"end": 44427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19168,
											"end": 19366,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 19168,
											"end": 19366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 18181,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18181,
											"end": 18194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 18181,
											"end": 18194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19256,
											"end": 19278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19256,
											"end": 19278,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 19248,
											"end": 19321,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19248,
											"end": 19321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19248,
											"end": 19321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19248,
											"end": 19321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19248,
											"end": 19321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19248,
											"end": 19321,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7838,
											"end": 7859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7897,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 7893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7868,
											"end": 7898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7914,
											"end": 7932,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7914,
											"end": 7932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7914,
											"end": 7932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7907,
											"end": 7969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7985,
											"end": 8003,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7985,
											"end": 8003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8050,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8031,
											"end": 8050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19248,
											"end": 19321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7654,
											"end": 8056,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19248,
											"end": 19321,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 19248,
											"end": 19321,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19331,
											"end": 19359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 19350,
											"end": 19358,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19331,
											"end": 19349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 19331,
											"end": 19359,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53343,
											"end": 53476,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 53343,
											"end": 53476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47198,
											"end": 47202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46814,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6604,
											"end": 6606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6586,
											"end": 6607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6645,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6616,
											"end": 6646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53416,
											"end": 53469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6402,
											"end": 6750,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 52645,
											"end": 52816,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 52645,
											"end": 52816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52734,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52748,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52772,
											"end": 52795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 52719,
											"end": 52743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52772,
											"end": 52786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 52772,
											"end": 52795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52772,
											"end": 52795,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 52772,
											"end": 52795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52763,
											"end": 52809,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 52645,
											"end": 52816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52645,
											"end": 52816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52645,
											"end": 52816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18446,
											"end": 18576,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18446,
											"end": 18576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18509,
											"end": 18532,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18501,
											"end": 18569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 18501,
											"end": 18569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18501,
											"end": 18569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18501,
											"end": 18569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18501,
											"end": 18569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18501,
											"end": 18569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8265,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18501,
											"end": 18569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18501,
											"end": 18569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18501,
											"end": 18569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8245,
											"end": 8266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8282,
											"end": 8300,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8282,
											"end": 8300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8282,
											"end": 8300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8275,
											"end": 8305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8375,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8314,
											"end": 8376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8393,
											"end": 8411,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8393,
											"end": 8411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18501,
											"end": 18569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 8061,
											"end": 8417,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 48008,
											"end": 48116,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 48008,
											"end": 48116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 48093,
											"end": 48095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48097,
											"end": 48104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48083,
											"end": 48109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48083,
											"end": 48092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 48083,
											"end": 48109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47417,
											"end": 47678,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 47417,
											"end": 47678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47510,
											"end": 47514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47526,
											"end": 47539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47542,
											"end": 47565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 47557,
											"end": 47564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47542,
											"end": 47556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 47542,
											"end": 47565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47542,
											"end": 47565,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 47542,
											"end": 47565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47526,
											"end": 47565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47526,
											"end": 47565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47594,
											"end": 47599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47583,
											"end": 47599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47583,
											"end": 47599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47599,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 47583,
											"end": 47635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47603,
											"end": 47635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 47620,
											"end": 47625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47627,
											"end": 47634,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47603,
											"end": 47619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 47603,
											"end": 47635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47603,
											"end": 47635,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 47603,
											"end": 47635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 47583,
											"end": 47670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47663,
											"end": 47670,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47639,
											"end": 47670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47639,
											"end": 47659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 47651,
											"end": 47658,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47639,
											"end": 47650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 47639,
											"end": 47659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47639,
											"end": 47659,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 47639,
											"end": 47659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47639,
											"end": 47670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47639,
											"end": 47670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47583,
											"end": 47670,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 47583,
											"end": 47670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47575,
											"end": 47671,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47417,
											"end": 47678,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47417,
											"end": 47678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51300,
											"end": 52533,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 51300,
											"end": 52533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51454,
											"end": 51458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51427,
											"end": 51458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51427,
											"end": 51450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 51442,
											"end": 51449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51427,
											"end": 51441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 51427,
											"end": 51450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51427,
											"end": 51450,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 51427,
											"end": 51450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51427,
											"end": 51458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51427,
											"end": 51458,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 51419,
											"end": 51500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 51419,
											"end": 51500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51518,
											"end": 51534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51518,
											"end": 51534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9030,
											"end": 9032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9071,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9049,
											"end": 9067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9049,
											"end": 9067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9049,
											"end": 9067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9108,
											"end": 9142,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 9088,
											"end": 9106,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9088,
											"end": 9106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9088,
											"end": 9106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9081,
											"end": 9143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9159,
											"end": 9177,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9159,
											"end": 9177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9159,
											"end": 9177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9152,
											"end": 9186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9203,
											"end": 9222,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9203,
											"end": 9222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 8828,
											"end": 9228,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 51510,
											"end": 51575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51586,
											"end": 51628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 51607,
											"end": 51611,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51613,
											"end": 51615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51617,
											"end": 51624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51626,
											"end": 51627,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51586,
											"end": 51606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 51586,
											"end": 51628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51586,
											"end": 51628,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 51586,
											"end": 51628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51755,
											"end": 51759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51728,
											"end": 51759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51728,
											"end": 51751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 51743,
											"end": 51750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51728,
											"end": 51742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 51728,
											"end": 51751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51728,
											"end": 51751,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 51728,
											"end": 51751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51728,
											"end": 51759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51728,
											"end": 51759,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 51720,
											"end": 51801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 51720,
											"end": 51801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51885,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51870,
											"end": 51894,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52347,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52353,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52338,
											"end": 52358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52338,
											"end": 52358,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52385,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51863,
											"end": 51894,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52372,
											"end": 52390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52372,
											"end": 52390,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52417,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52426,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52410,
											"end": 52431,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52447,
											"end": 52474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52447,
											"end": 52474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51886,
											"end": 51893,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51886,
											"end": 51893,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52447,
											"end": 52474,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 52447,
											"end": 52474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52447,
											"end": 52474,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 43415,
											"end": 43751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22138,
											"end": 22255,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 22138,
											"end": 22255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21191,
											"end": 21207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 21191,
											"end": 21205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 21191,
											"end": 21207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21191,
											"end": 21207,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 21191,
											"end": 21207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22196,
											"end": 22203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22196,
											"end": 22211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22196,
											"end": 22211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22196,
											"end": 22211,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22196,
											"end": 22211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22196,
											"end": 22211,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22226,
											"end": 22248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 22235,
											"end": 22247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22226,
											"end": 22248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22226,
											"end": 22248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22226,
											"end": 22248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22226,
											"end": 22248,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22226,
											"end": 22248,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22226,
											"end": 22248,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22226,
											"end": 22248,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22226,
											"end": 22248,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22226,
											"end": 22248,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 22138,
											"end": 22255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50214,
											"end": 50976,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 50214,
											"end": 50976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50273,
											"end": 50286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50289,
											"end": 50312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 50304,
											"end": 50311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50289,
											"end": 50303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 50289,
											"end": 50312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50289,
											"end": 50312,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 50289,
											"end": 50312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50273,
											"end": 50312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50273,
											"end": 50312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50323,
											"end": 50374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 50344,
											"end": 50349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50359,
											"end": 50360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50363,
											"end": 50370,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50372,
											"end": 50373,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50323,
											"end": 50343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 50323,
											"end": 50374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50323,
											"end": 50374,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 50323,
											"end": 50374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50484,
											"end": 50507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 50499,
											"end": 50506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50484,
											"end": 50498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 50484,
											"end": 50507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50484,
											"end": 50507,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 50484,
											"end": 50507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50552,
											"end": 50567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50545,
											"end": 50576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50545,
											"end": 50576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 50545,
											"end": 50576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50545,
											"end": 50576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50545,
											"end": 50576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50545,
											"end": 50576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50545,
											"end": 50576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50545,
											"end": 50576,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50792,
											"end": 50808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50801,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50792,
											"end": 50808,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50808,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 50792,
											"end": 50813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50792,
											"end": 50813,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50840,
											"end": 50856,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 50840,
											"end": 50856,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50840,
											"end": 50856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50840,
											"end": 50847,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50840,
											"end": 50856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50840,
											"end": 50856,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 50840,
											"end": 50856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50840,
											"end": 50856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50840,
											"end": 50856,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50840,
											"end": 50856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50833,
											"end": 50856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50833,
											"end": 50856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50833,
											"end": 50856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50833,
											"end": 50856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50833,
											"end": 50856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50833,
											"end": 50856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50833,
											"end": 50856,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50872,
											"end": 50908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50476,
											"end": 50507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50476,
											"end": 50507,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50568,
											"end": 50575,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50568,
											"end": 50575,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50872,
											"end": 50908,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 50872,
											"end": 50908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50552,
											"end": 50576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50872,
											"end": 50908,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19520,
											"end": 19707,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 19520,
											"end": 19707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19628,
											"end": 19645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19628,
											"end": 19645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19628,
											"end": 19645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19628,
											"end": 19645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19628,
											"end": 19645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19628,
											"end": 19645,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19628,
											"end": 19645,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19628,
											"end": 19645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19628,
											"end": 19645,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19628,
											"end": 19645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19628,
											"end": 19645,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19628,
											"end": 19645,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19660,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19660,
											"end": 19700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19660,
											"end": 19700,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 19660,
											"end": 19700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19593,
											"end": 19609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19593,
											"end": 19609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19660,
											"end": 19700,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19583,
											"end": 19707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19520,
											"end": 19707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19520,
											"end": 19707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21891,
											"end": 22006,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 21891,
											"end": 22006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 20963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 20944,
											"end": 20961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 20944,
											"end": 20963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 20963,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 20944,
											"end": 20963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21950,
											"end": 21957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21950,
											"end": 21964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21950,
											"end": 21964,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21950,
											"end": 21964,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21960,
											"end": 21964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21950,
											"end": 21964,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21950,
											"end": 21964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21950,
											"end": 21964,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21979,
											"end": 21999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 21986,
											"end": 21998,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16891,
											"end": 16987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52952,
											"end": 53259,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 52952,
											"end": 53259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53102,
											"end": 53110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53093,
											"end": 53110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53093,
											"end": 53098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53093,
											"end": 53110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53093,
											"end": 53110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9476,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 9454,
											"end": 9472,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9454,
											"end": 9472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9454,
											"end": 9472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9447,
											"end": 9477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9540,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9486,
											"end": 9541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9233,
											"end": 9582,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 53085,
											"end": 53140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53168,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53150,
											"end": 53196,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53211,
											"end": 53252,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 52952,
											"end": 53259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52952,
											"end": 53259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52952,
											"end": 53259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52952,
											"end": 53259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46301,
											"end": 46606,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 46301,
											"end": 46606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46451,
											"end": 46479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 46461,
											"end": 46465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 46469,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46471,
											"end": 46478,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46451,
											"end": 46460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 46451,
											"end": 46479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46451,
											"end": 46479,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 46451,
											"end": 46479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46497,
											"end": 46544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 46520,
											"end": 46524,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46526,
											"end": 46528,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46530,
											"end": 46537,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46539,
											"end": 46543,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46497,
											"end": 46519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 46497,
											"end": 46544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46497,
											"end": 46544,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 46497,
											"end": 46544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 46489,
											"end": 46599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58670,
											"end": 58802,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 58670,
											"end": 58802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58722,
											"end": 58735,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "PUSH data",
											"source": 0,
											"value": "603FF1B036CCEA40D792A56F2419E3771FF45FC7074F6EF4E17B4481431D5DD2"
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58747,
											"end": 58795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58670,
											"end": 58802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58670,
											"end": 58802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14390,
											"end": 15086,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 14390,
											"end": 15086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14446,
											"end": 14459,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14495,
											"end": 14509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14512,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 14523,
											"end": 14528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14512,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 14512,
											"end": 14529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14512,
											"end": 14529,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 14512,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14532,
											"end": 14533,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14512,
											"end": 14533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14495,
											"end": 14533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14495,
											"end": 14533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14581,
											"end": 14587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 14570,
											"end": 14588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14708,
											"end": 14736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14708,
											"end": 14736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14708,
											"end": 14736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14724,
											"end": 14726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14708,
											"end": 14736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14763,
											"end": 15043,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 14763,
											"end": 15043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14794,
											"end": 14799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14928,
											"end": 14930,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14917,
											"end": 14931,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14917,
											"end": 14931,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 14912,
											"end": 14942,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 14794,
											"end": 14799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 14943,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 14987,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14978,
											"end": 14989,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14978,
											"end": 14989,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14978,
											"end": 14989,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15007,
											"end": 15028,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14763,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 15007,
											"end": 15028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15063,
											"end": 15069,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14390,
											"end": 15086,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14390,
											"end": 15086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48337,
											"end": 48646,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 48337,
											"end": 48646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48461,
											"end": 48479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 48467,
											"end": 48469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48471,
											"end": 48478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48461,
											"end": 48466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 48461,
											"end": 48479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48461,
											"end": 48479,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 48461,
											"end": 48479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48510,
											"end": 48563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 48541,
											"end": 48542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48545,
											"end": 48547,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48556,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48558,
											"end": 48562,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48510,
											"end": 48532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 48510,
											"end": 48563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48510,
											"end": 48563,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 48510,
											"end": 48563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48489,
											"end": 48639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 48489,
											"end": 48639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48489,
											"end": 48639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48489,
											"end": 48639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 48489,
											"end": 48639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48489,
											"end": 48639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48489,
											"end": 48639,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48489,
											"end": 48639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48489,
											"end": 48639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 48489,
											"end": 48639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48489,
											"end": 48639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 48489,
											"end": 48639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58942,
											"end": 59177,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 58942,
											"end": 59177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 20963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 20944,
											"end": 20961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 20944,
											"end": 20963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 20963,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 20944,
											"end": 20963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59114,
											"end": 59170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 59141,
											"end": 59145,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59147,
											"end": 59149,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59151,
											"end": 59158,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59160,
											"end": 59169,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59114,
											"end": 59140,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 59114,
											"end": 59170,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21756,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 21650,
											"end": 21756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21397,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21390,
											"end": 21397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21397,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 21390,
											"end": 21397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21708,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 21708,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21708,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21708,
											"end": 21749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21708,
											"end": 21749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21708,
											"end": 21749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10340,
											"end": 10342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21708,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21708,
											"end": 21749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21708,
											"end": 21749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10379,
											"end": 10381,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10352,
											"end": 10382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10391,
											"end": 10441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 10476,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10458,
											"end": 10476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21708,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 10138,
											"end": 10482,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21472,
											"end": 21578,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 21472,
											"end": 21578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21397,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21390,
											"end": 21397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21397,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 21390,
											"end": 21397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21541,
											"end": 21550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21533,
											"end": 21571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 21533,
											"end": 21571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21533,
											"end": 21571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21533,
											"end": 21571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21533,
											"end": 21571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21533,
											"end": 21571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10691,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21533,
											"end": 21571,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21533,
											"end": 21571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21533,
											"end": 21571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10671,
											"end": 10692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10728,
											"end": 10730,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 10708,
											"end": 10726,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10708,
											"end": 10726,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10708,
											"end": 10726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10747,
											"end": 10765,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10747,
											"end": 10765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10740,
											"end": 10786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10821,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10803,
											"end": 10821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21533,
											"end": 21571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 10487,
											"end": 10827,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54177,
											"end": 54181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54197,
											"end": 54210,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54197,
											"end": 54210,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23745,
											"end": 23764,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 23745,
											"end": 23768,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54193,
											"end": 54853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 54193,
											"end": 54853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54232,
											"end": 54268,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54268,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 54232,
											"end": 54268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16970,
											"end": 16980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54283,
											"end": 54287,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 54283,
											"end": 54287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54289,
											"end": 54296,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 54289,
											"end": 54296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54302,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 54298,
											"end": 54302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 54232,
											"end": 54303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 54232,
											"end": 54303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 54232,
											"end": 54303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54470,
											"end": 54476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54470,
											"end": 54483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54487,
											"end": 54488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54470,
											"end": 54488,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54466,
											"end": 54787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 54466,
											"end": 54787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54512,
											"end": 54572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 54512,
											"end": 54572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54466,
											"end": 54787,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 54466,
											"end": 54787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54739,
											"end": 54745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54733,
											"end": 54746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54724,
											"end": 54730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54720,
											"end": 54722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54716,
											"end": 54731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54709,
											"end": 54747,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 54228,
											"end": 54801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54353,
											"end": 54404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54353,
											"end": 54404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54353,
											"end": 54404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54346,
											"end": 54404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 54346,
											"end": 54404,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54193,
											"end": 54853,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 54193,
											"end": 54853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54838,
											"end": 54842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11363,
											"end": 12253,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 11363,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11416,
											"end": 11423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11416,
											"end": 11423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11491,
											"end": 11506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11491,
											"end": 11506,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 11487,
											"end": 11586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11526,
											"end": 11541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11526,
											"end": 11541,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11526,
											"end": 11541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11569,
											"end": 11571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11559,
											"end": 11571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11487,
											"end": 11586,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 11487,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11612,
											"end": 11618,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 11603,
											"end": 11608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11603,
											"end": 11618,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 11599,
											"end": 11698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11653,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 11638,
											"end": 11653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11638,
											"end": 11653,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11638,
											"end": 11653,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11681,
											"end": 11683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11671,
											"end": 11683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11698,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 11599,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11724,
											"end": 11730,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 11715,
											"end": 11720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11715,
											"end": 11730,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11759,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 11750,
											"end": 11765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11750,
											"end": 11765,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11750,
											"end": 11765,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11793,
											"end": 11795,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11783,
											"end": 11795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11836,
											"end": 11841,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 11827,
											"end": 11832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11841,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 11823,
											"end": 11919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11875,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 11861,
											"end": 11875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 11875,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 11875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11903,
											"end": 11904,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11893,
											"end": 11904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 11919,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 11823,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11945,
											"end": 11950,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 11936,
											"end": 11941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11936,
											"end": 11950,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11932,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 11932,
											"end": 12028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11979,
											"end": 11984,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 11970,
											"end": 11984,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 11984,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 11984,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12012,
											"end": 12013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12002,
											"end": 12013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11932,
											"end": 12028,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 11932,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12059,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12045,
											"end": 12050,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12045,
											"end": 12059,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 12041,
											"end": 12137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12088,
											"end": 12093,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12079,
											"end": 12093,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12093,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12093,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12121,
											"end": 12122,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12111,
											"end": 12122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12137,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 12041,
											"end": 12137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12163,
											"end": 12168,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 12154,
											"end": 12159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12168,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12150,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12150,
											"end": 12214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12199,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12188,
											"end": 12199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12246,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11363,
											"end": 12253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11363,
											"end": 12253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48968,
											"end": 49888,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 48968,
											"end": 49888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49047,
											"end": 49063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49047,
											"end": 49063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49039,
											"end": 49100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 49039,
											"end": 49100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49039,
											"end": 49100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49039,
											"end": 49100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49039,
											"end": 49100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49039,
											"end": 49100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11793,
											"end": 11795,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 49039,
											"end": 49100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49039,
											"end": 49100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49039,
											"end": 49100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11775,
											"end": 11796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11812,
											"end": 11830,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11812,
											"end": 11830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11812,
											"end": 11830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11805,
											"end": 11835,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 11905,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 11851,
											"end": 11869,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11851,
											"end": 11869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11844,
											"end": 11906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11923,
											"end": 11941,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11923,
											"end": 11941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49039,
											"end": 49100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11591,
											"end": 11947,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49039,
											"end": 49100,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 49039,
											"end": 49100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47198,
											"end": 47202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46814,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47221,
											"end": 47252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49110,
											"end": 49168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 49110,
											"end": 49168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49110,
											"end": 49168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49110,
											"end": 49168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49110,
											"end": 49168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49110,
											"end": 49168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 49110,
											"end": 49168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49110,
											"end": 49168,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49110,
											"end": 49168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12193,
											"end": 12195,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 12173,
											"end": 12191,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12173,
											"end": 12191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12166,
											"end": 12196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12232,
											"end": 12262,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 12212,
											"end": 12230,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12212,
											"end": 12230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12205,
											"end": 12263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12280,
											"end": 12298,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12280,
											"end": 12298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49110,
											"end": 49168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11952,
											"end": 12304,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49110,
											"end": 49168,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 49110,
											"end": 49168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49179,
											"end": 49227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 49208,
											"end": 49209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49212,
											"end": 49214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49216,
											"end": 49223,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49225,
											"end": 49226,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49179,
											"end": 49199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 49179,
											"end": 49227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49179,
											"end": 49227,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 49179,
											"end": 49227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47198,
											"end": 47202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46814,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46807,
											"end": 46823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47221,
											"end": 47252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49314,
											"end": 49372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 49314,
											"end": 49372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49314,
											"end": 49372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49314,
											"end": 49372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49314,
											"end": 49372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49314,
											"end": 49372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 49314,
											"end": 49372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49314,
											"end": 49372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49314,
											"end": 49372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12193,
											"end": 12195,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 12173,
											"end": 12191,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12173,
											"end": 12191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12166,
											"end": 12196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12232,
											"end": 12262,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 12212,
											"end": 12230,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12212,
											"end": 12230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12205,
											"end": 12263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12280,
											"end": 12298,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12280,
											"end": 12298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49314,
											"end": 49372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11952,
											"end": 12304,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49314,
											"end": 49372,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 49314,
											"end": 49372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49723,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49731,
											"end": 49732,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49714,
											"end": 49732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49732,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49769,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 49753,
											"end": 49769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49769,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49769,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 49753,
											"end": 49774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49774,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49774,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49753,
											"end": 49774,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 49790,
											"end": 49823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49761,
											"end": 49768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49761,
											"end": 49768,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49790,
											"end": 49823,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 49790,
											"end": 49823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49714,
											"end": 49727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49790,
											"end": 49823,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44046,
											"end": 44199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55575,
											"end": 55971,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 55575,
											"end": 55971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55759,
											"end": 55760,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55747,
											"end": 55756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55747,
											"end": 55760,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55743,
											"end": 55965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55743,
											"end": 55965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 55743,
											"end": 55965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55780,
											"end": 55798,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55780,
											"end": 55798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55780,
											"end": 55798,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55776,
											"end": 55861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 55776,
											"end": 55861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55827,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55846,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55846,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55837,
											"end": 55846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 55818,
											"end": 55846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55818,
											"end": 55846,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55776,
											"end": 55861,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 55776,
											"end": 55861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55878,
											"end": 55894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55878,
											"end": 55894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55878,
											"end": 55894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55874,
											"end": 55955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 55874,
											"end": 55955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55923,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55931,
											"end": 55940,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55931,
											"end": 55940,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55931,
											"end": 55940,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55931,
											"end": 55940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 55914,
											"end": 55940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55914,
											"end": 55940,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55575,
											"end": 55971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55575,
											"end": 55971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55575,
											"end": 55971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55575,
											"end": 55971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55575,
											"end": 55971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 592,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 677,
											"end": 689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 705,
											"end": 708,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 698,
											"end": 717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 759,
											"end": 763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 757,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 748,
											"end": 764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 741,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 732,
											"end": 746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 726,
											"end": 773,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 818,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 797,
											"end": 800,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 793,
											"end": 809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 789,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 820,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 881,
											"end": 885,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 849,
											"end": 878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 840,
											"end": 879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 1066,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1243,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1263,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1284,
											"end": 1307,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1614,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1643,
											"end": 1674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1674,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1675,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1691,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1704,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1819,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1836,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1851,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 1891,
											"end": 1900,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 1872,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1901,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2145,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2279,
											"end": 2288,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2277,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2289,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 2259,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 2349,
											"end": 2358,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2330,
											"end": 2359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2359,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 2330,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2359,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 2412,
											"end": 2414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2378,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2416,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 2378,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2467,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2664,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2478,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2592,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2578,
											"end": 2587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2593,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 2558,
											"end": 2610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2608,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2610,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 2558,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2629,
											"end": 2658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2781,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2793,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2813,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 2853,
											"end": 2862,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2834,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2917,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2960,
											"end": 2965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2967,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2968,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 2926,
											"end": 2986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2986,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 2926,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 3016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3148,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 3021,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3077,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3073,
											"end": 3093,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3117,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3103,
											"end": 3118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3134,
											"end": 3135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3328,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3313,
											"end": 3322,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3323,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3329,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3344,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 3293,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 3384,
											"end": 3393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 3365,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3394,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 3413,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 3413,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3496,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3502,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3555,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3557,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3617,
											"end": 3619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3620,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3637,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 3603,
											"end": 3637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3633,
											"end": 3634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3637,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 3603,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3669,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3723,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3713,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3705,
											"end": 3707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3724,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 3687,
											"end": 3742,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3740,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3742,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 3687,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3777,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3799,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 3802,
											"end": 3820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3871,
											"end": 3880,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3847,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3931,
											"end": 3944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3927,
											"end": 3949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3949,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3953,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3923,
											"end": 3954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3993,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3993,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4017,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 4018,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 3969,
											"end": 4041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 4021,
											"end": 4039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4059,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4050,
											"end": 4072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4144,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4161,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 4108,
											"end": 4161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4159,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4161,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 4108,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4187,
											"end": 4193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4216,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4246,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 4291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4425,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4413,
											"end": 4422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4411,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4423,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4428,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4445,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 4393,
											"end": 4445,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4441,
											"end": 4442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4445,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 4393,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 4464,
											"end": 4493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4493,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 4464,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4535,
											"end": 4544,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4531,
											"end": 4549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 4512,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 4512,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4941,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4561,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4636,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4648,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 4704,
											"end": 4765,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 4750,
											"end": 4756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4763,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 4763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 4763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4765,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 4704,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4803,
											"end": 4809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4800,
											"end": 4814,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4780,
											"end": 4798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4815,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4774,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 4774,
											"end": 4935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4852,
											"end": 4855,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4848,
											"end": 4868,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4892,
											"end": 4896,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4882,
											"end": 4897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4917,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4925,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4774,
											"end": 4935,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 4774,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4774,
											"end": 4935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 6187,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5778,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5980,
											"end": 5982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 1,
											"value": "2D"
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5992,
											"end": 6022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6092,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 6053,
											"end": 6055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6124,
											"end": 6126,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6177,
											"end": 6180,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6162,
											"end": 6181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 6187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7165,
											"end": 7377,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 7165,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7207,
											"end": 7210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7245,
											"end": 7250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7251,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7286,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7275,
											"end": 7280,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7269,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7296,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 7351,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7315,
											"end": 7331,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7353,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7315,
											"end": 7331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7165,
											"end": 7377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7165,
											"end": 7377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7649,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7382,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 7612,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 7638,
											"end": 7641,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 7612,
											"end": 7642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7642,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 7612,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7604,
											"end": 7610,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 7586,
											"end": 7643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8422,
											"end": 8823,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 8422,
											"end": 8823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8624,
											"end": 8626,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8606,
											"end": 8627,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8606,
											"end": 8627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8606,
											"end": 8627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8663,
											"end": 8665,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8636,
											"end": 8666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 8736,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 8697,
											"end": 8699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8682,
											"end": 8700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8682,
											"end": 8700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8675,
											"end": 8737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8768,
											"end": 8770,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 8781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8813,
											"end": 8816,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8798,
											"end": 8817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8798,
											"end": 8817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8422,
											"end": 8823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9587,
											"end": 10001,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 9587,
											"end": 10001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9771,
											"end": 9792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9828,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9831,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 9901,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 9862,
											"end": 9864,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9847,
											"end": 9865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9847,
											"end": 9865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9933,
											"end": 9935,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9918,
											"end": 9936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 9936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 9994,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9976,
											"end": 9995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9976,
											"end": 9995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9587,
											"end": 10001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 11332,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 10832,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11101,
											"end": 11116,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11101,
											"end": 11116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11101,
											"end": 11116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11083,
											"end": 11117,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11083,
											"end": 11117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11153,
											"end": 11168,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11153,
											"end": 11168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11148,
											"end": 11150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11133,
											"end": 11151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11126,
											"end": 11169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11200,
											"end": 11202,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11212,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11248,
											"end": 11251,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11243,
											"end": 11245,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11228,
											"end": 11246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11228,
											"end": 11246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11221,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11221,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11221,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11026,
											"end": 11030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 11269,
											"end": 11326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11306,
											"end": 11325,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11306,
											"end": 11325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11298,
											"end": 11304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 11269,
											"end": 11326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11269,
											"end": 11326,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 11269,
											"end": 11326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11261,
											"end": 11326,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 11332,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10832,
											"end": 11332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11337,
											"end": 11586,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 11337,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11406,
											"end": 11412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11459,
											"end": 11461,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11447,
											"end": 11456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11438,
											"end": 11445,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11434,
											"end": 11457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11430,
											"end": 11462,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11427,
											"end": 11479,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11427,
											"end": 11479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 11427,
											"end": 11479,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11465,
											"end": 11477,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11427,
											"end": 11479,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 11427,
											"end": 11479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11507,
											"end": 11516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11501,
											"end": 11517,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11526,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 11550,
											"end": 11555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11526,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 11526,
											"end": 11556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12309,
											"end": 12436,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 12309,
											"end": 12436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12370,
											"end": 12380,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 12365,
											"end": 12368,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12361,
											"end": 12381,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12358,
											"end": 12359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12351,
											"end": 12382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12401,
											"end": 12405,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 12398,
											"end": 12399,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12391,
											"end": 12406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12425,
											"end": 12429,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12422,
											"end": 12423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12430,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 12569,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 12441,
											"end": 12569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12508,
											"end": 12517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12508,
											"end": 12517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12508,
											"end": 12517,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12529,
											"end": 12540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12529,
											"end": 12540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12529,
											"end": 12540,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12526,
											"end": 12563,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12526,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 12526,
											"end": 12563,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12543,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 12543,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 12543,
											"end": 12561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12574,
											"end": 12699,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 12574,
											"end": 12699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12660,
											"end": 12670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12660,
											"end": 12670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12660,
											"end": 12670,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 12657,
											"end": 12693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 12673,
											"end": 12691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"603FF1B036CCEA40D792A56F2419E3771FF45FC7074F6EF4E17B4481431D5DD2": "68747470733a2f2f6e66742e63727970746f73686f7065652e6e74696c6f79616c74792e636f6d"
									}
								}
							},
							"sourceList": [
								"contracts/shoToken/ShoToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint()": "1249c58b",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"WasBorn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"supportcs@ntiloyalty.com\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint()\":{\"notice\":\"server method - mint nft\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"ShoToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1884,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ShoToken",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1886,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ShoToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1890,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ShoToken",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1894,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ShoToken",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1898,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ShoToken",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1904,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ShoToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1258,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ShoToken",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 1137,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ShoToken",
								"label": "_owner",
								"offset": 1,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2854,
								"contract": "contracts/shoToken/ShoToken_flattened.sol:ShoToken",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)5_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)5_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 4,
										"contract": "contracts/shoToken/ShoToken_flattened.sol:ShoToken",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"mint()": {
								"notice": "server method - mint nft"
							}
						},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/shoToken/ShoToken_flattened.sol\":14163:16228  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/shoToken/ShoToken_flattened.sol\":14163:16228  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200b049d61101d1ca9ff2b10835a93b1621184704a42967298e736bbc100fceeff64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200b049d61101d1ca9ff2b10835a93b1621184704a42967298e736bbc100fceeff64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND DIV SWAP14 PUSH2 0x101D SHR 0xA9 SELFDESTRUCT 0x2B LT DUP4 GAS SWAP4 0xB1 PUSH3 0x118470 BLOBBASEFEE TIMESTAMP SWAP7 PUSH19 0x98E736BBC100FCEEFF64736F6C634300081900 CALLER ",
							"sourceMap": "14163:2065:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;14163:2065:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200b049d61101d1ca9ff2b10835a93b1621184704a42967298e736bbc100fceeff64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND DIV SWAP14 PUSH2 0x101D SHR 0xA9 SELFDESTRUCT 0x2B LT DUP4 GAS SWAP4 0xB1 PUSH3 0x118470 BLOBBASEFEE TIMESTAMP SWAP7 PUSH19 0x98E736BBC100FCEEFF64736F6C634300081900 CALLER ",
							"sourceMap": "14163:2065:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14163,
									"end": 16228,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b049d61101d1ca9ff2b10835a93b1621184704a42967298e736bbc100fceeff64736f6c63430008190033",
									".code": [
										{
											"begin": 14163,
											"end": 16228,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 14163,
											"end": 16228,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14163,
											"end": 16228,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14163,
											"end": 16228,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14163,
											"end": 16228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14163,
											"end": 16228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14163,
											"end": 16228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14163,
											"end": 16228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14163,
											"end": 16228,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/shoToken/ShoToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken_flattened.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shoToken/ShoToken_flattened.sol\":{\"keccak256\":\"0xd44be28f25266e79eab12a28ec001a8d4f8b6cdac769286fe5014c91418d5d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2096d4d9bfa4f9feb22987661a7d5c471df7bca16a96266468d26f97773047\",\"dweb:/ipfs/QmfTHRofTopFSAdost4o3VLX8KmL3Tz5uJv6kKVxF5hLaT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/shoToken/ShoToken_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/shoToken/ShoToken_flattened.sol",
					"exportedSymbols": {
						"Address": [
							1677
						],
						"Context": [
							1131
						],
						"Counters": [
							73
						],
						"ERC165": [
							1727
						],
						"ERC721": [
							2803
						],
						"ERC721Burnable": [
							2830
						],
						"IERC165": [
							1705
						],
						"IERC721": [
							1841
						],
						"IERC721Metadata": [
							1866
						],
						"IERC721Receiver": [
							1694
						],
						"Math": [
							937
						],
						"Ownable": [
							1242
						],
						"Pausable": [
							1348
						],
						"ShoToken": [
							2983
						],
						"Strings": [
							1110
						]
					},
					"id": 2984,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "141:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "166:311:0",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "Counters",
							"nameLocation": "486:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "848:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "840:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "840:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "508:7:0",
									"nodeType": "StructDefinition",
									"scope": 73,
									"src": "501:374:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "955:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 13,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "972:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "980:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "972:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 12,
												"id": 15,
												"nodeType": "Return",
												"src": "965:21:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "890:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "914:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "898:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 7,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 6,
														"name": "Counter",
														"nameLocations": [
															"898:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "898:7:0"
													},
													"referencedDeclaration": 5,
													"src": "898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "897:25:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "946:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:9:0"
									},
									"scope": 73,
									"src": "881:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1052:70:0",
										"statements": [
											{
												"id": 29,
												"nodeType": "UncheckedBlock",
												"src": "1062:54:0",
												"statements": [
													{
														"expression": {
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 23,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1086:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1094:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1086:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1104:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1086:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 28,
														"nodeType": "ExpressionStatement",
														"src": "1086:19:0"
													}
												]
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "1008:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1034:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1018:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 19,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 18,
														"name": "Counter",
														"nameLocations": [
															"1018:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1018:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:25:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1052:0:0"
									},
									"scope": 73,
									"src": "999:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1181:176:0",
										"statements": [
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1199:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "1191:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1191:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"expression": {
														"id": 39,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1215:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "1207:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1191:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 43,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1239:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1247:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1239:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1250:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1231:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1231:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1231:49:0"
											},
											{
												"id": 57,
												"nodeType": "UncheckedBlock",
												"src": "1290:61:0",
												"statements": [
													{
														"expression": {
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 49,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "1314:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1322:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1314:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "1331:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1339:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1331:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1314:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 56,
														"nodeType": "ExpressionStatement",
														"src": "1314:26:0"
													}
												]
											}
										]
									},
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1137:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1163:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1147:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "Counter",
														"nameLocations": [
															"1147:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1147:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:25:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:0:0"
									},
									"scope": 73,
									"src": "1128:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1412:35:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 65,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1422:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1430:6:0",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1422:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1439:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1422:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1422:18:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1372:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1394:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1378:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "Counter",
														"nameLocations": [
															"1378:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1378:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1377:25:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1412:0:0"
									},
									"scope": 73,
									"src": "1363:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2984,
							"src": "478:971:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 74,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1577:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 75,
								"nodeType": "StructuredDocumentation",
								"src": "1602:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 937,
							"linearizedBaseContracts": [
								937
							],
							"name": "Math",
							"nameLocation": "1684:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 79,
									"members": [
										{
											"id": 76,
											"name": "Down",
											"nameLocation": "1719:4:0",
											"nodeType": "EnumValue",
											"src": "1719:4:0"
										},
										{
											"id": 77,
											"name": "Up",
											"nameLocation": "1761:2:0",
											"nodeType": "EnumValue",
											"src": "1761:2:0"
										},
										{
											"id": 78,
											"name": "Zero",
											"nameLocation": "1792:4:0",
											"nodeType": "EnumValue",
											"src": "1792:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "1700:8:0",
									"nodeType": "EnumDefinition",
									"src": "1695:122:0"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "1954:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 89,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1971:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 90,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1975:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1971:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 93,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1983:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1971:13:0",
													"trueExpression": {
														"id": 92,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1979:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 88,
												"id": 95,
												"nodeType": "Return",
												"src": "1964:20:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "1823:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1896:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1908:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1900:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1919:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1911:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:22:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1945:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:9:0"
									},
									"scope": 937,
									"src": "1887:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2129:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 107,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2146:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 108,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2150:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2146:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 111,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2158:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2146:13:0",
													"trueExpression": {
														"id": 110,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2154:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 106,
												"id": 113,
												"nodeType": "Return",
												"src": "2139:20:0"
											}
										]
									},
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "1997:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2071:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2083:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2075:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2094:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2086:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2074:22:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2120:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2119:9:0"
									},
									"scope": 937,
									"src": "2062:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "2350:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 125,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2405:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 126,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "2409:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2405:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 128,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 129,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "2415:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 130,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 120,
																		"src": "2419:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2415:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 132,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2414:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2424:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2414:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2404:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 124,
												"id": 136,
												"nodeType": "Return",
												"src": "2397:28:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2172:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2288:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2304:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2296:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2315:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2307:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:22:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2341:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:9:0"
									},
									"scope": 937,
									"src": "2279:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "2702:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "2790:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2795:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2790:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 152,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 141,
																			"src": "2804:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2808:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2804:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 155,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2803:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 156,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "2813:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2803:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2817:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2803:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2790:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2799:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 147,
												"id": 161,
												"nodeType": "Return",
												"src": "2783:35:0"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2438:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "2640:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2656:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2648:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2667:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2659:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:22:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:9:0"
									},
									"scope": 937,
									"src": "2631:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "3269:3797:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "3279:3781:0",
												"statements": [
													{
														"assignments": [
															176
														],
														"declarations": [
															{
																"constant": false,
																"id": 176,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "3608:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 283,
																"src": "3600:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 175,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3600:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 177,
														"nodeType": "VariableDeclarationStatement",
														"src": "3600:13:0"
													},
													{
														"assignments": [
															179
														],
														"declarations": [
															{
																"constant": false,
																"id": 179,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "3680:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 283,
																"src": "3672:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 178,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3672:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 180,
														"nodeType": "VariableDeclarationStatement",
														"src": "3672:13:0"
													},
													{
														"AST": {
															"nativeSrc": "3752:157:0",
															"nodeType": "YulBlock",
															"src": "3752:157:0",
															"statements": [
																{
																	"nativeSrc": "3770:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3770:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3787:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "3787:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3790:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "3790:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3797:1:0",
																						"nodeType": "YulLiteral",
																						"src": "3797:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3793:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3793:3:0"
																				},
																				"nativeSrc": "3793:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3793:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3780:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "3780:6:0"
																		},
																		"nativeSrc": "3780:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3780:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "3774:2:0",
																			"nodeType": "YulTypedName",
																			"src": "3774:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3817:18:0",
																	"nodeType": "YulAssignment",
																	"src": "3817:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3830:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "3830:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3833:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "3833:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3826:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3826:3:0"
																		},
																		"nativeSrc": "3826:9:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3826:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3817:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "3817:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "3852:43:0",
																	"nodeType": "YulAssignment",
																	"src": "3852:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "3869:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "3869:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3873:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "3873:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3865:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3865:3:0"
																				},
																				"nativeSrc": "3865:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3865:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "3884:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "3884:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3888:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "3888:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3881:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "3881:2:0"
																				},
																				"nativeSrc": "3881:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3881:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3861:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3861:3:0"
																		},
																		"nativeSrc": "3861:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3861:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3852:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "3852:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "3817:5:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "3873:5:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "3888:5:0",
																"valueSize": 1
															},
															{
																"declaration": 179,
																"isOffset": false,
																"isSlot": false,
																"src": "3852:5:0",
																"valueSize": 1
															},
															{
																"declaration": 166,
																"isOffset": false,
																"isSlot": false,
																"src": "3787:1:0",
																"valueSize": 1
															},
															{
																"declaration": 166,
																"isOffset": false,
																"isSlot": false,
																"src": "3830:1:0",
																"valueSize": 1
															},
															{
																"declaration": 168,
																"isOffset": false,
																"isSlot": false,
																"src": "3790:1:0",
																"valueSize": 1
															},
															{
																"declaration": 168,
																"isOffset": false,
																"isSlot": false,
																"src": "3833:1:0",
																"valueSize": 1
															}
														],
														"id": 181,
														"nodeType": "InlineAssembly",
														"src": "3743:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "3990:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3999:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3990:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 190,
														"nodeType": "IfStatement",
														"src": "3986:75:0",
														"trueBody": {
															"id": 189,
															"nodeType": "Block",
															"src": "4002:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 185,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 176,
																			"src": "4027:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 186,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 170,
																			"src": "4035:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4027:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 174,
																	"id": 188,
																	"nodeType": "Return",
																	"src": "4020:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 192,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "4171:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 193,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "4185:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4171:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 191,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4163:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4163:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 196,
														"nodeType": "ExpressionStatement",
														"src": "4163:28:0"
													},
													{
														"assignments": [
															198
														],
														"declarations": [
															{
																"constant": false,
																"id": 198,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "4455:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 283,
																"src": "4447:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 197,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4447:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 199,
														"nodeType": "VariableDeclarationStatement",
														"src": "4447:17:0"
													},
													{
														"AST": {
															"nativeSrc": "4487:291:0",
															"nodeType": "YulBlock",
															"src": "4487:291:0",
															"statements": [
																{
																	"nativeSrc": "4556:38:0",
																	"nodeType": "YulAssignment",
																	"src": "4556:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4576:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "4576:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4579:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "4579:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "4582:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "4582:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4569:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:0"
																		},
																		"nativeSrc": "4569:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4569:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "4556:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "4556:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "4676:41:0",
																	"nodeType": "YulAssignment",
																	"src": "4676:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "4689:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "4689:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "4699:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "4699:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4710:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "4710:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "4696:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "4696:2:0"
																				},
																				"nativeSrc": "4696:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4696:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4685:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4685:3:0"
																		},
																		"nativeSrc": "4685:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4685:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4676:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "4734:30:0",
																	"nodeType": "YulAssignment",
																	"src": "4734:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4747:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "4747:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "4754:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "4754:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4743:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4743:3:0"
																		},
																		"nativeSrc": "4743:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4743:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4734:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "4734:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 170,
																"isOffset": false,
																"isSlot": false,
																"src": "4582:11:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "4710:5:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "4734:5:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "4747:5:0",
																"valueSize": 1
															},
															{
																"declaration": 179,
																"isOffset": false,
																"isSlot": false,
																"src": "4676:5:0",
																"valueSize": 1
															},
															{
																"declaration": 179,
																"isOffset": false,
																"isSlot": false,
																"src": "4689:5:0",
																"valueSize": 1
															},
															{
																"declaration": 198,
																"isOffset": false,
																"isSlot": false,
																"src": "4556:9:0",
																"valueSize": 1
															},
															{
																"declaration": 198,
																"isOffset": false,
																"isSlot": false,
																"src": "4699:9:0",
																"valueSize": 1
															},
															{
																"declaration": 198,
																"isOffset": false,
																"isSlot": false,
																"src": "4754:9:0",
																"valueSize": 1
															},
															{
																"declaration": 166,
																"isOffset": false,
																"isSlot": false,
																"src": "4576:1:0",
																"valueSize": 1
															},
															{
																"declaration": 168,
																"isOffset": false,
																"isSlot": false,
																"src": "4579:1:0",
																"valueSize": 1
															}
														],
														"id": 200,
														"nodeType": "InlineAssembly",
														"src": "4478:300:0"
													},
													{
														"assignments": [
															202
														],
														"declarations": [
															{
																"constant": false,
																"id": 202,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5093:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 283,
																"src": "5085:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 201,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5085:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 210,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 203,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "5100:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "5115:12:0",
																			"subExpression": {
																				"id": 204,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 170,
																				"src": "5116:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5130:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5115:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 208,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5114:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5100:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5085:47:0"
													},
													{
														"AST": {
															"nativeSrc": "5155:362:0",
															"nodeType": "YulBlock",
															"src": "5155:362:0",
															"statements": [
																{
																	"nativeSrc": "5220:37:0",
																	"nodeType": "YulAssignment",
																	"src": "5220:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "5239:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "5239:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "5252:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "5252:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "5235:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5235:3:0"
																		},
																		"nativeSrc": "5235:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5235:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "5220:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "5220:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "5324:25:0",
																	"nodeType": "YulAssignment",
																	"src": "5324:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5337:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "5337:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "5344:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "5344:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "5333:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5333:3:0"
																		},
																		"nativeSrc": "5333:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5333:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5324:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "5324:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "5464:39:0",
																	"nodeType": "YulAssignment",
																	"src": "5464:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5484:1:0",
																								"nodeType": "YulLiteral",
																								"src": "5484:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "5487:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "5487:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "5480:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "5480:3:0"
																						},
																						"nativeSrc": "5480:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "5480:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "5494:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "5476:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5476:3:0"
																				},
																				"nativeSrc": "5476:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5476:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5501:1:0",
																				"nodeType": "YulLiteral",
																				"src": "5501:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5472:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5472:3:0"
																		},
																		"nativeSrc": "5472:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5472:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "5464:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "5464:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 170,
																"isOffset": false,
																"isSlot": false,
																"src": "5220:11:0",
																"valueSize": 1
															},
															{
																"declaration": 170,
																"isOffset": false,
																"isSlot": false,
																"src": "5239:11:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "5324:5:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "5337:5:0",
																"valueSize": 1
															},
															{
																"declaration": 202,
																"isOffset": false,
																"isSlot": false,
																"src": "5252:4:0",
																"valueSize": 1
															},
															{
																"declaration": 202,
																"isOffset": false,
																"isSlot": false,
																"src": "5344:4:0",
																"valueSize": 1
															},
															{
																"declaration": 202,
																"isOffset": false,
																"isSlot": false,
																"src": "5464:4:0",
																"valueSize": 1
															},
															{
																"declaration": 202,
																"isOffset": false,
																"isSlot": false,
																"src": "5487:4:0",
																"valueSize": 1
															},
															{
																"declaration": 202,
																"isOffset": false,
																"isSlot": false,
																"src": "5494:4:0",
																"valueSize": 1
															}
														],
														"id": 211,
														"nodeType": "InlineAssembly",
														"src": "5146:371:0"
													},
													{
														"expression": {
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 212,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "5583:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 213,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "5592:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 214,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "5600:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5592:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5583:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 217,
														"nodeType": "ExpressionStatement",
														"src": "5583:21:0"
													},
													{
														"assignments": [
															219
														],
														"declarations": [
															{
																"constant": false,
																"id": 219,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "5930:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 283,
																"src": "5922:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 218,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5922:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 226,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5941:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 221,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 170,
																			"src": "5945:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5941:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 223,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5940:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5960:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "5940:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5922:39:0"
													},
													{
														"expression": {
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 227,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6178:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6189:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 229,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "6193:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 230,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "6207:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6193:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6189:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6178:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 234,
														"nodeType": "ExpressionStatement",
														"src": "6178:36:0"
													},
													{
														"expression": {
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 235,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6247:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6258:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 237,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "6262:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 238,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "6276:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6262:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6258:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6247:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 242,
														"nodeType": "ExpressionStatement",
														"src": "6247:36:0"
													},
													{
														"expression": {
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 243,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6317:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6328:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 245,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "6332:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 246,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "6346:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6332:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6328:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6317:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 250,
														"nodeType": "ExpressionStatement",
														"src": "6317:36:0"
													},
													{
														"expression": {
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 251,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6387:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6398:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 253,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "6402:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 254,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "6416:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6402:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6398:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6387:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 258,
														"nodeType": "ExpressionStatement",
														"src": "6387:36:0"
													},
													{
														"expression": {
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 259,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6457:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6468:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 261,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "6472:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 262,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "6486:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6472:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6468:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6457:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 266,
														"nodeType": "ExpressionStatement",
														"src": "6457:36:0"
													},
													{
														"expression": {
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 267,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6528:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6539:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 269,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "6543:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 270,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "6557:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6543:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6539:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6528:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 274,
														"nodeType": "ExpressionStatement",
														"src": "6528:36:0"
													},
													{
														"expression": {
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 275,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "6998:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 276,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "7007:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 277,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "7015:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7007:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6998:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 280,
														"nodeType": "ExpressionStatement",
														"src": "6998:24:0"
													},
													{
														"expression": {
															"id": 281,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "7043:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 174,
														"id": 282,
														"nodeType": "Return",
														"src": "7036:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2831:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3150:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3174:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3166:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3193:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3185:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3212:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3204:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:73:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3252:16:0"
									},
									"scope": 937,
									"src": "3141:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "7346:189:0",
										"statements": [
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7364:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 328,
														"src": "7356:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7356:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"arguments": [
														{
															"id": 303,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7380:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 304,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7383:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 305,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7386:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 302,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															285,
															329
														],
														"referencedDeclaration": 285,
														"src": "7373:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7373:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7356:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$79",
															"typeString": "enum Math.Rounding"
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 308,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "7412:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$79",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 309,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "7424:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$79_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7433:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 77,
															"src": "7424:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$79",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "7412:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 313,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "7446:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 314,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "7449:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 315,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "7452:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 312,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "7439:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7439:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7467:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7439:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7412:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 325,
												"nodeType": "IfStatement",
												"src": "7408:98:0",
												"trueBody": {
													"id": 324,
													"nodeType": "Block",
													"src": "7470:36:0",
													"statements": [
														{
															"expression": {
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 320,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "7484:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7494:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7484:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 323,
															"nodeType": "ExpressionStatement",
															"src": "7484:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 326,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 301,
													"src": "7522:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 299,
												"id": 327,
												"nodeType": "Return",
												"src": "7515:13:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "7072:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "7207:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7231:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7223:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7250:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7242:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "7269:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7261:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "7299:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7290:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$79",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 293,
														"name": "Rounding",
														"nameLocations": [
															"7290:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "7290:8:0"
													},
													"referencedDeclaration": 79,
													"src": "7290:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$79",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7213:100:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7337:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7336:9:0"
									},
									"scope": 937,
									"src": "7198:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "7811:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 337,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "7825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7830:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7825:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "IfStatement",
												"src": "7821:45:0",
												"trueBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "7833:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7854:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 336,
															"id": 341,
															"nodeType": "Return",
															"src": "7847:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8553:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "8545:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8562:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 348,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "8573:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 347,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			609,
																			645
																		],
																		"referencedDeclaration": 609,
																		"src": "8568:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8568:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8579:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8568:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 352,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8567:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8562:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8545:36:0"
											},
											{
												"id": 439,
												"nodeType": "UncheckedBlock",
												"src": "8982:408:0",
												"statements": [
													{
														"expression": {
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 355,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9006:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 356,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9016:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 357,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9025:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 358,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9029:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9025:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9016:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 361,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9015:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9040:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9015:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9006:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 365,
														"nodeType": "ExpressionStatement",
														"src": "9006:35:0"
													},
													{
														"expression": {
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 366,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9055:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 367,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9065:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 368,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9074:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 369,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9078:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9074:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9065:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 372,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9064:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9089:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9064:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9055:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 376,
														"nodeType": "ExpressionStatement",
														"src": "9055:35:0"
													},
													{
														"expression": {
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 377,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9104:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 378,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9114:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 379,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9123:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 380,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9127:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9123:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9114:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 383,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9113:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9138:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9113:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9104:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 387,
														"nodeType": "ExpressionStatement",
														"src": "9104:35:0"
													},
													{
														"expression": {
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 388,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9153:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 389,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9163:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 390,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9172:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 391,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9176:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9172:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9163:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 394,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9162:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9187:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9162:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9153:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 398,
														"nodeType": "ExpressionStatement",
														"src": "9153:35:0"
													},
													{
														"expression": {
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 399,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9202:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 400,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9212:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 401,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9221:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 402,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9225:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9221:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9212:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9211:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9236:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9211:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9202:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "9202:35:0"
													},
													{
														"expression": {
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 410,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9251:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 411,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9261:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 412,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9270:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 413,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9274:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9270:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9261:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 416,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9260:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9285:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9260:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9251:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 420,
														"nodeType": "ExpressionStatement",
														"src": "9251:35:0"
													},
													{
														"expression": {
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 421,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9300:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9310:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 423,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9319:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 424,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9323:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9319:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9310:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 427,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9309:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9334:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9309:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9300:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 431,
														"nodeType": "ExpressionStatement",
														"src": "9300:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 433,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "9360:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 434,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "9368:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 435,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "9372:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9368:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 432,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "9356:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9356:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 336,
														"id": 438,
														"nodeType": "Return",
														"src": "9349:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "7541:208:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "7763:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "7768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7767:11:0"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "7802:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7801:9:0"
									},
									"scope": 937,
									"src": "7754:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "9572:161:0",
										"statements": [
											{
												"id": 475,
												"nodeType": "UncheckedBlock",
												"src": "9582:145:0",
												"statements": [
													{
														"assignments": [
															453
														],
														"declarations": [
															{
																"constant": false,
																"id": 453,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9614:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 475,
																"src": "9606:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 452,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9606:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 457,
														"initialValue": {
															"arguments": [
																{
																	"id": 455,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "9628:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 454,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	441,
																	477
																],
																"referencedDeclaration": 441,
																"src": "9623:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9623:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9606:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 458,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "9651:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$79",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 459,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "9661:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 460,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 79,
																						"src": "9673:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$79_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 461,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9682:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 77,
																					"src": "9673:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9661:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 465,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 463,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 453,
																						"src": "9688:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 464,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 453,
																						"src": "9697:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9688:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 466,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "9706:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9688:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9661:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9714:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9661:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9710:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 472,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9660:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9651:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 451,
														"id": 474,
														"nodeType": "Return",
														"src": "9644:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "9402:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "9505:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9518:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "9510:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9530:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "9521:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$79",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 446,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 445,
														"name": "Rounding",
														"nameLocations": [
															"9521:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "9521:8:0"
													},
													"referencedDeclaration": 79,
													"src": "9521:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$79",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9509:30:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "9563:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9562:9:0"
									},
									"scope": 937,
									"src": "9496:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "9918:922:0",
										"statements": [
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9936:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "9928:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 485,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9928:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"hexValue": "30",
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9945:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9928:18:0"
											},
											{
												"id": 605,
												"nodeType": "UncheckedBlock",
												"src": "9956:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 489,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "9984:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9993:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "9984:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9999:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9984:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 503,
														"nodeType": "IfStatement",
														"src": "9980:99:0",
														"trueBody": {
															"id": 502,
															"nodeType": "Block",
															"src": "10002:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 494,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10020:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10030:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10020:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 497,
																	"nodeType": "ExpressionStatement",
																	"src": "10020:13:0"
																},
																{
																	"expression": {
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 498,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10051:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10061:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10051:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 501,
																	"nodeType": "ExpressionStatement",
																	"src": "10051:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 504,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10096:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10105:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10096:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10110:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10096:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 518,
														"nodeType": "IfStatement",
														"src": "10092:96:0",
														"trueBody": {
															"id": 517,
															"nodeType": "Block",
															"src": "10113:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 509,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10131:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10141:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10131:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 512,
																	"nodeType": "ExpressionStatement",
																	"src": "10131:12:0"
																},
																{
																	"expression": {
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 513,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10161:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10171:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10161:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 516,
																	"nodeType": "ExpressionStatement",
																	"src": "10161:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 519,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10205:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10214:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10205:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10219:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10205:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 533,
														"nodeType": "IfStatement",
														"src": "10201:96:0",
														"trueBody": {
															"id": 532,
															"nodeType": "Block",
															"src": "10222:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 524,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10240:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10250:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10240:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 527,
																	"nodeType": "ExpressionStatement",
																	"src": "10240:12:0"
																},
																{
																	"expression": {
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 528,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10270:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10280:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10270:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 531,
																	"nodeType": "ExpressionStatement",
																	"src": "10270:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10314:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10323:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10314:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10328:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10314:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 548,
														"nodeType": "IfStatement",
														"src": "10310:96:0",
														"trueBody": {
															"id": 547,
															"nodeType": "Block",
															"src": "10331:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10349:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10359:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10349:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 542,
																	"nodeType": "ExpressionStatement",
																	"src": "10349:12:0"
																},
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 543,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10379:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10389:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10379:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "10379:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 549,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10423:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10432:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10423:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10436:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10423:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 563,
														"nodeType": "IfStatement",
														"src": "10419:93:0",
														"trueBody": {
															"id": 562,
															"nodeType": "Block",
															"src": "10439:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 554,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10457:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10467:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10457:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "10457:11:0"
																},
																{
																	"expression": {
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 558,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10486:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10496:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10486:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 561,
																	"nodeType": "ExpressionStatement",
																	"src": "10486:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 564,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10529:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10538:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10529:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10542:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10529:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 578,
														"nodeType": "IfStatement",
														"src": "10525:93:0",
														"trueBody": {
															"id": 577,
															"nodeType": "Block",
															"src": "10545:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 569,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10563:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10573:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10563:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 572,
																	"nodeType": "ExpressionStatement",
																	"src": "10563:11:0"
																},
																{
																	"expression": {
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 573,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10592:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10602:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10592:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 576,
																	"nodeType": "ExpressionStatement",
																	"src": "10592:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 579,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10635:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10644:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10635:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10648:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10635:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 593,
														"nodeType": "IfStatement",
														"src": "10631:93:0",
														"trueBody": {
															"id": 592,
															"nodeType": "Block",
															"src": "10651:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10669:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10679:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10669:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "10669:11:0"
																},
																{
																	"expression": {
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 588,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10698:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10708:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10698:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 591,
																	"nodeType": "ExpressionStatement",
																	"src": "10698:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 594,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10741:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10750:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10741:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10754:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10741:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 604,
														"nodeType": "IfStatement",
														"src": "10737:64:0",
														"trueBody": {
															"id": 603,
															"nodeType": "Block",
															"src": "10757:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 599,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10775:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10785:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10775:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 602,
																	"nodeType": "ExpressionStatement",
																	"src": "10775:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 606,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 486,
													"src": "10827:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 484,
												"id": 607,
												"nodeType": "Return",
												"src": "10820:13:0"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "9739:113:0",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9866:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9879:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "9871:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9870:15:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "9909:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9908:9:0"
									},
									"scope": 937,
									"src": "9857:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "11073:165:0",
										"statements": [
											{
												"id": 643,
												"nodeType": "UncheckedBlock",
												"src": "11083:149:0",
												"statements": [
													{
														"assignments": [
															621
														],
														"declarations": [
															{
																"constant": false,
																"id": 621,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11115:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 643,
																"src": "11107:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 620,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11107:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 625,
														"initialValue": {
															"arguments": [
																{
																	"id": 623,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "11129:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 622,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	609,
																	645
																],
																"referencedDeclaration": 609,
																"src": "11124:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11124:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11107:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 626,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "11156:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$79",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 627,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "11166:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 628,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 79,
																						"src": "11178:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$79_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 629,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11187:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 77,
																					"src": "11178:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11166:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 633,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 631,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11193:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 632,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 621,
																						"src": "11198:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11193:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 634,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 612,
																					"src": "11207:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11193:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11166:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11219:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11166:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11215:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 640,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11165:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11156:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 619,
														"id": 642,
														"nodeType": "Return",
														"src": "11149:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "10846:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11002:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11015:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "11007:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11031:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "11022:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$79",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 614,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 613,
														"name": "Rounding",
														"nameLocations": [
															"11022:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "11022:8:0"
													},
													"referencedDeclaration": 79,
													"src": "11022:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$79",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11006:34:0"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "11064:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11063:9:0"
									},
									"scope": 937,
									"src": "10993:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "11425:828:0",
										"statements": [
											{
												"assignments": [
													654
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11443:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "11435:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11435:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 656,
												"initialValue": {
													"hexValue": "30",
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11452:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11435:18:0"
											},
											{
												"id": 770,
												"nodeType": "UncheckedBlock",
												"src": "11463:761:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 657,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "11491:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11500:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11504:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "11491:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 673,
														"nodeType": "IfStatement",
														"src": "11487:99:0",
														"trueBody": {
															"id": 672,
															"nodeType": "Block",
															"src": "11508:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 662,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "11526:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11535:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11539:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "11535:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "11526:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 667,
																	"nodeType": "ExpressionStatement",
																	"src": "11526:15:0"
																},
																{
																	"expression": {
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 668,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "11559:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11569:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11559:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 671,
																	"nodeType": "ExpressionStatement",
																	"src": "11559:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "11603:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11612:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11616:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11612:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "11603:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 690,
														"nodeType": "IfStatement",
														"src": "11599:99:0",
														"trueBody": {
															"id": 689,
															"nodeType": "Block",
															"src": "11620:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 679,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "11638:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 680,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11647:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11651:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "11647:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "11638:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 684,
																	"nodeType": "ExpressionStatement",
																	"src": "11638:15:0"
																},
																{
																	"expression": {
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 685,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "11671:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11681:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11671:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 688,
																	"nodeType": "ExpressionStatement",
																	"src": "11671:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 691,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "11715:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11724:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11728:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11724:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "11715:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 707,
														"nodeType": "IfStatement",
														"src": "11711:99:0",
														"trueBody": {
															"id": 706,
															"nodeType": "Block",
															"src": "11732:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 696,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "11750:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11759:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11763:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "11759:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "11750:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 701,
																	"nodeType": "ExpressionStatement",
																	"src": "11750:15:0"
																},
																{
																	"expression": {
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 702,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "11783:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11793:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11783:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 705,
																	"nodeType": "ExpressionStatement",
																	"src": "11783:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 708,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "11827:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11836:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11840:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11836:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "11827:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 724,
														"nodeType": "IfStatement",
														"src": "11823:96:0",
														"trueBody": {
															"id": 723,
															"nodeType": "Block",
															"src": "11843:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 713,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "11861:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11870:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11874:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "11870:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "11861:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 718,
																	"nodeType": "ExpressionStatement",
																	"src": "11861:14:0"
																},
																{
																	"expression": {
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 719,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "11893:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11903:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11893:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 722,
																	"nodeType": "ExpressionStatement",
																	"src": "11893:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 725,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "11936:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11945:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11949:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11945:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "11936:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 741,
														"nodeType": "IfStatement",
														"src": "11932:96:0",
														"trueBody": {
															"id": 740,
															"nodeType": "Block",
															"src": "11952:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "11970:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11979:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11983:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "11979:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "11970:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 735,
																	"nodeType": "ExpressionStatement",
																	"src": "11970:14:0"
																},
																{
																	"expression": {
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 736,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "12002:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12012:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12002:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 739,
																	"nodeType": "ExpressionStatement",
																	"src": "12002:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 742,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "12045:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12054:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12058:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12054:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12045:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 758,
														"nodeType": "IfStatement",
														"src": "12041:96:0",
														"trueBody": {
															"id": 757,
															"nodeType": "Block",
															"src": "12061:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 747,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "12079:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12088:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12092:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12088:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12079:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 752,
																	"nodeType": "ExpressionStatement",
																	"src": "12079:14:0"
																},
																{
																	"expression": {
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 753,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "12111:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12121:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12111:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 756,
																	"nodeType": "ExpressionStatement",
																	"src": "12111:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "12154:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12163:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12167:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12163:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "12154:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 769,
														"nodeType": "IfStatement",
														"src": "12150:64:0",
														"trueBody": {
															"id": 768,
															"nodeType": "Block",
															"src": "12170:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 764,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "12188:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12198:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12188:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 767,
																	"nodeType": "ExpressionStatement",
																	"src": "12188:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 771,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 654,
													"src": "12240:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 652,
												"id": 772,
												"nodeType": "Return",
												"src": "12233:13:0"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "11244:114:0",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11372:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11386:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "11378:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11377:15:0"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "11416:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11415:9:0"
									},
									"scope": 937,
									"src": "11363:890:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "12488:165:0",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "12498:149:0",
												"statements": [
													{
														"assignments": [
															786
														],
														"declarations": [
															{
																"constant": false,
																"id": 786,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12530:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 808,
																"src": "12522:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 785,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12522:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 790,
														"initialValue": {
															"arguments": [
																{
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "12545:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 787,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	774,
																	810
																],
																"referencedDeclaration": 774,
																"src": "12539:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12539:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12522:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 791,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "12572:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$79",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 792,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "12582:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 793,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 79,
																						"src": "12594:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$79_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 794,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12603:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 77,
																					"src": "12594:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12582:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 800,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 798,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 796,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12609:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 797,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 786,
																						"src": "12613:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12609:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 799,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 777,
																					"src": "12622:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12609:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12582:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12634:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12582:53:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12630:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 805,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12581:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12572:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 784,
														"id": 807,
														"nodeType": "Return",
														"src": "12565:71:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "12259:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12416:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12430:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "12422:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12446:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "12437:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$79",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 779,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 778,
														"name": "Rounding",
														"nameLocations": [
															"12437:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "12437:8:0"
													},
													"referencedDeclaration": 79,
													"src": "12437:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$79",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12421:34:0"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "12479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12478:9:0"
									},
									"scope": 937,
									"src": "12407:246:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "12967:600:0",
										"statements": [
											{
												"assignments": [
													819
												],
												"declarations": [
													{
														"constant": false,
														"id": 819,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12985:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 896,
														"src": "12977:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 818,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"initialValue": {
													"hexValue": "30",
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12994:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12977:18:0"
											},
											{
												"id": 893,
												"nodeType": "UncheckedBlock",
												"src": "13005:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 822,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "13033:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13042:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13033:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13048:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13033:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 836,
														"nodeType": "IfStatement",
														"src": "13029:98:0",
														"trueBody": {
															"id": 835,
															"nodeType": "Block",
															"src": "13051:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 827,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 813,
																			"src": "13069:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13079:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13069:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 830,
																	"nodeType": "ExpressionStatement",
																	"src": "13069:13:0"
																},
																{
																	"expression": {
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 831,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "13100:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13110:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13100:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 834,
																	"nodeType": "ExpressionStatement",
																	"src": "13100:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 837,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "13144:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13153:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "13144:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13144:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 851,
														"nodeType": "IfStatement",
														"src": "13140:95:0",
														"trueBody": {
															"id": 850,
															"nodeType": "Block",
															"src": "13161:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 842,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 813,
																			"src": "13179:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13189:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "13179:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 845,
																	"nodeType": "ExpressionStatement",
																	"src": "13179:12:0"
																},
																{
																	"expression": {
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 846,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "13209:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13219:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13209:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 849,
																	"nodeType": "ExpressionStatement",
																	"src": "13209:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 852,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "13252:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13261:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "13252:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13266:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13252:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 866,
														"nodeType": "IfStatement",
														"src": "13248:95:0",
														"trueBody": {
															"id": 865,
															"nodeType": "Block",
															"src": "13269:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 857,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 813,
																			"src": "13287:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13297:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "13287:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 860,
																	"nodeType": "ExpressionStatement",
																	"src": "13287:12:0"
																},
																{
																	"expression": {
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 861,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "13317:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13327:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13317:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 864,
																	"nodeType": "ExpressionStatement",
																	"src": "13317:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 867,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "13360:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13369:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "13360:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13374:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13360:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 881,
														"nodeType": "IfStatement",
														"src": "13356:95:0",
														"trueBody": {
															"id": 880,
															"nodeType": "Block",
															"src": "13377:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 872,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 813,
																			"src": "13395:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13405:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13395:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 875,
																	"nodeType": "ExpressionStatement",
																	"src": "13395:12:0"
																},
																{
																	"expression": {
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 876,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "13425:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13435:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13425:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 879,
																	"nodeType": "ExpressionStatement",
																	"src": "13425:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 882,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "13468:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13477:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13468:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13481:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13468:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 892,
														"nodeType": "IfStatement",
														"src": "13464:64:0",
														"trueBody": {
															"id": 891,
															"nodeType": "Block",
															"src": "13484:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 887,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "13502:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13502:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 890,
																	"nodeType": "ExpressionStatement",
																	"src": "13502:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 894,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 819,
													"src": "13554:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 817,
												"id": 895,
												"nodeType": "Return",
												"src": "13547:13:0"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "12659:240:0",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12913:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12928:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "12920:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12919:15:0"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "12958:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12957:9:0"
									},
									"scope": 937,
									"src": "12904:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "13803:173:0",
										"statements": [
											{
												"id": 934,
												"nodeType": "UncheckedBlock",
												"src": "13813:157:0",
												"statements": [
													{
														"assignments": [
															909
														],
														"declarations": [
															{
																"constant": false,
																"id": 909,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13845:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 934,
																"src": "13837:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 908,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13837:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 913,
														"initialValue": {
															"arguments": [
																{
																	"id": 911,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "13861:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 910,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	897,
																	936
																],
																"referencedDeclaration": 897,
																"src": "13854:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13854:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13837:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 914,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "13888:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$79",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 915,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 903,
																					"src": "13898:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 916,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 79,
																						"src": "13910:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$79_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 917,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "13919:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 77,
																					"src": "13910:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "13898:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 924,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 919,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13925:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 922,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 920,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 909,
																									"src": "13931:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 921,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "13940:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "13931:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 923,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "13930:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13925:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 925,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 900,
																					"src": "13945:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13925:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13898:52:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13957:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13898:60:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13953:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 931,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13897:62:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13888:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 907,
														"id": 933,
														"nodeType": "Return",
														"src": "13881:78:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "13573:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13730:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13761:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13752:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$79",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 902,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 901,
														"name": "Rounding",
														"nameLocations": [
															"13752:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "13752:8:0"
													},
													"referencedDeclaration": 79,
													"src": "13752:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$79",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13736:34:0"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13794:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:9:0"
									},
									"scope": 937,
									"src": "13721:255:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2984,
							"src": "1676:12302:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 938,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "14102:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 939,
								"nodeType": "StructuredDocumentation",
								"src": "14128:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1110,
							"linearizedBaseContracts": [
								1110
							],
							"name": "Strings",
							"nameLocation": "14171:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 942,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "14210:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1110,
									"src": "14185:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 940,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "14185:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 941,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14221:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 945,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "14268:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1110,
									"src": "14245:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 943,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "14245:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 944,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14286:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "14461:625:0",
										"statements": [
											{
												"id": 991,
												"nodeType": "UncheckedBlock",
												"src": "14471:609:0",
												"statements": [
													{
														"assignments": [
															954
														],
														"declarations": [
															{
																"constant": false,
																"id": 954,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "14503:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 991,
																"src": "14495:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 953,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14495:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 961,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 957,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "14523:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 955,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "14512:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$937_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14517:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 774,
																	"src": "14512:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14512:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14532:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "14512:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14495:38:0"
													},
													{
														"assignments": [
															963
														],
														"declarations": [
															{
																"constant": false,
																"id": 963,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "14561:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 991,
																"src": "14547:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 962,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "14547:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 968,
														"initialValue": {
															"arguments": [
																{
																	"id": 966,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "14581:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "14570:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 964,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "14574:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14570:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14547:41:0"
													},
													{
														"assignments": [
															970
														],
														"declarations": [
															{
																"constant": false,
																"id": 970,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "14610:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 991,
																"src": "14602:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 969,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14602:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 971,
														"nodeType": "VariableDeclarationStatement",
														"src": "14602:11:0"
													},
													{
														"AST": {
															"nativeSrc": "14683:67:0",
															"nodeType": "YulBlock",
															"src": "14683:67:0",
															"statements": [
																{
																	"nativeSrc": "14701:35:0",
																	"nodeType": "YulAssignment",
																	"src": "14701:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "14712:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "14712:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14724:2:0",
																						"nodeType": "YulLiteral",
																						"src": "14724:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "14728:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "14728:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14720:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "14720:3:0"
																				},
																				"nativeSrc": "14720:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "14720:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14708:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14708:3:0"
																		},
																		"nativeSrc": "14708:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14708:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "14701:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14701:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 963,
																"isOffset": false,
																"isSlot": false,
																"src": "14712:6:0",
																"valueSize": 1
															},
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "14728:6:0",
																"valueSize": 1
															},
															{
																"declaration": 970,
																"isOffset": false,
																"isSlot": false,
																"src": "14701:3:0",
																"valueSize": 1
															}
														],
														"id": 972,
														"nodeType": "InlineAssembly",
														"src": "14674:76:0"
													},
													{
														"body": {
															"id": 987,
															"nodeType": "Block",
															"src": "14776:267:0",
															"statements": [
																{
																	"expression": {
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "14794:5:0",
																		"subExpression": {
																			"id": 974,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "14794:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 976,
																	"nodeType": "ExpressionStatement",
																	"src": "14794:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "14877:84:0",
																		"nodeType": "YulBlock",
																		"src": "14877:84:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "14907:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "14907:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "14921:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "14921:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "14928:2:0",
																											"nodeType": "YulLiteral",
																											"src": "14928:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "14917:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "14917:3:0"
																									},
																									"nativeSrc": "14917:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "14917:14:0"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "14933:8:0",
																									"nodeType": "YulIdentifier",
																									"src": "14933:8:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "14912:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "14912:4:0"
																							},
																							"nativeSrc": "14912:30:0",
																							"nodeType": "YulFunctionCall",
																							"src": "14912:30:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "14899:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "14899:7:0"
																					},
																					"nativeSrc": "14899:44:0",
																					"nodeType": "YulFunctionCall",
																					"src": "14899:44:0"
																				},
																				"nativeSrc": "14899:44:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "14899:44:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 942,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "14933:8:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 970,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "14907:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 948,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "14921:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 977,
																	"nodeType": "InlineAssembly",
																	"src": "14868:93:0"
																},
																{
																	"expression": {
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 978,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "14978:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14987:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "14978:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 981,
																	"nodeType": "ExpressionStatement",
																	"src": "14978:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 982,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "15011:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15020:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "15011:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 986,
																	"nodeType": "IfStatement",
																	"src": "15007:21:0",
																	"trueBody": {
																		"id": 985,
																		"nodeType": "Break",
																		"src": "15023:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 988,
														"nodeType": "WhileStatement",
														"src": "14763:280:0"
													},
													{
														"expression": {
															"id": 989,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "15063:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 952,
														"id": 990,
														"nodeType": "Return",
														"src": "15056:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "14295:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "14399:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14416:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "14408:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14407:15:0"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "14446:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 950,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14446:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14445:15:0"
									},
									"scope": 1110,
									"src": "14390:696:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "15265:100:0",
										"statements": [
											{
												"id": 1011,
												"nodeType": "UncheckedBlock",
												"src": "15275:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1002,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "15318:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1005,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "15337:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1003,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 937,
																				"src": "15325:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$937_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "15330:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 897,
																			"src": "15325:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15325:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15346:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "15325:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1001,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1013,
																	1089,
																	1109
																],
																"referencedDeclaration": 1089,
																"src": "15306:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15306:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1000,
														"id": 1010,
														"nodeType": "Return",
														"src": "15299:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "15092:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "15200:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15220:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "15212:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15211:15:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "15250:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15250:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15249:15:0"
									},
									"scope": 1110,
									"src": "15191:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "15578:347:0",
										"statements": [
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "15601:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "15588:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1023,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15588:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1033,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15620:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1028,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "15624:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15620:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15633:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "15620:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15610:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1025,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15610:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15588:47:0"
											},
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1034,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "15645:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1036,
														"indexExpression": {
															"hexValue": "30",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15652:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15645:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15657:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "15645:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "15645:15:0"
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1040,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "15670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1042,
														"indexExpression": {
															"hexValue": "31",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15670:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15682:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "15670:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "15670:15:0"
											},
											{
												"body": {
													"id": 1074,
													"nodeType": "Block",
													"src": "15740:83:0",
													"statements": [
														{
															"expression": {
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1060,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "15754:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1062,
																	"indexExpression": {
																		"id": 1061,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "15761:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15754:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1063,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "15766:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1067,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1064,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "15775:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15783:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "15775:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15766:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "15754:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1069,
															"nodeType": "ExpressionStatement",
															"src": "15754:33:0"
														},
														{
															"expression": {
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1070,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "15801:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15811:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "15801:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1073,
															"nodeType": "ExpressionStatement",
															"src": "15801:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "15728:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15732:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15728:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"initializationExpression": {
													"assignments": [
														1047
													],
													"declarations": [
														{
															"constant": false,
															"id": 1047,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15708:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1075,
															"src": "15700:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1046,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15700:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1053,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15712:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1049,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "15716:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15712:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15725:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "15712:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15700:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "15735:3:0",
														"subExpression": {
															"id": 1057,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "15737:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1059,
													"nodeType": "ExpressionStatement",
													"src": "15735:3:0"
												},
												"nodeType": "ForStatement",
												"src": "15695:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1077,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "15840:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15849:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15840:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15852:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15832:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15832:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "15832:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "15911:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15904:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1083,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "15904:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15904:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1022,
												"id": 1087,
												"nodeType": "Return",
												"src": "15897:21:0"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "15371:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "15497:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15517:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "15509:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "15532:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "15524:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15508:31:0"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "15563:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1020,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15563:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15562:15:0"
									},
									"scope": 1110,
									"src": "15488:437:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "16150:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1102,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1092,
																			"src": "16195:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16187:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1100,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "16187:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16187:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16179:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1098,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16179:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16179:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1105,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "16203:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1097,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1013,
															1089,
															1109
														],
														"referencedDeclaration": 1089,
														"src": "16167:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16167:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1107,
												"nodeType": "Return",
												"src": "16160:59:0"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "15931:141:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "16086:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "16106:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "16098:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16097:14:0"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "16135:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1094,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16135:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16134:15:0"
									},
									"scope": 1110,
									"src": "16077:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2984,
							"src": "14163:2065:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1111,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16337:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1112,
								"nodeType": "StructuredDocumentation",
								"src": "16362:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1131,
							"linearizedBaseContracts": [
								1131
							],
							"name": "Context",
							"nameLocation": "16877:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "16953:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1117,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "16970:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16974:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "16970:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1116,
												"id": 1119,
												"nodeType": "Return",
												"src": "16963:17:0"
											}
										]
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "16900:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16910:2:0"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "16944:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16943:9:0"
									},
									"scope": 1131,
									"src": "16891:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "17060:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1126,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "17077:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17081:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "17077:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1128,
												"nodeType": "Return",
												"src": "17070:15:0"
											}
										]
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "17002:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17010:2:0"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "17044:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17044:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17043:16:0"
									},
									"scope": 1131,
									"src": "16993:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2984,
							"src": "16859:235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17220:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1134,
										"name": "Context",
										"nameLocations": [
											"17770:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1131,
										"src": "17770:7:0"
									},
									"id": 1135,
									"nodeType": "InheritanceSpecifier",
									"src": "17770:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1133,
								"nodeType": "StructuredDocumentation",
								"src": "17246:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1242,
							"linearizedBaseContracts": [
								1242,
								1131
							],
							"name": "Ownable",
							"nameLocation": "17759:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1137,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "17800:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1242,
									"src": "17784:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1136,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "17784:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1143,
									"name": "OwnershipTransferred",
									"nameLocation": "17819:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "17856:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "17840:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "17887:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "17871:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17839:57:0"
									},
									"src": "17813:84:0"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "18013:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1148,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "18042:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18042:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1147,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "18023:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18023:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "18023:32:0"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "17903:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1153,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18010:2:0"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18013:0:0"
									},
									"scope": 1242,
									"src": "17999:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "18171:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1156,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "18181:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18181:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "18181:13:0"
											},
											{
												"id": 1159,
												"nodeType": "PlaceholderStatement",
												"src": "18204:1:0"
											}
										]
									},
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "18068:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1161,
									"name": "onlyOwner",
									"nameLocation": "18159:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18168:2:0"
									},
									"src": "18150:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "18343:30:0",
										"statements": [
											{
												"expression": {
													"id": 1167,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1137,
													"src": "18360:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1168,
												"nodeType": "Return",
												"src": "18353:13:0"
											}
										]
									},
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "18218:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "18297:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18302:2:0"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "18334:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18333:9:0"
									},
									"scope": 1242,
									"src": "18288:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "18491:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1175,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "18509:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18509:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1177,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "18520:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18520:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18509:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18534:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18501:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18501:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "18501:68:0"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "18379:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "18455:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18466:2:0"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18491:0:0"
									},
									"scope": 1242,
									"src": "18446:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "18972:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19009:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19001:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1191,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19001:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19001:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1190,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "18982:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18982:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "18982:30:0"
											}
										]
									},
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "18582:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1187,
												"name": "onlyOwner",
												"nameLocations": [
													"18962:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1161,
												"src": "18962:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18962:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "18927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18944:2:0"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18972:0:0"
									},
									"scope": 1242,
									"src": "18918:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "19238:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1207,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "19256:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19276:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19268:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1208,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19268:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19268:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19256:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19280:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19248:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19248:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "19248:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1217,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "19350:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1216,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "19331:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19331:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "19331:28:0"
											}
										]
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "19025:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1204,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1203,
												"name": "onlyOwner",
												"nameLocations": [
													"19228:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1161,
												"src": "19228:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19228:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "19177:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19203:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "19195:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19194:18:0"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19238:0:0"
									},
									"scope": 1242,
									"src": "19168:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "19583:124:0",
										"statements": [
											{
												"assignments": [
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "19601:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1240,
														"src": "19593:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1227,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19593:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1230,
												"initialValue": {
													"id": 1229,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1137,
													"src": "19612:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19593:25:0"
											},
											{
												"expression": {
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1231,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "19628:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1232,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "19637:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19628:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "19628:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1236,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "19681:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1237,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "19691:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1235,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "19660:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19660:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "EmitStatement",
												"src": "19655:45:0"
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "19372:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "19529:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19556:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "19548:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19547:18:0"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19583:0:0"
									},
									"scope": 1242,
									"src": "19520:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2984,
							"src": "17741:1968:0",
							"usedErrors": [],
							"usedEvents": [
								1143
							]
						},
						{
							"id": 1243,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19841:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1245,
										"name": "Context",
										"nameLocations": [
											"20337:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1131,
										"src": "20337:7:0"
									},
									"id": 1246,
									"nodeType": "InheritanceSpecifier",
									"src": "20337:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1244,
								"nodeType": "StructuredDocumentation",
								"src": "19867:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1348,
							"linearizedBaseContracts": [
								1348,
								1131
							],
							"name": "Pausable",
							"nameLocation": "20325:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "20351:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1251,
									"name": "Paused",
									"nameLocation": "20435:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "20442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20441:17:0"
									},
									"src": "20429:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "20465:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1256,
									"name": "Unpaused",
									"nameLocation": "20546:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20563:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "20555:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20554:17:0"
									},
									"src": "20540:32:0"
								},
								{
									"constant": false,
									"id": 1258,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "20591:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1348,
									"src": "20578:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1257,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "20578:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "20691:32:0",
										"statements": [
											{
												"expression": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1262,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "20701:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20711:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "20701:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "20701:15:0"
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "20605:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1267,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20688:2:0"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20691:0:0"
									},
									"scope": 1348,
									"src": "20677:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "20934:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1270,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1304,
														"src": "20944:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20944:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "20944:19:0"
											},
											{
												"id": 1273,
												"nodeType": "PlaceholderStatement",
												"src": "20973:1:0"
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "20729:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1275,
									"name": "whenNotPaused",
									"nameLocation": "20918:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20931:2:0"
									},
									"src": "20909:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "21181:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1278,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "21191:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21191:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "21191:16:0"
											},
											{
												"id": 1281,
												"nodeType": "PlaceholderStatement",
												"src": "21217:1:0"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "20987:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1283,
									"name": "whenPaused",
									"nameLocation": "21168:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21178:2:0"
									},
									"src": "21159:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "21373:31:0",
										"statements": [
											{
												"expression": {
													"id": 1289,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1258,
													"src": "21390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1288,
												"id": 1290,
												"nodeType": "Return",
												"src": "21383:14:0"
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "21231:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "21329:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21335:2:0"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "21367:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21367:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21366:6:0"
									},
									"scope": 1348,
									"src": "21320:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "21523:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "21541:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1297,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "21542:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21542:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21552:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 1296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21533:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21533:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "21533:38:0"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "21410:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "21481:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21498:2:0"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21523:0:0"
									},
									"scope": 1348,
									"src": "21472:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "21698:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1309,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "21716:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21716:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21726:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 1308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21708:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "21708:41:0"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "21584:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "21659:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21673:2:0"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21698:0:0"
									},
									"scope": 1348,
									"src": "21650:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "21940:66:0",
										"statements": [
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1321,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "21950:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21960:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "21950:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "21950:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1326,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "21986:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21986:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1325,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "21979:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21979:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "EmitStatement",
												"src": "21974:25:0"
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "21762:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1318,
												"name": "whenNotPaused",
												"nameLocations": [
													"21926:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1275,
												"src": "21926:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21926:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "21900:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21906:2:0"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21940:0:0"
									},
									"scope": 1348,
									"src": "21891:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "22186:69:0",
										"statements": [
											{
												"expression": {
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1337,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "22196:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22206:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "22196:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "22196:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1342,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "22235:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22235:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1341,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "22226:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22226:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1345,
												"nodeType": "EmitStatement",
												"src": "22221:27:0"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "22012:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1335,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1334,
												"name": "whenPaused",
												"nameLocations": [
													"22175:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1283,
												"src": "22175:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22175:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "22147:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22155:2:0"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22186:0:0"
									},
									"scope": 1348,
									"src": "22138:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2984,
							"src": "20307:1950:0",
							"usedErrors": [],
							"usedEvents": [
								1251,
								1256
							]
						},
						{
							"id": 1349,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "22381:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1350,
								"nodeType": "StructuredDocumentation",
								"src": "22406:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1677,
							"linearizedBaseContracts": [
								1677
							],
							"name": "Address",
							"nameLocation": "22482:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "23521:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1358,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "23745:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23753:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "23745:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23758:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "23745:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23767:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23745:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1357,
												"id": 1363,
												"nodeType": "Return",
												"src": "23738:30:0"
											}
										]
									},
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "22496:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "23464:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23483:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "23475:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23474:17:0"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "23515:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23515:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23514:6:0"
									},
									"scope": 1677,
									"src": "23455:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "24763:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1376,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "24789:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1677",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1677",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "24781:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1374,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "24781:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24781:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "24795:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "24781:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1379,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "24806:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24781:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24814:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24773:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24773:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "24773:73:0"
											},
											{
												"assignments": [
													1385,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1385,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "24863:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1398,
														"src": "24858:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1384,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "24858:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1392,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24906:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1386,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "24876:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24886:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "24876:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1388,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "24898:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "24876:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24876:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24857:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1394,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "24927:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24936:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24919:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24919:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "24919:78:0"
											}
										]
									},
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "23781:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "24701:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "24727:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "24711:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24711:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24746:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "24738:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24710:43:0"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24763:0:0"
									},
									"scope": 1677,
									"src": "24692:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "25835:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1410,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "25874:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1411,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "25882:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25888:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25891:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1409,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1457,
															1501
														],
														"referencedDeclaration": 1501,
														"src": "25852:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25852:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1408,
												"id": 1415,
												"nodeType": "Return",
												"src": "25845:79:0"
											}
										]
									},
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "25010:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "25755:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "25776:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "25768:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "25797:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "25784:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25784:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25767:35:0"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "25821:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25821:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25820:14:0"
									},
									"scope": 1677,
									"src": "25746:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "26300:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1430,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "26339:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1431,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "26347:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26353:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1433,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "26356:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1429,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1457,
															1501
														],
														"referencedDeclaration": 1501,
														"src": "26317:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26317:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1428,
												"id": 1435,
												"nodeType": "Return",
												"src": "26310:59:0"
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "25937:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "26162:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "26192:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "26184:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26221:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "26208:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26208:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "26249:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "26235:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1423,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26235:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26174:93:0"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "26286:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26286:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26285:14:0"
									},
									"scope": 1677,
									"src": "26153:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "26881:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1450,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "26920:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1451,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "26928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1452,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "26934:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26941:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1449,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1457,
															1501
														],
														"referencedDeclaration": 1501,
														"src": "26898:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26898:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1448,
												"id": 1455,
												"nodeType": "Return",
												"src": "26891:94:0"
											}
										]
									},
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "26382:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "26747:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "26786:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "26778:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26815:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "26802:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26802:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26837:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "26829:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26768:80:0"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "26867:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26867:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26866:14:0"
									},
									"scope": 1677,
									"src": "26738:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "27419:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1474,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "27445:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1677",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1677",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27437:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1472,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "27437:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27437:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27451:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "27437:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1477,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "27462:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27437:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27469:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27429:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "27429:81:0"
											},
											{
												"assignments": [
													1483,
													1485
												],
												"declarations": [
													{
														"constant": false,
														"id": 1483,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "27526:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1500,
														"src": "27521:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1482,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "27521:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1485,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "27548:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1500,
														"src": "27535:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1484,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "27535:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1492,
												"initialValue": {
													"arguments": [
														{
															"id": 1490,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "27588:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1486,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1460,
																"src": "27562:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27569:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "27562:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1488,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "27581:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "27562:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27562:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27520:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1494,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "27637:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1495,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "27645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1496,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "27654:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1497,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "27666:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1493,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "27610:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27610:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1470,
												"id": 1499,
												"nodeType": "Return",
												"src": "27603:76:0"
											}
										]
									},
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "26998:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "27249:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "27288:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "27280:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27317:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "27304:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27304:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27339:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "27331:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "27368:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "27354:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27270:116:0"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "27405:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27405:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27404:14:0"
									},
									"scope": 1677,
									"src": "27240:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "27963:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1512,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "27999:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "28007:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28013:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1511,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1518,
															1547
														],
														"referencedDeclaration": 1547,
														"src": "27980:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27980:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1510,
												"id": 1516,
												"nodeType": "Return",
												"src": "27973:80:0"
											}
										]
									},
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "27692:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "27872:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "27899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "27891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "27907:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27907:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27890:35:0"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "27949:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1508,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27949:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27948:14:0"
									},
									"scope": 1677,
									"src": "27863:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "28402:168:0",
										"statements": [
											{
												"assignments": [
													1531,
													1533
												],
												"declarations": [
													{
														"constant": false,
														"id": 1531,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "28418:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1546,
														"src": "28413:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1530,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "28413:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1533,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "28440:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1546,
														"src": "28427:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1532,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "28427:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1538,
												"initialValue": {
													"arguments": [
														{
															"id": 1536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "28472:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1534,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "28454:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28461:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "28454:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28454:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28412:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1540,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "28521:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1541,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "28529:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1542,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "28538:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1543,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "28550:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1539,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "28494:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28494:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1529,
												"id": 1545,
												"nodeType": "Return",
												"src": "28487:76:0"
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "28066:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "28253:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "28289:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "28281:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "28318:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "28305:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28305:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "28346:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "28332:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1524,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28332:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28271:93:0"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "28388:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28388:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28387:14:0"
									},
									"scope": 1677,
									"src": "28244:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "28846:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1558,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "28884:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1559,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "28892:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28898:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1557,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1564,
															1593
														],
														"referencedDeclaration": 1593,
														"src": "28863:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28863:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1556,
												"id": 1562,
												"nodeType": "Return",
												"src": "28856:84:0"
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "28576:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "28758:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "28787:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "28779:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "28808:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "28795:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1551,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28795:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28778:35:0"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "28832:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1554,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28832:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28831:14:0"
									},
									"scope": 1677,
									"src": "28749:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "29288:170:0",
										"statements": [
											{
												"assignments": [
													1577,
													1579
												],
												"declarations": [
													{
														"constant": false,
														"id": 1577,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "29304:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1592,
														"src": "29299:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1576,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "29299:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1579,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "29326:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1592,
														"src": "29313:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1578,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "29313:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1584,
												"initialValue": {
													"arguments": [
														{
															"id": 1582,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "29360:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1580,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "29340:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29347:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "29340:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29340:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29298:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1586,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "29409:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1587,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "29417:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1588,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "29426:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1589,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "29438:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1585,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "29382:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29382:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1575,
												"id": 1591,
												"nodeType": "Return",
												"src": "29375:76:0"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "28953:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "29142:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "29180:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "29172:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "29209:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "29196:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29196:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "29237:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "29223:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29223:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29162:93:0"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "29274:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29274:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29273:14:0"
									},
									"scope": 1677,
									"src": "29133:325:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "29940:434:0",
										"statements": [
											{
												"condition": {
													"id": 1607,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1598,
													"src": "29954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1629,
													"nodeType": "Block",
													"src": "30310:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1625,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1600,
																		"src": "30332:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1626,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1602,
																		"src": "30344:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1624,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "30324:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30324:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1628,
															"nodeType": "ExpressionStatement",
															"src": "30324:33:0"
														}
													]
												},
												"id": 1630,
												"nodeType": "IfStatement",
												"src": "29950:418:0",
												"trueBody": {
													"id": 1623,
													"nodeType": "Block",
													"src": "29963:341:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1608,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1600,
																		"src": "29981:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "29992:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "29981:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30002:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "29981:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1620,
															"nodeType": "IfStatement",
															"src": "29977:286:0",
															"trueBody": {
																"id": 1619,
																"nodeType": "Block",
																"src": "30005:258:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1614,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1596,
																							"src": "30207:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1613,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1365,
																						"src": "30196:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "30196:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1616,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30216:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1612,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "30188:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30188:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1618,
																		"nodeType": "ExpressionStatement",
																		"src": "30188:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1621,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "30283:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1606,
															"id": 1622,
															"nodeType": "Return",
															"src": "30276:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "29464:277:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "29755:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "29799:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "29791:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "29820:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "29815:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29815:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "29850:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "29837:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1599,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29837:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "29884:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "29870:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1601,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29870:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29781:121:0"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "29926:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29926:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29925:14:0"
									},
									"scope": 1677,
									"src": "29746:628:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1655,
										"nodeType": "Block",
										"src": "30755:135:0",
										"statements": [
											{
												"condition": {
													"id": 1644,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1635,
													"src": "30769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1653,
													"nodeType": "Block",
													"src": "30826:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1649,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1637,
																		"src": "30848:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1650,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1639,
																		"src": "30860:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1648,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "30840:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30840:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1652,
															"nodeType": "ExpressionStatement",
															"src": "30840:33:0"
														}
													]
												},
												"id": 1654,
												"nodeType": "IfStatement",
												"src": "30765:119:0",
												"trueBody": {
													"id": 1647,
													"nodeType": "Block",
													"src": "30778:42:0",
													"statements": [
														{
															"expression": {
																"id": 1645,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "30799:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1643,
															"id": 1646,
															"nodeType": "Return",
															"src": "30792:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "30380:210:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "30604:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "30635:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "30630:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30630:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "30665:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "30652:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1636,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30652:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "30699:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "30685:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1638,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30685:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30620:97:0"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "30741:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1641,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30741:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30740:14:0"
									},
									"scope": 1677,
									"src": "30595:295:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "30979:457:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1663,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "31055:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31066:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "31055:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31075:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31055:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1673,
													"nodeType": "Block",
													"src": "31385:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1670,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1660,
																		"src": "31406:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1669,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "31399:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31399:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1672,
															"nodeType": "ExpressionStatement",
															"src": "31399:20:0"
														}
													]
												},
												"id": 1674,
												"nodeType": "IfStatement",
												"src": "31051:379:0",
												"trueBody": {
													"id": 1668,
													"nodeType": "Block",
													"src": "31078:301:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "31236:133:0",
																"nodeType": "YulBlock",
																"src": "31236:133:0",
																"statements": [
																	{
																		"nativeSrc": "31254:40:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "31254:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "31283:10:0",
																					"nodeType": "YulIdentifier",
																					"src": "31283:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "31277:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "31277:5:0"
																			},
																			"nativeSrc": "31277:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "31277:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "31258:15:0",
																				"nodeType": "YulTypedName",
																				"src": "31258:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "31322:2:0",
																							"nodeType": "YulLiteral",
																							"src": "31322:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "31326:10:0",
																							"nodeType": "YulIdentifier",
																							"src": "31326:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "31318:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "31318:3:0"
																					},
																					"nativeSrc": "31318:19:0",
																					"nodeType": "YulFunctionCall",
																					"src": "31318:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "31339:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "31339:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "31311:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "31311:6:0"
																			},
																			"nativeSrc": "31311:44:0",
																			"nodeType": "YulFunctionCall",
																			"src": "31311:44:0"
																		},
																		"nativeSrc": "31311:44:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "31311:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1658,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31283:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1658,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31326:10:0",
																	"valueSize": 1
																}
															],
															"id": 1667,
															"nodeType": "InlineAssembly",
															"src": "31227:142:0"
														}
													]
												}
											}
										]
									},
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "30905:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "30926:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "30913:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1657,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30913:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "30952:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "30938:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1659,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30938:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30912:53:0"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30979:0:0"
									},
									"scope": 1677,
									"src": "30896:540:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2984,
							"src": "22474:8964:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31592:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1679,
								"nodeType": "StructuredDocumentation",
								"src": "31617:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1694,
							"linearizedBaseContracts": [
								1694
							],
							"name": "IERC721Receiver",
							"nameLocation": "31780:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "31802:493:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1693,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "32309:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "32343:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "32335:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32369:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "32361:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32391:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "32383:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "32423:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "32408:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32408:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32325:108:0"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "32452:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1690,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "32452:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32451:8:0"
									},
									"scope": 1694,
									"src": "32300:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2984,
							"src": "31770:692:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1695,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32599:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1696,
								"nodeType": "StructuredDocumentation",
								"src": "32624:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1705,
							"linearizedBaseContracts": [
								1705
							],
							"name": "IERC165",
							"nameLocation": "32914:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "32928:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "33282:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "33307:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "33300:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1698,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "33300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33299:20:0"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "33343:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1701,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33343:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33342:6:0"
									},
									"scope": 1705,
									"src": "33273:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2984,
							"src": "32904:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1706,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33486:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1708,
										"name": "IERC165",
										"nameLocations": [
											"34117:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1705,
										"src": "34117:7:0"
									},
									"id": 1709,
									"nodeType": "InheritanceSpecifier",
									"src": "34117:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1707,
								"nodeType": "StructuredDocumentation",
								"src": "33512:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1727,
							"linearizedBaseContracts": [
								1727,
								1705
							],
							"name": "ERC165",
							"nameLocation": "34107:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1704
									],
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "34283:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1718,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "34300:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1720,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1705,
																	"src": "34320:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1705_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1705_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1719,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "34315:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34315:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1705",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "34329:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "34315:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "34300:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1717,
												"id": 1724,
												"nodeType": "Return",
												"src": "34293:47:0"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "34131:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "34201:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "34259:8:0"
									},
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "34226:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "34219:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1711,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "34219:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34218:20:0"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "34277:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34277:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34276:6:0"
									},
									"scope": 1727,
									"src": "34192:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2984,
							"src": "34089:260:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1728,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34487:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1730,
										"name": "IERC165",
										"nameLocations": [
											"34602:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1705,
										"src": "34602:7:0"
									},
									"id": 1731,
									"nodeType": "InheritanceSpecifier",
									"src": "34602:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1729,
								"nodeType": "StructuredDocumentation",
								"src": "34513:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1841,
							"linearizedBaseContracts": [
								1841,
								1705
							],
							"name": "IERC721",
							"nameLocation": "34591:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "34616:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1740,
									"name": "Transfer",
									"nameLocation": "34715:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34740:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "34724:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34762:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "34746:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "34766:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34723:67:0"
									},
									"src": "34709:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "34797:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1749,
									"name": "Approval",
									"nameLocation": "34902:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34927:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "34911:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "34950:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "34934:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34976:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "34960:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34910:74:0"
									},
									"src": "34896:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "34991:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1758,
									"name": "ApprovalForAll",
									"nameLocation": "35119:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "35150:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "35134:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35134:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "35173:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "35157:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "35188:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "35183:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35133:64:0"
									},
									"src": "35113:85:0"
								},
								{
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "35204:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "35294:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "35312:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "35304:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35303:15:0"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "35350:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "35342:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35341:17:0"
									},
									"scope": 1841,
									"src": "35285:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "35365:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "35510:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35526:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "35518:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35517:17:0"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "35566:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "35558:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35557:15:0"
									},
									"scope": 1841,
									"src": "35501:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "35579:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "36149:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "36175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36205:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "36197:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36225:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "36217:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "36257:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "36242:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36165:102:0"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36276:0:0"
									},
									"scope": 1841,
									"src": "36140:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "36283:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1796,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "36984:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "37018:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "37010:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37040:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "37032:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37060:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "37052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37052:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37000:73:0"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37082:0:0"
									},
									"scope": 1841,
									"src": "36975:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "37089:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "37835:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "37865:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "37857:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37887:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "37879:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37907:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "37899:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37847:73:0"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37929:0:0"
									},
									"scope": 1841,
									"src": "37826:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "37936:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "38402:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38418:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "38410:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38430:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "38422:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38409:29:0"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38447:0:0"
									},
									"scope": 1841,
									"src": "38393:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "38454:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "38777:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "38803:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "38795:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "38818:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "38813:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1818,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38813:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38794:34:0"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38837:0:0"
									},
									"scope": 1841,
									"src": "38768:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "38844:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "38997:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39017:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "39009:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39008:17:0"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "39057:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "39049:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39048:18:0"
									},
									"scope": 1841,
									"src": "38988:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "39073:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "39225:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "39250:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "39242:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "39265:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "39257:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39257:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39241:33:0"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "39298:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39298:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39297:6:0"
									},
									"scope": 1841,
									"src": "39216:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2984,
							"src": "34581:4725:0",
							"usedErrors": [],
							"usedEvents": [
								1740,
								1749,
								1758
							]
						},
						{
							"id": 1842,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39467:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1844,
										"name": "IERC721",
										"nameLocations": [
											"39656:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1841,
										"src": "39656:7:0"
									},
									"id": 1845,
									"nodeType": "InheritanceSpecifier",
									"src": "39656:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1843,
								"nodeType": "StructuredDocumentation",
								"src": "39493:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1866,
							"linearizedBaseContracts": [
								1866,
								1841,
								1705
							],
							"name": "IERC721Metadata",
							"nameLocation": "39637:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "39670:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "39742:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39746:2:0"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "39772:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1848,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39772:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39771:15:0"
									},
									"scope": 1866,
									"src": "39733:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "39793:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "39867:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39873:2:0"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "39899:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39899:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39898:15:0"
									},
									"scope": 1866,
									"src": "39858:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "39920:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "40024:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40041:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "40033:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40032:17:0"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "40073:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1862,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40073:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40072:15:0"
									},
									"scope": 1866,
									"src": "40015:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2984,
							"src": "39627:463:0",
							"usedErrors": [],
							"usedEvents": [
								1740,
								1749,
								1758
							]
						},
						{
							"id": 1867,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40226:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1869,
										"name": "Context",
										"nameLocations": [
											"40524:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1131,
										"src": "40524:7:0"
									},
									"id": 1870,
									"nodeType": "InheritanceSpecifier",
									"src": "40524:7:0"
								},
								{
									"baseName": {
										"id": 1871,
										"name": "ERC165",
										"nameLocations": [
											"40533:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1727,
										"src": "40533:6:0"
									},
									"id": 1872,
									"nodeType": "InheritanceSpecifier",
									"src": "40533:6:0"
								},
								{
									"baseName": {
										"id": 1873,
										"name": "IERC721",
										"nameLocations": [
											"40541:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1841,
										"src": "40541:7:0"
									},
									"id": 1874,
									"nodeType": "InheritanceSpecifier",
									"src": "40541:7:0"
								},
								{
									"baseName": {
										"id": 1875,
										"name": "IERC721Metadata",
										"nameLocations": [
											"40550:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1866,
										"src": "40550:15:0"
									},
									"id": 1876,
									"nodeType": "InheritanceSpecifier",
									"src": "40550:15:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1868,
								"nodeType": "StructuredDocumentation",
								"src": "40258:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 2803,
							"linearizedBaseContracts": [
								2803,
								1866,
								1841,
								1727,
								1705,
								1131
							],
							"name": "ERC721",
							"nameLocation": "40514:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1879,
									"libraryName": {
										"id": 1877,
										"name": "Address",
										"nameLocations": [
											"40578:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1677,
										"src": "40578:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "40572:26:0",
									"typeName": {
										"id": 1878,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "40590:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 1882,
									"libraryName": {
										"id": 1880,
										"name": "Strings",
										"nameLocations": [
											"40609:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1110,
										"src": "40609:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "40603:26:0",
									"typeName": {
										"id": 1881,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "40621:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1884,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "40668:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2803,
									"src": "40653:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1883,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "40653:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1886,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "40715:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2803,
									"src": "40700:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1885,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "40700:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1890,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "40811:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2803,
									"src": "40775:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1889,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1887,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "40783:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "40775:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1888,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "40794:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1894,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "40905:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2803,
									"src": "40869:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1893,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1891,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "40877:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "40869:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1892,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "40888:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1898,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "41006:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2803,
									"src": "40970:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1897,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1895,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "40978:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "40970:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1896,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "40989:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1904,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "41129:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2803,
									"src": "41076:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1903,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1899,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "41084:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "41076:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1902,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1900,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "41103:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "41095:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1901,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "41114:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "41323:57:0",
										"statements": [
											{
												"expression": {
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1912,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "41333:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1913,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "41341:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "41333:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "41333:13:0"
											},
											{
												"expression": {
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1916,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "41356:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1917,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "41366:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "41356:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "41356:17:0"
											}
										]
									},
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "41154:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 1921,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "41293:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "41279:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1906,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41279:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "41314:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "41300:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1908,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41278:44:0"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41323:0:0"
									},
									"scope": 2803,
									"src": "41267:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1704,
										1726
									],
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "41555:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1932,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "41584:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1934,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1841,
																			"src": "41604:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1841_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1841_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1933,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "41599:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41599:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1841",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "41613:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "41599:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "41584:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1938,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "41640:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1940,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1866,
																			"src": "41660:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1866_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1866_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1939,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "41655:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41655:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1866",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "41677:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "41655:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "41640:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "41584:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1947,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "41728:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1945,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "41704:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$2803_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41710:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1726,
															"src": "41704:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41704:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "41584:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1931,
												"id": 1950,
												"nodeType": "Return",
												"src": "41565:175:0"
											}
										]
									},
									"documentation": {
										"id": 1922,
										"nodeType": "StructuredDocumentation",
										"src": "41386:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "41456:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1928,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1926,
												"name": "ERC165",
												"nameLocations": [
													"41523:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1727,
												"src": "41523:6:0"
											},
											{
												"id": 1927,
												"name": "IERC165",
												"nameLocations": [
													"41531:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1705,
												"src": "41531:7:0"
											}
										],
										"src": "41514:25:0"
									},
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "41481:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "41474:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1923,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "41474:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41473:20:0"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "41549:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41549:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41548:6:0"
									},
									"scope": 2803,
									"src": "41447:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1766
									],
									"body": {
										"id": 1975,
										"nodeType": "Block",
										"src": "41887:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1962,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1955,
																"src": "41905:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "41922:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "41914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1963,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "41914:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41914:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "41905:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41926:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 1961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41897:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1970,
												"nodeType": "ExpressionStatement",
												"src": "41897:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1971,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "41987:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1973,
													"indexExpression": {
														"id": 1972,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "41997:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "41987:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1960,
												"id": 1974,
												"nodeType": "Return",
												"src": "41980:23:0"
											}
										]
									},
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "41753:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "41815:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1957,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "41860:8:0"
									},
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "41833:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "41825:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41824:15:0"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "41878:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41877:9:0"
									},
									"scope": 2803,
									"src": "41806:204:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1774
									],
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "42148:138:0",
										"statements": [
											{
												"assignments": [
													1986
												],
												"declarations": [
													{
														"constant": false,
														"id": 1986,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "42166:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "42158:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1985,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42158:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1990,
												"initialValue": {
													"arguments": [
														{
															"id": 1988,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "42183:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1987,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2286,
														"src": "42174:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42174:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42158:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1992,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "42209:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42226:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "42218:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1993,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "42218:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42218:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "42209:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42230:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 1991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42201:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "42201:56:0"
											},
											{
												"expression": {
													"id": 2001,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1986,
													"src": "42274:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1984,
												"id": 2002,
												"nodeType": "Return",
												"src": "42267:12:0"
											}
										]
									},
									"documentation": {
										"id": 1977,
										"nodeType": "StructuredDocumentation",
										"src": "42016:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "42076:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1981,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "42121:8:0"
									},
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42092:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "42084:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42083:17:0"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "42139:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42138:9:0"
									},
									"scope": 2803,
									"src": "42067:219:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1851
									],
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "42417:29:0",
										"statements": [
											{
												"expression": {
													"id": 2011,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1884,
													"src": "42434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2010,
												"id": 2012,
												"nodeType": "Return",
												"src": "42427:12:0"
											}
										]
									},
									"documentation": {
										"id": 2005,
										"nodeType": "StructuredDocumentation",
										"src": "42292:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 2014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "42357:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2007,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "42384:8:0"
									},
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42361:2:0"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "42402:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2008,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42402:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42401:15:0"
									},
									"scope": 2803,
									"src": "42348:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1857
									],
									"body": {
										"id": 2023,
										"nodeType": "Block",
										"src": "42581:31:0",
										"statements": [
											{
												"expression": {
													"id": 2021,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1886,
													"src": "42598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2020,
												"id": 2022,
												"nodeType": "Return",
												"src": "42591:14:0"
											}
										]
									},
									"documentation": {
										"id": 2015,
										"nodeType": "StructuredDocumentation",
										"src": "42452:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 2024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "42519:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2017,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "42548:8:0"
									},
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42525:2:0"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "42566:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2018,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42566:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42565:15:0"
									},
									"scope": 2803,
									"src": "42510:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1865
									],
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "42766:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2034,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "42791:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2033,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2681,
														"src": "42776:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42776:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2036,
												"nodeType": "ExpressionStatement",
												"src": "42776:23:0"
											},
											{
												"assignments": [
													2038
												],
												"declarations": [
													{
														"constant": false,
														"id": 2038,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "42824:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2062,
														"src": "42810:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2037,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "42810:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2041,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2039,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "42834:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42834:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42810:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2044,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2038,
																		"src": "42867:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "42861:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2042,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "42861:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42861:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "42876:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "42861:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42885:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "42861:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 2059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42945:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "42861:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2053,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2038,
																		"src": "42913:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2054,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2027,
																				"src": "42922:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "42930:8:0",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 993,
																			"src": "42922:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 2056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42922:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 2051,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "42896:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "42900:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "42896:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42896:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42889:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2049,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "42889:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42889:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2032,
												"id": 2061,
												"nodeType": "Return",
												"src": "42854:93:0"
											}
										]
									},
									"documentation": {
										"id": 2025,
										"nodeType": "StructuredDocumentation",
										"src": "42618:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "42687:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2029,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "42733:8:0"
									},
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "42696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42695:17:0"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "42751:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2030,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42751:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42750:15:0"
									},
									"scope": 2803,
									"src": "42678:276:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2071,
										"nodeType": "Block",
										"src": "43262:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "43279:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2068,
												"id": 2070,
												"nodeType": "Return",
												"src": "43272:9:0"
											}
										]
									},
									"documentation": {
										"id": 2064,
										"nodeType": "StructuredDocumentation",
										"src": "42960:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 2072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "43205:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43213:2:0"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "43247:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "43247:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43246:15:0"
									},
									"scope": 2803,
									"src": "43196:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1814
									],
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "43415:336:0",
										"statements": [
											{
												"assignments": [
													2082
												],
												"declarations": [
													{
														"constant": false,
														"id": 2082,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "43433:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2114,
														"src": "43425:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2081,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43425:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2087,
												"initialValue": {
													"arguments": [
														{
															"id": 2085,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "43456:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2083,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2803,
															"src": "43441:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2803_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "43448:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "43441:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43441:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43425:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2089,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "43482:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2090,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2082,
																"src": "43488:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "43482:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43495:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 2088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "43474:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43474:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2094,
												"nodeType": "ExpressionStatement",
												"src": "43474:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2096,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "43563:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43563:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2098,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "43579:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "43563:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2101,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2082,
																		"src": "43605:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2102,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "43612:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43612:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2100,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "43588:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43588:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "43563:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43639:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 2095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "43542:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43542:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2108,
												"nodeType": "ExpressionStatement",
												"src": "43542:170:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2110,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2075,
															"src": "43732:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2111,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "43736:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2109,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2635,
														"src": "43723:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43723:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2113,
												"nodeType": "ExpressionStatement",
												"src": "43723:21:0"
											}
										]
									},
									"documentation": {
										"id": 2073,
										"nodeType": "StructuredDocumentation",
										"src": "43294:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "43354:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2079,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "43406:8:0"
									},
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43370:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "43362:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "43374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43361:29:0"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43415:0:0"
									},
									"scope": 2803,
									"src": "43345:406:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1830
									],
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "43897:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2125,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "43922:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2124,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2681,
														"src": "43907:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43907:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2127,
												"nodeType": "ExpressionStatement",
												"src": "43907:23:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2128,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "43948:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2130,
													"indexExpression": {
														"id": 2129,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "43964:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "43948:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2123,
												"id": 2131,
												"nodeType": "Return",
												"src": "43941:31:0"
											}
										]
									},
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "43757:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "43821:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2120,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "43870:8:0"
									},
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43841:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "43833:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43832:17:0"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "43888:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43887:9:0"
									},
									"scope": 2803,
									"src": "43812:167:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1822
									],
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "44130:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2143,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "44159:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44159:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2145,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "44173:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2146,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "44183:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2142,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2667,
														"src": "44140:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44140:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2148,
												"nodeType": "ExpressionStatement",
												"src": "44140:52:0"
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "43985:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "44055:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "44121:8:0"
									},
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "44081:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "44073:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "44096:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "44091:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44091:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44072:33:0"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44130:0:0"
									},
									"scope": 2803,
									"src": "44046:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1840
									],
									"body": {
										"id": 2167,
										"nodeType": "Block",
										"src": "44368:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2161,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "44385:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2163,
														"indexExpression": {
															"id": 2162,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "44404:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "44385:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2165,
													"indexExpression": {
														"id": 2164,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "44411:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "44385:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2160,
												"id": 2166,
												"nodeType": "Return",
												"src": "44378:42:0"
											}
										]
									},
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "44205:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "44274:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "44344:8:0"
									},
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "44299:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "44291:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "44314:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "44306:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44290:33:0"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "44362:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44362:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44361:6:0"
									},
									"scope": 2803,
									"src": "44265:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1806
									],
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "44608:207:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2181,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "44697:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44697:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2183,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2175,
																	"src": "44711:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2180,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "44678:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44678:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44721:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 2179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44670:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44670:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2187,
												"nodeType": "ExpressionStatement",
												"src": "44670:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2171,
															"src": "44790:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2190,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2173,
															"src": "44796:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2191,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2175,
															"src": "44800:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2188,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2611,
														"src": "44780:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44780:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2193,
												"nodeType": "ExpressionStatement",
												"src": "44780:28:0"
											}
										]
									},
									"documentation": {
										"id": 2169,
										"nodeType": "StructuredDocumentation",
										"src": "44433:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "44498:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "44599:8:0"
									},
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "44528:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "44520:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44550:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "44542:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44570:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "44562:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44510:73:0"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44608:0:0"
									},
									"scope": 2803,
									"src": "44489:326:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1796
									],
									"body": {
										"id": 2213,
										"nodeType": "Block",
										"src": "45004:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2207,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "45031:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2208,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2200,
															"src": "45037:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2209,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "45041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45050:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2206,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2214,
															2244
														],
														"referencedDeclaration": 2244,
														"src": "45014:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45014:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2212,
												"nodeType": "ExpressionStatement",
												"src": "45014:39:0"
											}
										]
									},
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "44821:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 2214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "44890:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2204,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "44995:8:0"
									},
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "44924:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "44916:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44946:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "44938:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44966:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "44958:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44906:73:0"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45004:0:0"
									},
									"scope": 2803,
									"src": "44881:179:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1786
									],
									"body": {
										"id": 2243,
										"nodeType": "Block",
										"src": "45276:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2229,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "45313:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "45313:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2231,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2221,
																	"src": "45327:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2228,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "45294:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45294:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45337:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 2227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "45286:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45286:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2235,
												"nodeType": "ExpressionStatement",
												"src": "45286:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2237,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2217,
															"src": "45409:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2238,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2219,
															"src": "45415:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2239,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "45419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2240,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2223,
															"src": "45428:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2236,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2273,
														"src": "45395:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45395:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2242,
												"nodeType": "ExpressionStatement",
												"src": "45395:38:0"
											}
										]
									},
									"documentation": {
										"id": 2215,
										"nodeType": "StructuredDocumentation",
										"src": "45066:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 2244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "45135:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2225,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "45267:8:0"
									},
									"parameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "45169:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "45161:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "45191:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "45183:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45211:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "45203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45203:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45241:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "45228:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45228:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45151:100:0"
									},
									"returnParameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45276:0:0"
									},
									"scope": 2803,
									"src": "45126:314:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2272,
										"nodeType": "Block",
										"src": "46441:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2257,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "46461:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2258,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "46467:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2259,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2251,
															"src": "46471:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2256,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2611,
														"src": "46451:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46451:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2261,
												"nodeType": "ExpressionStatement",
												"src": "46451:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2264,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2247,
																	"src": "46520:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2265,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2249,
																	"src": "46526:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2266,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "46530:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2267,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2253,
																	"src": "46539:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2263,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2743,
																"src": "46497:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46497:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46546:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 2262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46489:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2271,
												"nodeType": "ExpressionStatement",
												"src": "46489:110:0"
											}
										]
									},
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "45446:850:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "46310:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "46341:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "46333:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46363:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "46355:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46383:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "46375:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "46413:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "46400:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46400:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46323:100:0"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46441:0:0"
									},
									"scope": 2803,
									"src": "46301:305:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2285,
										"nodeType": "Block",
										"src": "46790:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2281,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "46807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2283,
													"indexExpression": {
														"id": 2282,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2276,
														"src": "46815:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "46807:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2280,
												"id": 2284,
												"nodeType": "Return",
												"src": "46800:23:0"
											}
										]
									},
									"documentation": {
										"id": 2274,
										"nodeType": "StructuredDocumentation",
										"src": "46612:98:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 2286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "46724:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46741:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "46733:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46732:17:0"
									},
									"returnParameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "46781:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46780:9:0"
									},
									"scope": 2803,
									"src": "46715:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2303,
										"nodeType": "Block",
										"src": "47204:55:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2295,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "47230:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2294,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2286,
															"src": "47221:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 2296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47221:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47250:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2297,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47242:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47242:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47221:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2293,
												"id": 2302,
												"nodeType": "Return",
												"src": "47214:38:0"
											}
										]
									},
									"documentation": {
										"id": 2287,
										"nodeType": "StructuredDocumentation",
										"src": "46836:292:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 2304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "47142:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47158:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "47150:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47149:17:0"
									},
									"returnParameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "47198:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47198:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47197:6:0"
									},
									"scope": 2803,
									"src": "47133:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "47516:162:0",
										"statements": [
											{
												"assignments": [
													2315
												],
												"declarations": [
													{
														"constant": false,
														"id": 2315,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "47534:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2337,
														"src": "47526:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47526:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2320,
												"initialValue": {
													"arguments": [
														{
															"id": 2318,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2309,
															"src": "47557:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2316,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2803,
															"src": "47542:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2803_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 2317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47549:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "47542:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47542:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47526:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2321,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "47583:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2322,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2315,
																		"src": "47594:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "47583:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2325,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2315,
																			"src": "47620:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2326,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2307,
																			"src": "47627:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2324,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "47603:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47603:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "47583:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2330,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2309,
																			"src": "47651:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2329,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2133,
																		"src": "47639:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47639:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2332,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2307,
																	"src": "47663:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "47639:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "47583:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2335,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "47582:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2313,
												"id": 2336,
												"nodeType": "Return",
												"src": "47575:96:0"
											}
										]
									},
									"documentation": {
										"id": 2305,
										"nodeType": "StructuredDocumentation",
										"src": "47265:147:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "47426:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "47453:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "47445:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47470:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "47462:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47444:34:0"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "47510:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47510:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47509:6:0"
									},
									"scope": 2803,
									"src": "47417:261:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2352,
										"nodeType": "Block",
										"src": "48073:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2347,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "48093:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2348,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "48097:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "48106:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2346,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2353,
															2382
														],
														"referencedDeclaration": 2382,
														"src": "48083:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48083:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2351,
												"nodeType": "ExpressionStatement",
												"src": "48083:26:0"
											}
										]
									},
									"documentation": {
										"id": 2339,
										"nodeType": "StructuredDocumentation",
										"src": "47684:319:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "48017:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48035:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "48027:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48047:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "48039:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48026:29:0"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48073:0:0"
									},
									"scope": 2803,
									"src": "48008:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2381,
										"nodeType": "Block",
										"src": "48451:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2364,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2356,
															"src": "48467:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2365,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2358,
															"src": "48471:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2363,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2459,
														"src": "48461:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48461:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2367,
												"nodeType": "ExpressionStatement",
												"src": "48461:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48541:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "48533:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2370,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "48533:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "48533:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2374,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2356,
																	"src": "48545:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2375,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "48549:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2376,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "48558:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2369,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2743,
																"src": "48510:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48510:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "48577:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 2368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "48489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48489:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2380,
												"nodeType": "ExpressionStatement",
												"src": "48489:150:0"
											}
										]
									},
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "48122:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "48346:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48373:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "48365:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48393:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "48385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "48423:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "48410:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "48410:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48355:78:0"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48451:0:0"
									},
									"scope": 2803,
									"src": "48337:309:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2458,
										"nodeType": "Block",
										"src": "49029:859:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2391,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "49047:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "49061:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "49053:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2392,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "49053:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49053:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "49047:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49065:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 2390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49039:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2399,
												"nodeType": "ExpressionStatement",
												"src": "49039:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "49118:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2402,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2387,
																		"src": "49127:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2401,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "49119:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49119:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49137:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 2400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49110:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2407,
												"nodeType": "ExpressionStatement",
												"src": "49110:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49208:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49200:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2409,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49200:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49200:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2413,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "49212:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2414,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "49216:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49225:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2408,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "49179:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49179:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2417,
												"nodeType": "ExpressionStatement",
												"src": "49179:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "49322:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2420,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2387,
																		"src": "49331:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2419,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "49323:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49323:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49341:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 2418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49314:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49314:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2425,
												"nodeType": "ExpressionStatement",
												"src": "49314:58:0"
											},
											{
												"id": 2432,
												"nodeType": "UncheckedBlock",
												"src": "49383:360:0",
												"statements": [
													{
														"expression": {
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2426,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "49714:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2428,
																"indexExpression": {
																	"id": 2427,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2385,
																	"src": "49724:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "49714:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49731:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "49714:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2431,
														"nodeType": "ExpressionStatement",
														"src": "49714:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 2437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2433,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "49753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2435,
														"indexExpression": {
															"id": 2434,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "49761:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "49753:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2436,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2385,
														"src": "49772:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49753:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2438,
												"nodeType": "ExpressionStatement",
												"src": "49753:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49807:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49799:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2440,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49799:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49799:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2444,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "49811:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2445,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "49815:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2439,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "49790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49790:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2447,
												"nodeType": "EmitStatement",
												"src": "49785:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49862:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49854:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2449,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49854:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49854:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "49866:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "49870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49879:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2448,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2802,
														"src": "49834:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49834:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2457,
												"nodeType": "ExpressionStatement",
												"src": "49834:47:0"
											}
										]
									},
									"documentation": {
										"id": 2383,
										"nodeType": "StructuredDocumentation",
										"src": "48652:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "48977:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48991:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "48983:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49003:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "48995:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48982:29:0"
									},
									"returnParameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49029:0:0"
									},
									"scope": 2803,
									"src": "48968:920:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2525,
										"nodeType": "Block",
										"src": "50263:713:0",
										"statements": [
											{
												"assignments": [
													2466
												],
												"declarations": [
													{
														"constant": false,
														"id": 2466,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "50281:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2525,
														"src": "50273:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2465,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "50273:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2471,
												"initialValue": {
													"arguments": [
														{
															"id": 2469,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2462,
															"src": "50304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2467,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2803,
															"src": "50289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2803_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 2468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "50296:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "50289:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50289:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50273:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2473,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "50344:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50359:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50351:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2474,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50351:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50351:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2478,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2462,
															"src": "50363:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50372:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2472,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "50323:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50323:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2481,
												"nodeType": "ExpressionStatement",
												"src": "50323:51:0"
											},
											{
												"expression": {
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2482,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2466,
														"src": "50476:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2485,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2462,
																"src": "50499:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2483,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "50484:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$2803_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "50491:7:0",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2004,
															"src": "50484:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 2486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50484:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50476:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2488,
												"nodeType": "ExpressionStatement",
												"src": "50476:31:0"
											},
											{
												"expression": {
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "50545:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 2489,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "50552:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2491,
														"indexExpression": {
															"id": 2490,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2462,
															"src": "50568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "50552:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2493,
												"nodeType": "ExpressionStatement",
												"src": "50545:31:0"
											},
											{
												"id": 2500,
												"nodeType": "UncheckedBlock",
												"src": "50587:237:0",
												"statements": [
													{
														"expression": {
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2494,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "50792:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2496,
																"indexExpression": {
																	"id": 2495,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2466,
																	"src": "50802:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "50792:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50812:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "50792:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2499,
														"nodeType": "ExpressionStatement",
														"src": "50792:21:0"
													}
												]
											},
											{
												"expression": {
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "50833:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 2501,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "50840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2503,
														"indexExpression": {
															"id": 2502,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2462,
															"src": "50848:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "50840:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2505,
												"nodeType": "ExpressionStatement",
												"src": "50833:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "50881:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50896:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50888:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2508,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50888:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50888:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2512,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2462,
															"src": "50900:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2506,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "50872:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50872:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2514,
												"nodeType": "EmitStatement",
												"src": "50867:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2516,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "50939:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50954:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50946:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2517,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50946:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50946:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2521,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2462,
															"src": "50958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50967:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2515,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2802,
														"src": "50919:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50919:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2524,
												"nodeType": "ExpressionStatement",
												"src": "50919:50:0"
											}
										]
									},
									"documentation": {
										"id": 2460,
										"nodeType": "StructuredDocumentation",
										"src": "49894:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "50223:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50237:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "50229:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50228:17:0"
									},
									"returnParameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50263:0:0"
									},
									"scope": 2803,
									"src": "50214:762:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2610,
										"nodeType": "Block",
										"src": "51409:1124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2539,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2533,
																		"src": "51442:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2537,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2803,
																		"src": "51427:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$2803_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "51434:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2004,
																	"src": "51427:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51427:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2541,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "51454:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "51427:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 2543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51460:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 2536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51419:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2545,
												"nodeType": "ExpressionStatement",
												"src": "51419:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2547,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2531,
																"src": "51518:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "51532:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "51524:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2548,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "51524:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51524:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "51518:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51536:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 2546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51510:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51510:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2555,
												"nodeType": "ExpressionStatement",
												"src": "51510:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2557,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2529,
															"src": "51607:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2558,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "51613:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2559,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2533,
															"src": "51617:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51626:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2556,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "51586:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51586:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2562,
												"nodeType": "ExpressionStatement",
												"src": "51586:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2566,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2533,
																		"src": "51743:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2564,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2803,
																		"src": "51728:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$2803_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 2565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "51735:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2004,
																	"src": "51728:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51728:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2568,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2529,
																"src": "51755:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "51728:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51761:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 2563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51720:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51720:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2572,
												"nodeType": "ExpressionStatement",
												"src": "51720:81:0"
											},
											{
												"expression": {
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "51863:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 2573,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "51870:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2575,
														"indexExpression": {
															"id": 2574,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2533,
															"src": "51886:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "51870:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2577,
												"nodeType": "ExpressionStatement",
												"src": "51863:31:0"
											},
											{
												"id": 2590,
												"nodeType": "UncheckedBlock",
												"src": "51905:496:0",
												"statements": [
													{
														"expression": {
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2578,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "52338:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2580,
																"indexExpression": {
																	"id": 2579,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2529,
																	"src": "52348:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "52338:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52357:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "52338:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2583,
														"nodeType": "ExpressionStatement",
														"src": "52338:20:0"
													},
													{
														"expression": {
															"id": 2588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2584,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "52372:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2586,
																"indexExpression": {
																	"id": 2585,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2531,
																	"src": "52382:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "52372:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52389:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "52372:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2589,
														"nodeType": "ExpressionStatement",
														"src": "52372:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 2595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2591,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "52410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2593,
														"indexExpression": {
															"id": 2592,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2533,
															"src": "52418:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "52410:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2594,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2531,
														"src": "52429:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "52410:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2596,
												"nodeType": "ExpressionStatement",
												"src": "52410:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2598,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2529,
															"src": "52456:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2599,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "52462:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2600,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2533,
															"src": "52466:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2597,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "52447:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52447:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2602,
												"nodeType": "EmitStatement",
												"src": "52442:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2604,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2529,
															"src": "52505:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2605,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "52511:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2606,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2533,
															"src": "52515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52524:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2603,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2802,
														"src": "52485:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52485:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2609,
												"nodeType": "ExpressionStatement",
												"src": "52485:41:0"
											}
										]
									},
									"documentation": {
										"id": 2527,
										"nodeType": "StructuredDocumentation",
										"src": "50982:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "51309:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "51336:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "51328:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51358:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "51350:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51378:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "51370:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51318:73:0"
									},
									"returnParameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51409:0:0"
									},
									"scope": 2803,
									"src": "51300:1233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2634,
										"nodeType": "Block",
										"src": "52709:107:0",
										"statements": [
											{
												"expression": {
													"id": 2623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2619,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "52719:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2621,
														"indexExpression": {
															"id": 2620,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "52735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "52719:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2622,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2614,
														"src": "52746:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "52719:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2624,
												"nodeType": "ExpressionStatement",
												"src": "52719:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2628,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2616,
																	"src": "52787:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2626,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "52772:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$2803_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "52779:7:0",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2004,
																"src": "52772:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "52772:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2630,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2614,
															"src": "52797:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2631,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "52801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2625,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "52763:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52763:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2633,
												"nodeType": "EmitStatement",
												"src": "52758:51:0"
											}
										]
									},
									"documentation": {
										"id": 2612,
										"nodeType": "StructuredDocumentation",
										"src": "52539:101:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 2635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "52654:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52671:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "52663:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52683:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "52675:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52662:29:0"
									},
									"returnParameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52709:0:0"
									},
									"scope": 2803,
									"src": "52645:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2666,
										"nodeType": "Block",
										"src": "53075:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2646,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2638,
																"src": "53093:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2647,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "53102:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "53093:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 2649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53112:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 2645,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53085:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2651,
												"nodeType": "ExpressionStatement",
												"src": "53085:55:0"
											},
											{
												"expression": {
													"id": 2658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2652,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "53150:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2655,
															"indexExpression": {
																"id": 2653,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2638,
																"src": "53169:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "53150:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2656,
														"indexExpression": {
															"id": 2654,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2640,
															"src": "53176:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "53150:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2657,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2642,
														"src": "53188:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "53150:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2659,
												"nodeType": "ExpressionStatement",
												"src": "53150:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2661,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2638,
															"src": "53226:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2662,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2640,
															"src": "53233:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2663,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2642,
															"src": "53243:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2660,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "53211:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53211:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2665,
												"nodeType": "EmitStatement",
												"src": "53206:46:0"
											}
										]
									},
									"documentation": {
										"id": 2636,
										"nodeType": "StructuredDocumentation",
										"src": "52822:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 2667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "52961:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "52997:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "52989:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "53020:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "53012:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53012:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "53043:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "53038:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53038:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52979:78:0"
									},
									"returnParameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53075:0:0"
									},
									"scope": 2803,
									"src": "52952:307:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2680,
										"nodeType": "Block",
										"src": "53406:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2675,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2670,
																	"src": "53432:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2674,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2304,
																"src": "53424:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53424:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 2677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53442:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 2673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53416:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53416:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2679,
												"nodeType": "ExpressionStatement",
												"src": "53416:53:0"
											}
										]
									},
									"documentation": {
										"id": 2668,
										"nodeType": "StructuredDocumentation",
										"src": "53265:73:0",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 2681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "53352:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "53375:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "53367:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53366:17:0"
									},
									"returnParameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53406:0:0"
									},
									"scope": 2803,
									"src": "53343:133:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2742,
										"nodeType": "Block",
										"src": "54183:676:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2686,
															"src": "54197:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54200:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1365,
														"src": "54197:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 2697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54197:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2740,
													"nodeType": "Block",
													"src": "54817:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54838:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2694,
															"id": 2739,
															"nodeType": "Return",
															"src": "54831:11:0"
														}
													]
												},
												"id": 2741,
												"nodeType": "IfStatement",
												"src": "54193:660:0",
												"trueBody": {
													"id": 2737,
													"nodeType": "Block",
													"src": "54214:597:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2717,
																		"nodeType": "Block",
																		"src": "54328:91:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2715,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2711,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2709,
																						"src": "54353:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2712,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1694,
																								"src": "54363:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1694_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2713,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "54379:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1693,
																							"src": "54363:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2714,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "54396:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "54363:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "54353:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 2694,
																				"id": 2716,
																				"nodeType": "Return",
																				"src": "54346:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2718,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2710,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2709,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "54320:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2718,
																				"src": "54313:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2708,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "54313:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "54312:15:0"
																	},
																	"src": "54304:115:0"
																},
																{
																	"block": {
																		"id": 2734,
																		"nodeType": "Block",
																		"src": "54448:353:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2725,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2722,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2720,
																							"src": "54470:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2723,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "54477:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "54470:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2724,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "54487:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "54470:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2732,
																					"nodeType": "Block",
																					"src": "54597:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "54683:86:0",
																								"nodeType": "YulBlock",
																								"src": "54683:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "54720:2:0",
																															"nodeType": "YulLiteral",
																															"src": "54720:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "54724:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "54724:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "54716:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "54716:3:0"
																													},
																													"nativeSrc": "54716:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "54716:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "54739:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "54739:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "54733:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "54733:5:0"
																													},
																													"nativeSrc": "54733:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "54733:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "54709:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "54709:6:0"
																											},
																											"nativeSrc": "54709:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "54709:38:0"
																										},
																										"nativeSrc": "54709:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "54709:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 2720,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "54724:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2720,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "54739:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2731,
																							"nodeType": "InlineAssembly",
																							"src": "54674:95:0"
																						}
																					]
																				},
																				"id": 2733,
																				"nodeType": "IfStatement",
																				"src": "54466:321:0",
																				"trueBody": {
																					"id": 2730,
																					"nodeType": "Block",
																					"src": "54490:101:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 2727,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "54519:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 2726,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "54512:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 2728,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "54512:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2729,
																							"nodeType": "ExpressionStatement",
																							"src": "54512:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2735,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2721,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2720,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "54440:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2735,
																				"src": "54427:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2719,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "54427:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "54426:21:0"
																	},
																	"src": "54420:381:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2702,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "54269:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54269:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2704,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2684,
																		"src": "54283:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2705,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2688,
																		"src": "54289:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2706,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2690,
																		"src": "54298:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2699,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2686,
																				"src": "54248:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2698,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1694,
																			"src": "54232:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1694_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54232:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1694",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54252:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1693,
																	"src": "54232:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54232:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2736,
															"nodeType": "TryStatement",
															"src": "54228:573:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2682,
										"nodeType": "StructuredDocumentation",
										"src": "53482:541:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 2743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "54037:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "54077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "54069:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "54099:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "54091:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54119:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "54111:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "54149:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "54136:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "54136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54059:100:0"
									},
									"returnParameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "54177:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54177:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54176:6:0"
									},
									"scope": 2803,
									"src": "54028:831:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2788,
										"nodeType": "Block",
										"src": "55733:238:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2755,
														"name": "batchSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "55747:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55759:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "55747:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2787,
												"nodeType": "IfStatement",
												"src": "55743:222:0",
												"trueBody": {
													"id": 2786,
													"nodeType": "Block",
													"src": "55762:203:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2758,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2746,
																	"src": "55780:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55796:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "55788:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2759,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "55788:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "55788:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "55780:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2771,
															"nodeType": "IfStatement",
															"src": "55776:85:0",
															"trueBody": {
																"id": 2770,
																"nodeType": "Block",
																"src": "55800:61:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2764,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1894,
																					"src": "55818:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2766,
																				"indexExpression": {
																					"id": 2765,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2746,
																					"src": "55828:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "55818:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 2767,
																				"name": "batchSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2752,
																				"src": "55837:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "55818:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2769,
																		"nodeType": "ExpressionStatement",
																		"src": "55818:28:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2772,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2748,
																	"src": "55878:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55892:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "55884:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2773,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "55884:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "55884:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "55878:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2785,
															"nodeType": "IfStatement",
															"src": "55874:81:0",
															"trueBody": {
																"id": 2784,
																"nodeType": "Block",
																"src": "55896:59:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2778,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1894,
																					"src": "55914:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2780,
																				"indexExpression": {
																					"id": 2779,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2748,
																					"src": "55924:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "55914:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2781,
																				"name": "batchSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2752,
																				"src": "55931:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "55914:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2783,
																		"nodeType": "ExpressionStatement",
																		"src": "55914:26:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2744,
										"nodeType": "StructuredDocumentation",
										"src": "54865:705:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "55584:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "55622:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2789,
												"src": "55614:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "55644:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2789,
												"src": "55636:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2789,
												"src": "55656:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "55700:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2789,
												"src": "55692:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55604:111:0"
									},
									"returnParameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55733:0:0"
									},
									"scope": 2803,
									"src": "55575:396:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2801,
										"nodeType": "Block",
										"src": "56828:2:0",
										"statements": []
									},
									"documentation": {
										"id": 2790,
										"nodeType": "StructuredDocumentation",
										"src": "55977:695:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "56686:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "56723:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "56715:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "56745:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "56737:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "56765:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "56757:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "56795:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "56787:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56705:105:0"
									},
									"returnParameters": {
										"id": 2800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56828:0:0"
									},
									"scope": 2803,
									"src": "56677:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2984,
							"src": "40505:16327:0",
							"usedErrors": [],
							"usedEvents": [
								1740,
								1749,
								1758
							]
						},
						{
							"id": 2804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "57006:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2806,
										"name": "Context",
										"nameLocations": [
											"57162:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1131,
										"src": "57162:7:0"
									},
									"id": 2807,
									"nodeType": "InheritanceSpecifier",
									"src": "57162:7:0"
								},
								{
									"baseName": {
										"id": 2808,
										"name": "ERC721",
										"nameLocations": [
											"57171:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2803,
										"src": "57171:6:0"
									},
									"id": 2809,
									"nodeType": "InheritanceSpecifier",
									"src": "57171:6:0"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2805,
								"nodeType": "StructuredDocumentation",
								"src": "57033:92:0",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 2830,
							"linearizedBaseContracts": [
								2830,
								2803,
								1866,
								1841,
								1727,
								1705,
								1131
							],
							"name": "ERC721Burnable",
							"nameLocation": "57144:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2828,
										"nodeType": "Block",
										"src": "57397:192:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2817,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "57486:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "57486:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2819,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2812,
																	"src": "57500:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2816,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "57467:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57467:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57510:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 2815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57459:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57459:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2823,
												"nodeType": "ExpressionStatement",
												"src": "57459:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2825,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2812,
															"src": "57574:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2824,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2526,
														"src": "57568:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57568:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2827,
												"nodeType": "ExpressionStatement",
												"src": "57568:14:0"
											}
										]
									},
									"documentation": {
										"id": 2810,
										"nodeType": "StructuredDocumentation",
										"src": "57184:162:0",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 2829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "57360:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "57373:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "57365:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57364:17:0"
									},
									"returnParameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57397:0:0"
									},
									"scope": 2830,
									"src": "57351:238:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2984,
							"src": "57126:465:0",
							"usedErrors": [],
							"usedEvents": [
								1740,
								1749,
								1758
							]
						},
						{
							"id": 2831,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "57637:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2833,
										"name": "ERC721",
										"nameLocations": [
											"57742:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2803,
										"src": "57742:6:0"
									},
									"id": 2834,
									"nodeType": "InheritanceSpecifier",
									"src": "57742:6:0"
								},
								{
									"baseName": {
										"id": 2835,
										"name": "Pausable",
										"nameLocations": [
											"57750:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1348,
										"src": "57750:8:0"
									},
									"id": 2836,
									"nodeType": "InheritanceSpecifier",
									"src": "57750:8:0"
								},
								{
									"baseName": {
										"id": 2837,
										"name": "Ownable",
										"nameLocations": [
											"57760:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1242,
										"src": "57760:7:0"
									},
									"id": 2838,
									"nodeType": "InheritanceSpecifier",
									"src": "57760:7:0"
								},
								{
									"baseName": {
										"id": 2839,
										"name": "ERC721Burnable",
										"nameLocations": [
											"57769:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2830,
										"src": "57769:14:0"
									},
									"id": 2840,
									"nodeType": "InheritanceSpecifier",
									"src": "57769:14:0"
								}
							],
							"canonicalName": "ShoToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2832,
								"nodeType": "StructuredDocumentation",
								"src": "57667:54:0",
								"text": "@custom:security-contact supportcs@ntiloyalty.com"
							},
							"fullyImplemented": true,
							"id": 2983,
							"linearizedBaseContracts": [
								2983,
								2830,
								1242,
								1348,
								2803,
								1866,
								1841,
								1727,
								1705,
								1131
							],
							"name": "ShoToken",
							"nameLocation": "57730:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2843,
									"libraryName": {
										"id": 2841,
										"name": "Strings",
										"nameLocations": [
											"57962:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1110,
										"src": "57962:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "57956:26:0",
									"typeName": {
										"id": 2842,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "57974:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2847,
									"libraryName": {
										"id": 2844,
										"name": "Counters",
										"nameLocations": [
											"57993:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 73,
										"src": "57993:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "57987:36:0",
									"typeName": {
										"id": 2846,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2845,
											"name": "Counters.Counter",
											"nameLocations": [
												"58006:8:0",
												"58015:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "58006:16:0"
										},
										"referencedDeclaration": 5,
										"src": "58006:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "d762d6ab69e51adef66de5ac13b45b3345367b5f0056d1ce4a46b4e5d6ba00e7",
									"id": 2851,
									"name": "WasBorn",
									"nameLocation": "58202:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2849,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "58218:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "58210:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58209:17:0"
									},
									"src": "58196:31:0"
								},
								{
									"constant": false,
									"id": 2854,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "58425:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2983,
									"src": "58400:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$5_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2853,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2852,
											"name": "Counters.Counter",
											"nameLocations": [
												"58400:8:0",
												"58409:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "58400:16:0"
										},
										"referencedDeclaration": 5,
										"src": "58400:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2861,
										"nodeType": "Block",
										"src": "58662:2:0",
										"statements": []
									},
									"id": 2862,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53686f546f6b656e",
													"id": 2857,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "58640:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_691f21a5653e67437101b4a2899f6d56dcaec58452fd98ccd655b6899a049702",
														"typeString": "literal_string \"ShoToken\""
													},
													"value": "ShoToken"
												},
												{
													"hexValue": "53484f544b4e",
													"id": 2858,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "58652:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_567e72a213beed7e30de5dd4696b292f1763b2b87d5ad6535e56e7870c18a384",
														"typeString": "literal_string \"SHOTKN\""
													},
													"value": "SHOTKN"
												}
											],
											"id": 2859,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2856,
												"name": "ERC721",
												"nameLocations": [
													"58633:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2803,
												"src": "58633:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "58633:28:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58630:2:0"
									},
									"returnParameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58662:0:0"
									},
									"scope": 2983,
									"src": "58619:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2072
									],
									"body": {
										"id": 2870,
										"nodeType": "Block",
										"src": "58737:65:0",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f6e66742e63727970746f73686f7065652e6e74696c6f79616c74792e636f6d",
													"id": 2868,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "58754:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_603ff1b036ccea40d792a56f2419e3771ff45fc7074f6ef4e17b4481431d5dd2",
														"typeString": "literal_string \"https://nft.cryptoshopee.ntiloyalty.com\""
													},
													"value": "https://nft.cryptoshopee.ntiloyalty.com"
												},
												"functionReturnParameters": 2867,
												"id": 2869,
												"nodeType": "Return",
												"src": "58747:48:0"
											}
										]
									},
									"id": 2871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "58679:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2864,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "58704:8:0"
									},
									"parameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58687:2:0"
									},
									"returnParameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "58722:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2865,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "58722:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58721:15:0"
									},
									"scope": 2983,
									"src": "58670:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2879,
										"nodeType": "Block",
										"src": "58842:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2876,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "58852:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58852:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2878,
												"nodeType": "ExpressionStatement",
												"src": "58852:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2880,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2874,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2873,
												"name": "onlyOwner",
												"nameLocations": [
													"58832:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1161,
												"src": "58832:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "58832:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "58817:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58822:2:0"
									},
									"returnParameters": {
										"id": 2875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58842:0:0"
									},
									"scope": 2983,
									"src": "58808:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2888,
										"nodeType": "Block",
										"src": "58909:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2885,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "58919:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58919:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2887,
												"nodeType": "ExpressionStatement",
												"src": "58919:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2889,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2883,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2882,
												"name": "onlyOwner",
												"nameLocations": [
													"58899:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1161,
												"src": "58899:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "58899:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "58882:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58889:2:0"
									},
									"returnParameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58909:0:0"
									},
									"scope": 2983,
									"src": "58873:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2789
									],
									"body": {
										"id": 2912,
										"nodeType": "Block",
										"src": "59104:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2906,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2891,
															"src": "59141:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2907,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2893,
															"src": "59147:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2908,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2895,
															"src": "59151:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2909,
															"name": "batchSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2897,
															"src": "59160:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2903,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "59114:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ShoToken_$2983_$",
																"typeString": "type(contract super ShoToken)"
															}
														},
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59120:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2789,
														"src": "59114:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59114:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2911,
												"nodeType": "ExpressionStatement",
												"src": "59114:56:0"
											}
										]
									},
									"id": 2913,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2901,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2900,
												"name": "whenNotPaused",
												"nameLocations": [
													"59090:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1275,
												"src": "59090:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "59090:13:0"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "58951:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2899,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "59081:8:0"
									},
									"parameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "58989:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "58981:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "59011:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "59003:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59003:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "59031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "59023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "59056:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "59048:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58971:100:0"
									},
									"returnParameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59104:0:0"
									},
									"scope": 2983,
									"src": "58942:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2944,
										"nodeType": "Block",
										"src": "59444:192:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2921,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2854,
															"src": "59454:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2923,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59470:9:0",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "59454:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59454:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2925,
												"nodeType": "ExpressionStatement",
												"src": "59454:27:0"
											},
											{
												"assignments": [
													2927
												],
												"declarations": [
													{
														"constant": false,
														"id": 2927,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "59499:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2944,
														"src": "59491:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2926,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "59491:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2931,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2928,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2854,
															"src": "59509:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2929,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59525:7:0",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "59509:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59509:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59491:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2933,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "59555:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59555:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2935,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2927,
															"src": "59564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2932,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2353,
															2382
														],
														"referencedDeclaration": 2353,
														"src": "59545:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59545:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2937,
												"nodeType": "ExpressionStatement",
												"src": "59545:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2939,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2927,
															"src": "59596:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2938,
														"name": "WasBorn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2851,
														"src": "59588:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59588:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2941,
												"nodeType": "EmitStatement",
												"src": "59583:21:0"
											},
											{
												"expression": {
													"id": 2942,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2927,
													"src": "59622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2920,
												"id": 2943,
												"nodeType": "Return",
												"src": "59615:14:0"
											}
										]
									},
									"documentation": {
										"id": 2914,
										"nodeType": "StructuredDocumentation",
										"src": "59358:28:0",
										"text": "server method - mint nft"
									},
									"functionSelector": "1249c58b",
									"id": 2945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2917,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2916,
												"name": "onlyOwner",
												"nameLocations": [
													"59416:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1161,
												"src": "59416:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "59416:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "59400:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59404:2:0"
									},
									"returnParameters": {
										"id": 2920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "59435:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59434:9:0"
									},
									"scope": 2983,
									"src": "59391:245:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2954,
										"nodeType": "Block",
										"src": "59774:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2950,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2854,
															"src": "59791:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2951,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59807:7:0",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "59791:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59791:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2949,
												"id": 2953,
												"nodeType": "Return",
												"src": "59784:32:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 2955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "59728:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59739:2:0"
									},
									"returnParameters": {
										"id": 2949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "59765:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59764:9:0"
									},
									"scope": 2983,
									"src": "59719:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2981,
										"nodeType": "Block",
										"src": "60021:139:0",
										"statements": [
											{
												"assignments": [
													2961,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2961,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "60037:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2981,
														"src": "60032:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2960,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "60032:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2976,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60115:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2964,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1170,
																			"src": "60058:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "60058:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "60050:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 2962,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "60050:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 2966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60050:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60067:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "60050:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2970,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "60087:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ShoToken_$2983",
																				"typeString": "contract ShoToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ShoToken_$2983",
																				"typeString": "contract ShoToken"
																			}
																		],
																		"id": 2969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "60079:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2968,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "60079:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "60079:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "60093:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "60079:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "60050:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60050:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60031:96:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2978,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2961,
															"src": "60145:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "60137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60137:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2980,
												"nodeType": "ExpressionStatement",
												"src": "60137:16:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 2982,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2958,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2957,
												"name": "onlyOwner",
												"nameLocations": [
													"60011:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1161,
												"src": "60011:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60011:9:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "59991:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59999:2:0"
									},
									"returnParameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60021:0:0"
									},
									"scope": 2983,
									"src": "59982:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2984,
							"src": "57721:2441:0",
							"usedErrors": [],
							"usedEvents": [
								1143,
								1251,
								1256,
								1740,
								1749,
								1758,
								2851
							]
						}
					],
					"src": "141:60022:0"
				},
				"id": 0
			}
		}
	}
}