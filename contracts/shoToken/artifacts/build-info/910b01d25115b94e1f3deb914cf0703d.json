{
	"id": "910b01d25115b94e1f3deb914cf0703d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/shoToken/ShoToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\n/// @custom:security-contact supportcs@ntiloyalty.com\nabstract contract ShoToken is ERC721, Pausable, Ownable, ERC721Burnable {\n    // --------------------------------------------------------------------\n    // USING\n    // --------------------------------------------------------------------\n\n    using Strings for uint256;\n    using Counters for Counters.Counter;\n\n    // --------------------------------------------------------------------\n    // EVENTS\n    // --------------------------------------------------------------------\n\n    event Mint(uint256 tokenId);\n\n    // --------------------------------------------------------------------\n    // FIELDS\n    // --------------------------------------------------------------------\n\n    Counters.Counter private _tokenIdCounter;\n\n    // --------------------------------------------------------------------\n    // CONSTRUCTOR\n    // --------------------------------------------------------------------\n\n    constructor() ERC721(\"ShoToken\", \"SHOTKN\") {}\n\n    function _baseURI() internal virtual pure override returns (string memory) {\n        return \"https://nft.cryptoshopee.com/\";\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 batchSize\n    ) internal override whenNotPaused {\n        super._beforeTokenTransfer(from, to, tokenId, batchSize);\n    }\n\n    // --------------------------------------------------------------------\n    // SERVER METHODS\n    // --------------------------------------------------------------------\n\n    /// server method - mint nft\n    function mint() external onlyOwner returns (uint256) {\n        _tokenIdCounter.increment();\n        uint256 tokenId = _tokenIdCounter.current();\n\n        _safeMint(owner(), tokenId);\n\n        emit Mint(tokenId);\n\n        return tokenId;\n    }\n\n    // --------------------------------------------------------------------\n\n    function totalSupply() external view returns (uint256) {\n        return _tokenIdCounter.current();\n    }\n\n    // --------------------------------------------------------------------\n    // --------------------------------------------------------------------\n\n    function withdraw() external onlyOwner {\n        (bool success, ) = payable(owner()).call{value: address(this).balance}(\n            \"\"\n        );\n        require(success);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _burn(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_20:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_21:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_63\n    /* \"#utility.yul\":1885:1934   */\n  tag_64\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_19\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1869:1935   */\n  tag_18\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_66\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2010:2122   */\ntag_65:\n    /* \"#utility.yul\":2131:2183   */\n  tag_67\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_20\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_22:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_70\n  tag_13\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2292:2414   */\ntag_69:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_71\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_21\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3423   */\ntag_3:\n    /* \"#utility.yul\":2669:2675   */\n  0x00\n    /* \"#utility.yul\":2677:2683   */\n  0x00\n    /* \"#utility.yul\":2726:2728   */\n  0x40\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2705:2712   */\n  dup6\n    /* \"#utility.yul\":2701:2724   */\n  sub\n    /* \"#utility.yul\":2697:2729   */\n  slt\n    /* \"#utility.yul\":2694:2813   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2732:2811   */\n  tag_74\n  tag_11\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2694:2813   */\ntag_73:\n    /* \"#utility.yul\":2873:2874   */\n  0x00\n    /* \"#utility.yul\":2862:2871   */\n  dup4\n    /* \"#utility.yul\":2858:2875   */\n  add\n    /* \"#utility.yul\":2852:2876   */\n  mload\n    /* \"#utility.yul\":2903:2921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2895:2901   */\n  dup2\n    /* \"#utility.yul\":2892:2922   */\n  gt\n    /* \"#utility.yul\":2889:3006   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2925:3004   */\n  tag_76\n  tag_12\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2889:3006   */\ntag_75:\n    /* \"#utility.yul\":3030:3104   */\n  tag_77\n    /* \"#utility.yul\":3096:3103   */\n  dup6\n    /* \"#utility.yul\":3087:3093   */\n  dup3\n    /* \"#utility.yul\":3076:3085   */\n  dup7\n    /* \"#utility.yul\":3072:3094   */\n  add\n    /* \"#utility.yul\":3030:3104   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3020:3104   */\n  swap3\n  pop\n    /* \"#utility.yul\":2823:3114   */\n  pop\n    /* \"#utility.yul\":3174:3176   */\n  0x20\n    /* \"#utility.yul\":3163:3172   */\n  dup4\n    /* \"#utility.yul\":3159:3177   */\n  add\n    /* \"#utility.yul\":3153:3178   */\n  mload\n    /* \"#utility.yul\":3205:3223   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3197:3203   */\n  dup2\n    /* \"#utility.yul\":3194:3224   */\n  gt\n    /* \"#utility.yul\":3191:3308   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3227:3306   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3191:3308   */\ntag_78:\n    /* \"#utility.yul\":3332:3406   */\n  tag_80\n    /* \"#utility.yul\":3398:3405   */\n  dup6\n    /* \"#utility.yul\":3389:3395   */\n  dup3\n    /* \"#utility.yul\":3378:3387   */\n  dup7\n    /* \"#utility.yul\":3374:3396   */\n  add\n    /* \"#utility.yul\":3332:3406   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3322:3406   */\n  swap2\n  pop\n    /* \"#utility.yul\":3124:3416   */\n  pop\n    /* \"#utility.yul\":2570:3423   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3429:3528   */\ntag_23:\n    /* \"#utility.yul\":3481:3487   */\n  0x00\n    /* \"#utility.yul\":3515:3520   */\n  dup2\n    /* \"#utility.yul\":3509:3521   */\n  mload\n    /* \"#utility.yul\":3499:3521   */\n  swap1\n  pop\n    /* \"#utility.yul\":3429:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3714   */\ntag_24:\n    /* \"#utility.yul\":3582:3659   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3579:3580   */\n  0x00\n    /* \"#utility.yul\":3572:3660   */\n  mstore\n    /* \"#utility.yul\":3679:3683   */\n  0x22\n    /* \"#utility.yul\":3676:3677   */\n  0x04\n    /* \"#utility.yul\":3669:3684   */\n  mstore\n    /* \"#utility.yul\":3703:3707   */\n  0x24\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3693:3708   */\n  revert\n    /* \"#utility.yul\":3720:4040   */\ntag_25:\n    /* \"#utility.yul\":3764:3770   */\n  0x00\n    /* \"#utility.yul\":3801:3802   */\n  0x02\n    /* \"#utility.yul\":3795:3799   */\n  dup3\n    /* \"#utility.yul\":3791:3803   */\n  div\n    /* \"#utility.yul\":3781:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  and\n    /* \"#utility.yul\":3869:3887   */\n  dup1\n    /* \"#utility.yul\":3859:3940   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3925:3929   */\n  0x7f\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3930   */\n  and\n    /* \"#utility.yul\":3903:3930   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3940   */\ntag_84:\n    /* \"#utility.yul\":3987:3989   */\n  0x20\n    /* \"#utility.yul\":3979:3985   */\n  dup3\n    /* \"#utility.yul\":3976:3990   */\n  lt\n    /* \"#utility.yul\":3956:3974   */\n  dup2\n    /* \"#utility.yul\":3953:3991   */\n  sub\n    /* \"#utility.yul\":3950:4034   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":4006:4024   */\n  tag_86\n  tag_24\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3950:4034   */\ntag_85:\n    /* \"#utility.yul\":3771:4040   */\n  pop\n    /* \"#utility.yul\":3720:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4187   */\ntag_26:\n    /* \"#utility.yul\":4095:4099   */\n  0x00\n    /* \"#utility.yul\":4118:4121   */\n  dup2\n    /* \"#utility.yul\":4110:4121   */\n  swap1\n  pop\n    /* \"#utility.yul\":4141:4144   */\n  dup2\n    /* \"#utility.yul\":4138:4139   */\n  0x00\n    /* \"#utility.yul\":4131:4145   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x20\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4162:4180   */\n  keccak256\n    /* \"#utility.yul\":4154:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4046:4187   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4193:4286   */\ntag_27:\n    /* \"#utility.yul\":4230:4236   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4272:4274   */\n  0x1f\n    /* \"#utility.yul\":4265:4270   */\n  dup4\n    /* \"#utility.yul\":4261:4275   */\n  add\n    /* \"#utility.yul\":4257:4280   */\n  div\n    /* \"#utility.yul\":4247:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4193:4286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4292:4399   */\ntag_28:\n    /* \"#utility.yul\":4336:4344   */\n  0x00\n    /* \"#utility.yul\":4386:4391   */\n  dup3\n    /* \"#utility.yul\":4380:4384   */\n  dup3\n    /* \"#utility.yul\":4376:4392   */\n  shl\n    /* \"#utility.yul\":4355:4392   */\n  swap1\n  pop\n    /* \"#utility.yul\":4292:4399   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4405:4798   */\ntag_29:\n    /* \"#utility.yul\":4474:4480   */\n  0x00\n    /* \"#utility.yul\":4524:4525   */\n  0x08\n    /* \"#utility.yul\":4512:4522   */\n  dup4\n    /* \"#utility.yul\":4508:4526   */\n  mul\n    /* \"#utility.yul\":4547:4644   */\n  tag_91\n    /* \"#utility.yul\":4577:4643   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4566:4575   */\n  dup3\n    /* \"#utility.yul\":4547:4644   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4665:4704   */\n  tag_92\n    /* \"#utility.yul\":4695:4703   */\n  dup7\n    /* \"#utility.yul\":4684:4693   */\n  dup4\n    /* \"#utility.yul\":4665:4704   */\n  tag_28\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4653:4704   */\n  swap6\n  pop\n    /* \"#utility.yul\":4737:4741   */\n  dup1\n    /* \"#utility.yul\":4733:4742   */\n  not\n    /* \"#utility.yul\":4726:4731   */\n  dup5\n    /* \"#utility.yul\":4722:4743   */\n  and\n    /* \"#utility.yul\":4713:4743   */\n  swap4\n  pop\n    /* \"#utility.yul\":4786:4790   */\n  dup1\n    /* \"#utility.yul\":4776:4784   */\n  dup7\n    /* \"#utility.yul\":4772:4791   */\n  and\n    /* \"#utility.yul\":4765:4770   */\n  dup5\n    /* \"#utility.yul\":4762:4792   */\n  or\n    /* \"#utility.yul\":4752:4792   */\n  swap3\n  pop\n    /* \"#utility.yul\":4481:4798   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4798   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4804:4881   */\ntag_30:\n    /* \"#utility.yul\":4841:4848   */\n  0x00\n    /* \"#utility.yul\":4870:4875   */\n  dup2\n    /* \"#utility.yul\":4859:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4804:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4947   */\ntag_31:\n    /* \"#utility.yul\":4915:4918   */\n  0x00\n    /* \"#utility.yul\":4936:4941   */\n  dup2\n    /* \"#utility.yul\":4929:4941   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4947   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4953:5095   */\ntag_32:\n    /* \"#utility.yul\":5003:5012   */\n  0x00\n    /* \"#utility.yul\":5036:5089   */\n  tag_96\n    /* \"#utility.yul\":5054:5088   */\n  tag_97\n    /* \"#utility.yul\":5063:5087   */\n  tag_98\n    /* \"#utility.yul\":5081:5086   */\n  dup5\n    /* \"#utility.yul\":5063:5087   */\n  tag_30\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5054:5088   */\n  tag_31\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5036:5089   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5023:5089   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:5095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5101:5176   */\ntag_33:\n    /* \"#utility.yul\":5144:5147   */\n  0x00\n    /* \"#utility.yul\":5165:5170   */\n  dup2\n    /* \"#utility.yul\":5158:5170   */\n  swap1\n  pop\n    /* \"#utility.yul\":5101:5176   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5182:5451   */\ntag_34:\n    /* \"#utility.yul\":5292:5331   */\n  tag_101\n    /* \"#utility.yul\":5323:5330   */\n  dup4\n    /* \"#utility.yul\":5292:5331   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5353:5444   */\n  tag_102\n    /* \"#utility.yul\":5402:5443   */\n  tag_103\n    /* \"#utility.yul\":5426:5442   */\n  dup3\n    /* \"#utility.yul\":5402:5443   */\n  tag_33\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5394:5400   */\n  dup5\n    /* \"#utility.yul\":5387:5391   */\n  dup5\n    /* \"#utility.yul\":5381:5392   */\n  sload\n    /* \"#utility.yul\":5353:5444   */\n  tag_29\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5340:5445   */\n  sstore\n    /* \"#utility.yul\":5258:5451   */\n  pop\n    /* \"#utility.yul\":5182:5451   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5530   */\ntag_35:\n    /* \"#utility.yul\":5502:5505   */\n  0x00\n    /* \"#utility.yul\":5523:5524   */\n  0x00\n    /* \"#utility.yul\":5516:5524   */\n  swap1\n  pop\n    /* \"#utility.yul\":5457:5530   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5536:5725   */\ntag_36:\n    /* \"#utility.yul\":5613:5645   */\n  tag_106\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5654:5719   */\n  tag_107\n    /* \"#utility.yul\":5712:5718   */\n  dup2\n    /* \"#utility.yul\":5704:5710   */\n  dup5\n    /* \"#utility.yul\":5698:5702   */\n  dup5\n    /* \"#utility.yul\":5654:5719   */\n  tag_34\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5589:5725   */\n  pop\n    /* \"#utility.yul\":5536:5725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5731:5917   */\ntag_37:\n    /* \"#utility.yul\":5791:5911   */\ntag_109:\n    /* \"#utility.yul\":5808:5811   */\n  dup2\n    /* \"#utility.yul\":5801:5806   */\n  dup2\n    /* \"#utility.yul\":5798:5812   */\n  lt\n    /* \"#utility.yul\":5791:5911   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5862:5901   */\n  tag_112\n    /* \"#utility.yul\":5899:5900   */\n  0x00\n    /* \"#utility.yul\":5892:5897   */\n  dup3\n    /* \"#utility.yul\":5862:5901   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5835:5836   */\n  0x01\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5824:5837   */\n  add\n    /* \"#utility.yul\":5815:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5911   */\n  jump(tag_109)\ntag_111:\n    /* \"#utility.yul\":5731:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6466   */\ntag_38:\n    /* \"#utility.yul\":6024:6026   */\n  0x1f\n    /* \"#utility.yul\":6019:6022   */\n  dup3\n    /* \"#utility.yul\":6016:6027   */\n  gt\n    /* \"#utility.yul\":6013:6459   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":6058:6096   */\n  tag_115\n    /* \"#utility.yul\":6090:6095   */\n  dup2\n    /* \"#utility.yul\":6058:6096   */\n  tag_26\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6142:6171   */\n  tag_116\n    /* \"#utility.yul\":6160:6170   */\n  dup5\n    /* \"#utility.yul\":6142:6171   */\n  tag_27\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6128:6172   */\n  add\n    /* \"#utility.yul\":6325:6327   */\n  0x20\n    /* \"#utility.yul\":6313:6323   */\n  dup6\n    /* \"#utility.yul\":6310:6328   */\n  lt\n    /* \"#utility.yul\":6307:6356   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6346:6354   */\n  dup2\n    /* \"#utility.yul\":6331:6354   */\n  swap1\n  pop\n    /* \"#utility.yul\":6307:6356   */\ntag_117:\n    /* \"#utility.yul\":6369:6449   */\n  tag_118\n    /* \"#utility.yul\":6425:6447   */\n  tag_119\n    /* \"#utility.yul\":6443:6446   */\n  dup6\n    /* \"#utility.yul\":6425:6447   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6415:6423   */\n  dup4\n    /* \"#utility.yul\":6411:6448   */\n  add\n    /* \"#utility.yul\":6398:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6449   */\n  tag_37\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6028:6459   */\n  pop\n  pop\n    /* \"#utility.yul\":6013:6459   */\ntag_114:\n    /* \"#utility.yul\":5923:6466   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6472:6589   */\ntag_39:\n    /* \"#utility.yul\":6526:6534   */\n  0x00\n    /* \"#utility.yul\":6576:6581   */\n  dup3\n    /* \"#utility.yul\":6570:6574   */\n  dup3\n    /* \"#utility.yul\":6566:6582   */\n  shr\n    /* \"#utility.yul\":6545:6582   */\n  swap1\n  pop\n    /* \"#utility.yul\":6472:6589   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6764   */\ntag_40:\n    /* \"#utility.yul\":6639:6645   */\n  0x00\n    /* \"#utility.yul\":6672:6723   */\n  tag_122\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6716:6722   */\n  not\n    /* \"#utility.yul\":6708:6713   */\n  dup5\n    /* \"#utility.yul\":6705:6706   */\n  0x08\n    /* \"#utility.yul\":6701:6714   */\n  mul\n    /* \"#utility.yul\":6672:6723   */\n  tag_39\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6668:6724   */\n  not\n    /* \"#utility.yul\":6753:6757   */\n  dup1\n    /* \"#utility.yul\":6747:6751   */\n  dup4\n    /* \"#utility.yul\":6743:6758   */\n  and\n    /* \"#utility.yul\":6733:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6646:6764   */\n  pop\n    /* \"#utility.yul\":6595:6764   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6769:7064   */\ntag_41:\n    /* \"#utility.yul\":6845:6849   */\n  0x00\n    /* \"#utility.yul\":6991:7020   */\n  tag_124\n    /* \"#utility.yul\":7016:7019   */\n  dup4\n    /* \"#utility.yul\":7010:7014   */\n  dup4\n    /* \"#utility.yul\":6991:7020   */\n  tag_40\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6983:7020   */\n  swap2\n  pop\n    /* \"#utility.yul\":7053:7056   */\n  dup3\n    /* \"#utility.yul\":7050:7051   */\n  0x02\n    /* \"#utility.yul\":7046:7057   */\n  mul\n    /* \"#utility.yul\":7040:7044   */\n  dup3\n    /* \"#utility.yul\":7037:7058   */\n  or\n    /* \"#utility.yul\":7029:7058   */\n  swap1\n  pop\n    /* \"#utility.yul\":6769:7064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7069:8464   */\ntag_7:\n    /* \"#utility.yul\":7186:7223   */\n  tag_126\n    /* \"#utility.yul\":7219:7222   */\n  dup3\n    /* \"#utility.yul\":7186:7223   */\n  tag_23\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":7288:7306   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7280:7286   */\n  dup2\n    /* \"#utility.yul\":7277:7307   */\n  gt\n    /* \"#utility.yul\":7274:7330   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":7310:7328   */\n  tag_128\n  tag_16\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7274:7330   */\ntag_127:\n    /* \"#utility.yul\":7354:7392   */\n  tag_129\n    /* \"#utility.yul\":7386:7390   */\n  dup3\n    /* \"#utility.yul\":7380:7391   */\n  sload\n    /* \"#utility.yul\":7354:7392   */\n  tag_25\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7439:7506   */\n  tag_130\n    /* \"#utility.yul\":7499:7505   */\n  dup3\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7485:7489   */\n  dup6\n    /* \"#utility.yul\":7439:7506   */\n  tag_38\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7533:7534   */\n  0x00\n    /* \"#utility.yul\":7557:7561   */\n  0x20\n    /* \"#utility.yul\":7544:7561   */\n  swap1\n  pop\n    /* \"#utility.yul\":7589:7591   */\n  0x1f\n    /* \"#utility.yul\":7581:7587   */\n  dup4\n    /* \"#utility.yul\":7578:7592   */\n  gt\n    /* \"#utility.yul\":7606:7607   */\n  0x01\n    /* \"#utility.yul\":7601:8219   */\n  dup2\n  eq\n  tag_132\n  jumpi\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8280:8286   */\n  dup5\n    /* \"#utility.yul\":8277:8354   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":8329:8338   */\n  dup3\n    /* \"#utility.yul\":8324:8327   */\n  dup8\n    /* \"#utility.yul\":8320:8339   */\n  add\n    /* \"#utility.yul\":8314:8340   */\n  mload\n    /* \"#utility.yul\":8305:8340   */\n  swap1\n  pop\n    /* \"#utility.yul\":8277:8354   */\ntag_133:\n    /* \"#utility.yul\":8380:8447   */\n  tag_134\n    /* \"#utility.yul\":8440:8446   */\n  dup6\n    /* \"#utility.yul\":8433:8438   */\n  dup3\n    /* \"#utility.yul\":8380:8447   */\n  tag_41\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":8374:8378   */\n  dup7\n    /* \"#utility.yul\":8367:8448   */\n  sstore\n    /* \"#utility.yul\":8236:8458   */\n  pop\n    /* \"#utility.yul\":7571:8458   */\n  jump(tag_131)\n    /* \"#utility.yul\":7601:8219   */\ntag_132:\n    /* \"#utility.yul\":7653:7657   */\n  0x1f\n    /* \"#utility.yul\":7649:7658   */\n  not\n    /* \"#utility.yul\":7641:7647   */\n  dup5\n    /* \"#utility.yul\":7637:7659   */\n  and\n    /* \"#utility.yul\":7687:7724   */\n  tag_135\n    /* \"#utility.yul\":7719:7723   */\n  dup7\n    /* \"#utility.yul\":7687:7724   */\n  tag_26\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7746:7747   */\n  0x00\n    /* \"#utility.yul\":7760:7968   */\ntag_136:\n    /* \"#utility.yul\":7774:7781   */\n  dup3\n    /* \"#utility.yul\":7771:7772   */\n  dup2\n    /* \"#utility.yul\":7768:7782   */\n  lt\n    /* \"#utility.yul\":7760:7968   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":7853:7862   */\n  dup5\n    /* \"#utility.yul\":7848:7851   */\n  dup10\n    /* \"#utility.yul\":7844:7863   */\n  add\n    /* \"#utility.yul\":7838:7864   */\n  mload\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7823:7865   */\n  sstore\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7896:7902   */\n  dup3\n    /* \"#utility.yul\":7892:7906   */\n  add\n    /* \"#utility.yul\":7882:7906   */\n  swap2\n  pop\n    /* \"#utility.yul\":7951:7953   */\n  0x20\n    /* \"#utility.yul\":7940:7949   */\n  dup6\n    /* \"#utility.yul\":7936:7954   */\n  add\n    /* \"#utility.yul\":7923:7954   */\n  swap5\n  pop\n    /* \"#utility.yul\":7797:7801   */\n  0x20\n    /* \"#utility.yul\":7794:7795   */\n  dup2\n    /* \"#utility.yul\":7790:7802   */\n  add\n    /* \"#utility.yul\":7785:7802   */\n  swap1\n  pop\n    /* \"#utility.yul\":7760:7968   */\n  jump(tag_136)\ntag_138:\n    /* \"#utility.yul\":7996:8002   */\n  dup7\n    /* \"#utility.yul\":7987:7994   */\n  dup4\n    /* \"#utility.yul\":7984:8003   */\n  lt\n    /* \"#utility.yul\":7981:8160   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":8054:8063   */\n  dup5\n    /* \"#utility.yul\":8049:8052   */\n  dup10\n    /* \"#utility.yul\":8045:8064   */\n  add\n    /* \"#utility.yul\":8039:8065   */\n  mload\n    /* \"#utility.yul\":8097:8145   */\n  tag_140\n    /* \"#utility.yul\":8139:8143   */\n  0x1f\n    /* \"#utility.yul\":8131:8137   */\n  dup10\n    /* \"#utility.yul\":8127:8144   */\n  and\n    /* \"#utility.yul\":8116:8125   */\n  dup3\n    /* \"#utility.yul\":8097:8145   */\n  tag_40\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":8089:8095   */\n  dup4\n    /* \"#utility.yul\":8082:8146   */\n  sstore\n    /* \"#utility.yul\":8004:8160   */\n  pop\n    /* \"#utility.yul\":7981:8160   */\ntag_139:\n    /* \"#utility.yul\":8206:8207   */\n  0x01\n    /* \"#utility.yul\":8202:8203   */\n  0x02\n    /* \"#utility.yul\":8194:8200   */\n  dup9\n    /* \"#utility.yul\":8190:8204   */\n  mul\n    /* \"#utility.yul\":8186:8208   */\n  add\n    /* \"#utility.yul\":8180:8184   */\n  dup9\n    /* \"#utility.yul\":8173:8209   */\n  sstore\n    /* \"#utility.yul\":7608:8219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7571:8458   */\ntag_131:\n  pop\n    /* \"#utility.yul\":7161:8464   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7069:8464   */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1722:1747  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1718  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_76\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1778:1811  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1774  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1851:1862  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1850  super.supportsInterface */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4011:4018  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4044  _requireMinted */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4086  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4087:4094  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4064:4095  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3702:3707  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3698  _msgSender() */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3696  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3698  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3728:3733  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3747  _msgSender() */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3745  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3747  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3727  isApprovedForAll */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3855:3857  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3859:3866  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  _approve */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4842  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4820:4832  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4820:4830  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4820:4832  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4834:4841  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4819  _isApprovedOrOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4842  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4793:4892  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4931  _transfer(from, to, tokenId) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4913:4917  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4919:4921  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4923:4930  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4912  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4931  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5154:5158  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5160:5162  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5164:5171  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5153  safeTransferFrom */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2281:2294  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2297:2314  _ownerOf(tokenId) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2306:2313  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2297:2305  _ownerOf */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2297:2314  _ownerOf(tokenId) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2281:2314  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2349:2350  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2332:2351  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2332:2337  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2332:2351  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2397:2402  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2390:2402  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2045:2046  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2033  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2120:2125  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2103:2126  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_82\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_82\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4282:4294  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4282:4292  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4282:4294  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4296:4304  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4314  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4281  _setApprovalForAll */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5458  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5436:5448  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5436:5446  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5436:5448  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5450:5457  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5435  _isApprovedOrOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5458  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5409:5508  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_111\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5556  _safeTransfer(from, to, tokenId, data) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5532:5536  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5538:5540  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5542:5549  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5551:5555  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5531  _safeTransfer */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5556  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2965  _baseURI */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_147\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_148)\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4527:4532  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4534:4542  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4501:4543  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13466:13599  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13547:13563  _exists(tokenId) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13555:13562  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13547:13554  _exists */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13547:13563  _exists(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_121\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13466:13599  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12768:12939  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12869:12871  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12857  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12858:12865  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12871  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12924:12931  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12920:12922  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12886:12932  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12918  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12910:12917  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12909  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12918  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12886:12932  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12768:12939  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7540:7801  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7633:7637  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7649:7662  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7688  ERC721.ownerOf(tokenId) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7680:7687  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7679  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7688  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7649:7688  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7717:7722  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7722  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7713  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7722  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7758  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_165\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7758  isApprovedForAll(owner, spender) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7743:7748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7750:7757  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7742  isApprovedForAll */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7758  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7758  spender == owner || isApprovedForAll(owner, spender) */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7793  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7786:7793  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7793  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7782  getApproved(tokenId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7774:7781  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7773  getApproved */\n      tag_31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7782  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7793  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7793  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7698:7794  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7540:7801  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11423:12656  function _transfer(... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11577:11581  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11581  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11573  ERC721.ownerOf(tokenId) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11565:11572  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11564  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11573  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11581  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11542:11623  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11656  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11641:11657  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11641:11643  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11641:11657  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11751  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11730:11734  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11736:11738  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11740:11747  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11749:11750  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11729  _beforeTokenTransfer */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11751  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11878:11882  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11882  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11874  ERC721.ownerOf(tokenId) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11866:11873  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11865  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11874  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11882  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11843:11924  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_173\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12008  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12017  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12009:12016  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12017  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11986:12017  delete _tokenApprovals[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12480:12481  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12470  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12476  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12471:12475  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12476  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12481  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12512:12513  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12504  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12508  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12505:12507  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12508  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12513  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12552:12554  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12540  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12549  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12541:12548  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12549  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12554  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12589:12596  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12585:12587  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12570:12597  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12579:12583  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12570:12597  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12608:12649  _afterTokenTransfer(from, to, tokenId, 1) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12628:12632  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12634:12636  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12638:12645  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12647:12648  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12608:12627  _afterTokenTransfer */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12608:12649  _afterTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11423:12656  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6838:6953  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6904:6911  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6938:6945  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6923:6946  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6838:6953  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13075:13382  function _setApprovalForAll(... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13225:13233  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13233  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13221  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13233  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13311:13319  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13291  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13298  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13292:13297  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13298  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13308  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13299:13307  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13308  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13319  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13356:13364  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13349:13354  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13366:13374  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13075:13382  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6424:6729  function _safeTransfer(... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6602  _transfer(from, to, tokenId) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6584:6588  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6590:6592  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6594:6601  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6583  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6602  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6667  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6643:6647  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6649:6651  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6653:6660  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6662:6666  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6642  _checkOnERC721Received */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6667  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6612:6722  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6424:6729  function _safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3370:3383  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":471:484  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:534  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":557:558  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":548:553  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:547  Math.log10 */\n      tag_200\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:558  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:558  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:592  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":606:612  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":595:613  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_201\n      jumpi\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n    tag_201:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_204\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_204:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:613  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:638  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":753:759  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":749:751  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":745:760  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":737:743  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":726:761  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:799  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":958:966  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":946:951  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":942:956  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":937:967  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:935  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:968  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1012:1014  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1003:1014  value /= 10 */\n      dup6\n      dup2\n      tag_207\n      jumpi\n      tag_208\n      tag_209\n      jump\t// in\n    tag_208:\n    tag_207:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1046  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1041  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1046  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1094  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1081:1094  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7256:7382  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7373:7374  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7344:7375  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7344:7361  _ownerOf(tokenId) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7353:7360  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7344:7352  _ownerOf */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7344:7361  _ownerOf(tokenId) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7344:7375  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7337:7375  return _ownerOf(tokenId) != address(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7256:7382  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:16094  function _beforeTokenTransfer(... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15882:15883  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15879  batchSize */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15883  batchSize > 1 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15866:16088  if (batchSize > 1) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15919:15920  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15903:15921  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15903:15907  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15903:15921  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15899:15984  if (from != address(0)) {... */\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15960:15969  batchSize */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15950  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15951:15955  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      dup3\n      dup3\n      sload\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15899:15984  if (from != address(0)) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16015:16016  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16001:16017  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16001:16003  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16001:16017  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15997:16078  if (to != address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16054:16063  batchSize */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16046  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16047:16049  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      dup3\n      dup3\n      sload\n      tag_219\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15997:16078  if (to != address(0)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15866:16088  if (batchSize > 1) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:16094  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16800:16953  function _afterTokenTransfer(... */\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14151:14982  function _checkOnERC721Received(... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14300:14304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14320:14335  to.isContract() */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14320:14322  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14320:14333  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14320:14335  to.isContract() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14316:14976  if (to.isContract()) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14371:14373  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14391  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14392:14404  _msgSender() */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14392:14402  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14392:14404  _msgSender() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14406:14410  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14412:14419  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14421:14425  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      0x01\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14351:14924  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_232\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_237\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_236)\n    tag_237:\n      0x60\n      swap2\n      pop\n    tag_236:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14610:14611  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14599  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14606  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14611  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14910  if (reason.length == 0) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14635:14695  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_196\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14910  if (reason.length == 0) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14862:14868  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14856:14869  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14847:14853  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14843:14845  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14839:14854  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14832:14870  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14351:14924  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14486:14527  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14476:14527  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14476:14482  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14476:14527  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14469:14527  return retval == IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_222)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14316:14976  if (to.isContract()) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14961:14965  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14954:14965  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14151:14982  function _checkOnERC721Received(... */\n    tag_222:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9942:9949  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9961:9975  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9978:9979  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9961:9979  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10026:10032  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10022  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10032  value >= 10**64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10061:10067  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10052:10067  value /= 10**64 */\n      dup4\n      dup2\n      tag_245\n      jumpi\n      tag_246\n      tag_209\n      jump\t// in\n    tag_246:\n    tag_245:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10095:10097  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10085:10097  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10138:10144  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10134  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10144  value >= 10**32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10173:10179  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10164:10179  value /= 10**32 */\n      dup4\n      dup2\n      tag_248\n      jumpi\n      tag_249\n      tag_209\n      jump\t// in\n    tag_249:\n    tag_248:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10207:10209  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10197:10209  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10250:10256  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10246  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10256  value >= 10**16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10285:10291  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10291  value /= 10**16 */\n      dup4\n      dup2\n      tag_251\n      jumpi\n      tag_252\n      tag_209\n      jump\t// in\n    tag_252:\n    tag_251:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10319:10321  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10309:10321  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10362:10367  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10358  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10367  value >= 10**8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10396:10401  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10387:10401  value /= 10**8 */\n      dup4\n      dup2\n      tag_254\n      jumpi\n      tag_255\n      tag_209\n      jump\t// in\n    tag_255:\n    tag_254:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10430  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10419:10430  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10471:10476  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10467  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10476  value >= 10**4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10505:10510  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10496:10510  value /= 10**4 */\n      dup4\n      dup2\n      tag_257\n      jumpi\n      tag_258\n      tag_209\n      jump\t// in\n    tag_258:\n    tag_257:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10538:10539  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10528:10539  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10580:10585  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10576  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10585  value >= 10**2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10614:10619  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10605:10619  value /= 10**2 */\n      dup4\n      dup2\n      tag_260\n      jumpi\n      tag_261\n      tag_209\n      jump\t// in\n    tag_261:\n    tag_260:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10647:10648  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10637:10648  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10689:10694  10**1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10685  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10694  value >= 10**1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10725  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10714:10725  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10766:10772  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10759:10772  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_264:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_265:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_266:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_267:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_268:\n        /* \"#utility.yul\":561:584   */\n      tag_328\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_267\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_329:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_269:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_331\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_268\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_20:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_334\n      tag_265\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":833:952   */\n    tag_333:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_335\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_269\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_270:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_271:\n        /* \"#utility.yul\":1268:1289   */\n      tag_338\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_270\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_23:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_340\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_271\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_272:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_273:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_274:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_275:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_276:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_346\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_272\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2222:2293   */\n      tag_347\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_273\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_348\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_274\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2392:2421   */\n      tag_349\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_275\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_27:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_351\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_276\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_277:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_278:\n        /* \"#utility.yul\":2909:2933   */\n      tag_354\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_277\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      0x00\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_355:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_279:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_357\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_278\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_30:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_360\n      tag_265\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3185:3304   */\n    tag_359:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_361\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_279\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_280:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_281:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_364\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_280\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_282:\n        /* \"#utility.yul\":3765:3789   */\n      tag_366\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_281\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_33:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_368\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_282\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_283:\n        /* \"#utility.yul\":4103:4127   */\n      tag_370\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_281\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      0x00\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_371:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_284:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_373\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_283\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_36:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      0x00\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_376\n      tag_265\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4396:4515   */\n    tag_375:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_377\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_284\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_378\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_279\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_40:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      0x00\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_381\n      tag_265\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":4893:5012   */\n    tag_380:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_382\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_284\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_383\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_284\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_384\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_279\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5737   */\n    tag_51:\n        /* \"#utility.yul\":5467:5473   */\n      0x00\n        /* \"#utility.yul\":5516:5518   */\n      0x20\n        /* \"#utility.yul\":5504:5513   */\n      dup3\n        /* \"#utility.yul\":5495:5502   */\n      dup5\n        /* \"#utility.yul\":5491:5514   */\n      sub\n        /* \"#utility.yul\":5487:5519   */\n      slt\n        /* \"#utility.yul\":5484:5603   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":5522:5601   */\n      tag_387\n      tag_265\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5484:5603   */\n    tag_386:\n        /* \"#utility.yul\":5642:5643   */\n      0x00\n        /* \"#utility.yul\":5667:5720   */\n      tag_388\n        /* \"#utility.yul\":5712:5719   */\n      dup5\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5692:5701   */\n      dup6\n        /* \"#utility.yul\":5688:5710   */\n      add\n        /* \"#utility.yul\":5667:5720   */\n      tag_284\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5657:5720   */\n      swap2\n      pop\n        /* \"#utility.yul\":5613:5730   */\n      pop\n        /* \"#utility.yul\":5408:5737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5743:5861   */\n    tag_285:\n        /* \"#utility.yul\":5830:5854   */\n      tag_390\n        /* \"#utility.yul\":5848:5853   */\n      dup2\n        /* \"#utility.yul\":5830:5854   */\n      tag_277\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5825:5828   */\n      dup3\n        /* \"#utility.yul\":5818:5855   */\n      mstore\n        /* \"#utility.yul\":5743:5861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6089   */\n    tag_54:\n        /* \"#utility.yul\":5960:5964   */\n      0x00\n        /* \"#utility.yul\":5998:6000   */\n      0x20\n        /* \"#utility.yul\":5987:5996   */\n      dup3\n        /* \"#utility.yul\":5983:6001   */\n      add\n        /* \"#utility.yul\":5975:6001   */\n      swap1\n      pop\n        /* \"#utility.yul\":6011:6082   */\n      tag_392\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6068:6077   */\n      dup4\n        /* \"#utility.yul\":6064:6081   */\n      add\n        /* \"#utility.yul\":6055:6061   */\n      dup5\n        /* \"#utility.yul\":6011:6082   */\n      tag_285\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":5867:6089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6095:6211   */\n    tag_286:\n        /* \"#utility.yul\":6165:6186   */\n      tag_394\n        /* \"#utility.yul\":6180:6185   */\n      dup2\n        /* \"#utility.yul\":6165:6186   */\n      tag_270\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6158:6163   */\n      dup2\n        /* \"#utility.yul\":6155:6187   */\n      eq\n        /* \"#utility.yul\":6145:6205   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":6201:6202   */\n      0x00\n        /* \"#utility.yul\":6198:6199   */\n      0x00\n        /* \"#utility.yul\":6191:6203   */\n      revert\n        /* \"#utility.yul\":6145:6205   */\n    tag_395:\n        /* \"#utility.yul\":6095:6211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6350   */\n    tag_287:\n        /* \"#utility.yul\":6260:6265   */\n      0x00\n        /* \"#utility.yul\":6298:6304   */\n      dup2\n        /* \"#utility.yul\":6285:6305   */\n      calldataload\n        /* \"#utility.yul\":6276:6305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6314:6344   */\n      tag_397\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_286\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6217:6350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6356:6824   */\n    tag_60:\n        /* \"#utility.yul\":6421:6427   */\n      0x00\n        /* \"#utility.yul\":6429:6435   */\n      0x00\n        /* \"#utility.yul\":6478:6480   */\n      0x40\n        /* \"#utility.yul\":6466:6475   */\n      dup4\n        /* \"#utility.yul\":6457:6464   */\n      dup6\n        /* \"#utility.yul\":6453:6476   */\n      sub\n        /* \"#utility.yul\":6449:6481   */\n      slt\n        /* \"#utility.yul\":6446:6565   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":6484:6563   */\n      tag_400\n      tag_265\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":6446:6565   */\n    tag_399:\n        /* \"#utility.yul\":6604:6605   */\n      0x00\n        /* \"#utility.yul\":6629:6682   */\n      tag_401\n        /* \"#utility.yul\":6674:6681   */\n      dup6\n        /* \"#utility.yul\":6665:6671   */\n      dup3\n        /* \"#utility.yul\":6654:6663   */\n      dup7\n        /* \"#utility.yul\":6650:6672   */\n      add\n        /* \"#utility.yul\":6629:6682   */\n      tag_284\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":6619:6682   */\n      swap3\n      pop\n        /* \"#utility.yul\":6575:6692   */\n      pop\n        /* \"#utility.yul\":6731:6733   */\n      0x20\n        /* \"#utility.yul\":6757:6807   */\n      tag_402\n        /* \"#utility.yul\":6799:6806   */\n      dup6\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6779:6788   */\n      dup7\n        /* \"#utility.yul\":6775:6797   */\n      add\n        /* \"#utility.yul\":6757:6807   */\n      tag_287\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":6747:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6702:6817   */\n      pop\n        /* \"#utility.yul\":6356:6824   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6830:6947   */\n    tag_288:\n        /* \"#utility.yul\":6939:6940   */\n      0x00\n        /* \"#utility.yul\":6936:6937   */\n      0x00\n        /* \"#utility.yul\":6929:6941   */\n      revert\n        /* \"#utility.yul\":6953:7070   */\n    tag_289:\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7059:7060   */\n      0x00\n        /* \"#utility.yul\":7052:7064   */\n      revert\n        /* \"#utility.yul\":7076:7256   */\n    tag_203:\n        /* \"#utility.yul\":7124:7201   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7114:7202   */\n      mstore\n        /* \"#utility.yul\":7221:7225   */\n      0x41\n        /* \"#utility.yul\":7218:7219   */\n      0x04\n        /* \"#utility.yul\":7211:7226   */\n      mstore\n        /* \"#utility.yul\":7245:7249   */\n      0x24\n        /* \"#utility.yul\":7242:7243   */\n      0x00\n        /* \"#utility.yul\":7235:7250   */\n      revert\n        /* \"#utility.yul\":7262:7543   */\n    tag_290:\n        /* \"#utility.yul\":7345:7372   */\n      tag_407\n        /* \"#utility.yul\":7367:7371   */\n      dup3\n        /* \"#utility.yul\":7345:7372   */\n      tag_275\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7337:7343   */\n      dup2\n        /* \"#utility.yul\":7333:7373   */\n      add\n        /* \"#utility.yul\":7475:7481   */\n      dup2\n        /* \"#utility.yul\":7463:7473   */\n      dup2\n        /* \"#utility.yul\":7460:7482   */\n      lt\n        /* \"#utility.yul\":7439:7457   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7427:7437   */\n      dup3\n        /* \"#utility.yul\":7424:7458   */\n      gt\n        /* \"#utility.yul\":7421:7483   */\n      or\n        /* \"#utility.yul\":7418:7506   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":7486:7504   */\n      tag_409\n      tag_203\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7418:7506   */\n    tag_408:\n        /* \"#utility.yul\":7526:7536   */\n      dup1\n        /* \"#utility.yul\":7522:7524   */\n      0x40\n        /* \"#utility.yul\":7515:7537   */\n      mstore\n        /* \"#utility.yul\":7305:7543   */\n      pop\n        /* \"#utility.yul\":7262:7543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7678   */\n    tag_291:\n        /* \"#utility.yul\":7583:7589   */\n      0x00\n        /* \"#utility.yul\":7610:7630   */\n      tag_411\n      tag_264\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7600:7630   */\n      swap1\n      pop\n        /* \"#utility.yul\":7639:7672   */\n      tag_412\n        /* \"#utility.yul\":7667:7671   */\n      dup3\n        /* \"#utility.yul\":7659:7665   */\n      dup3\n        /* \"#utility.yul\":7639:7672   */\n      tag_290\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7549:7678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7991   */\n    tag_292:\n        /* \"#utility.yul\":7745:7749   */\n      0x00\n        /* \"#utility.yul\":7835:7853   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7827:7833   */\n      dup3\n        /* \"#utility.yul\":7824:7854   */\n      gt\n        /* \"#utility.yul\":7821:7877   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":7857:7875   */\n      tag_415\n      tag_203\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":7821:7877   */\n    tag_414:\n        /* \"#utility.yul\":7895:7924   */\n      tag_416\n        /* \"#utility.yul\":7917:7923   */\n      dup3\n        /* \"#utility.yul\":7895:7924   */\n      tag_275\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":7887:7924   */\n      swap1\n      pop\n        /* \"#utility.yul\":7979:7983   */\n      0x20\n        /* \"#utility.yul\":7973:7977   */\n      dup2\n        /* \"#utility.yul\":7969:7984   */\n      add\n        /* \"#utility.yul\":7961:7984   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7997:8145   */\n    tag_293:\n        /* \"#utility.yul\":8095:8101   */\n      dup3\n        /* \"#utility.yul\":8090:8093   */\n      dup2\n        /* \"#utility.yul\":8085:8088   */\n      dup4\n        /* \"#utility.yul\":8072:8102   */\n      calldatacopy\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup4\n        /* \"#utility.yul\":8122:8125   */\n      dup4\n        /* \"#utility.yul\":8118:8134   */\n      add\n        /* \"#utility.yul\":8111:8138   */\n      mstore\n        /* \"#utility.yul\":7997:8145   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8151:8574   */\n    tag_294:\n        /* \"#utility.yul\":8228:8233   */\n      0x00\n        /* \"#utility.yul\":8253:8318   */\n      tag_419\n        /* \"#utility.yul\":8269:8317   */\n      tag_420\n        /* \"#utility.yul\":8310:8316   */\n      dup5\n        /* \"#utility.yul\":8269:8317   */\n      tag_292\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8253:8318   */\n      tag_291\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8244:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":8341:8347   */\n      dup3\n        /* \"#utility.yul\":8334:8339   */\n      dup2\n        /* \"#utility.yul\":8327:8348   */\n      mstore\n        /* \"#utility.yul\":8379:8383   */\n      0x20\n        /* \"#utility.yul\":8372:8377   */\n      dup2\n        /* \"#utility.yul\":8368:8384   */\n      add\n        /* \"#utility.yul\":8417:8420   */\n      dup5\n        /* \"#utility.yul\":8408:8414   */\n      dup5\n        /* \"#utility.yul\":8403:8406   */\n      dup5\n        /* \"#utility.yul\":8399:8415   */\n      add\n        /* \"#utility.yul\":8396:8421   */\n      gt\n        /* \"#utility.yul\":8393:8505   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":8424:8503   */\n      tag_422\n      tag_289\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8393:8505   */\n    tag_421:\n        /* \"#utility.yul\":8514:8568   */\n      tag_423\n        /* \"#utility.yul\":8561:8567   */\n      dup5\n        /* \"#utility.yul\":8556:8559   */\n      dup3\n        /* \"#utility.yul\":8551:8554   */\n      dup6\n        /* \"#utility.yul\":8514:8568   */\n      tag_293\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8234:8574   */\n      pop\n        /* \"#utility.yul\":8151:8574   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8593:8931   */\n    tag_295:\n        /* \"#utility.yul\":8648:8653   */\n      0x00\n        /* \"#utility.yul\":8697:8700   */\n      dup3\n        /* \"#utility.yul\":8690:8694   */\n      0x1f\n        /* \"#utility.yul\":8682:8688   */\n      dup4\n        /* \"#utility.yul\":8678:8695   */\n      add\n        /* \"#utility.yul\":8674:8701   */\n      slt\n        /* \"#utility.yul\":8664:8786   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":8705:8784   */\n      tag_426\n      tag_288\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8664:8786   */\n    tag_425:\n        /* \"#utility.yul\":8822:8828   */\n      dup2\n        /* \"#utility.yul\":8809:8829   */\n      calldataload\n        /* \"#utility.yul\":8847:8925   */\n      tag_427\n        /* \"#utility.yul\":8921:8924   */\n      dup5\n        /* \"#utility.yul\":8913:8919   */\n      dup3\n        /* \"#utility.yul\":8906:8910   */\n      0x20\n        /* \"#utility.yul\":8898:8904   */\n      dup7\n        /* \"#utility.yul\":8894:8911   */\n      add\n        /* \"#utility.yul\":8847:8925   */\n      tag_294\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":8838:8925   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8931   */\n      pop\n        /* \"#utility.yul\":8593:8931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8937:9880   */\n    tag_64:\n        /* \"#utility.yul\":9032:9038   */\n      0x00\n        /* \"#utility.yul\":9040:9046   */\n      0x00\n        /* \"#utility.yul\":9048:9054   */\n      0x00\n        /* \"#utility.yul\":9056:9062   */\n      0x00\n        /* \"#utility.yul\":9105:9108   */\n      0x80\n        /* \"#utility.yul\":9093:9102   */\n      dup6\n        /* \"#utility.yul\":9084:9091   */\n      dup8\n        /* \"#utility.yul\":9080:9103   */\n      sub\n        /* \"#utility.yul\":9076:9109   */\n      slt\n        /* \"#utility.yul\":9073:9193   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":9112:9191   */\n      tag_430\n      tag_265\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9073:9193   */\n    tag_429:\n        /* \"#utility.yul\":9232:9233   */\n      0x00\n        /* \"#utility.yul\":9257:9310   */\n      tag_431\n        /* \"#utility.yul\":9302:9309   */\n      dup8\n        /* \"#utility.yul\":9293:9299   */\n      dup3\n        /* \"#utility.yul\":9282:9291   */\n      dup9\n        /* \"#utility.yul\":9278:9300   */\n      add\n        /* \"#utility.yul\":9257:9310   */\n      tag_284\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9247:9310   */\n      swap5\n      pop\n        /* \"#utility.yul\":9203:9320   */\n      pop\n        /* \"#utility.yul\":9359:9361   */\n      0x20\n        /* \"#utility.yul\":9385:9438   */\n      tag_432\n        /* \"#utility.yul\":9430:9437   */\n      dup8\n        /* \"#utility.yul\":9421:9427   */\n      dup3\n        /* \"#utility.yul\":9410:9419   */\n      dup9\n        /* \"#utility.yul\":9406:9428   */\n      add\n        /* \"#utility.yul\":9385:9438   */\n      tag_284\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":9375:9438   */\n      swap4\n      pop\n        /* \"#utility.yul\":9330:9448   */\n      pop\n        /* \"#utility.yul\":9487:9489   */\n      0x40\n        /* \"#utility.yul\":9513:9566   */\n      tag_433\n        /* \"#utility.yul\":9558:9565   */\n      dup8\n        /* \"#utility.yul\":9549:9555   */\n      dup3\n        /* \"#utility.yul\":9538:9547   */\n      dup9\n        /* \"#utility.yul\":9534:9556   */\n      add\n        /* \"#utility.yul\":9513:9566   */\n      tag_279\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":9503:9566   */\n      swap3\n      pop\n        /* \"#utility.yul\":9458:9576   */\n      pop\n        /* \"#utility.yul\":9643:9645   */\n      0x60\n        /* \"#utility.yul\":9632:9641   */\n      dup6\n        /* \"#utility.yul\":9628:9646   */\n      add\n        /* \"#utility.yul\":9615:9647   */\n      calldataload\n        /* \"#utility.yul\":9674:9692   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9666:9672   */\n      dup2\n        /* \"#utility.yul\":9663:9693   */\n      gt\n        /* \"#utility.yul\":9660:9777   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":9696:9775   */\n      tag_435\n      tag_266\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":9660:9777   */\n    tag_434:\n        /* \"#utility.yul\":9801:9863   */\n      tag_436\n        /* \"#utility.yul\":9855:9862   */\n      dup8\n        /* \"#utility.yul\":9846:9852   */\n      dup3\n        /* \"#utility.yul\":9835:9844   */\n      dup9\n        /* \"#utility.yul\":9831:9853   */\n      add\n        /* \"#utility.yul\":9801:9863   */\n      tag_295\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9791:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9586:9873   */\n      pop\n        /* \"#utility.yul\":8937:9880   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9886:10360   */\n    tag_72:\n        /* \"#utility.yul\":9954:9960   */\n      0x00\n        /* \"#utility.yul\":9962:9968   */\n      0x00\n        /* \"#utility.yul\":10011:10013   */\n      0x40\n        /* \"#utility.yul\":9999:10008   */\n      dup4\n        /* \"#utility.yul\":9990:9997   */\n      dup6\n        /* \"#utility.yul\":9986:10009   */\n      sub\n        /* \"#utility.yul\":9982:10014   */\n      slt\n        /* \"#utility.yul\":9979:10098   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":10017:10096   */\n      tag_439\n      tag_265\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":9979:10098   */\n    tag_438:\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10162:10215   */\n      tag_440\n        /* \"#utility.yul\":10207:10214   */\n      dup6\n        /* \"#utility.yul\":10198:10204   */\n      dup3\n        /* \"#utility.yul\":10187:10196   */\n      dup7\n        /* \"#utility.yul\":10183:10205   */\n      add\n        /* \"#utility.yul\":10162:10215   */\n      tag_284\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10152:10215   */\n      swap3\n      pop\n        /* \"#utility.yul\":10108:10225   */\n      pop\n        /* \"#utility.yul\":10264:10266   */\n      0x20\n        /* \"#utility.yul\":10290:10343   */\n      tag_441\n        /* \"#utility.yul\":10335:10342   */\n      dup6\n        /* \"#utility.yul\":10326:10332   */\n      dup3\n        /* \"#utility.yul\":10315:10324   */\n      dup7\n        /* \"#utility.yul\":10311:10333   */\n      add\n        /* \"#utility.yul\":10290:10343   */\n      tag_284\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10280:10343   */\n      swap2\n      pop\n        /* \"#utility.yul\":10235:10353   */\n      pop\n        /* \"#utility.yul\":9886:10360   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10546   */\n    tag_296:\n        /* \"#utility.yul\":10414:10491   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10411:10412   */\n      0x00\n        /* \"#utility.yul\":10404:10492   */\n      mstore\n        /* \"#utility.yul\":10511:10515   */\n      0x22\n        /* \"#utility.yul\":10508:10509   */\n      0x04\n        /* \"#utility.yul\":10501:10516   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x24\n        /* \"#utility.yul\":10532:10533   */\n      0x00\n        /* \"#utility.yul\":10525:10540   */\n      revert\n        /* \"#utility.yul\":10552:10872   */\n    tag_82:\n        /* \"#utility.yul\":10596:10602   */\n      0x00\n        /* \"#utility.yul\":10633:10634   */\n      0x02\n        /* \"#utility.yul\":10627:10631   */\n      dup3\n        /* \"#utility.yul\":10623:10635   */\n      div\n        /* \"#utility.yul\":10613:10635   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10681   */\n      0x01\n        /* \"#utility.yul\":10674:10678   */\n      dup3\n        /* \"#utility.yul\":10670:10682   */\n      and\n        /* \"#utility.yul\":10701:10719   */\n      dup1\n        /* \"#utility.yul\":10691:10772   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":10757:10761   */\n      0x7f\n        /* \"#utility.yul\":10749:10755   */\n      dup3\n        /* \"#utility.yul\":10745:10762   */\n      and\n        /* \"#utility.yul\":10735:10762   */\n      swap2\n      pop\n        /* \"#utility.yul\":10691:10772   */\n    tag_444:\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10811:10817   */\n      dup3\n        /* \"#utility.yul\":10808:10822   */\n      lt\n        /* \"#utility.yul\":10788:10806   */\n      dup2\n        /* \"#utility.yul\":10785:10823   */\n      sub\n        /* \"#utility.yul\":10782:10866   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":10838:10856   */\n      tag_446\n      tag_296\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10782:10866   */\n    tag_445:\n        /* \"#utility.yul\":10603:10872   */\n      pop\n        /* \"#utility.yul\":10552:10872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10878:11098   */\n    tag_297:\n        /* \"#utility.yul\":11018:11052   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":11014:11015   */\n      0x00\n        /* \"#utility.yul\":11006:11012   */\n      dup3\n        /* \"#utility.yul\":11002:11016   */\n      add\n        /* \"#utility.yul\":10995:11053   */\n      mstore\n        /* \"#utility.yul\":11087:11090   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11082:11084   */\n      0x20\n        /* \"#utility.yul\":11074:11080   */\n      dup3\n        /* \"#utility.yul\":11070:11085   */\n      add\n        /* \"#utility.yul\":11063:11091   */\n      mstore\n        /* \"#utility.yul\":10878:11098   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11104:11470   */\n    tag_298:\n        /* \"#utility.yul\":11246:11249   */\n      0x00\n        /* \"#utility.yul\":11267:11334   */\n      tag_449\n        /* \"#utility.yul\":11331:11333   */\n      0x21\n        /* \"#utility.yul\":11326:11329   */\n      dup4\n        /* \"#utility.yul\":11267:11334   */\n      tag_273\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11260:11334   */\n      swap2\n      pop\n        /* \"#utility.yul\":11343:11436   */\n      tag_450\n        /* \"#utility.yul\":11432:11435   */\n      dup3\n        /* \"#utility.yul\":11343:11436   */\n      tag_297\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11461:11463   */\n      0x40\n        /* \"#utility.yul\":11456:11459   */\n      dup3\n        /* \"#utility.yul\":11452:11464   */\n      add\n        /* \"#utility.yul\":11445:11464   */\n      swap1\n      pop\n        /* \"#utility.yul\":11104:11470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11476:11895   */\n    tag_94:\n        /* \"#utility.yul\":11642:11646   */\n      0x00\n        /* \"#utility.yul\":11680:11682   */\n      0x20\n        /* \"#utility.yul\":11669:11678   */\n      dup3\n        /* \"#utility.yul\":11665:11683   */\n      add\n        /* \"#utility.yul\":11657:11683   */\n      swap1\n      pop\n        /* \"#utility.yul\":11729:11738   */\n      dup2\n        /* \"#utility.yul\":11723:11727   */\n      dup2\n        /* \"#utility.yul\":11719:11739   */\n      sub\n        /* \"#utility.yul\":11715:11716   */\n      0x00\n        /* \"#utility.yul\":11704:11713   */\n      dup4\n        /* \"#utility.yul\":11700:11717   */\n      add\n        /* \"#utility.yul\":11693:11740   */\n      mstore\n        /* \"#utility.yul\":11757:11888   */\n      tag_452\n        /* \"#utility.yul\":11883:11887   */\n      dup2\n        /* \"#utility.yul\":11757:11888   */\n      tag_298\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":11749:11888   */\n      swap1\n      pop\n        /* \"#utility.yul\":11476:11895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11901:12149   */\n    tag_299:\n        /* \"#utility.yul\":12041:12075   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":12037:12038   */\n      0x00\n        /* \"#utility.yul\":12029:12035   */\n      dup3\n        /* \"#utility.yul\":12025:12039   */\n      add\n        /* \"#utility.yul\":12018:12076   */\n      mstore\n        /* \"#utility.yul\":12110:12141   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":12105:12107   */\n      0x20\n        /* \"#utility.yul\":12097:12103   */\n      dup3\n        /* \"#utility.yul\":12093:12108   */\n      add\n        /* \"#utility.yul\":12086:12142   */\n      mstore\n        /* \"#utility.yul\":11901:12149   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12155:12521   */\n    tag_300:\n        /* \"#utility.yul\":12297:12300   */\n      0x00\n        /* \"#utility.yul\":12318:12385   */\n      tag_455\n        /* \"#utility.yul\":12382:12384   */\n      0x3d\n        /* \"#utility.yul\":12377:12380   */\n      dup4\n        /* \"#utility.yul\":12318:12385   */\n      tag_273\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":12311:12385   */\n      swap2\n      pop\n        /* \"#utility.yul\":12394:12487   */\n      tag_456\n        /* \"#utility.yul\":12483:12486   */\n      dup3\n        /* \"#utility.yul\":12394:12487   */\n      tag_299\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12512:12514   */\n      0x40\n        /* \"#utility.yul\":12507:12510   */\n      dup3\n        /* \"#utility.yul\":12503:12515   */\n      add\n        /* \"#utility.yul\":12496:12515   */\n      swap1\n      pop\n        /* \"#utility.yul\":12155:12521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12527:12946   */\n    tag_102:\n        /* \"#utility.yul\":12693:12697   */\n      0x00\n        /* \"#utility.yul\":12731:12733   */\n      0x20\n        /* \"#utility.yul\":12720:12729   */\n      dup3\n        /* \"#utility.yul\":12716:12734   */\n      add\n        /* \"#utility.yul\":12708:12734   */\n      swap1\n      pop\n        /* \"#utility.yul\":12780:12789   */\n      dup2\n        /* \"#utility.yul\":12774:12778   */\n      dup2\n        /* \"#utility.yul\":12770:12790   */\n      sub\n        /* \"#utility.yul\":12766:12767   */\n      0x00\n        /* \"#utility.yul\":12755:12764   */\n      dup4\n        /* \"#utility.yul\":12751:12768   */\n      add\n        /* \"#utility.yul\":12744:12791   */\n      mstore\n        /* \"#utility.yul\":12808:12939   */\n      tag_458\n        /* \"#utility.yul\":12934:12938   */\n      dup2\n        /* \"#utility.yul\":12808:12939   */\n      tag_300\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12800:12939   */\n      swap1\n      pop\n        /* \"#utility.yul\":12527:12946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12952:13184   */\n    tag_301:\n        /* \"#utility.yul\":13092:13126   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":13088:13089   */\n      0x00\n        /* \"#utility.yul\":13080:13086   */\n      dup3\n        /* \"#utility.yul\":13076:13090   */\n      add\n        /* \"#utility.yul\":13069:13127   */\n      mstore\n        /* \"#utility.yul\":13161:13176   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":13156:13158   */\n      0x20\n        /* \"#utility.yul\":13148:13154   */\n      dup3\n        /* \"#utility.yul\":13144:13159   */\n      add\n        /* \"#utility.yul\":13137:13177   */\n      mstore\n        /* \"#utility.yul\":12952:13184   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13190:13556   */\n    tag_302:\n        /* \"#utility.yul\":13332:13335   */\n      0x00\n        /* \"#utility.yul\":13353:13420   */\n      tag_461\n        /* \"#utility.yul\":13417:13419   */\n      0x2d\n        /* \"#utility.yul\":13412:13415   */\n      dup4\n        /* \"#utility.yul\":13353:13420   */\n      tag_273\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":13346:13420   */\n      swap2\n      pop\n        /* \"#utility.yul\":13429:13522   */\n      tag_462\n        /* \"#utility.yul\":13518:13521   */\n      dup3\n        /* \"#utility.yul\":13429:13522   */\n      tag_301\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13547:13549   */\n      0x40\n        /* \"#utility.yul\":13542:13545   */\n      dup3\n        /* \"#utility.yul\":13538:13550   */\n      add\n        /* \"#utility.yul\":13531:13550   */\n      swap1\n      pop\n        /* \"#utility.yul\":13190:13556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13562:13981   */\n    tag_111:\n        /* \"#utility.yul\":13728:13732   */\n      0x00\n        /* \"#utility.yul\":13766:13768   */\n      0x20\n        /* \"#utility.yul\":13755:13764   */\n      dup3\n        /* \"#utility.yul\":13751:13769   */\n      add\n        /* \"#utility.yul\":13743:13769   */\n      swap1\n      pop\n        /* \"#utility.yul\":13815:13824   */\n      dup2\n        /* \"#utility.yul\":13809:13813   */\n      dup2\n        /* \"#utility.yul\":13805:13825   */\n      sub\n        /* \"#utility.yul\":13801:13802   */\n      0x00\n        /* \"#utility.yul\":13790:13799   */\n      dup4\n        /* \"#utility.yul\":13786:13803   */\n      add\n        /* \"#utility.yul\":13779:13826   */\n      mstore\n        /* \"#utility.yul\":13843:13974   */\n      tag_464\n        /* \"#utility.yul\":13969:13973   */\n      dup2\n        /* \"#utility.yul\":13843:13974   */\n      tag_302\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":13835:13974   */\n      swap1\n      pop\n        /* \"#utility.yul\":13562:13981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13987:14161   */\n    tag_303:\n        /* \"#utility.yul\":14127:14153   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":14123:14124   */\n      0x00\n        /* \"#utility.yul\":14115:14121   */\n      dup3\n        /* \"#utility.yul\":14111:14125   */\n      add\n        /* \"#utility.yul\":14104:14154   */\n      mstore\n        /* \"#utility.yul\":13987:14161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14167:14533   */\n    tag_304:\n        /* \"#utility.yul\":14309:14312   */\n      0x00\n        /* \"#utility.yul\":14330:14397   */\n      tag_467\n        /* \"#utility.yul\":14394:14396   */\n      0x18\n        /* \"#utility.yul\":14389:14392   */\n      dup4\n        /* \"#utility.yul\":14330:14397   */\n      tag_273\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":14323:14397   */\n      swap2\n      pop\n        /* \"#utility.yul\":14406:14499   */\n      tag_468\n        /* \"#utility.yul\":14495:14498   */\n      dup3\n        /* \"#utility.yul\":14406:14499   */\n      tag_303\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":14524:14526   */\n      0x20\n        /* \"#utility.yul\":14519:14522   */\n      dup3\n        /* \"#utility.yul\":14515:14527   */\n      add\n        /* \"#utility.yul\":14508:14527   */\n      swap1\n      pop\n        /* \"#utility.yul\":14167:14533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14539:14958   */\n    tag_121:\n        /* \"#utility.yul\":14705:14709   */\n      0x00\n        /* \"#utility.yul\":14743:14745   */\n      0x20\n        /* \"#utility.yul\":14732:14741   */\n      dup3\n        /* \"#utility.yul\":14728:14746   */\n      add\n        /* \"#utility.yul\":14720:14746   */\n      swap1\n      pop\n        /* \"#utility.yul\":14792:14801   */\n      dup2\n        /* \"#utility.yul\":14786:14790   */\n      dup2\n        /* \"#utility.yul\":14782:14802   */\n      sub\n        /* \"#utility.yul\":14778:14779   */\n      0x00\n        /* \"#utility.yul\":14767:14776   */\n      dup4\n        /* \"#utility.yul\":14763:14780   */\n      add\n        /* \"#utility.yul\":14756:14803   */\n      mstore\n        /* \"#utility.yul\":14820:14951   */\n      tag_470\n        /* \"#utility.yul\":14946:14950   */\n      dup2\n        /* \"#utility.yul\":14820:14951   */\n      tag_304\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":14812:14951   */\n      swap1\n      pop\n        /* \"#utility.yul\":14539:14958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14964:15192   */\n    tag_305:\n        /* \"#utility.yul\":15104:15138   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":15100:15101   */\n      0x00\n        /* \"#utility.yul\":15092:15098   */\n      dup3\n        /* \"#utility.yul\":15088:15102   */\n      add\n        /* \"#utility.yul\":15081:15139   */\n      mstore\n        /* \"#utility.yul\":15173:15184   */\n      0x6c6964206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15168:15170   */\n      0x20\n        /* \"#utility.yul\":15160:15166   */\n      dup3\n        /* \"#utility.yul\":15156:15171   */\n      add\n        /* \"#utility.yul\":15149:15185   */\n      mstore\n        /* \"#utility.yul\":14964:15192   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15198:15564   */\n    tag_306:\n        /* \"#utility.yul\":15340:15343   */\n      0x00\n        /* \"#utility.yul\":15361:15428   */\n      tag_473\n        /* \"#utility.yul\":15425:15427   */\n      0x29\n        /* \"#utility.yul\":15420:15423   */\n      dup4\n        /* \"#utility.yul\":15361:15428   */\n      tag_273\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":15354:15428   */\n      swap2\n      pop\n        /* \"#utility.yul\":15437:15530   */\n      tag_474\n        /* \"#utility.yul\":15526:15529   */\n      dup3\n        /* \"#utility.yul\":15437:15530   */\n      tag_305\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":15555:15557   */\n      0x40\n        /* \"#utility.yul\":15550:15553   */\n      dup3\n        /* \"#utility.yul\":15546:15558   */\n      add\n        /* \"#utility.yul\":15539:15558   */\n      swap1\n      pop\n        /* \"#utility.yul\":15198:15564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15570:15989   */\n    tag_125:\n        /* \"#utility.yul\":15736:15740   */\n      0x00\n        /* \"#utility.yul\":15774:15776   */\n      0x20\n        /* \"#utility.yul\":15763:15772   */\n      dup3\n        /* \"#utility.yul\":15759:15777   */\n      add\n        /* \"#utility.yul\":15751:15777   */\n      swap1\n      pop\n        /* \"#utility.yul\":15823:15832   */\n      dup2\n        /* \"#utility.yul\":15817:15821   */\n      dup2\n        /* \"#utility.yul\":15813:15833   */\n      sub\n        /* \"#utility.yul\":15809:15810   */\n      0x00\n        /* \"#utility.yul\":15798:15807   */\n      dup4\n        /* \"#utility.yul\":15794:15811   */\n      add\n        /* \"#utility.yul\":15787:15834   */\n      mstore\n        /* \"#utility.yul\":15851:15982   */\n      tag_476\n        /* \"#utility.yul\":15977:15981   */\n      dup2\n        /* \"#utility.yul\":15851:15982   */\n      tag_306\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":15843:15982   */\n      swap1\n      pop\n        /* \"#utility.yul\":15570:15989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15995:16143   */\n    tag_307:\n        /* \"#utility.yul\":16097:16108   */\n      0x00\n        /* \"#utility.yul\":16134:16137   */\n      dup2\n        /* \"#utility.yul\":16119:16137   */\n      swap1\n      pop\n        /* \"#utility.yul\":15995:16143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16149:16539   */\n    tag_308:\n        /* \"#utility.yul\":16255:16258   */\n      0x00\n        /* \"#utility.yul\":16283:16322   */\n      tag_479\n        /* \"#utility.yul\":16316:16321   */\n      dup3\n        /* \"#utility.yul\":16283:16322   */\n      tag_272\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":16338:16427   */\n      tag_480\n        /* \"#utility.yul\":16420:16426   */\n      dup2\n        /* \"#utility.yul\":16415:16418   */\n      dup6\n        /* \"#utility.yul\":16338:16427   */\n      tag_307\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":16331:16427   */\n      swap4\n      pop\n        /* \"#utility.yul\":16436:16501   */\n      tag_481\n        /* \"#utility.yul\":16494:16500   */\n      dup2\n        /* \"#utility.yul\":16489:16492   */\n      dup6\n        /* \"#utility.yul\":16482:16486   */\n      0x20\n        /* \"#utility.yul\":16475:16480   */\n      dup7\n        /* \"#utility.yul\":16471:16487   */\n      add\n        /* \"#utility.yul\":16436:16501   */\n      tag_274\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":16526:16532   */\n      dup1\n        /* \"#utility.yul\":16521:16524   */\n      dup5\n        /* \"#utility.yul\":16517:16533   */\n      add\n        /* \"#utility.yul\":16510:16533   */\n      swap2\n      pop\n        /* \"#utility.yul\":16259:16539   */\n      pop\n        /* \"#utility.yul\":16149:16539   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16545:16980   */\n    tag_152:\n        /* \"#utility.yul\":16725:16728   */\n      0x00\n        /* \"#utility.yul\":16747:16842   */\n      tag_483\n        /* \"#utility.yul\":16838:16841   */\n      dup3\n        /* \"#utility.yul\":16829:16835   */\n      dup6\n        /* \"#utility.yul\":16747:16842   */\n      tag_308\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":16740:16842   */\n      swap2\n      pop\n        /* \"#utility.yul\":16859:16954   */\n      tag_484\n        /* \"#utility.yul\":16950:16953   */\n      dup3\n        /* \"#utility.yul\":16941:16947   */\n      dup5\n        /* \"#utility.yul\":16859:16954   */\n      tag_308\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":16852:16954   */\n      swap2\n      pop\n        /* \"#utility.yul\":16971:16974   */\n      dup2\n        /* \"#utility.yul\":16964:16974   */\n      swap1\n      pop\n        /* \"#utility.yul\":16545:16980   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16986:17210   */\n    tag_309:\n        /* \"#utility.yul\":17126:17160   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":17122:17123   */\n      0x00\n        /* \"#utility.yul\":17114:17120   */\n      dup3\n        /* \"#utility.yul\":17110:17124   */\n      add\n        /* \"#utility.yul\":17103:17161   */\n      mstore\n        /* \"#utility.yul\":17195:17202   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17190:17192   */\n      0x20\n        /* \"#utility.yul\":17182:17188   */\n      dup3\n        /* \"#utility.yul\":17178:17193   */\n      add\n        /* \"#utility.yul\":17171:17203   */\n      mstore\n        /* \"#utility.yul\":16986:17210   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17216:17582   */\n    tag_310:\n        /* \"#utility.yul\":17358:17361   */\n      0x00\n        /* \"#utility.yul\":17379:17446   */\n      tag_487\n        /* \"#utility.yul\":17443:17445   */\n      0x25\n        /* \"#utility.yul\":17438:17441   */\n      dup4\n        /* \"#utility.yul\":17379:17446   */\n      tag_273\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":17372:17446   */\n      swap2\n      pop\n        /* \"#utility.yul\":17455:17548   */\n      tag_488\n        /* \"#utility.yul\":17544:17547   */\n      dup3\n        /* \"#utility.yul\":17455:17548   */\n      tag_309\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":17573:17575   */\n      0x40\n        /* \"#utility.yul\":17568:17571   */\n      dup3\n        /* \"#utility.yul\":17564:17576   */\n      add\n        /* \"#utility.yul\":17557:17576   */\n      swap1\n      pop\n        /* \"#utility.yul\":17216:17582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17588:18007   */\n    tag_173:\n        /* \"#utility.yul\":17754:17758   */\n      0x00\n        /* \"#utility.yul\":17792:17794   */\n      0x20\n        /* \"#utility.yul\":17781:17790   */\n      dup3\n        /* \"#utility.yul\":17777:17795   */\n      add\n        /* \"#utility.yul\":17769:17795   */\n      swap1\n      pop\n        /* \"#utility.yul\":17841:17850   */\n      dup2\n        /* \"#utility.yul\":17835:17839   */\n      dup2\n        /* \"#utility.yul\":17831:17851   */\n      sub\n        /* \"#utility.yul\":17827:17828   */\n      0x00\n        /* \"#utility.yul\":17816:17825   */\n      dup4\n        /* \"#utility.yul\":17812:17829   */\n      add\n        /* \"#utility.yul\":17805:17852   */\n      mstore\n        /* \"#utility.yul\":17869:18000   */\n      tag_490\n        /* \"#utility.yul\":17995:17999   */\n      dup2\n        /* \"#utility.yul\":17869:18000   */\n      tag_310\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":17861:18000   */\n      swap1\n      pop\n        /* \"#utility.yul\":17588:18007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18013:18236   */\n    tag_311:\n        /* \"#utility.yul\":18153:18187   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":18149:18150   */\n      0x00\n        /* \"#utility.yul\":18141:18147   */\n      dup3\n        /* \"#utility.yul\":18137:18151   */\n      add\n        /* \"#utility.yul\":18130:18188   */\n      mstore\n        /* \"#utility.yul\":18222:18228   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18217:18219   */\n      0x20\n        /* \"#utility.yul\":18209:18215   */\n      dup3\n        /* \"#utility.yul\":18205:18220   */\n      add\n        /* \"#utility.yul\":18198:18229   */\n      mstore\n        /* \"#utility.yul\":18013:18236   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18242:18608   */\n    tag_312:\n        /* \"#utility.yul\":18384:18387   */\n      0x00\n        /* \"#utility.yul\":18405:18472   */\n      tag_493\n        /* \"#utility.yul\":18469:18471   */\n      0x24\n        /* \"#utility.yul\":18464:18467   */\n      dup4\n        /* \"#utility.yul\":18405:18472   */\n      tag_273\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":18398:18472   */\n      swap2\n      pop\n        /* \"#utility.yul\":18481:18574   */\n      tag_494\n        /* \"#utility.yul\":18570:18573   */\n      dup3\n        /* \"#utility.yul\":18481:18574   */\n      tag_311\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":18599:18601   */\n      0x40\n        /* \"#utility.yul\":18594:18597   */\n      dup3\n        /* \"#utility.yul\":18590:18602   */\n      add\n        /* \"#utility.yul\":18583:18602   */\n      swap1\n      pop\n        /* \"#utility.yul\":18242:18608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18614:19033   */\n    tag_176:\n        /* \"#utility.yul\":18780:18784   */\n      0x00\n        /* \"#utility.yul\":18818:18820   */\n      0x20\n        /* \"#utility.yul\":18807:18816   */\n      dup3\n        /* \"#utility.yul\":18803:18821   */\n      add\n        /* \"#utility.yul\":18795:18821   */\n      swap1\n      pop\n        /* \"#utility.yul\":18867:18876   */\n      dup2\n        /* \"#utility.yul\":18861:18865   */\n      dup2\n        /* \"#utility.yul\":18857:18877   */\n      sub\n        /* \"#utility.yul\":18853:18854   */\n      0x00\n        /* \"#utility.yul\":18842:18851   */\n      dup4\n        /* \"#utility.yul\":18838:18855   */\n      add\n        /* \"#utility.yul\":18831:18878   */\n      mstore\n        /* \"#utility.yul\":18895:19026   */\n      tag_496\n        /* \"#utility.yul\":19021:19025   */\n      dup2\n        /* \"#utility.yul\":18895:19026   */\n      tag_312\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":18887:19026   */\n      swap1\n      pop\n        /* \"#utility.yul\":18614:19033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19039:19214   */\n    tag_313:\n        /* \"#utility.yul\":19179:19206   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":19175:19176   */\n      0x00\n        /* \"#utility.yul\":19167:19173   */\n      dup3\n        /* \"#utility.yul\":19163:19177   */\n      add\n        /* \"#utility.yul\":19156:19207   */\n      mstore\n        /* \"#utility.yul\":19039:19214   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19220:19586   */\n    tag_314:\n        /* \"#utility.yul\":19362:19365   */\n      0x00\n        /* \"#utility.yul\":19383:19450   */\n      tag_499\n        /* \"#utility.yul\":19447:19449   */\n      0x19\n        /* \"#utility.yul\":19442:19445   */\n      dup4\n        /* \"#utility.yul\":19383:19450   */\n      tag_273\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":19376:19450   */\n      swap2\n      pop\n        /* \"#utility.yul\":19459:19552   */\n      tag_500\n        /* \"#utility.yul\":19548:19551   */\n      dup3\n        /* \"#utility.yul\":19459:19552   */\n      tag_313\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":19577:19579   */\n      0x20\n        /* \"#utility.yul\":19572:19575   */\n      dup3\n        /* \"#utility.yul\":19568:19580   */\n      add\n        /* \"#utility.yul\":19561:19580   */\n      swap1\n      pop\n        /* \"#utility.yul\":19220:19586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19592:20011   */\n    tag_188:\n        /* \"#utility.yul\":19758:19762   */\n      0x00\n        /* \"#utility.yul\":19796:19798   */\n      0x20\n        /* \"#utility.yul\":19785:19794   */\n      dup3\n        /* \"#utility.yul\":19781:19799   */\n      add\n        /* \"#utility.yul\":19773:19799   */\n      swap1\n      pop\n        /* \"#utility.yul\":19845:19854   */\n      dup2\n        /* \"#utility.yul\":19839:19843   */\n      dup2\n        /* \"#utility.yul\":19835:19855   */\n      sub\n        /* \"#utility.yul\":19831:19832   */\n      0x00\n        /* \"#utility.yul\":19820:19829   */\n      dup4\n        /* \"#utility.yul\":19816:19833   */\n      add\n        /* \"#utility.yul\":19809:19856   */\n      mstore\n        /* \"#utility.yul\":19873:20004   */\n      tag_502\n        /* \"#utility.yul\":19999:20003   */\n      dup2\n        /* \"#utility.yul\":19873:20004   */\n      tag_314\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":19865:20004   */\n      swap1\n      pop\n        /* \"#utility.yul\":19592:20011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20017:20254   */\n    tag_315:\n        /* \"#utility.yul\":20157:20191   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":20153:20154   */\n      0x00\n        /* \"#utility.yul\":20145:20151   */\n      dup3\n        /* \"#utility.yul\":20141:20155   */\n      add\n        /* \"#utility.yul\":20134:20192   */\n      mstore\n        /* \"#utility.yul\":20226:20246   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":20221:20223   */\n      0x20\n        /* \"#utility.yul\":20213:20219   */\n      dup3\n        /* \"#utility.yul\":20209:20224   */\n      add\n        /* \"#utility.yul\":20202:20247   */\n      mstore\n        /* \"#utility.yul\":20017:20254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20260:20626   */\n    tag_316:\n        /* \"#utility.yul\":20402:20405   */\n      0x00\n        /* \"#utility.yul\":20423:20490   */\n      tag_505\n        /* \"#utility.yul\":20487:20489   */\n      0x32\n        /* \"#utility.yul\":20482:20485   */\n      dup4\n        /* \"#utility.yul\":20423:20490   */\n      tag_273\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":20416:20490   */\n      swap2\n      pop\n        /* \"#utility.yul\":20499:20592   */\n      tag_506\n        /* \"#utility.yul\":20588:20591   */\n      dup3\n        /* \"#utility.yul\":20499:20592   */\n      tag_315\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":20617:20619   */\n      0x40\n        /* \"#utility.yul\":20612:20615   */\n      dup3\n        /* \"#utility.yul\":20608:20620   */\n      add\n        /* \"#utility.yul\":20601:20620   */\n      swap1\n      pop\n        /* \"#utility.yul\":20260:20626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20632:21051   */\n    tag_196:\n        /* \"#utility.yul\":20798:20802   */\n      0x00\n        /* \"#utility.yul\":20836:20838   */\n      0x20\n        /* \"#utility.yul\":20825:20834   */\n      dup3\n        /* \"#utility.yul\":20821:20839   */\n      add\n        /* \"#utility.yul\":20813:20839   */\n      swap1\n      pop\n        /* \"#utility.yul\":20885:20894   */\n      dup2\n        /* \"#utility.yul\":20879:20883   */\n      dup2\n        /* \"#utility.yul\":20875:20895   */\n      sub\n        /* \"#utility.yul\":20871:20872   */\n      0x00\n        /* \"#utility.yul\":20860:20869   */\n      dup4\n        /* \"#utility.yul\":20856:20873   */\n      add\n        /* \"#utility.yul\":20849:20896   */\n      mstore\n        /* \"#utility.yul\":20913:21044   */\n      tag_508\n        /* \"#utility.yul\":21039:21043   */\n      dup2\n        /* \"#utility.yul\":20913:21044   */\n      tag_316\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":20905:21044   */\n      swap1\n      pop\n        /* \"#utility.yul\":20632:21051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21057:21237   */\n    tag_209:\n        /* \"#utility.yul\":21105:21182   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21102:21103   */\n      0x00\n        /* \"#utility.yul\":21095:21183   */\n      mstore\n        /* \"#utility.yul\":21202:21206   */\n      0x12\n        /* \"#utility.yul\":21199:21200   */\n      0x04\n        /* \"#utility.yul\":21192:21207   */\n      mstore\n        /* \"#utility.yul\":21226:21230   */\n      0x24\n        /* \"#utility.yul\":21223:21224   */\n      0x00\n        /* \"#utility.yul\":21216:21231   */\n      revert\n        /* \"#utility.yul\":21243:21423   */\n    tag_317:\n        /* \"#utility.yul\":21291:21368   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21288:21289   */\n      0x00\n        /* \"#utility.yul\":21281:21369   */\n      mstore\n        /* \"#utility.yul\":21388:21392   */\n      0x11\n        /* \"#utility.yul\":21385:21386   */\n      0x04\n        /* \"#utility.yul\":21378:21393   */\n      mstore\n        /* \"#utility.yul\":21412:21416   */\n      0x24\n        /* \"#utility.yul\":21409:21410   */\n      0x00\n        /* \"#utility.yul\":21402:21417   */\n      revert\n        /* \"#utility.yul\":21429:21623   */\n    tag_217:\n        /* \"#utility.yul\":21469:21473   */\n      0x00\n        /* \"#utility.yul\":21489:21509   */\n      tag_512\n        /* \"#utility.yul\":21507:21508   */\n      dup3\n        /* \"#utility.yul\":21489:21509   */\n      tag_277\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":21484:21509   */\n      swap2\n      pop\n        /* \"#utility.yul\":21523:21543   */\n      tag_513\n        /* \"#utility.yul\":21541:21542   */\n      dup4\n        /* \"#utility.yul\":21523:21543   */\n      tag_277\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":21518:21543   */\n      swap3\n      pop\n        /* \"#utility.yul\":21567:21568   */\n      dup3\n        /* \"#utility.yul\":21564:21565   */\n      dup3\n        /* \"#utility.yul\":21560:21569   */\n      sub\n        /* \"#utility.yul\":21552:21569   */\n      swap1\n      pop\n        /* \"#utility.yul\":21591:21592   */\n      dup2\n        /* \"#utility.yul\":21585:21589   */\n      dup2\n        /* \"#utility.yul\":21582:21593   */\n      gt\n        /* \"#utility.yul\":21579:21616   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":21596:21614   */\n      tag_515\n      tag_317\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":21579:21616   */\n    tag_514:\n        /* \"#utility.yul\":21429:21623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21629:21820   */\n    tag_220:\n        /* \"#utility.yul\":21669:21672   */\n      0x00\n        /* \"#utility.yul\":21688:21708   */\n      tag_517\n        /* \"#utility.yul\":21706:21707   */\n      dup3\n        /* \"#utility.yul\":21688:21708   */\n      tag_277\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":21683:21708   */\n      swap2\n      pop\n        /* \"#utility.yul\":21722:21742   */\n      tag_518\n        /* \"#utility.yul\":21740:21741   */\n      dup4\n        /* \"#utility.yul\":21722:21742   */\n      tag_277\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":21717:21742   */\n      swap3\n      pop\n        /* \"#utility.yul\":21765:21766   */\n      dup3\n        /* \"#utility.yul\":21762:21763   */\n      dup3\n        /* \"#utility.yul\":21758:21767   */\n      add\n        /* \"#utility.yul\":21751:21767   */\n      swap1\n      pop\n        /* \"#utility.yul\":21786:21789   */\n      dup1\n        /* \"#utility.yul\":21783:21784   */\n      dup3\n        /* \"#utility.yul\":21780:21790   */\n      gt\n        /* \"#utility.yul\":21777:21813   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":21793:21811   */\n      tag_520\n      tag_317\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":21777:21813   */\n    tag_519:\n        /* \"#utility.yul\":21629:21820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21826:21924   */\n    tag_318:\n        /* \"#utility.yul\":21877:21883   */\n      0x00\n        /* \"#utility.yul\":21911:21916   */\n      dup2\n        /* \"#utility.yul\":21905:21917   */\n      mload\n        /* \"#utility.yul\":21895:21917   */\n      swap1\n      pop\n        /* \"#utility.yul\":21826:21924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21930:22098   */\n    tag_319:\n        /* \"#utility.yul\":22013:22024   */\n      0x00\n        /* \"#utility.yul\":22047:22053   */\n      dup3\n        /* \"#utility.yul\":22042:22045   */\n      dup3\n        /* \"#utility.yul\":22035:22054   */\n      mstore\n        /* \"#utility.yul\":22087:22091   */\n      0x20\n        /* \"#utility.yul\":22082:22085   */\n      dup3\n        /* \"#utility.yul\":22078:22092   */\n      add\n        /* \"#utility.yul\":22063:22092   */\n      swap1\n      pop\n        /* \"#utility.yul\":21930:22098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22104:22477   */\n    tag_320:\n        /* \"#utility.yul\":22190:22193   */\n      0x00\n        /* \"#utility.yul\":22218:22256   */\n      tag_524\n        /* \"#utility.yul\":22250:22255   */\n      dup3\n        /* \"#utility.yul\":22218:22256   */\n      tag_318\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":22272:22342   */\n      tag_525\n        /* \"#utility.yul\":22335:22341   */\n      dup2\n        /* \"#utility.yul\":22330:22333   */\n      dup6\n        /* \"#utility.yul\":22272:22342   */\n      tag_319\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":22265:22342   */\n      swap4\n      pop\n        /* \"#utility.yul\":22351:22416   */\n      tag_526\n        /* \"#utility.yul\":22409:22415   */\n      dup2\n        /* \"#utility.yul\":22404:22407   */\n      dup6\n        /* \"#utility.yul\":22397:22401   */\n      0x20\n        /* \"#utility.yul\":22390:22395   */\n      dup7\n        /* \"#utility.yul\":22386:22402   */\n      add\n        /* \"#utility.yul\":22351:22416   */\n      tag_274\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":22441:22470   */\n      tag_527\n        /* \"#utility.yul\":22463:22469   */\n      dup2\n        /* \"#utility.yul\":22441:22470   */\n      tag_275\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":22436:22439   */\n      dup5\n        /* \"#utility.yul\":22432:22471   */\n      add\n        /* \"#utility.yul\":22425:22471   */\n      swap2\n      pop\n        /* \"#utility.yul\":22194:22477   */\n      pop\n        /* \"#utility.yul\":22104:22477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22483:23123   */\n    tag_228:\n        /* \"#utility.yul\":22678:22682   */\n      0x00\n        /* \"#utility.yul\":22716:22719   */\n      0x80\n        /* \"#utility.yul\":22705:22714   */\n      dup3\n        /* \"#utility.yul\":22701:22720   */\n      add\n        /* \"#utility.yul\":22693:22720   */\n      swap1\n      pop\n        /* \"#utility.yul\":22730:22801   */\n      tag_529\n        /* \"#utility.yul\":22798:22799   */\n      0x00\n        /* \"#utility.yul\":22787:22796   */\n      dup4\n        /* \"#utility.yul\":22783:22800   */\n      add\n        /* \"#utility.yul\":22774:22780   */\n      dup8\n        /* \"#utility.yul\":22730:22801   */\n      tag_282\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":22811:22883   */\n      tag_530\n        /* \"#utility.yul\":22879:22881   */\n      0x20\n        /* \"#utility.yul\":22868:22877   */\n      dup4\n        /* \"#utility.yul\":22864:22882   */\n      add\n        /* \"#utility.yul\":22855:22861   */\n      dup7\n        /* \"#utility.yul\":22811:22883   */\n      tag_282\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":22893:22965   */\n      tag_531\n        /* \"#utility.yul\":22961:22963   */\n      0x40\n        /* \"#utility.yul\":22950:22959   */\n      dup4\n        /* \"#utility.yul\":22946:22964   */\n      add\n        /* \"#utility.yul\":22937:22943   */\n      dup6\n        /* \"#utility.yul\":22893:22965   */\n      tag_285\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":23012:23021   */\n      dup2\n        /* \"#utility.yul\":23006:23010   */\n      dup2\n        /* \"#utility.yul\":23002:23022   */\n      sub\n        /* \"#utility.yul\":22997:22999   */\n      0x60\n        /* \"#utility.yul\":22986:22995   */\n      dup4\n        /* \"#utility.yul\":22982:23000   */\n      add\n        /* \"#utility.yul\":22975:23023   */\n      mstore\n        /* \"#utility.yul\":23040:23116   */\n      tag_532\n        /* \"#utility.yul\":23111:23115   */\n      dup2\n        /* \"#utility.yul\":23102:23108   */\n      dup5\n        /* \"#utility.yul\":23040:23116   */\n      tag_320\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":23032:23116   */\n      swap1\n      pop\n        /* \"#utility.yul\":22483:23123   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23129:23270   */\n    tag_321:\n        /* \"#utility.yul\":23185:23190   */\n      0x00\n        /* \"#utility.yul\":23216:23222   */\n      dup2\n        /* \"#utility.yul\":23210:23223   */\n      mload\n        /* \"#utility.yul\":23201:23223   */\n      swap1\n      pop\n        /* \"#utility.yul\":23232:23264   */\n      tag_534\n        /* \"#utility.yul\":23258:23263   */\n      dup2\n        /* \"#utility.yul\":23232:23264   */\n      tag_268\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":23129:23270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23276:23625   */\n    tag_231:\n        /* \"#utility.yul\":23345:23351   */\n      0x00\n        /* \"#utility.yul\":23394:23396   */\n      0x20\n        /* \"#utility.yul\":23382:23391   */\n      dup3\n        /* \"#utility.yul\":23373:23380   */\n      dup5\n        /* \"#utility.yul\":23369:23392   */\n      sub\n        /* \"#utility.yul\":23365:23397   */\n      slt\n        /* \"#utility.yul\":23362:23481   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":23400:23479   */\n      tag_537\n      tag_265\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":23362:23481   */\n    tag_536:\n        /* \"#utility.yul\":23520:23521   */\n      0x00\n        /* \"#utility.yul\":23545:23608   */\n      tag_538\n        /* \"#utility.yul\":23600:23607   */\n      dup5\n        /* \"#utility.yul\":23591:23597   */\n      dup3\n        /* \"#utility.yul\":23580:23589   */\n      dup6\n        /* \"#utility.yul\":23576:23598   */\n      add\n        /* \"#utility.yul\":23545:23608   */\n      tag_321\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":23535:23608   */\n      swap2\n      pop\n        /* \"#utility.yul\":23491:23618   */\n      pop\n        /* \"#utility.yul\":23276:23625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220daf03df298e84f044f0c2679c7813b872a5090c0daec9b95248c60839a9d6a9c64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_283": {
									"entryPoint": null,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 87,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 100,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8467:15",
										"nodeType": "YulBlock",
										"src": "0:8467:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "423:28:15",
													"nodeType": "YulBlock",
													"src": "423:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:15",
																		"nodeType": "YulLiteral",
																		"src": "440:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:15",
																		"nodeType": "YulLiteral",
																		"src": "443:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:15"
																},
																"nativeSrc": "433:12:15",
																"nodeType": "YulFunctionCall",
																"src": "433:12:15"
															},
															"nativeSrc": "433:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:15"
											},
											{
												"body": {
													"nativeSrc": "546:28:15",
													"nodeType": "YulBlock",
													"src": "546:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:15",
																		"nodeType": "YulLiteral",
																		"src": "563:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:15",
																		"nodeType": "YulLiteral",
																		"src": "566:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:15"
																},
																"nativeSrc": "556:12:15",
																"nodeType": "YulFunctionCall",
																"src": "556:12:15"
															},
															"nativeSrc": "556:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:15"
											},
											{
												"body": {
													"nativeSrc": "628:54:15",
													"nodeType": "YulBlock",
													"src": "628:54:15",
													"statements": [
														{
															"nativeSrc": "638:38:15",
															"nodeType": "YulAssignment",
															"src": "638:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:15",
																				"nodeType": "YulLiteral",
																				"src": "663:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:15"
																		},
																		"nativeSrc": "652:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:15",
																				"nodeType": "YulLiteral",
																				"src": "672:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:15"
																		},
																		"nativeSrc": "668:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:15"
																},
																"nativeSrc": "648:28:15",
																"nodeType": "YulFunctionCall",
																"src": "648:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:15",
														"nodeType": "YulTypedName",
														"src": "611:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:15",
														"nodeType": "YulTypedName",
														"src": "621:6:15",
														"type": ""
													}
												],
												"src": "580:102:15"
											},
											{
												"body": {
													"nativeSrc": "716:152:15",
													"nodeType": "YulBlock",
													"src": "716:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:15",
																		"nodeType": "YulLiteral",
																		"src": "733:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:15",
																		"nodeType": "YulLiteral",
																		"src": "736:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:15"
																},
																"nativeSrc": "726:88:15",
																"nodeType": "YulFunctionCall",
																"src": "726:88:15"
															},
															"nativeSrc": "726:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:15",
																		"nodeType": "YulLiteral",
																		"src": "830:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:15",
																		"nodeType": "YulLiteral",
																		"src": "833:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:15"
																},
																"nativeSrc": "823:15:15",
																"nodeType": "YulFunctionCall",
																"src": "823:15:15"
															},
															"nativeSrc": "823:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:15",
																		"nodeType": "YulLiteral",
																		"src": "854:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:15",
																		"nodeType": "YulLiteral",
																		"src": "857:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:15"
																},
																"nativeSrc": "847:15:15",
																"nodeType": "YulFunctionCall",
																"src": "847:15:15"
															},
															"nativeSrc": "847:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:15"
											},
											{
												"body": {
													"nativeSrc": "917:238:15",
													"nodeType": "YulBlock",
													"src": "917:238:15",
													"statements": [
														{
															"nativeSrc": "927:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:15"
																		},
																		"nativeSrc": "957:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:15"
																},
																"nativeSrc": "945:40:15",
																"nodeType": "YulFunctionCall",
																"src": "945:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:15",
																	"nodeType": "YulTypedName",
																	"src": "931:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:15",
																"nodeType": "YulBlock",
																"src": "1096:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:15"
																			},
																			"nativeSrc": "1098:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:15"
																		},
																		"nativeSrc": "1098:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:15",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:15"
																		},
																		"nativeSrc": "1036:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:15"
																		},
																		"nativeSrc": "1072:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:15"
																},
																"nativeSrc": "1033:62:15",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:15"
															},
															"nativeSrc": "1030:88:15",
															"nodeType": "YulIf",
															"src": "1030:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:15"
																},
																"nativeSrc": "1127:22:15",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:15"
															},
															"nativeSrc": "1127:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:15",
														"nodeType": "YulTypedName",
														"src": "903:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:15",
														"nodeType": "YulTypedName",
														"src": "911:4:15",
														"type": ""
													}
												],
												"src": "874:281:15"
											},
											{
												"body": {
													"nativeSrc": "1202:88:15",
													"nodeType": "YulBlock",
													"src": "1202:88:15",
													"statements": [
														{
															"nativeSrc": "1212:30:15",
															"nodeType": "YulAssignment",
															"src": "1212:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:15"
																},
																"nativeSrc": "1222:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:15"
																},
																"nativeSrc": "1251:33:15",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:15"
															},
															"nativeSrc": "1251:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:15",
														"nodeType": "YulTypedName",
														"src": "1186:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:15",
														"nodeType": "YulTypedName",
														"src": "1195:6:15",
														"type": ""
													}
												],
												"src": "1161:129:15"
											},
											{
												"body": {
													"nativeSrc": "1363:241:15",
													"nodeType": "YulBlock",
													"src": "1363:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:15",
																"nodeType": "YulBlock",
																"src": "1468:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:15"
																			},
																			"nativeSrc": "1470:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:15"
																		},
																		"nativeSrc": "1470:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:15",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:15"
																},
																"nativeSrc": "1437:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:15"
															},
															"nativeSrc": "1434:56:15",
															"nodeType": "YulIf",
															"src": "1434:56:15"
														},
														{
															"nativeSrc": "1500:37:15",
															"nodeType": "YulAssignment",
															"src": "1500:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:15"
																},
																"nativeSrc": "1508:29:15",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:15"
																}
															]
														},
														{
															"nativeSrc": "1574:23:15",
															"nodeType": "YulAssignment",
															"src": "1574:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:15"
																},
																"nativeSrc": "1582:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:15",
														"nodeType": "YulTypedName",
														"src": "1347:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:15",
														"nodeType": "YulTypedName",
														"src": "1358:4:15",
														"type": ""
													}
												],
												"src": "1296:308:15"
											},
											{
												"body": {
													"nativeSrc": "1672:77:15",
													"nodeType": "YulBlock",
													"src": "1672:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:15"
																},
																"nativeSrc": "1683:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:15"
															},
															"nativeSrc": "1683:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:15"
																		},
																		"nativeSrc": "1722:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:15"
																},
																"nativeSrc": "1715:27:15",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:15"
															},
															"nativeSrc": "1715:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:15",
														"nodeType": "YulTypedName",
														"src": "1654:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:15",
														"nodeType": "YulTypedName",
														"src": "1659:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:15",
														"nodeType": "YulTypedName",
														"src": "1664:6:15",
														"type": ""
													}
												],
												"src": "1610:139:15"
											},
											{
												"body": {
													"nativeSrc": "1850:339:15",
													"nodeType": "YulBlock",
													"src": "1850:339:15",
													"statements": [
														{
															"nativeSrc": "1860:75:15",
															"nodeType": "YulAssignment",
															"src": "1860:75:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:15",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:15"
																		},
																		"nativeSrc": "1885:49:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:15"
																},
																"nativeSrc": "1869:66:15",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:15"
																},
																"nativeSrc": "1944:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:15"
															},
															"nativeSrc": "1944:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:15"
														},
														{
															"nativeSrc": "1974:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:15"
																},
																"nativeSrc": "1985:16:15",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:15",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:15",
																"nodeType": "YulBlock",
																"src": "2039:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:15"
																			},
																			"nativeSrc": "2041:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:15"
																		},
																		"nativeSrc": "2041:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:15"
																		},
																		"nativeSrc": "2016:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:15"
																},
																"nativeSrc": "2013:25:15",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:15"
															},
															"nativeSrc": "2010:112:15",
															"nodeType": "YulIf",
															"src": "2010:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:15"
																},
																"nativeSrc": "2131:52:15",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:15"
															},
															"nativeSrc": "2131:52:15",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:15",
														"nodeType": "YulTypedName",
														"src": "1823:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:15",
														"nodeType": "YulTypedName",
														"src": "1828:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:15",
														"nodeType": "YulTypedName",
														"src": "1836:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:15",
														"nodeType": "YulTypedName",
														"src": "1844:5:15",
														"type": ""
													}
												],
												"src": "1755:434:15"
											},
											{
												"body": {
													"nativeSrc": "2282:282:15",
													"nodeType": "YulBlock",
													"src": "2282:282:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:15",
																"nodeType": "YulBlock",
																"src": "2331:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:15"
																			},
																			"nativeSrc": "2333:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:15"
																		},
																		"nativeSrc": "2333:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:15"
																				},
																				"nativeSrc": "2306:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:15"
																		},
																		"nativeSrc": "2302:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:15"
																},
																"nativeSrc": "2295:35:15",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:15"
															},
															"nativeSrc": "2292:122:15",
															"nodeType": "YulIf",
															"src": "2292:122:15"
														},
														{
															"nativeSrc": "2423:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:15"
																},
																"nativeSrc": "2437:13:15",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:15",
															"nodeType": "YulAssignment",
															"src": "2459:99:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:15"
																		},
																		"nativeSrc": "2527:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:15"
																},
																"nativeSrc": "2468:90:15",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:15",
														"nodeType": "YulTypedName",
														"src": "2260:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:15",
														"nodeType": "YulTypedName",
														"src": "2268:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:15",
														"nodeType": "YulTypedName",
														"src": "2276:5:15",
														"type": ""
													}
												],
												"src": "2209:355:15"
											},
											{
												"body": {
													"nativeSrc": "2684:739:15",
													"nodeType": "YulBlock",
													"src": "2684:739:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2730:83:15",
																"nodeType": "YulBlock",
																"src": "2730:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2732:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2732:77:15"
																			},
																			"nativeSrc": "2732:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2732:79:15"
																		},
																		"nativeSrc": "2732:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2705:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2705:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2701:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:15"
																		},
																		"nativeSrc": "2701:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2697:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:15"
																},
																"nativeSrc": "2697:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2697:32:15"
															},
															"nativeSrc": "2694:119:15",
															"nodeType": "YulIf",
															"src": "2694:119:15"
														},
														{
															"nativeSrc": "2823:291:15",
															"nodeType": "YulBlock",
															"src": "2823:291:15",
															"statements": [
																{
																	"nativeSrc": "2838:38:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:38:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2862:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2862:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2873:1:15",
																						"nodeType": "YulLiteral",
																						"src": "2873:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2858:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:15"
																				},
																				"nativeSrc": "2858:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2858:17:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2852:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "2852:5:15"
																		},
																		"nativeSrc": "2852:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:24:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2923:83:15",
																		"nodeType": "YulBlock",
																		"src": "2923:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2925:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "2925:77:15"
																					},
																					"nativeSrc": "2925:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2925:79:15"
																				},
																				"nativeSrc": "2925:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "2925:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2895:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:18:15",
																				"nodeType": "YulLiteral",
																				"src": "2903:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2892:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2892:2:15"
																		},
																		"nativeSrc": "2892:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:30:15"
																	},
																	"nativeSrc": "2889:117:15",
																	"nodeType": "YulIf",
																	"src": "2889:117:15"
																},
																{
																	"nativeSrc": "3020:84:15",
																	"nodeType": "YulAssignment",
																	"src": "3020:84:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:15"
																				},
																				"nativeSrc": "3072:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3030:41:15",
																			"nodeType": "YulIdentifier",
																			"src": "3030:41:15"
																		},
																		"nativeSrc": "3030:74:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3020:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3124:292:15",
															"nodeType": "YulBlock",
															"src": "3124:292:15",
															"statements": [
																{
																	"nativeSrc": "3139:39:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3139:39:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3163:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3163:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:2:15",
																						"nodeType": "YulLiteral",
																						"src": "3174:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3159:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:15"
																				},
																				"nativeSrc": "3159:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:18:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3153:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "3153:5:15"
																		},
																		"nativeSrc": "3153:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:25:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3143:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3143:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3225:83:15",
																		"nodeType": "YulBlock",
																		"src": "3225:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3227:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "3227:77:15"
																					},
																					"nativeSrc": "3227:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3227:79:15"
																				},
																				"nativeSrc": "3227:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "3227:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3197:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3197:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:18:15",
																				"nodeType": "YulLiteral",
																				"src": "3205:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3194:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3194:2:15"
																		},
																		"nativeSrc": "3194:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:30:15"
																	},
																	"nativeSrc": "3191:117:15",
																	"nodeType": "YulIf",
																	"src": "3191:117:15"
																},
																{
																	"nativeSrc": "3322:84:15",
																	"nodeType": "YulAssignment",
																	"src": "3322:84:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3378:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3378:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3389:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3389:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3374:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:15"
																				},
																				"nativeSrc": "3374:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3332:41:15",
																			"nodeType": "YulIdentifier",
																			"src": "3332:41:15"
																		},
																		"nativeSrc": "3332:74:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:74:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3322:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:853:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2646:9:15",
														"nodeType": "YulTypedName",
														"src": "2646:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2657:7:15",
														"nodeType": "YulTypedName",
														"src": "2657:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2669:6:15",
														"nodeType": "YulTypedName",
														"src": "2669:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2677:6:15",
														"nodeType": "YulTypedName",
														"src": "2677:6:15",
														"type": ""
													}
												],
												"src": "2570:853:15"
											},
											{
												"body": {
													"nativeSrc": "3488:40:15",
													"nodeType": "YulBlock",
													"src": "3488:40:15",
													"statements": [
														{
															"nativeSrc": "3499:22:15",
															"nodeType": "YulAssignment",
															"src": "3499:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3515:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3515:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3509:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:15"
																},
																"nativeSrc": "3509:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3499:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3429:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:15",
														"nodeType": "YulTypedName",
														"src": "3471:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3481:6:15",
														"nodeType": "YulTypedName",
														"src": "3481:6:15",
														"type": ""
													}
												],
												"src": "3429:99:15"
											},
											{
												"body": {
													"nativeSrc": "3562:152:15",
													"nodeType": "YulBlock",
													"src": "3562:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:77:15",
																		"nodeType": "YulLiteral",
																		"src": "3582:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:15"
																},
																"nativeSrc": "3572:88:15",
																"nodeType": "YulFunctionCall",
																"src": "3572:88:15"
															},
															"nativeSrc": "3572:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "3572:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3676:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3676:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:15"
																},
																"nativeSrc": "3669:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3669:15:15"
															},
															"nativeSrc": "3669:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3669:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3700:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3703:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3693:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:15"
																},
																"nativeSrc": "3693:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:15"
															},
															"nativeSrc": "3693:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3693:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3534:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:180:15"
											},
											{
												"body": {
													"nativeSrc": "3771:269:15",
													"nodeType": "YulBlock",
													"src": "3771:269:15",
													"statements": [
														{
															"nativeSrc": "3781:22:15",
															"nodeType": "YulAssignment",
															"src": "3781:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3795:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3791:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:15"
																},
																"nativeSrc": "3791:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3791:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3781:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:15"
																}
															]
														},
														{
															"nativeSrc": "3812:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3812:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3842:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3838:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:15"
																},
																"nativeSrc": "3838:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3816:18:15",
																	"nodeType": "YulTypedName",
																	"src": "3816:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3889:51:15",
																"nodeType": "YulBlock",
																"src": "3889:51:15",
																"statements": [
																	{
																		"nativeSrc": "3903:27:15",
																		"nodeType": "YulAssignment",
																		"src": "3903:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3917:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "3917:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3925:4:15",
																					"nodeType": "YulLiteral",
																					"src": "3925:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3913:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:15"
																			},
																			"nativeSrc": "3913:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3913:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3903:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3869:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "3869:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3862:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:15"
																},
																"nativeSrc": "3862:26:15",
																"nodeType": "YulFunctionCall",
																"src": "3862:26:15"
															},
															"nativeSrc": "3859:81:15",
															"nodeType": "YulIf",
															"src": "3859:81:15"
														},
														{
															"body": {
																"nativeSrc": "3992:42:15",
																"nodeType": "YulBlock",
																"src": "3992:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4006:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4006:16:15"
																			},
																			"nativeSrc": "4006:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:18:15"
																		},
																		"nativeSrc": "4006:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3956:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "3956:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3979:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3979:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3976:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3976:2:15"
																		},
																		"nativeSrc": "3976:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3953:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:15"
																},
																"nativeSrc": "3953:38:15",
																"nodeType": "YulFunctionCall",
																"src": "3953:38:15"
															},
															"nativeSrc": "3950:84:15",
															"nodeType": "YulIf",
															"src": "3950:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3720:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3755:4:15",
														"nodeType": "YulTypedName",
														"src": "3755:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3764:6:15",
														"nodeType": "YulTypedName",
														"src": "3764:6:15",
														"type": ""
													}
												],
												"src": "3720:320:15"
											},
											{
												"body": {
													"nativeSrc": "4100:87:15",
													"nodeType": "YulBlock",
													"src": "4100:87:15",
													"statements": [
														{
															"nativeSrc": "4110:11:15",
															"nodeType": "YulAssignment",
															"src": "4110:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "4118:3:15",
																"nodeType": "YulIdentifier",
																"src": "4118:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4110:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4138:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4141:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:15"
																},
																"nativeSrc": "4131:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4131:14:15"
															},
															"nativeSrc": "4131:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "4131:14:15"
														},
														{
															"nativeSrc": "4154:26:15",
															"nodeType": "YulAssignment",
															"src": "4154:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4172:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4162:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "4162:9:15"
																},
																"nativeSrc": "4162:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4162:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4154:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4046:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4087:3:15",
														"nodeType": "YulTypedName",
														"src": "4087:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4095:4:15",
														"nodeType": "YulTypedName",
														"src": "4095:4:15",
														"type": ""
													}
												],
												"src": "4046:141:15"
											},
											{
												"body": {
													"nativeSrc": "4237:49:15",
													"nodeType": "YulBlock",
													"src": "4237:49:15",
													"statements": [
														{
															"nativeSrc": "4247:33:15",
															"nodeType": "YulAssignment",
															"src": "4247:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4265:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4272:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4272:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:15"
																		},
																		"nativeSrc": "4261:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4257:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:15"
																},
																"nativeSrc": "4257:23:15",
																"nodeType": "YulFunctionCall",
																"src": "4257:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4247:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4193:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:15",
														"nodeType": "YulTypedName",
														"src": "4220:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4230:6:15",
														"nodeType": "YulTypedName",
														"src": "4230:6:15",
														"type": ""
													}
												],
												"src": "4193:93:15"
											},
											{
												"body": {
													"nativeSrc": "4345:54:15",
													"nodeType": "YulBlock",
													"src": "4345:54:15",
													"statements": [
														{
															"nativeSrc": "4355:37:15",
															"nodeType": "YulAssignment",
															"src": "4355:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4380:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4380:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4386:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4386:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4376:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:15"
																},
																"nativeSrc": "4376:16:15",
																"nodeType": "YulFunctionCall",
																"src": "4376:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4355:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "4355:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4292:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4320:4:15",
														"nodeType": "YulTypedName",
														"src": "4320:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4326:5:15",
														"nodeType": "YulTypedName",
														"src": "4326:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4336:8:15",
														"nodeType": "YulTypedName",
														"src": "4336:8:15",
														"type": ""
													}
												],
												"src": "4292:107:15"
											},
											{
												"body": {
													"nativeSrc": "4481:317:15",
													"nodeType": "YulBlock",
													"src": "4481:317:15",
													"statements": [
														{
															"nativeSrc": "4491:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4512:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "4512:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4508:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:15"
																},
																"nativeSrc": "4508:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4495:9:15",
																	"nodeType": "YulTypedName",
																	"src": "4495:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4535:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4566:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:66:15",
																		"nodeType": "YulLiteral",
																		"src": "4577:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4547:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4547:18:15"
																},
																"nativeSrc": "4547:97:15",
																"nodeType": "YulFunctionCall",
																"src": "4547:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4539:4:15",
																	"nodeType": "YulTypedName",
																	"src": "4539:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:51:15",
															"nodeType": "YulAssignment",
															"src": "4653:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4684:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4695:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "4695:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4665:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4665:18:15"
																},
																"nativeSrc": "4665:39:15",
																"nodeType": "YulFunctionCall",
																"src": "4665:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4653:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "4653:8:15"
																}
															]
														},
														{
															"nativeSrc": "4713:30:15",
															"nodeType": "YulAssignment",
															"src": "4713:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4726:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4726:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4737:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "4737:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4733:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:15"
																		},
																		"nativeSrc": "4733:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:15"
																},
																"nativeSrc": "4722:21:15",
																"nodeType": "YulFunctionCall",
																"src": "4722:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4713:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4713:5:15"
																}
															]
														},
														{
															"nativeSrc": "4752:40:15",
															"nodeType": "YulAssignment",
															"src": "4752:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4765:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4765:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4776:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "4776:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4786:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:15"
																		},
																		"nativeSrc": "4772:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:15"
																},
																"nativeSrc": "4762:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4762:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4752:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4405:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:15",
														"nodeType": "YulTypedName",
														"src": "4442:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4449:10:15",
														"nodeType": "YulTypedName",
														"src": "4449:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4461:8:15",
														"nodeType": "YulTypedName",
														"src": "4461:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4474:6:15",
														"nodeType": "YulTypedName",
														"src": "4474:6:15",
														"type": ""
													}
												],
												"src": "4405:393:15"
											},
											{
												"body": {
													"nativeSrc": "4849:32:15",
													"nodeType": "YulBlock",
													"src": "4849:32:15",
													"statements": [
														{
															"nativeSrc": "4859:16:15",
															"nodeType": "YulAssignment",
															"src": "4859:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "4870:5:15",
																"nodeType": "YulIdentifier",
																"src": "4870:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4859:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "4859:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4804:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:15",
														"nodeType": "YulTypedName",
														"src": "4831:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4841:7:15",
														"nodeType": "YulTypedName",
														"src": "4841:7:15",
														"type": ""
													}
												],
												"src": "4804:77:15"
											},
											{
												"body": {
													"nativeSrc": "4919:28:15",
													"nodeType": "YulBlock",
													"src": "4919:28:15",
													"statements": [
														{
															"nativeSrc": "4929:12:15",
															"nodeType": "YulAssignment",
															"src": "4929:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "4936:5:15",
																"nodeType": "YulIdentifier",
																"src": "4936:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4929:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4887:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:15",
														"nodeType": "YulTypedName",
														"src": "4905:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4915:3:15",
														"nodeType": "YulTypedName",
														"src": "4915:3:15",
														"type": ""
													}
												],
												"src": "4887:60:15"
											},
											{
												"body": {
													"nativeSrc": "5013:82:15",
													"nodeType": "YulBlock",
													"src": "5013:82:15",
													"statements": [
														{
															"nativeSrc": "5023:66:15",
															"nodeType": "YulAssignment",
															"src": "5023:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5081:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5081:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5063:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "5063:17:15"
																				},
																				"nativeSrc": "5063:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5054:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "5054:8:15"
																		},
																		"nativeSrc": "5054:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5036:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "5036:17:15"
																},
																"nativeSrc": "5036:53:15",
																"nodeType": "YulFunctionCall",
																"src": "5036:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5023:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "5023:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4953:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4993:5:15",
														"nodeType": "YulTypedName",
														"src": "4993:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5003:9:15",
														"nodeType": "YulTypedName",
														"src": "5003:9:15",
														"type": ""
													}
												],
												"src": "4953:142:15"
											},
											{
												"body": {
													"nativeSrc": "5148:28:15",
													"nodeType": "YulBlock",
													"src": "5148:28:15",
													"statements": [
														{
															"nativeSrc": "5158:12:15",
															"nodeType": "YulAssignment",
															"src": "5158:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "5165:5:15",
																"nodeType": "YulIdentifier",
																"src": "5165:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5158:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5101:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:15",
														"nodeType": "YulTypedName",
														"src": "5134:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5144:3:15",
														"nodeType": "YulTypedName",
														"src": "5144:3:15",
														"type": ""
													}
												],
												"src": "5101:75:15"
											},
											{
												"body": {
													"nativeSrc": "5258:193:15",
													"nodeType": "YulBlock",
													"src": "5258:193:15",
													"statements": [
														{
															"nativeSrc": "5268:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5323:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "5323:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5292:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "5292:30:15"
																},
																"nativeSrc": "5292:39:15",
																"nodeType": "YulFunctionCall",
																"src": "5292:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5272:16:15",
																	"nodeType": "YulTypedName",
																	"src": "5272:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5347:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5387:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "5387:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5381:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "5381:5:15"
																				},
																				"nativeSrc": "5381:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5394:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5394:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5426:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "5426:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5402:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "5402:23:15"
																				},
																				"nativeSrc": "5402:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5353:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "5353:27:15"
																		},
																		"nativeSrc": "5353:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5340:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:15"
																},
																"nativeSrc": "5340:105:15",
																"nodeType": "YulFunctionCall",
																"src": "5340:105:15"
															},
															"nativeSrc": "5340:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "5340:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5182:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5235:4:15",
														"nodeType": "YulTypedName",
														"src": "5235:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5241:6:15",
														"nodeType": "YulTypedName",
														"src": "5241:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5249:7:15",
														"nodeType": "YulTypedName",
														"src": "5249:7:15",
														"type": ""
													}
												],
												"src": "5182:269:15"
											},
											{
												"body": {
													"nativeSrc": "5506:24:15",
													"nodeType": "YulBlock",
													"src": "5506:24:15",
													"statements": [
														{
															"nativeSrc": "5516:8:15",
															"nodeType": "YulAssignment",
															"src": "5516:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5523:1:15",
																"nodeType": "YulLiteral",
																"src": "5523:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5516:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5457:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5502:3:15",
														"nodeType": "YulTypedName",
														"src": "5502:3:15",
														"type": ""
													}
												],
												"src": "5457:73:15"
											},
											{
												"body": {
													"nativeSrc": "5589:136:15",
													"nodeType": "YulBlock",
													"src": "5589:136:15",
													"statements": [
														{
															"nativeSrc": "5599:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5613:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "5613:30:15"
																},
																"nativeSrc": "5613:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5613:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5603:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5603:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5698:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5712:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5654:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:15"
																},
																"nativeSrc": "5654:65:15",
																"nodeType": "YulFunctionCall",
																"src": "5654:65:15"
															},
															"nativeSrc": "5654:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "5654:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5536:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5575:4:15",
														"nodeType": "YulTypedName",
														"src": "5575:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5581:6:15",
														"nodeType": "YulTypedName",
														"src": "5581:6:15",
														"type": ""
													}
												],
												"src": "5536:189:15"
											},
											{
												"body": {
													"nativeSrc": "5781:136:15",
													"nodeType": "YulBlock",
													"src": "5781:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5848:63:15",
																"nodeType": "YulBlock",
																"src": "5848:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5892:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "5892:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5899:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5899:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5862:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "5862:29:15"
																			},
																			"nativeSrc": "5862:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:39:15"
																		},
																		"nativeSrc": "5862:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5801:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5808:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5798:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5798:2:15"
																},
																"nativeSrc": "5798:14:15",
																"nodeType": "YulFunctionCall",
																"src": "5798:14:15"
															},
															"nativeSrc": "5791:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5813:26:15",
																"nodeType": "YulBlock",
																"src": "5813:26:15",
																"statements": [
																	{
																		"nativeSrc": "5815:22:15",
																		"nodeType": "YulAssignment",
																		"src": "5815:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5828:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "5828:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5835:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5824:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:15"
																			},
																			"nativeSrc": "5824:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5815:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5795:2:15",
																"nodeType": "YulBlock",
																"src": "5795:2:15",
																"statements": []
															},
															"src": "5791:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5731:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5769:5:15",
														"nodeType": "YulTypedName",
														"src": "5769:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:15",
														"nodeType": "YulTypedName",
														"src": "5776:3:15",
														"type": ""
													}
												],
												"src": "5731:186:15"
											},
											{
												"body": {
													"nativeSrc": "6002:464:15",
													"nodeType": "YulBlock",
													"src": "6002:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6028:431:15",
																"nodeType": "YulBlock",
																"src": "6028:431:15",
																"statements": [
																	{
																		"nativeSrc": "6042:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6042:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6090:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "6090:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6058:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "6058:31:15"
																			},
																			"nativeSrc": "6058:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6046:8:15",
																				"nodeType": "YulTypedName",
																				"src": "6046:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6109:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6109:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6132:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "6132:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6160:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "6160:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6142:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "6142:17:15"
																					},
																					"nativeSrc": "6142:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6142:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6128:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:15"
																			},
																			"nativeSrc": "6128:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6128:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6113:11:15",
																				"nodeType": "YulTypedName",
																				"src": "6113:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6329:27:15",
																			"nodeType": "YulBlock",
																			"src": "6329:27:15",
																			"statements": [
																				{
																					"nativeSrc": "6331:23:15",
																					"nodeType": "YulAssignment",
																					"src": "6331:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6346:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "6346:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6331:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "6331:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6313:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "6313:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6325:2:15",
																					"nodeType": "YulLiteral",
																					"src": "6325:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6310:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "6310:2:15"
																			},
																			"nativeSrc": "6310:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:15"
																		},
																		"nativeSrc": "6307:49:15",
																		"nodeType": "YulIf",
																		"src": "6307:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6398:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "6398:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6415:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "6415:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6443:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "6443:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6425:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "6425:17:15"
																							},
																							"nativeSrc": "6425:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "6425:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6411:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "6411:3:15"
																					},
																					"nativeSrc": "6411:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6411:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6369:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "6369:28:15"
																			},
																			"nativeSrc": "6369:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:80:15"
																		},
																		"nativeSrc": "6369:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6019:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6016:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6016:2:15"
																},
																"nativeSrc": "6016:11:15",
																"nodeType": "YulFunctionCall",
																"src": "6016:11:15"
															},
															"nativeSrc": "6013:446:15",
															"nodeType": "YulIf",
															"src": "6013:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5923:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5978:5:15",
														"nodeType": "YulTypedName",
														"src": "5978:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5985:3:15",
														"nodeType": "YulTypedName",
														"src": "5985:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5990:10:15",
														"nodeType": "YulTypedName",
														"src": "5990:10:15",
														"type": ""
													}
												],
												"src": "5923:543:15"
											},
											{
												"body": {
													"nativeSrc": "6535:54:15",
													"nodeType": "YulBlock",
													"src": "6535:54:15",
													"statements": [
														{
															"nativeSrc": "6545:37:15",
															"nodeType": "YulAssignment",
															"src": "6545:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6570:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6570:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6576:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6576:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6566:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:15"
																},
																"nativeSrc": "6566:16:15",
																"nodeType": "YulFunctionCall",
																"src": "6566:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6545:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "6545:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6472:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6510:4:15",
														"nodeType": "YulTypedName",
														"src": "6510:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6516:5:15",
														"nodeType": "YulTypedName",
														"src": "6516:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6526:8:15",
														"nodeType": "YulTypedName",
														"src": "6526:8:15",
														"type": ""
													}
												],
												"src": "6472:117:15"
											},
											{
												"body": {
													"nativeSrc": "6646:118:15",
													"nodeType": "YulBlock",
													"src": "6646:118:15",
													"statements": [
														{
															"nativeSrc": "6656:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6656:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6705:1:15",
																						"nodeType": "YulLiteral",
																						"src": "6705:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6708:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "6708:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6701:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:15"
																				},
																				"nativeSrc": "6701:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6720:1:15",
																						"nodeType": "YulLiteral",
																						"src": "6720:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6716:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:15"
																				},
																				"nativeSrc": "6716:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6672:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "6672:28:15"
																		},
																		"nativeSrc": "6672:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6668:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6668:3:15"
																},
																"nativeSrc": "6668:56:15",
																"nodeType": "YulFunctionCall",
																"src": "6668:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6660:4:15",
																	"nodeType": "YulTypedName",
																	"src": "6660:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6733:25:15",
															"nodeType": "YulAssignment",
															"src": "6733:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6747:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6747:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6753:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6753:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6743:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:15"
																},
																"nativeSrc": "6743:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6743:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6733:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6595:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6623:4:15",
														"nodeType": "YulTypedName",
														"src": "6623:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6629:5:15",
														"nodeType": "YulTypedName",
														"src": "6629:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6639:6:15",
														"nodeType": "YulTypedName",
														"src": "6639:6:15",
														"type": ""
													}
												],
												"src": "6595:169:15"
											},
											{
												"body": {
													"nativeSrc": "6850:214:15",
													"nodeType": "YulBlock",
													"src": "6850:214:15",
													"statements": [
														{
															"nativeSrc": "6983:37:15",
															"nodeType": "YulAssignment",
															"src": "6983:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7010:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7016:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6991:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:15"
																},
																"nativeSrc": "6991:29:15",
																"nodeType": "YulFunctionCall",
																"src": "6991:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6983:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:15"
																}
															]
														},
														{
															"nativeSrc": "7029:29:15",
															"nodeType": "YulAssignment",
															"src": "7029:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7040:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7040:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7050:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7050:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7053:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7053:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7046:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:15"
																		},
																		"nativeSrc": "7046:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7037:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:15"
																},
																"nativeSrc": "7037:21:15",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7029:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7029:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6769:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6831:4:15",
														"nodeType": "YulTypedName",
														"src": "6831:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6837:3:15",
														"nodeType": "YulTypedName",
														"src": "6837:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6845:4:15",
														"nodeType": "YulTypedName",
														"src": "6845:4:15",
														"type": ""
													}
												],
												"src": "6769:295:15"
											},
											{
												"body": {
													"nativeSrc": "7161:1303:15",
													"nodeType": "YulBlock",
													"src": "7161:1303:15",
													"statements": [
														{
															"nativeSrc": "7172:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7172:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7219:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7186:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "7186:32:15"
																},
																"nativeSrc": "7186:37:15",
																"nodeType": "YulFunctionCall",
																"src": "7186:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7176:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7176:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7308:22:15",
																"nodeType": "YulBlock",
																"src": "7308:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7310:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7310:16:15"
																			},
																			"nativeSrc": "7310:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:18:15"
																		},
																		"nativeSrc": "7310:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7280:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:18:15",
																		"nodeType": "YulLiteral",
																		"src": "7288:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7277:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7277:2:15"
																},
																"nativeSrc": "7277:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7277:30:15"
															},
															"nativeSrc": "7274:56:15",
															"nodeType": "YulIf",
															"src": "7274:56:15"
														},
														{
															"nativeSrc": "7340:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7340:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7386:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7380:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "7380:5:15"
																		},
																		"nativeSrc": "7380:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7354:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "7354:25:15"
																},
																"nativeSrc": "7354:38:15",
																"nodeType": "YulFunctionCall",
																"src": "7354:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7344:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7344:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7485:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7485:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7491:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7499:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7439:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "7439:45:15"
																},
																"nativeSrc": "7439:67:15",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:15"
															},
															"nativeSrc": "7439:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:15"
														},
														{
															"nativeSrc": "7516:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "7533:1:15",
																"nodeType": "YulLiteral",
																"src": "7533:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7520:9:15",
																	"nodeType": "YulTypedName",
																	"src": "7520:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:17:15",
															"nodeType": "YulAssignment",
															"src": "7544:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "7557:4:15",
																"nodeType": "YulLiteral",
																"src": "7557:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7544:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "7544:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7608:611:15",
																		"nodeType": "YulBlock",
																		"src": "7608:611:15",
																		"statements": [
																			{
																				"nativeSrc": "7622:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7622:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7641:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "7641:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7653:4:15",
																									"nodeType": "YulLiteral",
																									"src": "7653:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7649:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "7649:3:15"
																							},
																							"nativeSrc": "7649:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "7649:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7637:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "7637:3:15"
																					},
																					"nativeSrc": "7637:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7637:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7626:7:15",
																						"nodeType": "YulTypedName",
																						"src": "7626:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7673:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7673:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7719:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "7719:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7687:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "7687:31:15"
																					},
																					"nativeSrc": "7687:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7687:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7677:6:15",
																						"nodeType": "YulTypedName",
																						"src": "7677:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7737:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7737:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7746:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7741:1:15",
																						"nodeType": "YulTypedName",
																						"src": "7741:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7805:163:15",
																					"nodeType": "YulBlock",
																					"src": "7805:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7830:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "7830:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7848:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "7848:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7853:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "7853:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7844:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "7844:3:15"
																												},
																												"nativeSrc": "7844:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "7844:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7838:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "7838:5:15"
																										},
																										"nativeSrc": "7838:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "7838:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7823:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "7823:6:15"
																								},
																								"nativeSrc": "7823:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "7823:42:15"
																							},
																							"nativeSrc": "7823:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "7823:42:15"
																						},
																						{
																							"nativeSrc": "7882:24:15",
																							"nodeType": "YulAssignment",
																							"src": "7882:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7896:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "7896:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:1:15",
																										"nodeType": "YulLiteral",
																										"src": "7904:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7892:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "7892:3:15"
																								},
																								"nativeSrc": "7892:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "7892:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7882:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "7882:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7923:31:15",
																							"nodeType": "YulAssignment",
																							"src": "7923:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7940:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "7940:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7951:2:15",
																										"nodeType": "YulLiteral",
																										"src": "7951:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7936:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "7936:3:15"
																								},
																								"nativeSrc": "7936:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "7936:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7923:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "7923:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7771:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "7771:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7774:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "7774:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7768:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "7768:2:15"
																					},
																					"nativeSrc": "7768:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:14:15"
																				},
																				"nativeSrc": "7760:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7783:21:15",
																					"nodeType": "YulBlock",
																					"src": "7783:21:15",
																					"statements": [
																						{
																							"nativeSrc": "7785:17:15",
																							"nodeType": "YulAssignment",
																							"src": "7785:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7794:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "7794:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7797:4:15",
																										"nodeType": "YulLiteral",
																										"src": "7797:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7790:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "7790:3:15"
																								},
																								"nativeSrc": "7790:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "7790:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7785:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "7785:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7764:3:15",
																					"nodeType": "YulBlock",
																					"src": "7764:3:15",
																					"statements": []
																				},
																				"src": "7760:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "8004:156:15",
																					"nodeType": "YulBlock",
																					"src": "8004:156:15",
																					"statements": [
																						{
																							"nativeSrc": "8022:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8022:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8049:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "8049:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8054:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "8054:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8045:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "8045:3:15"
																										},
																										"nativeSrc": "8045:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8045:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8039:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8039:5:15"
																								},
																								"nativeSrc": "8039:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8039:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8026:9:15",
																									"nodeType": "YulTypedName",
																									"src": "8026:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8089:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "8089:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8116:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "8116:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8131:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "8131:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8139:4:15",
																														"nodeType": "YulLiteral",
																														"src": "8139:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8127:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "8127:3:15"
																												},
																												"nativeSrc": "8127:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "8127:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8097:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "8097:18:15"
																										},
																										"nativeSrc": "8097:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8097:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8082:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "8082:6:15"
																								},
																								"nativeSrc": "8082:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8082:64:15"
																							},
																							"nativeSrc": "8082:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "8082:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7987:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "7987:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7996:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "7996:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7984:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "7984:2:15"
																					},
																					"nativeSrc": "7984:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:19:15"
																				},
																				"nativeSrc": "7981:179:15",
																				"nodeType": "YulIf",
																				"src": "7981:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8180:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "8180:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8194:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "8194:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8202:1:15",
																											"nodeType": "YulLiteral",
																											"src": "8202:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8190:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "8190:3:15"
																									},
																									"nativeSrc": "8190:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "8190:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8206:1:15",
																									"nodeType": "YulLiteral",
																									"src": "8206:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8186:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "8186:3:15"
																							},
																							"nativeSrc": "8186:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "8186:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8173:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:15"
																					},
																					"nativeSrc": "8173:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8173:36:15"
																				},
																				"nativeSrc": "8173:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8173:36:15"
																			}
																		]
																	},
																	"nativeSrc": "7601:618:15",
																	"nodeType": "YulCase",
																	"src": "7601:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7606:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8236:222:15",
																		"nodeType": "YulBlock",
																		"src": "8236:222:15",
																		"statements": [
																			{
																				"nativeSrc": "8250:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8250:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8263:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8263:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8254:5:15",
																						"nodeType": "YulTypedName",
																						"src": "8254:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8287:67:15",
																					"nodeType": "YulBlock",
																					"src": "8287:67:15",
																					"statements": [
																						{
																							"nativeSrc": "8305:35:15",
																							"nodeType": "YulAssignment",
																							"src": "8305:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8324:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "8324:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8329:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "8329:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8320:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "8320:3:15"
																										},
																										"nativeSrc": "8320:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8320:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8314:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8314:5:15"
																								},
																								"nativeSrc": "8314:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8314:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8305:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8305:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8280:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "8280:6:15"
																				},
																				"nativeSrc": "8277:77:15",
																				"nodeType": "YulIf",
																				"src": "8277:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8374:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "8374:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8433:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8433:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8440:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "8440:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8380:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "8380:52:15"
																							},
																							"nativeSrc": "8380:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "8380:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8367:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8367:6:15"
																					},
																					"nativeSrc": "8367:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:81:15"
																				},
																				"nativeSrc": "8367:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8367:81:15"
																			}
																		]
																	},
																	"nativeSrc": "8228:230:15",
																	"nodeType": "YulCase",
																	"src": "8228:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7581:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7589:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7578:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:15"
																},
																"nativeSrc": "7578:14:15",
																"nodeType": "YulFunctionCall",
																"src": "7578:14:15"
															},
															"nativeSrc": "7571:887:15",
															"nodeType": "YulSwitch",
															"src": "7571:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7069:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7150:4:15",
														"nodeType": "YulTypedName",
														"src": "7150:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7156:3:15",
														"nodeType": "YulTypedName",
														"src": "7156:3:15",
														"type": ""
													}
												],
												"src": "7069:1395:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051612703380380612703833981810160405281019061003191906101a4565b815f908161003f919061042a565b50806001908161004f919061042a565b5050506104f9565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100b682610070565b810181811067ffffffffffffffff821117156100d5576100d4610080565b5b80604052505050565b5f6100e7610057565b90506100f382826100ad565b919050565b5f67ffffffffffffffff82111561011257610111610080565b5b61011b82610070565b9050602081019050919050565b8281835e5f83830152505050565b5f610148610143846100f8565b6100de565b9050828152602081018484840111156101645761016361006c565b5b61016f848285610128565b509392505050565b5f82601f83011261018b5761018a610068565b5b815161019b848260208601610136565b91505092915050565b5f5f604083850312156101ba576101b9610060565b5b5f83015167ffffffffffffffff8111156101d7576101d6610064565b5b6101e385828601610177565b925050602083015167ffffffffffffffff81111561020457610203610064565b5b61021085828601610177565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061026857607f821691505b60208210810361027b5761027a610224565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102a2565b6102e786836102a2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61032b610326610321846102ff565b610308565b6102ff565b9050919050565b5f819050919050565b61034483610311565b61035861035082610332565b8484546102ae565b825550505050565b5f5f905090565b61036f610360565b61037a81848461033b565b505050565b5b8181101561039d576103925f82610367565b600181019050610380565b5050565b601f8211156103e2576103b381610281565b6103bc84610293565b810160208510156103cb578190505b6103df6103d785610293565b83018261037f565b50505b505050565b5f82821c905092915050565b5f6104025f19846008026103e7565b1980831691505092915050565b5f61041a83836103f3565b9150826002028217905092915050565b6104338261021a565b67ffffffffffffffff81111561044c5761044b610080565b5b6104568254610251565b6104618282856103a1565b5f60209050601f831160018114610492575f8415610480578287015190505b61048a858261040f565b8655506104f1565b601f1984166104a086610281565b5f5b828110156104c7578489015182556001820191506020850194506020810190506104a2565b868310156104e457848901516104e0601f8916826103f3565b8355505b6001600288020188555050505b505050505050565b6121fd806105065f395ff3fe608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c80636352211e1161008a578063a22cb46511610064578063a22cb46514610221578063b88d4fde1461023d578063c87b56dd14610259578063e985e9c514610289576100cd565b80636352211e146101a357806370a08231146101d357806395d89b4114610203576100cd565b806301ffc9a7146100d157806306fdde0314610101578063081812fc1461011f578063095ea7b31461014f57806323b872dd1461016b57806342842e0e14610187575b5f5ffd5b6100eb60048036038101906100e691906115bf565b6102b9565b6040516100f89190611604565b60405180910390f35b61010961039a565b604051610116919061168d565b60405180910390f35b610139600480360381019061013491906116e0565b610429565b604051610146919061174a565b60405180910390f35b6101696004803603810190610164919061178d565b61046b565b005b610185600480360381019061018091906117cb565b610581565b005b6101a1600480360381019061019c91906117cb565b6105e1565b005b6101bd60048036038101906101b891906116e0565b610600565b6040516101ca919061174a565b60405180910390f35b6101ed60048036038101906101e8919061181b565b610684565b6040516101fa9190611855565b60405180910390f35b61020b610738565b604051610218919061168d565b60405180910390f35b61023b60048036038101906102369190611898565b6107c8565b005b61025760048036038101906102529190611a02565b6107de565b005b610273600480360381019061026e91906116e0565b610840565b604051610280919061168d565b60405180910390f35b6102a3600480360381019061029e9190611a82565b6108a5565b6040516102b09190611604565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610393575061039282610933565b5b9050919050565b60605f80546103a890611aed565b80601f01602080910402602001604051908101604052809291908181526020018280546103d490611aed565b801561041f5780601f106103f65761010080835404028352916020019161041f565b820191905f5260205f20905b81548152906001019060200180831161040257829003601f168201915b5050505050905090565b5f6104338261099c565b60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f61047582610600565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90611b8d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105046109e7565b73ffffffffffffffffffffffffffffffffffffffff16148061053357506105328161052d6109e7565b6108a5565b5b610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056990611c1b565b60405180910390fd5b61057c83836109ee565b505050565b61059261058c6109e7565b82610aa4565b6105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c890611ca9565b60405180910390fd5b6105dc838383610b38565b505050565b6105fb83838360405180602001604052805f8152506107de565b505050565b5f5f61060b83610e24565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290611d11565b60405180910390fd5b80915050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea90611d9f565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461074790611aed565b80601f016020809104026020016040519081016040528092919081815260200182805461077390611aed565b80156107be5780601f10610795576101008083540402835291602001916107be565b820191905f5260205f20905b8154815290600101906020018083116107a157829003601f168201915b5050505050905090565b6107da6107d36109e7565b8383610e5d565b5050565b6107ef6107e96109e7565b83610aa4565b61082e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082590611ca9565b60405180910390fd5b61083a84848484610fc4565b50505050565b606061084b8261099c565b5f610854611020565b90505f8151116108725760405180602001604052805f81525061089d565b8061087c84611036565b60405160200161088d929190611df7565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109a581611100565b6109e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109db90611d11565b60405180910390fd5b50565b5f33905090565b8160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a5e83610600565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f5f610aaf83610600565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610af15750610af081856108a5565b5b80610b2f57508373ffffffffffffffffffffffffffffffffffffffff16610b1784610429565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b5882610600565b73ffffffffffffffffffffffffffffffffffffffff1614610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba590611e8a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1390611f18565b60405180910390fd5b610c298383836001611140565b8273ffffffffffffffffffffffffffffffffffffffff16610c4982610600565b73ffffffffffffffffffffffffffffffffffffffff1614610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9690611e8a565b60405180910390fd5b60045f8281526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282540392505081905550600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508160025f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e1f838383600161125e565b505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec290611f80565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fb79190611604565b60405180910390a3505050565b610fcf848484610b38565b610fdb84848484611264565b61101a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110119061200e565b60405180910390fd5b50505050565b606060405180602001604052805f815250905090565b60605f6001611044846113e6565b0190505f8167ffffffffffffffff811115611062576110616118de565b5b6040519080825280601f01601f1916602001820160405280156110945781602001600182028036833780820191505090505b5090505f82602001820190505b6001156110f5578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816110ea576110e961202c565b5b0494505f85036110a1575b819350505050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff1661112183610e24565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6001811115611258575f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146111d0578060035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546111c89190612086565b925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611257578060035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461124f91906120b9565b925050819055505b5b50505050565b50505050565b5f6112848473ffffffffffffffffffffffffffffffffffffffff16611537565b156113d9578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026112ad6109e7565b8786866040518563ffffffff1660e01b81526004016112cf949392919061213e565b6020604051808303815f875af192505050801561130a57506040513d601f19601f82011682018060405250810190611307919061219c565b60015b611389573d805f8114611338576040519150601f19603f3d011682016040523d82523d5f602084013e61133d565b606091505b505f815103611381576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113789061200e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506113de565b600190505b949350505050565b5f5f5f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611442577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114385761143761202c565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061147f576d04ee2d6d415b85acef810000000083816114755761147461202c565b5b0492506020810190505b662386f26fc1000083106114ae57662386f26fc1000083816114a4576114a361202c565b5b0492506010810190505b6305f5e10083106114d7576305f5e10083816114cd576114cc61202c565b5b0492506008810190505b61271083106114fc5761271083816114f2576114f161202c565b5b0492506004810190505b6064831061151f57606483816115155761151461202c565b5b0492506002810190505b600a831061152e576001810190505b80915050919050565b5f5f8273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61159e8161156a565b81146115a8575f5ffd5b50565b5f813590506115b981611595565b92915050565b5f602082840312156115d4576115d3611562565b5b5f6115e1848285016115ab565b91505092915050565b5f8115159050919050565b6115fe816115ea565b82525050565b5f6020820190506116175f8301846115f5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61165f8261161d565b6116698185611627565b9350611679818560208601611637565b61168281611645565b840191505092915050565b5f6020820190508181035f8301526116a58184611655565b905092915050565b5f819050919050565b6116bf816116ad565b81146116c9575f5ffd5b50565b5f813590506116da816116b6565b92915050565b5f602082840312156116f5576116f4611562565b5b5f611702848285016116cc565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117348261170b565b9050919050565b6117448161172a565b82525050565b5f60208201905061175d5f83018461173b565b92915050565b61176c8161172a565b8114611776575f5ffd5b50565b5f8135905061178781611763565b92915050565b5f5f604083850312156117a3576117a2611562565b5b5f6117b085828601611779565b92505060206117c1858286016116cc565b9150509250929050565b5f5f5f606084860312156117e2576117e1611562565b5b5f6117ef86828701611779565b935050602061180086828701611779565b9250506040611811868287016116cc565b9150509250925092565b5f602082840312156118305761182f611562565b5b5f61183d84828501611779565b91505092915050565b61184f816116ad565b82525050565b5f6020820190506118685f830184611846565b92915050565b611877816115ea565b8114611881575f5ffd5b50565b5f813590506118928161186e565b92915050565b5f5f604083850312156118ae576118ad611562565b5b5f6118bb85828601611779565b92505060206118cc85828601611884565b9150509250929050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61191482611645565b810181811067ffffffffffffffff82111715611933576119326118de565b5b80604052505050565b5f611945611559565b9050611951828261190b565b919050565b5f67ffffffffffffffff8211156119705761196f6118de565b5b61197982611645565b9050602081019050919050565b828183375f83830152505050565b5f6119a66119a184611956565b61193c565b9050828152602081018484840111156119c2576119c16118da565b5b6119cd848285611986565b509392505050565b5f82601f8301126119e9576119e86118d6565b5b81356119f9848260208601611994565b91505092915050565b5f5f5f5f60808587031215611a1a57611a19611562565b5b5f611a2787828801611779565b9450506020611a3887828801611779565b9350506040611a49878288016116cc565b925050606085013567ffffffffffffffff811115611a6a57611a69611566565b5b611a76878288016119d5565b91505092959194509250565b5f5f60408385031215611a9857611a97611562565b5b5f611aa585828601611779565b9250506020611ab685828601611779565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611b0457607f821691505b602082108103611b1757611b16611ac0565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f611b77602183611627565b9150611b8282611b1d565b604082019050919050565b5f6020820190508181035f830152611ba481611b6b565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f5f8201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b5f611c05603d83611627565b9150611c1082611bab565b604082019050919050565b5f6020820190508181035f830152611c3281611bf9565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e655f8201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b5f611c93602d83611627565b9150611c9e82611c39565b604082019050919050565b5f6020820190508181035f830152611cc081611c87565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e20494400000000000000005f82015250565b5f611cfb601883611627565b9150611d0682611cc7565b602082019050919050565b5f6020820190508181035f830152611d2881611cef565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f7420612076615f8201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b5f611d89602983611627565b9150611d9482611d2f565b604082019050919050565b5f6020820190508181035f830152611db681611d7d565b9050919050565b5f81905092915050565b5f611dd18261161d565b611ddb8185611dbd565b9350611deb818560208601611637565b80840191505092915050565b5f611e028285611dc7565b9150611e0e8284611dc7565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f7272656374205f8201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b5f611e74602583611627565b9150611e7f82611e1a565b604082019050919050565b5f6020820190508181035f830152611ea181611e68565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611f02602483611627565b9150611f0d82611ea8565b604082019050919050565b5f6020820190508181035f830152611f2f81611ef6565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c6572000000000000005f82015250565b5f611f6a601983611627565b9150611f7582611f36565b602082019050919050565b5f6020820190508181035f830152611f9781611f5e565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e2045524337323152655f8201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b5f611ff8603283611627565b915061200382611f9e565b604082019050919050565b5f6020820190508181035f83015261202581611fec565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612090826116ad565b915061209b836116ad565b92508282039050818111156120b3576120b2612059565b5b92915050565b5f6120c3826116ad565b91506120ce836116ad565b92508282019050808211156120e6576120e5612059565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f612110826120ec565b61211a81856120f6565b935061212a818560208601611637565b61213381611645565b840191505092915050565b5f6080820190506121515f83018761173b565b61215e602083018661173b565b61216b6040830185611846565b818103606083015261217d8184612106565b905095945050505050565b5f8151905061219681611595565b92915050565b5f602082840312156121b1576121b0611562565b5b5f6121be84828501612188565b9150509291505056fea2646970667358221220daf03df298e84f044f0c2679c7813b872a5090c0daec9b95248c60839a9d6a9c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2703 CODESIZE SUB DUP1 PUSH2 0x2703 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1A4 JUMP JUMPDEST DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x3F SWAP2 SWAP1 PUSH2 0x42A JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x42A JUMP JUMPDEST POP POP POP PUSH2 0x4F9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xB6 DUP3 PUSH2 0x70 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD4 PUSH2 0x80 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE7 PUSH2 0x57 JUMP JUMPDEST SWAP1 POP PUSH2 0xF3 DUP3 DUP3 PUSH2 0xAD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x112 JUMPI PUSH2 0x111 PUSH2 0x80 JUMP JUMPDEST JUMPDEST PUSH2 0x11B DUP3 PUSH2 0x70 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x148 PUSH2 0x143 DUP5 PUSH2 0xF8 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x164 JUMPI PUSH2 0x163 PUSH2 0x6C JUMP JUMPDEST JUMPDEST PUSH2 0x16F DUP5 DUP3 DUP6 PUSH2 0x128 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18B JUMPI PUSH2 0x18A PUSH2 0x68 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x19B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x136 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA JUMPI PUSH2 0x1B9 PUSH2 0x60 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D7 JUMPI PUSH2 0x1D6 PUSH2 0x64 JUMP JUMPDEST JUMPDEST PUSH2 0x1E3 DUP6 DUP3 DUP7 ADD PUSH2 0x177 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x204 JUMPI PUSH2 0x203 PUSH2 0x64 JUMP JUMPDEST JUMPDEST PUSH2 0x210 DUP6 DUP3 DUP7 ADD PUSH2 0x177 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x268 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27B JUMPI PUSH2 0x27A PUSH2 0x224 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A2 JUMP JUMPDEST PUSH2 0x2E7 DUP7 DUP4 PUSH2 0x2A2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32B PUSH2 0x326 PUSH2 0x321 DUP5 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x344 DUP4 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x350 DUP3 PUSH2 0x332 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2AE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x36F PUSH2 0x360 JUMP JUMPDEST PUSH2 0x37A DUP2 DUP5 DUP5 PUSH2 0x33B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39D JUMPI PUSH2 0x392 PUSH0 DUP3 PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x380 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E2 JUMPI PUSH2 0x3B3 DUP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x3BC DUP5 PUSH2 0x293 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3CB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3DF PUSH2 0x3D7 DUP6 PUSH2 0x293 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x37F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x402 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x41A DUP4 DUP4 PUSH2 0x3F3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x433 DUP3 PUSH2 0x21A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44C JUMPI PUSH2 0x44B PUSH2 0x80 JUMP JUMPDEST JUMPDEST PUSH2 0x456 DUP3 SLOAD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x461 DUP3 DUP3 DUP6 PUSH2 0x3A1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x492 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x480 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x48A DUP6 DUP3 PUSH2 0x40F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4A0 DUP7 PUSH2 0x281 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4E4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4E0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3F3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x21FD DUP1 PUSH2 0x506 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x289 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1855 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x383 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0x933 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x1AED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x1AED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x402 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x475 DUP3 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x504 PUSH2 0x9E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x533 JUMPI POP PUSH2 0x532 DUP2 PUSH2 0x52D PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST JUMPDEST PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57C DUP4 DUP4 PUSH2 0x9EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x592 PUSH2 0x58C PUSH2 0x9E7 JUMP JUMPDEST DUP3 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DC DUP4 DUP4 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x60B DUP4 PUSH2 0xE24 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EA SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x747 SWAP1 PUSH2 0x1AED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x773 SWAP1 PUSH2 0x1AED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x795 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7DA PUSH2 0x7D3 PUSH2 0x9E7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE5D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x7E9 PUSH2 0x9E7 JUMP JUMPDEST DUP4 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x825 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83A DUP5 DUP5 DUP5 DUP5 PUSH2 0xFC4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x84B DUP3 PUSH2 0x99C JUMP JUMPDEST PUSH0 PUSH2 0x854 PUSH2 0x1020 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x89D JUMP JUMPDEST DUP1 PUSH2 0x87C DUP5 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x88D SWAP3 SWAP2 SWAP1 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A5 DUP2 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DB SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA5E DUP4 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAAF DUP4 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xAF1 JUMPI POP PUSH2 0xAF0 DUP2 DUP6 PUSH2 0x8A5 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB2F JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB17 DUP5 PUSH2 0x429 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB58 DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC13 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC29 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1140 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC49 DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC96 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE1F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x125E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC2 SWAP1 PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFCF DUP5 DUP5 DUP5 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0xFDB DUP5 DUP5 DUP5 DUP5 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x101A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1011 SWAP1 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1044 DUP5 PUSH2 0x13E6 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1062 JUMPI PUSH2 0x1061 PUSH2 0x18DE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1094 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x10F5 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x10EA JUMPI PUSH2 0x10E9 PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x10A1 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1121 DUP4 PUSH2 0xE24 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1258 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D0 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11C8 SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1257 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x124F SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1284 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1537 JUMP JUMPDEST ISZERO PUSH2 0x13D9 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x12AD PUSH2 0x9E7 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x130A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1307 SWAP2 SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1389 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1338 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x133D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1381 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1378 SWAP1 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1442 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1438 JUMPI PUSH2 0x1437 PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x147F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1475 JUMPI PUSH2 0x1474 PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x14AE JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x14A4 JUMPI PUSH2 0x14A3 PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x14D7 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x14CD JUMPI PUSH2 0x14CC PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x14FC JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x14F2 JUMPI PUSH2 0x14F1 PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x151F JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1515 JUMPI PUSH2 0x1514 PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x152E JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x159E DUP2 PUSH2 0x156A JUMP JUMPDEST DUP2 EQ PUSH2 0x15A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B9 DUP2 PUSH2 0x1595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D4 JUMPI PUSH2 0x15D3 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E1 DUP5 DUP3 DUP6 ADD PUSH2 0x15AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FE DUP2 PUSH2 0x15EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1617 PUSH0 DUP4 ADD DUP5 PUSH2 0x15F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x165F DUP3 PUSH2 0x161D JUMP JUMPDEST PUSH2 0x1669 DUP2 DUP6 PUSH2 0x1627 JUMP JUMPDEST SWAP4 POP PUSH2 0x1679 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x1682 DUP2 PUSH2 0x1645 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16A5 DUP2 DUP5 PUSH2 0x1655 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16BF DUP2 PUSH2 0x16AD JUMP JUMPDEST DUP2 EQ PUSH2 0x16C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16DA DUP2 PUSH2 0x16B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F5 JUMPI PUSH2 0x16F4 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1702 DUP5 DUP3 DUP6 ADD PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1734 DUP3 PUSH2 0x170B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1744 DUP2 PUSH2 0x172A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x175D PUSH0 DUP4 ADD DUP5 PUSH2 0x173B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x176C DUP2 PUSH2 0x172A JUMP JUMPDEST DUP2 EQ PUSH2 0x1776 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1787 DUP2 PUSH2 0x1763 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A3 JUMPI PUSH2 0x17A2 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17B0 DUP6 DUP3 DUP7 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17C1 DUP6 DUP3 DUP7 ADD PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E1 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17EF DUP7 DUP3 DUP8 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1800 DUP7 DUP3 DUP8 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1811 DUP7 DUP3 DUP8 ADD PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1830 JUMPI PUSH2 0x182F PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x183D DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x184F DUP2 PUSH2 0x16AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1868 PUSH0 DUP4 ADD DUP5 PUSH2 0x1846 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1877 DUP2 PUSH2 0x15EA JUMP JUMPDEST DUP2 EQ PUSH2 0x1881 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1892 DUP2 PUSH2 0x186E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AE JUMPI PUSH2 0x18AD PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18BB DUP6 DUP3 DUP7 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18CC DUP6 DUP3 DUP7 ADD PUSH2 0x1884 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1914 DUP3 PUSH2 0x1645 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1933 JUMPI PUSH2 0x1932 PUSH2 0x18DE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1945 PUSH2 0x1559 JUMP JUMPDEST SWAP1 POP PUSH2 0x1951 DUP3 DUP3 PUSH2 0x190B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1970 JUMPI PUSH2 0x196F PUSH2 0x18DE JUMP JUMPDEST JUMPDEST PUSH2 0x1979 DUP3 PUSH2 0x1645 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19A6 PUSH2 0x19A1 DUP5 PUSH2 0x1956 JUMP JUMPDEST PUSH2 0x193C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x19C2 JUMPI PUSH2 0x19C1 PUSH2 0x18DA JUMP JUMPDEST JUMPDEST PUSH2 0x19CD DUP5 DUP3 DUP6 PUSH2 0x1986 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19E9 JUMPI PUSH2 0x19E8 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19F9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1994 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A1A JUMPI PUSH2 0x1A19 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A27 DUP8 DUP3 DUP9 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP8 DUP3 DUP9 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1A49 DUP8 DUP3 DUP9 ADD PUSH2 0x16CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A6A JUMPI PUSH2 0x1A69 PUSH2 0x1566 JUMP JUMPDEST JUMPDEST PUSH2 0x1A76 DUP8 DUP3 DUP9 ADD PUSH2 0x19D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A98 JUMPI PUSH2 0x1A97 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AA5 DUP6 DUP3 DUP7 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AB6 DUP6 DUP3 DUP7 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B04 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B17 JUMPI PUSH2 0x1B16 PUSH2 0x1AC0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B77 PUSH1 0x21 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B82 DUP3 PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BA4 DUP2 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C05 PUSH1 0x3D DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C10 DUP3 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C93 PUSH1 0x2D DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9E DUP3 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CC0 DUP2 PUSH2 0x1C87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CFB PUSH1 0x18 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D06 DUP3 PUSH2 0x1CC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D28 DUP2 PUSH2 0x1CEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D89 PUSH1 0x29 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D94 DUP3 PUSH2 0x1D2F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 PUSH2 0x1D7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD1 DUP3 PUSH2 0x161D JUMP JUMPDEST PUSH2 0x1DDB DUP2 DUP6 PUSH2 0x1DBD JUMP JUMPDEST SWAP4 POP PUSH2 0x1DEB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1637 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E02 DUP3 DUP6 PUSH2 0x1DC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E0E DUP3 DUP5 PUSH2 0x1DC7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E74 PUSH1 0x25 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7F DUP3 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EA1 DUP2 PUSH2 0x1E68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F02 PUSH1 0x24 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0D DUP3 PUSH2 0x1EA8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F2F DUP2 PUSH2 0x1EF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6A PUSH1 0x19 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F75 DUP3 PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F97 DUP2 PUSH2 0x1F5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF8 PUSH1 0x32 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x2003 DUP3 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2025 DUP2 PUSH2 0x1FEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2090 DUP3 PUSH2 0x16AD JUMP JUMPDEST SWAP2 POP PUSH2 0x209B DUP4 PUSH2 0x16AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x20B3 JUMPI PUSH2 0x20B2 PUSH2 0x2059 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20C3 DUP3 PUSH2 0x16AD JUMP JUMPDEST SWAP2 POP PUSH2 0x20CE DUP4 PUSH2 0x16AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20E6 JUMPI PUSH2 0x20E5 PUSH2 0x2059 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2110 DUP3 PUSH2 0x20EC JUMP JUMPDEST PUSH2 0x211A DUP2 DUP6 PUSH2 0x20F6 JUMP JUMPDEST SWAP4 POP PUSH2 0x212A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x2133 DUP2 PUSH2 0x1645 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2151 PUSH0 DUP4 ADD DUP8 PUSH2 0x173B JUMP JUMPDEST PUSH2 0x215E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x173B JUMP JUMPDEST PUSH2 0x216B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1846 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x217D DUP2 DUP5 PUSH2 0x2106 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2196 DUP2 PUSH2 0x1595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B1 JUMPI PUSH2 0x21B0 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21BE DUP5 DUP3 DUP6 ADD PUSH2 0x2188 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA CREATE RETURNDATASIZE CALLCODE SWAP9 0xE8 0x4F DIV 0x4F 0xC 0x26 PUSH26 0xC7813B872A5090C0DAEC9B95248C60839A9D6A9C64736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "628:16327:2:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;628:16327;;7:75:15;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:853::-;2669:6;2677;2726:2;2714:9;2705:7;2701:23;2697:32;2694:119;;;2732:79;;:::i;:::-;2694:119;2873:1;2862:9;2858:17;2852:24;2903:18;2895:6;2892:30;2889:117;;;2925:79;;:::i;:::-;2889:117;3030:74;3096:7;3087:6;3076:9;3072:22;3030:74;:::i;:::-;3020:84;;2823:291;3174:2;3163:9;3159:18;3153:25;3205:18;3197:6;3194:30;3191:117;;;3227:79;;:::i;:::-;3191:117;3332:74;3398:7;3389:6;3378:9;3374:22;3332:74;:::i;:::-;3322:84;;3124:292;2570:853;;;;;:::o;3429:99::-;3481:6;3515:5;3509:12;3499:22;;3429:99;;;:::o;3534:180::-;3582:77;3579:1;3572:88;3679:4;3676:1;3669:15;3703:4;3700:1;3693:15;3720:320;3764:6;3801:1;3795:4;3791:12;3781:22;;3848:1;3842:4;3838:12;3869:18;3859:81;;3925:4;3917:6;3913:17;3903:27;;3859:81;3987:2;3979:6;3976:14;3956:18;3953:38;3950:84;;4006:18;;:::i;:::-;3950:84;3771:269;3720:320;;;:::o;4046:141::-;4095:4;4118:3;4110:11;;4141:3;4138:1;4131:14;4175:4;4172:1;4162:18;4154:26;;4046:141;;;:::o;4193:93::-;4230:6;4277:2;4272;4265:5;4261:14;4257:23;4247:33;;4193:93;;;:::o;4292:107::-;4336:8;4386:5;4380:4;4376:16;4355:37;;4292:107;;;;:::o;4405:393::-;4474:6;4524:1;4512:10;4508:18;4547:97;4577:66;4566:9;4547:97;:::i;:::-;4665:39;4695:8;4684:9;4665:39;:::i;:::-;4653:51;;4737:4;4733:9;4726:5;4722:21;4713:30;;4786:4;4776:8;4772:19;4765:5;4762:30;4752:40;;4481:317;;4405:393;;;;;:::o;4804:77::-;4841:7;4870:5;4859:16;;4804:77;;;:::o;4887:60::-;4915:3;4936:5;4929:12;;4887:60;;;:::o;4953:142::-;5003:9;5036:53;5054:34;5063:24;5081:5;5063:24;:::i;:::-;5054:34;:::i;:::-;5036:53;:::i;:::-;5023:66;;4953:142;;;:::o;5101:75::-;5144:3;5165:5;5158:12;;5101:75;;;:::o;5182:269::-;5292:39;5323:7;5292:39;:::i;:::-;5353:91;5402:41;5426:16;5402:41;:::i;:::-;5394:6;5387:4;5381:11;5353:91;:::i;:::-;5347:4;5340:105;5258:193;5182:269;;;:::o;5457:73::-;5502:3;5523:1;5516:8;;5457:73;:::o;5536:189::-;5613:32;;:::i;:::-;5654:65;5712:6;5704;5698:4;5654:65;:::i;:::-;5589:136;5536:189;;:::o;5731:186::-;5791:120;5808:3;5801:5;5798:14;5791:120;;;5862:39;5899:1;5892:5;5862:39;:::i;:::-;5835:1;5828:5;5824:13;5815:22;;5791:120;;;5731:186;;:::o;5923:543::-;6024:2;6019:3;6016:11;6013:446;;;6058:38;6090:5;6058:38;:::i;:::-;6142:29;6160:10;6142:29;:::i;:::-;6132:8;6128:44;6325:2;6313:10;6310:18;6307:49;;;6346:8;6331:23;;6307:49;6369:80;6425:22;6443:3;6425:22;:::i;:::-;6415:8;6411:37;6398:11;6369:80;:::i;:::-;6028:431;;6013:446;5923:543;;;:::o;6472:117::-;6526:8;6576:5;6570:4;6566:16;6545:37;;6472:117;;;;:::o;6595:169::-;6639:6;6672:51;6720:1;6716:6;6708:5;6705:1;6701:13;6672:51;:::i;:::-;6668:56;6753:4;6747;6743:15;6733:25;;6646:118;6595:169;;;;:::o;6769:295::-;6845:4;6991:29;7016:3;7010:4;6991:29;:::i;:::-;6983:37;;7053:3;7050:1;7046:11;7040:4;7037:21;7029:29;;6769:295;;;;:::o;7069:1395::-;7186:37;7219:3;7186:37;:::i;:::-;7288:18;7280:6;7277:30;7274:56;;;7310:18;;:::i;:::-;7274:56;7354:38;7386:4;7380:11;7354:38;:::i;:::-;7439:67;7499:6;7491;7485:4;7439:67;:::i;:::-;7533:1;7557:4;7544:17;;7589:2;7581:6;7578:14;7606:1;7601:618;;;;8263:1;8280:6;8277:77;;;8329:9;8324:3;8320:19;8314:26;8305:35;;8277:77;8380:67;8440:6;8433:5;8380:67;:::i;:::-;8374:4;8367:81;8236:222;7571:887;;7601:618;7653:4;7649:9;7641:6;7637:22;7687:37;7719:4;7687:37;:::i;:::-;7746:1;7760:208;7774:7;7771:1;7768:14;7760:208;;;7853:9;7848:3;7844:19;7838:26;7830:6;7823:42;7904:1;7896:6;7892:14;7882:24;;7951:2;7940:9;7936:18;7923:31;;7797:4;7794:1;7790:12;7785:17;;7760:208;;;7996:6;7987:7;7984:19;7981:179;;;8054:9;8049:3;8045:19;8039:26;8097:48;8139:4;8131:6;8127:17;8116:9;8097:48;:::i;:::-;8089:6;8082:64;8004:156;7981:179;8206:1;8202;8194:6;8190:14;8186:22;8180:4;8173:36;7608:611;;;7571:887;;7161:1303;;;7069:1395;;:::o;628:16327:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1164": {
									"entryPoint": 4702,
									"id": 1164,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_997": {
									"entryPoint": 2542,
									"id": 997,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_434": {
									"entryPoint": 4128,
									"id": 434,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1151": {
									"entryPoint": 4416,
									"id": 1151,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1105": {
									"entryPoint": 4708,
									"id": 1105,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_666": {
									"entryPoint": 4352,
									"id": 666,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_700": {
									"entryPoint": 2724,
									"id": 700,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1698": {
									"entryPoint": 2535,
									"id": 1698,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_648": {
									"entryPoint": 3620,
									"id": 648,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_1043": {
									"entryPoint": 2460,
									"id": 1043,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_635": {
									"entryPoint": 4036,
									"id": 635,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1029": {
									"entryPoint": 3677,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_973": {
									"entryPoint": 2872,
									"id": 973,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_477": {
									"entryPoint": 1131,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_338": {
									"entryPoint": 1668,
									"id": 338,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_495": {
									"entryPoint": 1065,
									"id": 495,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_530": {
									"entryPoint": 2213,
									"id": 530,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1374": {
									"entryPoint": 5431,
									"id": 1374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2695": {
									"entryPoint": 5094,
									"id": 2695,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_376": {
									"entryPoint": 922,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_366": {
									"entryPoint": 1536,
									"id": 366,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_576": {
									"entryPoint": 1505,
									"id": 576,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_606": {
									"entryPoint": 2014,
									"id": 606,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_512": {
									"entryPoint": 1992,
									"id": 512,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1980": {
									"entryPoint": 2355,
									"id": 1980,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_314": {
									"entryPoint": 697,
									"id": 314,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_386": {
									"entryPoint": 1848,
									"id": 386,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1840": {
									"entryPoint": 4150,
									"id": 1840,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_425": {
									"entryPoint": 2112,
									"id": 425,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_557": {
									"entryPoint": 1409,
									"id": 557,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6548,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7671,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8510,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6534,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5687,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 8281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6848,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5478,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af": {
									"entryPoint": 7225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
									"entryPoint": 8094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48": {
									"entryPoint": 7706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4": {
									"entryPoint": 7848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
									"entryPoint": 7990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159": {
									"entryPoint": 7471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f": {
									"entryPoint": 7367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83": {
									"entryPoint": 7083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23628:15",
										"nodeType": "YulBlock",
										"src": "0:23628:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "378:105:15",
													"nodeType": "YulBlock",
													"src": "378:105:15",
													"statements": [
														{
															"nativeSrc": "388:89:15",
															"nodeType": "YulAssignment",
															"src": "388:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:15",
																		"nodeType": "YulLiteral",
																		"src": "410:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:15"
																},
																"nativeSrc": "399:78:15",
																"nodeType": "YulFunctionCall",
																"src": "399:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:15",
														"nodeType": "YulTypedName",
														"src": "360:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:15",
														"nodeType": "YulTypedName",
														"src": "370:7:15",
														"type": ""
													}
												],
												"src": "334:149:15"
											},
											{
												"body": {
													"nativeSrc": "531:78:15",
													"nodeType": "YulBlock",
													"src": "531:78:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:15",
																"nodeType": "YulBlock",
																"src": "587:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:15",
																					"nodeType": "YulLiteral",
																					"src": "596:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:15",
																					"nodeType": "YulLiteral",
																					"src": "599:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:15"
																			},
																			"nativeSrc": "589:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:15"
																		},
																		"nativeSrc": "589:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:15",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:15"
																				},
																				"nativeSrc": "561:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:15"
																		},
																		"nativeSrc": "551:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:15"
																},
																"nativeSrc": "544:42:15",
																"nodeType": "YulFunctionCall",
																"src": "544:42:15"
															},
															"nativeSrc": "541:62:15",
															"nodeType": "YulIf",
															"src": "541:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:15",
														"nodeType": "YulTypedName",
														"src": "524:5:15",
														"type": ""
													}
												],
												"src": "489:120:15"
											},
											{
												"body": {
													"nativeSrc": "666:86:15",
													"nodeType": "YulBlock",
													"src": "666:86:15",
													"statements": [
														{
															"nativeSrc": "676:29:15",
															"nodeType": "YulAssignment",
															"src": "676:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:15"
																},
																"nativeSrc": "685:20:15",
																"nodeType": "YulFunctionCall",
																"src": "685:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:15"
																},
																"nativeSrc": "714:32:15",
																"nodeType": "YulFunctionCall",
																"src": "714:32:15"
															},
															"nativeSrc": "714:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:15",
														"nodeType": "YulTypedName",
														"src": "644:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:15",
														"nodeType": "YulTypedName",
														"src": "652:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:15",
														"nodeType": "YulTypedName",
														"src": "660:5:15",
														"type": ""
													}
												],
												"src": "615:137:15"
											},
											{
												"body": {
													"nativeSrc": "823:262:15",
													"nodeType": "YulBlock",
													"src": "823:262:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:15",
																"nodeType": "YulBlock",
																"src": "869:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:15"
																			},
																			"nativeSrc": "871:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:15"
																		},
																		"nativeSrc": "871:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:15"
																		},
																		"nativeSrc": "840:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:15",
																		"nodeType": "YulLiteral",
																		"src": "865:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:15"
																},
																"nativeSrc": "836:32:15",
																"nodeType": "YulFunctionCall",
																"src": "836:32:15"
															},
															"nativeSrc": "833:119:15",
															"nodeType": "YulIf",
															"src": "833:119:15"
														},
														{
															"nativeSrc": "962:116:15",
															"nodeType": "YulBlock",
															"src": "962:116:15",
															"statements": [
																{
																	"nativeSrc": "977:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:15",
																		"nodeType": "YulLiteral",
																		"src": "991:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:15",
																			"nodeType": "YulTypedName",
																			"src": "981:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:15",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:15"
																				},
																				"nativeSrc": "1036:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:15"
																		},
																		"nativeSrc": "1016:52:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:15",
														"nodeType": "YulTypedName",
														"src": "793:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:15",
														"nodeType": "YulTypedName",
														"src": "804:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:15",
														"nodeType": "YulTypedName",
														"src": "816:6:15",
														"type": ""
													}
												],
												"src": "758:327:15"
											},
											{
												"body": {
													"nativeSrc": "1133:48:15",
													"nodeType": "YulBlock",
													"src": "1133:48:15",
													"statements": [
														{
															"nativeSrc": "1143:32:15",
															"nodeType": "YulAssignment",
															"src": "1143:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:15"
																		},
																		"nativeSrc": "1161:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:15"
																},
																"nativeSrc": "1154:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:15",
														"nodeType": "YulTypedName",
														"src": "1115:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:15",
														"nodeType": "YulTypedName",
														"src": "1125:7:15",
														"type": ""
													}
												],
												"src": "1091:90:15"
											},
											{
												"body": {
													"nativeSrc": "1246:50:15",
													"nodeType": "YulBlock",
													"src": "1246:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:15"
																		},
																		"nativeSrc": "1268:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:15"
																},
																"nativeSrc": "1256:34:15",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:15"
															},
															"nativeSrc": "1256:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:15",
														"nodeType": "YulTypedName",
														"src": "1234:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:15",
														"nodeType": "YulTypedName",
														"src": "1241:3:15",
														"type": ""
													}
												],
												"src": "1187:109:15"
											},
											{
												"body": {
													"nativeSrc": "1394:118:15",
													"nodeType": "YulBlock",
													"src": "1394:118:15",
													"statements": [
														{
															"nativeSrc": "1404:26:15",
															"nodeType": "YulAssignment",
															"src": "1404:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:15"
																},
																"nativeSrc": "1412:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:15"
																		},
																		"nativeSrc": "1487:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:15"
																},
																"nativeSrc": "1440:65:15",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:15"
															},
															"nativeSrc": "1440:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:15",
														"nodeType": "YulTypedName",
														"src": "1366:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:15",
														"nodeType": "YulTypedName",
														"src": "1378:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:15",
														"nodeType": "YulTypedName",
														"src": "1389:4:15",
														"type": ""
													}
												],
												"src": "1302:210:15"
											},
											{
												"body": {
													"nativeSrc": "1577:40:15",
													"nodeType": "YulBlock",
													"src": "1577:40:15",
													"statements": [
														{
															"nativeSrc": "1588:22:15",
															"nodeType": "YulAssignment",
															"src": "1588:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:15"
																},
																"nativeSrc": "1598:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:15",
														"nodeType": "YulTypedName",
														"src": "1560:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:15",
														"nodeType": "YulTypedName",
														"src": "1570:6:15",
														"type": ""
													}
												],
												"src": "1518:99:15"
											},
											{
												"body": {
													"nativeSrc": "1719:73:15",
													"nodeType": "YulBlock",
													"src": "1719:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:15"
																},
																"nativeSrc": "1729:19:15",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:15"
															},
															"nativeSrc": "1729:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:15"
														},
														{
															"nativeSrc": "1757:29:15",
															"nodeType": "YulAssignment",
															"src": "1757:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:15"
																},
																"nativeSrc": "1772:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:15",
														"nodeType": "YulTypedName",
														"src": "1691:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:15",
														"nodeType": "YulTypedName",
														"src": "1696:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:15",
														"nodeType": "YulTypedName",
														"src": "1707:11:15",
														"type": ""
													}
												],
												"src": "1623:169:15"
											},
											{
												"body": {
													"nativeSrc": "1860:77:15",
													"nodeType": "YulBlock",
													"src": "1860:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:15"
																},
																"nativeSrc": "1871:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:15"
															},
															"nativeSrc": "1871:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:15"
																		},
																		"nativeSrc": "1910:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:15"
																},
																"nativeSrc": "1903:27:15",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:15"
															},
															"nativeSrc": "1903:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:15",
														"nodeType": "YulTypedName",
														"src": "1842:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:15",
														"nodeType": "YulTypedName",
														"src": "1847:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:15",
														"nodeType": "YulTypedName",
														"src": "1852:6:15",
														"type": ""
													}
												],
												"src": "1798:139:15"
											},
											{
												"body": {
													"nativeSrc": "1991:54:15",
													"nodeType": "YulBlock",
													"src": "1991:54:15",
													"statements": [
														{
															"nativeSrc": "2001:38:15",
															"nodeType": "YulAssignment",
															"src": "2001:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:15"
																		},
																		"nativeSrc": "2015:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:15"
																		},
																		"nativeSrc": "2031:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:15"
																},
																"nativeSrc": "2011:28:15",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:15",
														"nodeType": "YulTypedName",
														"src": "1974:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:15",
														"nodeType": "YulTypedName",
														"src": "1984:6:15",
														"type": ""
													}
												],
												"src": "1943:102:15"
											},
											{
												"body": {
													"nativeSrc": "2143:285:15",
													"nodeType": "YulBlock",
													"src": "2143:285:15",
													"statements": [
														{
															"nativeSrc": "2153:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:15"
																},
																"nativeSrc": "2167:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:15",
															"nodeType": "YulAssignment",
															"src": "2215:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:15"
																},
																"nativeSrc": "2222:71:15",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:15"
																		},
																		"nativeSrc": "2337:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:15"
																},
																"nativeSrc": "2302:65:15",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:15"
															},
															"nativeSrc": "2302:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:15"
														},
														{
															"nativeSrc": "2376:46:15",
															"nodeType": "YulAssignment",
															"src": "2376:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:15"
																		},
																		"nativeSrc": "2392:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:15"
																},
																"nativeSrc": "2383:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:15",
														"nodeType": "YulTypedName",
														"src": "2124:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:15",
														"nodeType": "YulTypedName",
														"src": "2131:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:15",
														"nodeType": "YulTypedName",
														"src": "2139:3:15",
														"type": ""
													}
												],
												"src": "2051:377:15"
											},
											{
												"body": {
													"nativeSrc": "2552:195:15",
													"nodeType": "YulBlock",
													"src": "2552:195:15",
													"statements": [
														{
															"nativeSrc": "2562:26:15",
															"nodeType": "YulAssignment",
															"src": "2562:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:15"
																},
																"nativeSrc": "2570:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:15"
																		},
																		"nativeSrc": "2605:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:15"
																		},
																		"nativeSrc": "2624:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:15"
																},
																"nativeSrc": "2598:47:15",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:15"
															},
															"nativeSrc": "2598:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:15"
														},
														{
															"nativeSrc": "2654:86:15",
															"nodeType": "YulAssignment",
															"src": "2654:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:15"
																},
																"nativeSrc": "2662:78:15",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:15",
														"nodeType": "YulTypedName",
														"src": "2524:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:15",
														"nodeType": "YulTypedName",
														"src": "2536:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:15",
														"nodeType": "YulTypedName",
														"src": "2547:4:15",
														"type": ""
													}
												],
												"src": "2434:313:15"
											},
											{
												"body": {
													"nativeSrc": "2798:32:15",
													"nodeType": "YulBlock",
													"src": "2798:32:15",
													"statements": [
														{
															"nativeSrc": "2808:16:15",
															"nodeType": "YulAssignment",
															"src": "2808:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:15",
																"nodeType": "YulIdentifier",
																"src": "2819:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:15",
														"nodeType": "YulTypedName",
														"src": "2780:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:15",
														"nodeType": "YulTypedName",
														"src": "2790:7:15",
														"type": ""
													}
												],
												"src": "2753:77:15"
											},
											{
												"body": {
													"nativeSrc": "2879:79:15",
													"nodeType": "YulBlock",
													"src": "2879:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:15",
																"nodeType": "YulBlock",
																"src": "2936:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:15"
																			},
																			"nativeSrc": "2938:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:15"
																		},
																		"nativeSrc": "2938:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:15"
																				},
																				"nativeSrc": "2909:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:15"
																		},
																		"nativeSrc": "2899:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:15"
																},
																"nativeSrc": "2892:43:15",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:15"
															},
															"nativeSrc": "2889:63:15",
															"nodeType": "YulIf",
															"src": "2889:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:15",
														"nodeType": "YulTypedName",
														"src": "2872:5:15",
														"type": ""
													}
												],
												"src": "2836:122:15"
											},
											{
												"body": {
													"nativeSrc": "3016:87:15",
													"nodeType": "YulBlock",
													"src": "3016:87:15",
													"statements": [
														{
															"nativeSrc": "3026:29:15",
															"nodeType": "YulAssignment",
															"src": "3026:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:15"
																},
																"nativeSrc": "3035:20:15",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:15"
																},
																"nativeSrc": "3064:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:15"
															},
															"nativeSrc": "3064:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:15",
														"nodeType": "YulTypedName",
														"src": "2994:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:15",
														"nodeType": "YulTypedName",
														"src": "3002:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:15",
														"nodeType": "YulTypedName",
														"src": "3010:5:15",
														"type": ""
													}
												],
												"src": "2964:139:15"
											},
											{
												"body": {
													"nativeSrc": "3175:263:15",
													"nodeType": "YulBlock",
													"src": "3175:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:15",
																"nodeType": "YulBlock",
																"src": "3221:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:15"
																			},
																			"nativeSrc": "3223:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:15"
																		},
																		"nativeSrc": "3223:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:15"
																		},
																		"nativeSrc": "3192:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:15"
																},
																"nativeSrc": "3188:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:15"
															},
															"nativeSrc": "3185:119:15",
															"nodeType": "YulIf",
															"src": "3185:119:15"
														},
														{
															"nativeSrc": "3314:117:15",
															"nodeType": "YulBlock",
															"src": "3314:117:15",
															"statements": [
																{
																	"nativeSrc": "3329:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:15",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:15"
																				},
																				"nativeSrc": "3389:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:15"
																		},
																		"nativeSrc": "3368:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:15",
														"nodeType": "YulTypedName",
														"src": "3145:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:15",
														"nodeType": "YulTypedName",
														"src": "3156:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:15",
														"nodeType": "YulTypedName",
														"src": "3168:6:15",
														"type": ""
													}
												],
												"src": "3109:329:15"
											},
											{
												"body": {
													"nativeSrc": "3489:81:15",
													"nodeType": "YulBlock",
													"src": "3489:81:15",
													"statements": [
														{
															"nativeSrc": "3499:65:15",
															"nodeType": "YulAssignment",
															"src": "3499:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:15",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:15"
																},
																"nativeSrc": "3510:54:15",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:15",
														"nodeType": "YulTypedName",
														"src": "3471:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:15",
														"nodeType": "YulTypedName",
														"src": "3481:7:15",
														"type": ""
													}
												],
												"src": "3444:126:15"
											},
											{
												"body": {
													"nativeSrc": "3621:51:15",
													"nodeType": "YulBlock",
													"src": "3621:51:15",
													"statements": [
														{
															"nativeSrc": "3631:35:15",
															"nodeType": "YulAssignment",
															"src": "3631:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:15"
																},
																"nativeSrc": "3642:24:15",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:15",
														"nodeType": "YulTypedName",
														"src": "3603:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:15",
														"nodeType": "YulTypedName",
														"src": "3613:7:15",
														"type": ""
													}
												],
												"src": "3576:96:15"
											},
											{
												"body": {
													"nativeSrc": "3743:53:15",
													"nodeType": "YulBlock",
													"src": "3743:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:15"
																		},
																		"nativeSrc": "3765:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:15"
																},
																"nativeSrc": "3753:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:15"
															},
															"nativeSrc": "3753:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:15",
														"nodeType": "YulTypedName",
														"src": "3731:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:15",
														"nodeType": "YulTypedName",
														"src": "3738:3:15",
														"type": ""
													}
												],
												"src": "3678:118:15"
											},
											{
												"body": {
													"nativeSrc": "3900:124:15",
													"nodeType": "YulBlock",
													"src": "3900:124:15",
													"statements": [
														{
															"nativeSrc": "3910:26:15",
															"nodeType": "YulAssignment",
															"src": "3910:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:15"
																},
																"nativeSrc": "3918:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:15"
																		},
																		"nativeSrc": "3999:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:15"
																},
																"nativeSrc": "3946:71:15",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:15"
															},
															"nativeSrc": "3946:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:15",
														"nodeType": "YulTypedName",
														"src": "3872:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:15",
														"nodeType": "YulTypedName",
														"src": "3884:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:15",
														"nodeType": "YulTypedName",
														"src": "3895:4:15",
														"type": ""
													}
												],
												"src": "3802:222:15"
											},
											{
												"body": {
													"nativeSrc": "4073:79:15",
													"nodeType": "YulBlock",
													"src": "4073:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:15",
																"nodeType": "YulBlock",
																"src": "4130:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:15"
																			},
																			"nativeSrc": "4132:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:15"
																		},
																		"nativeSrc": "4132:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:15"
																				},
																				"nativeSrc": "4103:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:15"
																		},
																		"nativeSrc": "4093:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:15"
																},
																"nativeSrc": "4086:43:15",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:15"
															},
															"nativeSrc": "4083:63:15",
															"nodeType": "YulIf",
															"src": "4083:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:15",
														"nodeType": "YulTypedName",
														"src": "4066:5:15",
														"type": ""
													}
												],
												"src": "4030:122:15"
											},
											{
												"body": {
													"nativeSrc": "4210:87:15",
													"nodeType": "YulBlock",
													"src": "4210:87:15",
													"statements": [
														{
															"nativeSrc": "4220:29:15",
															"nodeType": "YulAssignment",
															"src": "4220:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:15"
																},
																"nativeSrc": "4229:20:15",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:15"
																},
																"nativeSrc": "4258:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:15"
															},
															"nativeSrc": "4258:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:15",
														"nodeType": "YulTypedName",
														"src": "4188:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:15",
														"nodeType": "YulTypedName",
														"src": "4196:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:15",
														"nodeType": "YulTypedName",
														"src": "4204:5:15",
														"type": ""
													}
												],
												"src": "4158:139:15"
											},
											{
												"body": {
													"nativeSrc": "4386:391:15",
													"nodeType": "YulBlock",
													"src": "4386:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:15",
																"nodeType": "YulBlock",
																"src": "4432:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:15"
																			},
																			"nativeSrc": "4434:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:15"
																		},
																		"nativeSrc": "4434:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:15"
																		},
																		"nativeSrc": "4403:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:15"
																},
																"nativeSrc": "4399:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:15"
															},
															"nativeSrc": "4396:119:15",
															"nodeType": "YulIf",
															"src": "4396:119:15"
														},
														{
															"nativeSrc": "4525:117:15",
															"nodeType": "YulBlock",
															"src": "4525:117:15",
															"statements": [
																{
																	"nativeSrc": "4540:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:15"
																				},
																				"nativeSrc": "4600:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:15"
																		},
																		"nativeSrc": "4579:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:15",
															"nodeType": "YulBlock",
															"src": "4652:118:15",
															"statements": [
																{
																	"nativeSrc": "4667:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:15"
																				},
																				"nativeSrc": "4728:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:15"
																		},
																		"nativeSrc": "4707:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:15",
														"nodeType": "YulTypedName",
														"src": "4348:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:15",
														"nodeType": "YulTypedName",
														"src": "4359:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:15",
														"nodeType": "YulTypedName",
														"src": "4371:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:15",
														"nodeType": "YulTypedName",
														"src": "4379:6:15",
														"type": ""
													}
												],
												"src": "4303:474:15"
											},
											{
												"body": {
													"nativeSrc": "4883:519:15",
													"nodeType": "YulBlock",
													"src": "4883:519:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:15",
																"nodeType": "YulBlock",
																"src": "4929:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:15"
																			},
																			"nativeSrc": "4931:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:15"
																		},
																		"nativeSrc": "4931:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:15"
																		},
																		"nativeSrc": "4900:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:15"
																},
																"nativeSrc": "4896:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:15"
															},
															"nativeSrc": "4893:119:15",
															"nodeType": "YulIf",
															"src": "4893:119:15"
														},
														{
															"nativeSrc": "5022:117:15",
															"nodeType": "YulBlock",
															"src": "5022:117:15",
															"statements": [
																{
																	"nativeSrc": "5037:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:15"
																				},
																				"nativeSrc": "5097:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:15"
																		},
																		"nativeSrc": "5076:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:15",
															"nodeType": "YulBlock",
															"src": "5149:118:15",
															"statements": [
																{
																	"nativeSrc": "5164:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:15"
																				},
																				"nativeSrc": "5225:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:15"
																		},
																		"nativeSrc": "5204:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:15",
															"nodeType": "YulBlock",
															"src": "5277:118:15",
															"statements": [
																{
																	"nativeSrc": "5292:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:15"
																				},
																				"nativeSrc": "5353:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:15"
																		},
																		"nativeSrc": "5332:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:15",
														"nodeType": "YulTypedName",
														"src": "4837:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:15",
														"nodeType": "YulTypedName",
														"src": "4848:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:15",
														"nodeType": "YulTypedName",
														"src": "4860:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:15",
														"nodeType": "YulTypedName",
														"src": "4868:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:15",
														"nodeType": "YulTypedName",
														"src": "4876:6:15",
														"type": ""
													}
												],
												"src": "4783:619:15"
											},
											{
												"body": {
													"nativeSrc": "5474:263:15",
													"nodeType": "YulBlock",
													"src": "5474:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5520:83:15",
																"nodeType": "YulBlock",
																"src": "5520:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5522:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5522:77:15"
																			},
																			"nativeSrc": "5522:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5522:79:15"
																		},
																		"nativeSrc": "5522:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5522:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5495:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5495:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5504:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5504:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5491:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5491:3:15"
																		},
																		"nativeSrc": "5491:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5491:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5516:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5516:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5487:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:15"
																},
																"nativeSrc": "5487:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5487:32:15"
															},
															"nativeSrc": "5484:119:15",
															"nodeType": "YulIf",
															"src": "5484:119:15"
														},
														{
															"nativeSrc": "5613:117:15",
															"nodeType": "YulBlock",
															"src": "5613:117:15",
															"statements": [
																{
																	"nativeSrc": "5628:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5628:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5642:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5642:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5632:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5632:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5657:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5657:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5692:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5692:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5703:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5703:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5688:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:15"
																				},
																				"nativeSrc": "5688:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5688:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5712:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5712:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5667:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5667:20:15"
																		},
																		"nativeSrc": "5667:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5657:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5657:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5408:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5444:9:15",
														"nodeType": "YulTypedName",
														"src": "5444:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5455:7:15",
														"nodeType": "YulTypedName",
														"src": "5455:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5467:6:15",
														"nodeType": "YulTypedName",
														"src": "5467:6:15",
														"type": ""
													}
												],
												"src": "5408:329:15"
											},
											{
												"body": {
													"nativeSrc": "5808:53:15",
													"nodeType": "YulBlock",
													"src": "5808:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5825:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5825:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5848:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5848:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5830:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "5830:17:15"
																		},
																		"nativeSrc": "5830:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5818:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5818:6:15"
																},
																"nativeSrc": "5818:37:15",
																"nodeType": "YulFunctionCall",
																"src": "5818:37:15"
															},
															"nativeSrc": "5818:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "5818:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5743:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5796:5:15",
														"nodeType": "YulTypedName",
														"src": "5796:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5803:3:15",
														"nodeType": "YulTypedName",
														"src": "5803:3:15",
														"type": ""
													}
												],
												"src": "5743:118:15"
											},
											{
												"body": {
													"nativeSrc": "5965:124:15",
													"nodeType": "YulBlock",
													"src": "5965:124:15",
													"statements": [
														{
															"nativeSrc": "5975:26:15",
															"nodeType": "YulAssignment",
															"src": "5975:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5987:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5987:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5998:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5983:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:15"
																},
																"nativeSrc": "5983:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5983:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5975:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5975:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6055:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6055:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6068:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6079:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6079:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6064:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:15"
																		},
																		"nativeSrc": "6064:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6064:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6011:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "6011:43:15"
																},
																"nativeSrc": "6011:71:15",
																"nodeType": "YulFunctionCall",
																"src": "6011:71:15"
															},
															"nativeSrc": "6011:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "6011:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5867:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5937:9:15",
														"nodeType": "YulTypedName",
														"src": "5937:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5949:6:15",
														"nodeType": "YulTypedName",
														"src": "5949:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5960:4:15",
														"nodeType": "YulTypedName",
														"src": "5960:4:15",
														"type": ""
													}
												],
												"src": "5867:222:15"
											},
											{
												"body": {
													"nativeSrc": "6135:76:15",
													"nodeType": "YulBlock",
													"src": "6135:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6189:16:15",
																"nodeType": "YulBlock",
																"src": "6189:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6198:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6198:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6201:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6201:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6191:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6191:6:15"
																			},
																			"nativeSrc": "6191:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6191:12:15"
																		},
																		"nativeSrc": "6191:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6191:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6158:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6158:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6180:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "6180:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6165:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "6165:14:15"
																				},
																				"nativeSrc": "6165:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6165:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6155:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6155:2:15"
																		},
																		"nativeSrc": "6155:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6148:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:15"
																},
																"nativeSrc": "6148:40:15",
																"nodeType": "YulFunctionCall",
																"src": "6148:40:15"
															},
															"nativeSrc": "6145:60:15",
															"nodeType": "YulIf",
															"src": "6145:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6095:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6128:5:15",
														"nodeType": "YulTypedName",
														"src": "6128:5:15",
														"type": ""
													}
												],
												"src": "6095:116:15"
											},
											{
												"body": {
													"nativeSrc": "6266:84:15",
													"nodeType": "YulBlock",
													"src": "6266:84:15",
													"statements": [
														{
															"nativeSrc": "6276:29:15",
															"nodeType": "YulAssignment",
															"src": "6276:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6298:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6298:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6285:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6285:12:15"
																},
																"nativeSrc": "6285:20:15",
																"nodeType": "YulFunctionCall",
																"src": "6285:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6276:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6276:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6338:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6314:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:15"
																},
																"nativeSrc": "6314:30:15",
																"nodeType": "YulFunctionCall",
																"src": "6314:30:15"
															},
															"nativeSrc": "6314:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6217:133:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6244:6:15",
														"nodeType": "YulTypedName",
														"src": "6244:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6252:3:15",
														"nodeType": "YulTypedName",
														"src": "6252:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6260:5:15",
														"nodeType": "YulTypedName",
														"src": "6260:5:15",
														"type": ""
													}
												],
												"src": "6217:133:15"
											},
											{
												"body": {
													"nativeSrc": "6436:388:15",
													"nodeType": "YulBlock",
													"src": "6436:388:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6482:83:15",
																"nodeType": "YulBlock",
																"src": "6482:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6484:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "6484:77:15"
																			},
																			"nativeSrc": "6484:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6484:79:15"
																		},
																		"nativeSrc": "6484:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6484:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6457:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6457:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6466:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6466:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6453:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6453:3:15"
																		},
																		"nativeSrc": "6453:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6478:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6478:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6449:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6449:3:15"
																},
																"nativeSrc": "6449:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6449:32:15"
															},
															"nativeSrc": "6446:119:15",
															"nodeType": "YulIf",
															"src": "6446:119:15"
														},
														{
															"nativeSrc": "6575:117:15",
															"nodeType": "YulBlock",
															"src": "6575:117:15",
															"statements": [
																{
																	"nativeSrc": "6590:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6590:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6604:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6604:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6594:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6594:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6619:63:15",
																	"nodeType": "YulAssignment",
																	"src": "6619:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6654:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6654:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6665:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6665:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6650:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6650:3:15"
																				},
																				"nativeSrc": "6650:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6650:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6674:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6674:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6629:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "6629:20:15"
																		},
																		"nativeSrc": "6629:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6619:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6619:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6702:115:15",
															"nodeType": "YulBlock",
															"src": "6702:115:15",
															"statements": [
																{
																	"nativeSrc": "6717:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6717:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6731:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6731:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6721:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6721:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6747:60:15",
																	"nodeType": "YulAssignment",
																	"src": "6747:60:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6779:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6790:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6790:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6775:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:15"
																				},
																				"nativeSrc": "6775:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6775:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6799:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6799:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6757:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "6757:17:15"
																		},
																		"nativeSrc": "6757:50:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6757:50:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6747:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6747:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6356:468:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6398:9:15",
														"nodeType": "YulTypedName",
														"src": "6398:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6409:7:15",
														"nodeType": "YulTypedName",
														"src": "6409:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6421:6:15",
														"nodeType": "YulTypedName",
														"src": "6421:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6429:6:15",
														"nodeType": "YulTypedName",
														"src": "6429:6:15",
														"type": ""
													}
												],
												"src": "6356:468:15"
											},
											{
												"body": {
													"nativeSrc": "6919:28:15",
													"nodeType": "YulBlock",
													"src": "6919:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6936:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6936:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6929:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:15"
																},
																"nativeSrc": "6929:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6929:12:15"
															},
															"nativeSrc": "6929:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "6929:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6830:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6830:117:15"
											},
											{
												"body": {
													"nativeSrc": "7042:28:15",
													"nodeType": "YulBlock",
													"src": "7042:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7059:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7059:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7062:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7062:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7052:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:15"
																},
																"nativeSrc": "7052:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7052:12:15"
															},
															"nativeSrc": "7052:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "7052:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6953:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6953:117:15"
											},
											{
												"body": {
													"nativeSrc": "7104:152:15",
													"nodeType": "YulBlock",
													"src": "7104:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7121:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7121:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7124:77:15",
																		"nodeType": "YulLiteral",
																		"src": "7124:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7114:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7114:6:15"
																},
																"nativeSrc": "7114:88:15",
																"nodeType": "YulFunctionCall",
																"src": "7114:88:15"
															},
															"nativeSrc": "7114:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "7114:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7218:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7218:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7221:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7221:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7211:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:15"
																},
																"nativeSrc": "7211:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7211:15:15"
															},
															"nativeSrc": "7211:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7211:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7242:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7242:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7245:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7245:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7235:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:15"
																},
																"nativeSrc": "7235:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7235:15:15"
															},
															"nativeSrc": "7235:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7235:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7076:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7076:180:15"
											},
											{
												"body": {
													"nativeSrc": "7305:238:15",
													"nodeType": "YulBlock",
													"src": "7305:238:15",
													"statements": [
														{
															"nativeSrc": "7315:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7315:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7337:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7337:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7367:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "7367:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7345:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "7345:21:15"
																		},
																		"nativeSrc": "7345:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7345:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7333:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:15"
																},
																"nativeSrc": "7333:40:15",
																"nodeType": "YulFunctionCall",
																"src": "7333:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7319:10:15",
																	"nodeType": "YulTypedName",
																	"src": "7319:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7484:22:15",
																"nodeType": "YulBlock",
																"src": "7484:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7486:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7486:16:15"
																			},
																			"nativeSrc": "7486:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7486:18:15"
																		},
																		"nativeSrc": "7486:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7486:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7427:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "7427:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:18:15",
																				"nodeType": "YulLiteral",
																				"src": "7439:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7424:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7424:2:15"
																		},
																		"nativeSrc": "7424:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7463:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "7463:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7475:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7460:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7460:2:15"
																		},
																		"nativeSrc": "7460:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7460:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7421:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7421:2:15"
																},
																"nativeSrc": "7421:62:15",
																"nodeType": "YulFunctionCall",
																"src": "7421:62:15"
															},
															"nativeSrc": "7418:88:15",
															"nodeType": "YulIf",
															"src": "7418:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7522:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7522:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7526:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "7526:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7515:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:15"
																},
																"nativeSrc": "7515:22:15",
																"nodeType": "YulFunctionCall",
																"src": "7515:22:15"
															},
															"nativeSrc": "7515:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "7515:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7262:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7291:6:15",
														"nodeType": "YulTypedName",
														"src": "7291:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7299:4:15",
														"nodeType": "YulTypedName",
														"src": "7299:4:15",
														"type": ""
													}
												],
												"src": "7262:281:15"
											},
											{
												"body": {
													"nativeSrc": "7590:88:15",
													"nodeType": "YulBlock",
													"src": "7590:88:15",
													"statements": [
														{
															"nativeSrc": "7600:30:15",
															"nodeType": "YulAssignment",
															"src": "7600:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7610:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "7610:18:15"
																},
																"nativeSrc": "7610:20:15",
																"nodeType": "YulFunctionCall",
																"src": "7610:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7600:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7600:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7659:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7659:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7667:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7667:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7639:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "7639:19:15"
																},
																"nativeSrc": "7639:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7639:33:15"
															},
															"nativeSrc": "7639:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "7639:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7549:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7574:4:15",
														"nodeType": "YulTypedName",
														"src": "7574:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7583:6:15",
														"nodeType": "YulTypedName",
														"src": "7583:6:15",
														"type": ""
													}
												],
												"src": "7549:129:15"
											},
											{
												"body": {
													"nativeSrc": "7750:241:15",
													"nodeType": "YulBlock",
													"src": "7750:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7855:22:15",
																"nodeType": "YulBlock",
																"src": "7855:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7857:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7857:16:15"
																			},
																			"nativeSrc": "7857:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7857:18:15"
																		},
																		"nativeSrc": "7857:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7857:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7827:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7827:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7835:18:15",
																		"nodeType": "YulLiteral",
																		"src": "7835:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7824:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7824:2:15"
																},
																"nativeSrc": "7824:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7824:30:15"
															},
															"nativeSrc": "7821:56:15",
															"nodeType": "YulIf",
															"src": "7821:56:15"
														},
														{
															"nativeSrc": "7887:37:15",
															"nodeType": "YulAssignment",
															"src": "7887:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7917:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7895:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "7895:21:15"
																},
																"nativeSrc": "7895:29:15",
																"nodeType": "YulFunctionCall",
																"src": "7895:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7887:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:15"
																}
															]
														},
														{
															"nativeSrc": "7961:23:15",
															"nodeType": "YulAssignment",
															"src": "7961:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7973:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7973:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7979:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7969:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7969:3:15"
																},
																"nativeSrc": "7969:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7969:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7961:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7961:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7684:307:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7734:6:15",
														"nodeType": "YulTypedName",
														"src": "7734:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7745:4:15",
														"nodeType": "YulTypedName",
														"src": "7745:4:15",
														"type": ""
													}
												],
												"src": "7684:307:15"
											},
											{
												"body": {
													"nativeSrc": "8061:84:15",
													"nodeType": "YulBlock",
													"src": "8061:84:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8085:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8085:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8090:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8090:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8095:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8072:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8072:12:15"
																},
																"nativeSrc": "8072:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8072:30:15"
															},
															"nativeSrc": "8072:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8072:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8122:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8122:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8127:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8118:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:15"
																		},
																		"nativeSrc": "8118:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8118:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8136:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8111:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:15"
																},
																"nativeSrc": "8111:27:15",
																"nodeType": "YulFunctionCall",
																"src": "8111:27:15"
															},
															"nativeSrc": "8111:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "8111:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7997:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8043:3:15",
														"nodeType": "YulTypedName",
														"src": "8043:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8048:3:15",
														"nodeType": "YulTypedName",
														"src": "8048:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8053:6:15",
														"nodeType": "YulTypedName",
														"src": "8053:6:15",
														"type": ""
													}
												],
												"src": "7997:148:15"
											},
											{
												"body": {
													"nativeSrc": "8234:340:15",
													"nodeType": "YulBlock",
													"src": "8234:340:15",
													"statements": [
														{
															"nativeSrc": "8244:74:15",
															"nodeType": "YulAssignment",
															"src": "8244:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8310:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8269:40:15",
																			"nodeType": "YulIdentifier",
																			"src": "8269:40:15"
																		},
																		"nativeSrc": "8269:48:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8253:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "8253:15:15"
																},
																"nativeSrc": "8253:65:15",
																"nodeType": "YulFunctionCall",
																"src": "8253:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8244:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8244:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8334:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8334:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8341:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8327:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:15"
																},
																"nativeSrc": "8327:21:15",
																"nodeType": "YulFunctionCall",
																"src": "8327:21:15"
															},
															"nativeSrc": "8327:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "8327:21:15"
														},
														{
															"nativeSrc": "8357:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8357:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8372:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8372:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8379:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8368:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8368:3:15"
																},
																"nativeSrc": "8368:16:15",
																"nodeType": "YulFunctionCall",
																"src": "8368:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8361:3:15",
																	"nodeType": "YulTypedName",
																	"src": "8361:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8422:83:15",
																"nodeType": "YulBlock",
																"src": "8422:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8424:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8424:77:15"
																			},
																			"nativeSrc": "8424:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8424:79:15"
																		},
																		"nativeSrc": "8424:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8424:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8403:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8408:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:15"
																		},
																		"nativeSrc": "8399:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8417:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8417:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8396:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8396:2:15"
																},
																"nativeSrc": "8396:25:15",
																"nodeType": "YulFunctionCall",
																"src": "8396:25:15"
															},
															"nativeSrc": "8393:112:15",
															"nodeType": "YulIf",
															"src": "8393:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8551:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8551:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8556:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8556:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8561:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8561:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8514:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "8514:36:15"
																},
																"nativeSrc": "8514:54:15",
																"nodeType": "YulFunctionCall",
																"src": "8514:54:15"
															},
															"nativeSrc": "8514:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "8514:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8151:423:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8207:3:15",
														"nodeType": "YulTypedName",
														"src": "8207:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8212:6:15",
														"nodeType": "YulTypedName",
														"src": "8212:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8220:3:15",
														"nodeType": "YulTypedName",
														"src": "8220:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8228:5:15",
														"nodeType": "YulTypedName",
														"src": "8228:5:15",
														"type": ""
													}
												],
												"src": "8151:423:15"
											},
											{
												"body": {
													"nativeSrc": "8654:277:15",
													"nodeType": "YulBlock",
													"src": "8654:277:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8703:83:15",
																"nodeType": "YulBlock",
																"src": "8703:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8705:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8705:77:15"
																			},
																			"nativeSrc": "8705:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:79:15"
																		},
																		"nativeSrc": "8705:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8682:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8682:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8690:4:15",
																						"nodeType": "YulLiteral",
																						"src": "8690:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8678:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8678:3:15"
																				},
																				"nativeSrc": "8678:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8678:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8697:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8697:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8674:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:15"
																		},
																		"nativeSrc": "8674:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8674:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8667:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:15"
																},
																"nativeSrc": "8667:35:15",
																"nodeType": "YulFunctionCall",
																"src": "8667:35:15"
															},
															"nativeSrc": "8664:122:15",
															"nodeType": "YulIf",
															"src": "8664:122:15"
														},
														{
															"nativeSrc": "8795:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8795:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8822:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8822:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8809:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8809:12:15"
																},
																"nativeSrc": "8809:20:15",
																"nodeType": "YulFunctionCall",
																"src": "8809:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8799:6:15",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8838:87:15",
															"nodeType": "YulAssignment",
															"src": "8838:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8898:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8898:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8906:4:15",
																				"nodeType": "YulLiteral",
																				"src": "8906:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8894:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:15"
																		},
																		"nativeSrc": "8894:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8913:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8913:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8921:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8847:46:15",
																	"nodeType": "YulIdentifier",
																	"src": "8847:46:15"
																},
																"nativeSrc": "8847:78:15",
																"nodeType": "YulFunctionCall",
																"src": "8847:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8838:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8838:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8593:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8632:6:15",
														"nodeType": "YulTypedName",
														"src": "8632:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8640:3:15",
														"nodeType": "YulTypedName",
														"src": "8640:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8648:5:15",
														"nodeType": "YulTypedName",
														"src": "8648:5:15",
														"type": ""
													}
												],
												"src": "8593:338:15"
											},
											{
												"body": {
													"nativeSrc": "9063:817:15",
													"nodeType": "YulBlock",
													"src": "9063:817:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9110:83:15",
																"nodeType": "YulBlock",
																"src": "9110:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9112:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "9112:77:15"
																			},
																			"nativeSrc": "9112:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9112:79:15"
																		},
																		"nativeSrc": "9112:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9112:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9084:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9093:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9080:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:15"
																		},
																		"nativeSrc": "9080:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9105:3:15",
																		"nodeType": "YulLiteral",
																		"src": "9105:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9076:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9076:3:15"
																},
																"nativeSrc": "9076:33:15",
																"nodeType": "YulFunctionCall",
																"src": "9076:33:15"
															},
															"nativeSrc": "9073:120:15",
															"nodeType": "YulIf",
															"src": "9073:120:15"
														},
														{
															"nativeSrc": "9203:117:15",
															"nodeType": "YulBlock",
															"src": "9203:117:15",
															"statements": [
																{
																	"nativeSrc": "9218:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9218:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9232:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9232:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9222:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9222:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9247:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9247:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9282:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9282:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9293:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9293:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9278:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9278:3:15"
																				},
																				"nativeSrc": "9278:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9278:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9302:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9302:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9257:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9257:20:15"
																		},
																		"nativeSrc": "9257:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9257:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9247:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9247:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9330:118:15",
															"nodeType": "YulBlock",
															"src": "9330:118:15",
															"statements": [
																{
																	"nativeSrc": "9345:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9345:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9359:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9359:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9349:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9349:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9375:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9375:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9410:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9410:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9421:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9421:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9406:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9406:3:15"
																				},
																				"nativeSrc": "9406:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9406:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9430:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9430:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9385:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9385:20:15"
																		},
																		"nativeSrc": "9385:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9385:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9375:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9375:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9458:118:15",
															"nodeType": "YulBlock",
															"src": "9458:118:15",
															"statements": [
																{
																	"nativeSrc": "9473:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9473:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9487:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9477:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9477:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9503:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9503:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9538:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9538:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9549:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9549:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9534:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9534:3:15"
																				},
																				"nativeSrc": "9534:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9534:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9558:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9558:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9513:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9513:20:15"
																		},
																		"nativeSrc": "9513:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9503:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9503:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9586:287:15",
															"nodeType": "YulBlock",
															"src": "9586:287:15",
															"statements": [
																{
																	"nativeSrc": "9601:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9601:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9632:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9632:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9643:2:15",
																						"nodeType": "YulLiteral",
																						"src": "9643:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9628:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9628:3:15"
																				},
																				"nativeSrc": "9628:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9628:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9615:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "9615:12:15"
																		},
																		"nativeSrc": "9615:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9605:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9605:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9694:83:15",
																		"nodeType": "YulBlock",
																		"src": "9694:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9696:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "9696:77:15"
																					},
																					"nativeSrc": "9696:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9696:79:15"
																				},
																				"nativeSrc": "9696:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "9696:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9666:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9666:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9674:18:15",
																				"nodeType": "YulLiteral",
																				"src": "9674:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9663:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9663:2:15"
																		},
																		"nativeSrc": "9663:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9663:30:15"
																	},
																	"nativeSrc": "9660:117:15",
																	"nodeType": "YulIf",
																	"src": "9660:117:15"
																},
																{
																	"nativeSrc": "9791:72:15",
																	"nodeType": "YulAssignment",
																	"src": "9791:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9835:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9835:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9846:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9846:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9831:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9831:3:15"
																				},
																				"nativeSrc": "9831:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9831:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9855:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9855:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9801:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "9801:29:15"
																		},
																		"nativeSrc": "9801:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9791:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9791:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "8937:943:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9009:9:15",
														"nodeType": "YulTypedName",
														"src": "9009:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9020:7:15",
														"nodeType": "YulTypedName",
														"src": "9020:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9032:6:15",
														"nodeType": "YulTypedName",
														"src": "9032:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9040:6:15",
														"nodeType": "YulTypedName",
														"src": "9040:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9048:6:15",
														"nodeType": "YulTypedName",
														"src": "9048:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9056:6:15",
														"nodeType": "YulTypedName",
														"src": "9056:6:15",
														"type": ""
													}
												],
												"src": "8937:943:15"
											},
											{
												"body": {
													"nativeSrc": "9969:391:15",
													"nodeType": "YulBlock",
													"src": "9969:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10015:83:15",
																"nodeType": "YulBlock",
																"src": "10015:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10017:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10017:77:15"
																			},
																			"nativeSrc": "10017:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10017:79:15"
																		},
																		"nativeSrc": "10017:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10017:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9990:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9990:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9999:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9986:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9986:3:15"
																		},
																		"nativeSrc": "9986:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10011:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10011:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9982:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9982:3:15"
																},
																"nativeSrc": "9982:32:15",
																"nodeType": "YulFunctionCall",
																"src": "9982:32:15"
															},
															"nativeSrc": "9979:119:15",
															"nodeType": "YulIf",
															"src": "9979:119:15"
														},
														{
															"nativeSrc": "10108:117:15",
															"nodeType": "YulBlock",
															"src": "10108:117:15",
															"statements": [
																{
																	"nativeSrc": "10123:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10123:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10137:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10137:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10127:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10127:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10152:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10152:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10187:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10187:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10198:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10198:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10183:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10183:3:15"
																				},
																				"nativeSrc": "10183:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10183:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10207:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10207:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10162:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10162:20:15"
																		},
																		"nativeSrc": "10162:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10162:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10152:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10152:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10235:118:15",
															"nodeType": "YulBlock",
															"src": "10235:118:15",
															"statements": [
																{
																	"nativeSrc": "10250:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10250:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10264:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10254:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10254:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10280:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10280:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10315:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10315:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10326:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10326:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10311:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10311:3:15"
																				},
																				"nativeSrc": "10311:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10311:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10290:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10290:20:15"
																		},
																		"nativeSrc": "10290:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10290:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10280:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10280:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9886:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9931:9:15",
														"nodeType": "YulTypedName",
														"src": "9931:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9942:7:15",
														"nodeType": "YulTypedName",
														"src": "9942:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9954:6:15",
														"nodeType": "YulTypedName",
														"src": "9954:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9962:6:15",
														"nodeType": "YulTypedName",
														"src": "9962:6:15",
														"type": ""
													}
												],
												"src": "9886:474:15"
											},
											{
												"body": {
													"nativeSrc": "10394:152:15",
													"nodeType": "YulBlock",
													"src": "10394:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10411:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10411:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10414:77:15",
																		"nodeType": "YulLiteral",
																		"src": "10414:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10404:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:15"
																},
																"nativeSrc": "10404:88:15",
																"nodeType": "YulFunctionCall",
																"src": "10404:88:15"
															},
															"nativeSrc": "10404:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "10404:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10508:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10508:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10511:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10511:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10501:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:15"
																},
																"nativeSrc": "10501:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10501:15:15"
															},
															"nativeSrc": "10501:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10501:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10532:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10532:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10525:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10525:6:15"
																},
																"nativeSrc": "10525:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10525:15:15"
															},
															"nativeSrc": "10525:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10525:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10366:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "10366:180:15"
											},
											{
												"body": {
													"nativeSrc": "10603:269:15",
													"nodeType": "YulBlock",
													"src": "10603:269:15",
													"statements": [
														{
															"nativeSrc": "10613:22:15",
															"nodeType": "YulAssignment",
															"src": "10613:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10627:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10627:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10633:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10623:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:15"
																},
																"nativeSrc": "10623:12:15",
																"nodeType": "YulFunctionCall",
																"src": "10623:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10613:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10613:6:15"
																}
															]
														},
														{
															"nativeSrc": "10644:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10644:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10674:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10674:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10670:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10670:3:15"
																},
																"nativeSrc": "10670:12:15",
																"nodeType": "YulFunctionCall",
																"src": "10670:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10648:18:15",
																	"nodeType": "YulTypedName",
																	"src": "10648:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10721:51:15",
																"nodeType": "YulBlock",
																"src": "10721:51:15",
																"statements": [
																	{
																		"nativeSrc": "10735:27:15",
																		"nodeType": "YulAssignment",
																		"src": "10735:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10749:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "10749:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10757:4:15",
																					"nodeType": "YulLiteral",
																					"src": "10757:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10745:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "10745:3:15"
																			},
																			"nativeSrc": "10745:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10745:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10735:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10735:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10701:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "10701:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10694:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:15"
																},
																"nativeSrc": "10694:26:15",
																"nodeType": "YulFunctionCall",
																"src": "10694:26:15"
															},
															"nativeSrc": "10691:81:15",
															"nodeType": "YulIf",
															"src": "10691:81:15"
														},
														{
															"body": {
																"nativeSrc": "10824:42:15",
																"nodeType": "YulBlock",
																"src": "10824:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10838:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "10838:16:15"
																			},
																			"nativeSrc": "10838:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10838:18:15"
																		},
																		"nativeSrc": "10838:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10838:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10788:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "10788:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10811:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10811:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10819:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10819:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10808:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10808:2:15"
																		},
																		"nativeSrc": "10808:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10808:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10785:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10785:2:15"
																},
																"nativeSrc": "10785:38:15",
																"nodeType": "YulFunctionCall",
																"src": "10785:38:15"
															},
															"nativeSrc": "10782:84:15",
															"nodeType": "YulIf",
															"src": "10782:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10552:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10587:4:15",
														"nodeType": "YulTypedName",
														"src": "10587:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10596:6:15",
														"nodeType": "YulTypedName",
														"src": "10596:6:15",
														"type": ""
													}
												],
												"src": "10552:320:15"
											},
											{
												"body": {
													"nativeSrc": "10984:114:15",
													"nodeType": "YulBlock",
													"src": "10984:114:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11006:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11006:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11014:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11014:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11002:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11002:3:15"
																		},
																		"nativeSrc": "11002:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11002:14:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "11018:34:15",
																		"nodeType": "YulLiteral",
																		"src": "11018:34:15",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10995:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10995:6:15"
																},
																"nativeSrc": "10995:58:15",
																"nodeType": "YulFunctionCall",
																"src": "10995:58:15"
															},
															"nativeSrc": "10995:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "10995:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11074:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11074:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11082:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11082:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11070:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11070:3:15"
																		},
																		"nativeSrc": "11070:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11070:15:15"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "11087:3:15",
																		"nodeType": "YulLiteral",
																		"src": "11087:3:15",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11063:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11063:6:15"
																},
																"nativeSrc": "11063:28:15",
																"nodeType": "YulFunctionCall",
																"src": "11063:28:15"
															},
															"nativeSrc": "11063:28:15",
															"nodeType": "YulExpressionStatement",
															"src": "11063:28:15"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nativeSrc": "10878:220:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10976:6:15",
														"nodeType": "YulTypedName",
														"src": "10976:6:15",
														"type": ""
													}
												],
												"src": "10878:220:15"
											},
											{
												"body": {
													"nativeSrc": "11250:220:15",
													"nodeType": "YulBlock",
													"src": "11250:220:15",
													"statements": [
														{
															"nativeSrc": "11260:74:15",
															"nodeType": "YulAssignment",
															"src": "11260:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11326:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11326:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11331:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11331:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11267:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "11267:58:15"
																},
																"nativeSrc": "11267:67:15",
																"nodeType": "YulFunctionCall",
																"src": "11267:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11260:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11260:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11432:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11432:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nativeSrc": "11343:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "11343:88:15"
																},
																"nativeSrc": "11343:93:15",
																"nodeType": "YulFunctionCall",
																"src": "11343:93:15"
															},
															"nativeSrc": "11343:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "11343:93:15"
														},
														{
															"nativeSrc": "11445:19:15",
															"nodeType": "YulAssignment",
															"src": "11445:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11456:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11456:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11461:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11461:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11452:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11452:3:15"
																},
																"nativeSrc": "11452:12:15",
																"nodeType": "YulFunctionCall",
																"src": "11452:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11445:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11445:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11104:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11238:3:15",
														"nodeType": "YulTypedName",
														"src": "11238:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11246:3:15",
														"nodeType": "YulTypedName",
														"src": "11246:3:15",
														"type": ""
													}
												],
												"src": "11104:366:15"
											},
											{
												"body": {
													"nativeSrc": "11647:248:15",
													"nodeType": "YulBlock",
													"src": "11647:248:15",
													"statements": [
														{
															"nativeSrc": "11657:26:15",
															"nodeType": "YulAssignment",
															"src": "11657:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11669:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11669:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11680:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11680:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11665:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11665:3:15"
																},
																"nativeSrc": "11665:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11665:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11657:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11657:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11704:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11704:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11715:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11715:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11700:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11700:3:15"
																		},
																		"nativeSrc": "11700:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11700:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11723:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "11723:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11729:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11729:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11719:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11719:3:15"
																		},
																		"nativeSrc": "11719:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11719:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11693:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11693:6:15"
																},
																"nativeSrc": "11693:47:15",
																"nodeType": "YulFunctionCall",
																"src": "11693:47:15"
															},
															"nativeSrc": "11693:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "11693:47:15"
														},
														{
															"nativeSrc": "11749:139:15",
															"nodeType": "YulAssignment",
															"src": "11749:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11883:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "11883:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11757:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "11757:124:15"
																},
																"nativeSrc": "11757:131:15",
																"nodeType": "YulFunctionCall",
																"src": "11757:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11749:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11749:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11476:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11627:9:15",
														"nodeType": "YulTypedName",
														"src": "11627:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11642:4:15",
														"nodeType": "YulTypedName",
														"src": "11642:4:15",
														"type": ""
													}
												],
												"src": "11476:419:15"
											},
											{
												"body": {
													"nativeSrc": "12007:142:15",
													"nodeType": "YulBlock",
													"src": "12007:142:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12029:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12029:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12037:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12037:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12025:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12025:3:15"
																		},
																		"nativeSrc": "12025:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12025:14:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nativeSrc": "12041:34:15",
																		"nodeType": "YulLiteral",
																		"src": "12041:34:15",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12018:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12018:6:15"
																},
																"nativeSrc": "12018:58:15",
																"nodeType": "YulFunctionCall",
																"src": "12018:58:15"
															},
															"nativeSrc": "12018:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "12018:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12097:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12097:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12105:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12105:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12093:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12093:3:15"
																		},
																		"nativeSrc": "12093:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12093:15:15"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "12110:31:15",
																		"nodeType": "YulLiteral",
																		"src": "12110:31:15",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12086:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12086:6:15"
																},
																"nativeSrc": "12086:56:15",
																"nodeType": "YulFunctionCall",
																"src": "12086:56:15"
															},
															"nativeSrc": "12086:56:15",
															"nodeType": "YulExpressionStatement",
															"src": "12086:56:15"
														}
													]
												},
												"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
												"nativeSrc": "11901:248:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11999:6:15",
														"nodeType": "YulTypedName",
														"src": "11999:6:15",
														"type": ""
													}
												],
												"src": "11901:248:15"
											},
											{
												"body": {
													"nativeSrc": "12301:220:15",
													"nodeType": "YulBlock",
													"src": "12301:220:15",
													"statements": [
														{
															"nativeSrc": "12311:74:15",
															"nodeType": "YulAssignment",
															"src": "12311:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12377:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12377:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12382:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12382:2:15",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12318:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "12318:58:15"
																},
																"nativeSrc": "12318:67:15",
																"nodeType": "YulFunctionCall",
																"src": "12318:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12311:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12311:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12483:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12483:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																	"nativeSrc": "12394:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "12394:88:15"
																},
																"nativeSrc": "12394:93:15",
																"nodeType": "YulFunctionCall",
																"src": "12394:93:15"
															},
															"nativeSrc": "12394:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "12394:93:15"
														},
														{
															"nativeSrc": "12496:19:15",
															"nodeType": "YulAssignment",
															"src": "12496:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12507:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12507:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12512:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12512:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12503:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12503:3:15"
																},
																"nativeSrc": "12503:12:15",
																"nodeType": "YulFunctionCall",
																"src": "12503:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12496:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12496:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12155:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12289:3:15",
														"nodeType": "YulTypedName",
														"src": "12289:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12297:3:15",
														"nodeType": "YulTypedName",
														"src": "12297:3:15",
														"type": ""
													}
												],
												"src": "12155:366:15"
											},
											{
												"body": {
													"nativeSrc": "12698:248:15",
													"nodeType": "YulBlock",
													"src": "12698:248:15",
													"statements": [
														{
															"nativeSrc": "12708:26:15",
															"nodeType": "YulAssignment",
															"src": "12708:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12720:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12720:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12731:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12731:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12716:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12716:3:15"
																},
																"nativeSrc": "12716:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12716:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12708:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12708:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12755:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12755:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12766:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12766:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12751:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12751:3:15"
																		},
																		"nativeSrc": "12751:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12751:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12774:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "12774:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12780:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12780:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12770:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12770:3:15"
																		},
																		"nativeSrc": "12770:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12770:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12744:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12744:6:15"
																},
																"nativeSrc": "12744:47:15",
																"nodeType": "YulFunctionCall",
																"src": "12744:47:15"
															},
															"nativeSrc": "12744:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "12744:47:15"
														},
														{
															"nativeSrc": "12800:139:15",
															"nodeType": "YulAssignment",
															"src": "12800:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12934:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "12934:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12808:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "12808:124:15"
																},
																"nativeSrc": "12808:131:15",
																"nodeType": "YulFunctionCall",
																"src": "12808:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12800:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12800:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12527:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12678:9:15",
														"nodeType": "YulTypedName",
														"src": "12678:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12693:4:15",
														"nodeType": "YulTypedName",
														"src": "12693:4:15",
														"type": ""
													}
												],
												"src": "12527:419:15"
											},
											{
												"body": {
													"nativeSrc": "13058:126:15",
													"nodeType": "YulBlock",
													"src": "13058:126:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13080:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13080:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13088:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13088:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13076:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13076:3:15"
																		},
																		"nativeSrc": "13076:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13076:14:15"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nativeSrc": "13092:34:15",
																		"nodeType": "YulLiteral",
																		"src": "13092:34:15",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13069:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13069:6:15"
																},
																"nativeSrc": "13069:58:15",
																"nodeType": "YulFunctionCall",
																"src": "13069:58:15"
															},
															"nativeSrc": "13069:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "13069:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13148:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13148:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13156:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13156:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13144:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13144:3:15"
																		},
																		"nativeSrc": "13144:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13144:15:15"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "13161:15:15",
																		"nodeType": "YulLiteral",
																		"src": "13161:15:15",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13137:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13137:6:15"
																},
																"nativeSrc": "13137:40:15",
																"nodeType": "YulFunctionCall",
																"src": "13137:40:15"
															},
															"nativeSrc": "13137:40:15",
															"nodeType": "YulExpressionStatement",
															"src": "13137:40:15"
														}
													]
												},
												"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
												"nativeSrc": "12952:232:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13050:6:15",
														"nodeType": "YulTypedName",
														"src": "13050:6:15",
														"type": ""
													}
												],
												"src": "12952:232:15"
											},
											{
												"body": {
													"nativeSrc": "13336:220:15",
													"nodeType": "YulBlock",
													"src": "13336:220:15",
													"statements": [
														{
															"nativeSrc": "13346:74:15",
															"nodeType": "YulAssignment",
															"src": "13346:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13412:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13412:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13417:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13417:2:15",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13353:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "13353:58:15"
																},
																"nativeSrc": "13353:67:15",
																"nodeType": "YulFunctionCall",
																"src": "13353:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13346:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13346:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13518:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13518:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																	"nativeSrc": "13429:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "13429:88:15"
																},
																"nativeSrc": "13429:93:15",
																"nodeType": "YulFunctionCall",
																"src": "13429:93:15"
															},
															"nativeSrc": "13429:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "13429:93:15"
														},
														{
															"nativeSrc": "13531:19:15",
															"nodeType": "YulAssignment",
															"src": "13531:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13542:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13542:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13547:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13547:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13538:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13538:3:15"
																},
																"nativeSrc": "13538:12:15",
																"nodeType": "YulFunctionCall",
																"src": "13538:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13531:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13531:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13190:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13324:3:15",
														"nodeType": "YulTypedName",
														"src": "13324:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13332:3:15",
														"nodeType": "YulTypedName",
														"src": "13332:3:15",
														"type": ""
													}
												],
												"src": "13190:366:15"
											},
											{
												"body": {
													"nativeSrc": "13733:248:15",
													"nodeType": "YulBlock",
													"src": "13733:248:15",
													"statements": [
														{
															"nativeSrc": "13743:26:15",
															"nodeType": "YulAssignment",
															"src": "13743:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13755:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13755:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13766:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13766:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13751:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13751:3:15"
																},
																"nativeSrc": "13751:18:15",
																"nodeType": "YulFunctionCall",
																"src": "13751:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13743:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13743:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13790:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13790:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13801:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13801:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13786:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13786:3:15"
																		},
																		"nativeSrc": "13786:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13786:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13809:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "13809:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13815:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13815:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13805:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13805:3:15"
																		},
																		"nativeSrc": "13805:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13805:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13779:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13779:6:15"
																},
																"nativeSrc": "13779:47:15",
																"nodeType": "YulFunctionCall",
																"src": "13779:47:15"
															},
															"nativeSrc": "13779:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "13779:47:15"
														},
														{
															"nativeSrc": "13835:139:15",
															"nodeType": "YulAssignment",
															"src": "13835:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13969:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "13969:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13843:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "13843:124:15"
																},
																"nativeSrc": "13843:131:15",
																"nodeType": "YulFunctionCall",
																"src": "13843:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13835:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13835:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13562:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13713:9:15",
														"nodeType": "YulTypedName",
														"src": "13713:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13728:4:15",
														"nodeType": "YulTypedName",
														"src": "13728:4:15",
														"type": ""
													}
												],
												"src": "13562:419:15"
											},
											{
												"body": {
													"nativeSrc": "14093:68:15",
													"nodeType": "YulBlock",
													"src": "14093:68:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14115:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14115:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14123:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14123:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14111:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14111:3:15"
																		},
																		"nativeSrc": "14111:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14111:14:15"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nativeSrc": "14127:26:15",
																		"nodeType": "YulLiteral",
																		"src": "14127:26:15",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14104:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14104:6:15"
																},
																"nativeSrc": "14104:50:15",
																"nodeType": "YulFunctionCall",
																"src": "14104:50:15"
															},
															"nativeSrc": "14104:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "14104:50:15"
														}
													]
												},
												"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
												"nativeSrc": "13987:174:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14085:6:15",
														"nodeType": "YulTypedName",
														"src": "14085:6:15",
														"type": ""
													}
												],
												"src": "13987:174:15"
											},
											{
												"body": {
													"nativeSrc": "14313:220:15",
													"nodeType": "YulBlock",
													"src": "14313:220:15",
													"statements": [
														{
															"nativeSrc": "14323:74:15",
															"nodeType": "YulAssignment",
															"src": "14323:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14389:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14389:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14394:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14394:2:15",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14330:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "14330:58:15"
																},
																"nativeSrc": "14330:67:15",
																"nodeType": "YulFunctionCall",
																"src": "14330:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14323:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14323:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14495:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14495:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																	"nativeSrc": "14406:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "14406:88:15"
																},
																"nativeSrc": "14406:93:15",
																"nodeType": "YulFunctionCall",
																"src": "14406:93:15"
															},
															"nativeSrc": "14406:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "14406:93:15"
														},
														{
															"nativeSrc": "14508:19:15",
															"nodeType": "YulAssignment",
															"src": "14508:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14519:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14519:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14524:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14524:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14515:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14515:3:15"
																},
																"nativeSrc": "14515:12:15",
																"nodeType": "YulFunctionCall",
																"src": "14515:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14508:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14508:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14167:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14301:3:15",
														"nodeType": "YulTypedName",
														"src": "14301:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14309:3:15",
														"nodeType": "YulTypedName",
														"src": "14309:3:15",
														"type": ""
													}
												],
												"src": "14167:366:15"
											},
											{
												"body": {
													"nativeSrc": "14710:248:15",
													"nodeType": "YulBlock",
													"src": "14710:248:15",
													"statements": [
														{
															"nativeSrc": "14720:26:15",
															"nodeType": "YulAssignment",
															"src": "14720:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14732:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14732:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14743:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14743:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14728:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14728:3:15"
																},
																"nativeSrc": "14728:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14728:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14720:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14720:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14767:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14767:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14778:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14778:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14763:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14763:3:15"
																		},
																		"nativeSrc": "14763:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14763:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14786:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "14786:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14792:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14792:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14782:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14782:3:15"
																		},
																		"nativeSrc": "14782:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14782:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14756:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14756:6:15"
																},
																"nativeSrc": "14756:47:15",
																"nodeType": "YulFunctionCall",
																"src": "14756:47:15"
															},
															"nativeSrc": "14756:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "14756:47:15"
														},
														{
															"nativeSrc": "14812:139:15",
															"nodeType": "YulAssignment",
															"src": "14812:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14946:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "14946:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14820:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "14820:124:15"
																},
																"nativeSrc": "14820:131:15",
																"nodeType": "YulFunctionCall",
																"src": "14820:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14812:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14812:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14539:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14690:9:15",
														"nodeType": "YulTypedName",
														"src": "14690:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14705:4:15",
														"nodeType": "YulTypedName",
														"src": "14705:4:15",
														"type": ""
													}
												],
												"src": "14539:419:15"
											},
											{
												"body": {
													"nativeSrc": "15070:122:15",
													"nodeType": "YulBlock",
													"src": "15070:122:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15092:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15092:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15100:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15100:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15088:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15088:3:15"
																		},
																		"nativeSrc": "15088:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15088:14:15"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nativeSrc": "15104:34:15",
																		"nodeType": "YulLiteral",
																		"src": "15104:34:15",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15081:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15081:6:15"
																},
																"nativeSrc": "15081:58:15",
																"nodeType": "YulFunctionCall",
																"src": "15081:58:15"
															},
															"nativeSrc": "15081:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "15081:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15160:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15160:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15168:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15168:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15156:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15156:3:15"
																		},
																		"nativeSrc": "15156:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15156:15:15"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nativeSrc": "15173:11:15",
																		"nodeType": "YulLiteral",
																		"src": "15173:11:15",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15149:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15149:6:15"
																},
																"nativeSrc": "15149:36:15",
																"nodeType": "YulFunctionCall",
																"src": "15149:36:15"
															},
															"nativeSrc": "15149:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "15149:36:15"
														}
													]
												},
												"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
												"nativeSrc": "14964:228:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15062:6:15",
														"nodeType": "YulTypedName",
														"src": "15062:6:15",
														"type": ""
													}
												],
												"src": "14964:228:15"
											},
											{
												"body": {
													"nativeSrc": "15344:220:15",
													"nodeType": "YulBlock",
													"src": "15344:220:15",
													"statements": [
														{
															"nativeSrc": "15354:74:15",
															"nodeType": "YulAssignment",
															"src": "15354:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15420:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15420:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15425:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15425:2:15",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15361:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "15361:58:15"
																},
																"nativeSrc": "15361:67:15",
																"nodeType": "YulFunctionCall",
																"src": "15361:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15354:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15354:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15526:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15526:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																	"nativeSrc": "15437:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "15437:88:15"
																},
																"nativeSrc": "15437:93:15",
																"nodeType": "YulFunctionCall",
																"src": "15437:93:15"
															},
															"nativeSrc": "15437:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "15437:93:15"
														},
														{
															"nativeSrc": "15539:19:15",
															"nodeType": "YulAssignment",
															"src": "15539:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15550:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15550:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15555:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15555:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15546:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15546:3:15"
																},
																"nativeSrc": "15546:12:15",
																"nodeType": "YulFunctionCall",
																"src": "15546:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15539:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15539:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15198:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15332:3:15",
														"nodeType": "YulTypedName",
														"src": "15332:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15340:3:15",
														"nodeType": "YulTypedName",
														"src": "15340:3:15",
														"type": ""
													}
												],
												"src": "15198:366:15"
											},
											{
												"body": {
													"nativeSrc": "15741:248:15",
													"nodeType": "YulBlock",
													"src": "15741:248:15",
													"statements": [
														{
															"nativeSrc": "15751:26:15",
															"nodeType": "YulAssignment",
															"src": "15751:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15763:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15763:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15774:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15774:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15759:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15759:3:15"
																},
																"nativeSrc": "15759:18:15",
																"nodeType": "YulFunctionCall",
																"src": "15759:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15751:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15751:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15798:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15798:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15809:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15809:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15794:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15794:3:15"
																		},
																		"nativeSrc": "15794:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15794:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15817:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "15817:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15823:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15823:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15813:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15813:3:15"
																		},
																		"nativeSrc": "15813:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15813:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15787:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15787:6:15"
																},
																"nativeSrc": "15787:47:15",
																"nodeType": "YulFunctionCall",
																"src": "15787:47:15"
															},
															"nativeSrc": "15787:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "15787:47:15"
														},
														{
															"nativeSrc": "15843:139:15",
															"nodeType": "YulAssignment",
															"src": "15843:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15977:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "15977:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15851:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "15851:124:15"
																},
																"nativeSrc": "15851:131:15",
																"nodeType": "YulFunctionCall",
																"src": "15851:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15843:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15843:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15570:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15721:9:15",
														"nodeType": "YulTypedName",
														"src": "15721:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15736:4:15",
														"nodeType": "YulTypedName",
														"src": "15736:4:15",
														"type": ""
													}
												],
												"src": "15570:419:15"
											},
											{
												"body": {
													"nativeSrc": "16109:34:15",
													"nodeType": "YulBlock",
													"src": "16109:34:15",
													"statements": [
														{
															"nativeSrc": "16119:18:15",
															"nodeType": "YulAssignment",
															"src": "16119:18:15",
															"value": {
																"name": "pos",
																"nativeSrc": "16134:3:15",
																"nodeType": "YulIdentifier",
																"src": "16134:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16119:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "16119:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15995:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16081:3:15",
														"nodeType": "YulTypedName",
														"src": "16081:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16086:6:15",
														"nodeType": "YulTypedName",
														"src": "16086:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16097:11:15",
														"nodeType": "YulTypedName",
														"src": "16097:11:15",
														"type": ""
													}
												],
												"src": "15995:148:15"
											},
											{
												"body": {
													"nativeSrc": "16259:280:15",
													"nodeType": "YulBlock",
													"src": "16259:280:15",
													"statements": [
														{
															"nativeSrc": "16269:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "16269:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16316:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "16316:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16283:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "16283:32:15"
																},
																"nativeSrc": "16283:39:15",
																"nodeType": "YulFunctionCall",
																"src": "16283:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16273:6:15",
																	"nodeType": "YulTypedName",
																	"src": "16273:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16331:96:15",
															"nodeType": "YulAssignment",
															"src": "16331:96:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16415:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16415:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16420:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16420:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16338:76:15",
																	"nodeType": "YulIdentifier",
																	"src": "16338:76:15"
																},
																"nativeSrc": "16338:89:15",
																"nodeType": "YulFunctionCall",
																"src": "16338:89:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16331:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16331:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16475:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "16475:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16482:4:15",
																				"nodeType": "YulLiteral",
																				"src": "16482:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16471:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16471:3:15"
																		},
																		"nativeSrc": "16471:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16471:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16489:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16489:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16494:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16494:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16436:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "16436:34:15"
																},
																"nativeSrc": "16436:65:15",
																"nodeType": "YulFunctionCall",
																"src": "16436:65:15"
															},
															"nativeSrc": "16436:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "16436:65:15"
														},
														{
															"nativeSrc": "16510:23:15",
															"nodeType": "YulAssignment",
															"src": "16510:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16521:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16521:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16526:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16526:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16517:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16517:3:15"
																},
																"nativeSrc": "16517:16:15",
																"nodeType": "YulFunctionCall",
																"src": "16517:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16510:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16510:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16149:390:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16240:5:15",
														"nodeType": "YulTypedName",
														"src": "16240:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16247:3:15",
														"nodeType": "YulTypedName",
														"src": "16247:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16255:3:15",
														"nodeType": "YulTypedName",
														"src": "16255:3:15",
														"type": ""
													}
												],
												"src": "16149:390:15"
											},
											{
												"body": {
													"nativeSrc": "16729:251:15",
													"nodeType": "YulBlock",
													"src": "16729:251:15",
													"statements": [
														{
															"nativeSrc": "16740:102:15",
															"nodeType": "YulAssignment",
															"src": "16740:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16829:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16829:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16838:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16838:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16747:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "16747:81:15"
																},
																"nativeSrc": "16747:95:15",
																"nodeType": "YulFunctionCall",
																"src": "16747:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16740:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16740:3:15"
																}
															]
														},
														{
															"nativeSrc": "16852:102:15",
															"nodeType": "YulAssignment",
															"src": "16852:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16941:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16941:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16950:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16950:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16859:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "16859:81:15"
																},
																"nativeSrc": "16859:95:15",
																"nodeType": "YulFunctionCall",
																"src": "16859:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16852:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16852:3:15"
																}
															]
														},
														{
															"nativeSrc": "16964:10:15",
															"nodeType": "YulAssignment",
															"src": "16964:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "16971:3:15",
																"nodeType": "YulIdentifier",
																"src": "16971:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16964:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16964:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16545:435:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16700:3:15",
														"nodeType": "YulTypedName",
														"src": "16700:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16706:6:15",
														"nodeType": "YulTypedName",
														"src": "16706:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16714:6:15",
														"nodeType": "YulTypedName",
														"src": "16714:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16725:3:15",
														"nodeType": "YulTypedName",
														"src": "16725:3:15",
														"type": ""
													}
												],
												"src": "16545:435:15"
											},
											{
												"body": {
													"nativeSrc": "17092:118:15",
													"nodeType": "YulBlock",
													"src": "17092:118:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17114:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "17114:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17122:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17122:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17110:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17110:3:15"
																		},
																		"nativeSrc": "17110:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17110:14:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nativeSrc": "17126:34:15",
																		"nodeType": "YulLiteral",
																		"src": "17126:34:15",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17103:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17103:6:15"
																},
																"nativeSrc": "17103:58:15",
																"nodeType": "YulFunctionCall",
																"src": "17103:58:15"
															},
															"nativeSrc": "17103:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "17103:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17182:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "17182:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17190:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17190:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17178:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17178:3:15"
																		},
																		"nativeSrc": "17178:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17178:15:15"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nativeSrc": "17195:7:15",
																		"nodeType": "YulLiteral",
																		"src": "17195:7:15",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17171:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17171:6:15"
																},
																"nativeSrc": "17171:32:15",
																"nodeType": "YulFunctionCall",
																"src": "17171:32:15"
															},
															"nativeSrc": "17171:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "17171:32:15"
														}
													]
												},
												"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
												"nativeSrc": "16986:224:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17084:6:15",
														"nodeType": "YulTypedName",
														"src": "17084:6:15",
														"type": ""
													}
												],
												"src": "16986:224:15"
											},
											{
												"body": {
													"nativeSrc": "17362:220:15",
													"nodeType": "YulBlock",
													"src": "17362:220:15",
													"statements": [
														{
															"nativeSrc": "17372:74:15",
															"nodeType": "YulAssignment",
															"src": "17372:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17438:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "17438:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17443:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17443:2:15",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17379:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "17379:58:15"
																},
																"nativeSrc": "17379:67:15",
																"nodeType": "YulFunctionCall",
																"src": "17379:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17372:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17372:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17544:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "17544:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																	"nativeSrc": "17455:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "17455:88:15"
																},
																"nativeSrc": "17455:93:15",
																"nodeType": "YulFunctionCall",
																"src": "17455:93:15"
															},
															"nativeSrc": "17455:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "17455:93:15"
														},
														{
															"nativeSrc": "17557:19:15",
															"nodeType": "YulAssignment",
															"src": "17557:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17568:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "17568:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17573:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17573:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17564:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17564:3:15"
																},
																"nativeSrc": "17564:12:15",
																"nodeType": "YulFunctionCall",
																"src": "17564:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17557:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17557:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17216:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17350:3:15",
														"nodeType": "YulTypedName",
														"src": "17350:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17358:3:15",
														"nodeType": "YulTypedName",
														"src": "17358:3:15",
														"type": ""
													}
												],
												"src": "17216:366:15"
											},
											{
												"body": {
													"nativeSrc": "17759:248:15",
													"nodeType": "YulBlock",
													"src": "17759:248:15",
													"statements": [
														{
															"nativeSrc": "17769:26:15",
															"nodeType": "YulAssignment",
															"src": "17769:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17781:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17781:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17792:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17792:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17777:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17777:3:15"
																},
																"nativeSrc": "17777:18:15",
																"nodeType": "YulFunctionCall",
																"src": "17777:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17769:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17769:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17816:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17816:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17827:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17827:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17812:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17812:3:15"
																		},
																		"nativeSrc": "17812:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17812:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17835:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "17835:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17841:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17841:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17831:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17831:3:15"
																		},
																		"nativeSrc": "17831:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17831:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17805:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17805:6:15"
																},
																"nativeSrc": "17805:47:15",
																"nodeType": "YulFunctionCall",
																"src": "17805:47:15"
															},
															"nativeSrc": "17805:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "17805:47:15"
														},
														{
															"nativeSrc": "17861:139:15",
															"nodeType": "YulAssignment",
															"src": "17861:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17995:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "17995:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17869:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "17869:124:15"
																},
																"nativeSrc": "17869:131:15",
																"nodeType": "YulFunctionCall",
																"src": "17869:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17861:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17861:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17588:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17739:9:15",
														"nodeType": "YulTypedName",
														"src": "17739:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17754:4:15",
														"nodeType": "YulTypedName",
														"src": "17754:4:15",
														"type": ""
													}
												],
												"src": "17588:419:15"
											},
											{
												"body": {
													"nativeSrc": "18119:117:15",
													"nodeType": "YulBlock",
													"src": "18119:117:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18141:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18141:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18149:1:15",
																				"nodeType": "YulLiteral",
																				"src": "18149:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18137:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18137:3:15"
																		},
																		"nativeSrc": "18137:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18137:14:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "18153:34:15",
																		"nodeType": "YulLiteral",
																		"src": "18153:34:15",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18130:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18130:6:15"
																},
																"nativeSrc": "18130:58:15",
																"nodeType": "YulFunctionCall",
																"src": "18130:58:15"
															},
															"nativeSrc": "18130:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "18130:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18209:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18209:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18217:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18217:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18205:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18205:3:15"
																		},
																		"nativeSrc": "18205:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18205:15:15"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "18222:6:15",
																		"nodeType": "YulLiteral",
																		"src": "18222:6:15",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18198:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18198:6:15"
																},
																"nativeSrc": "18198:31:15",
																"nodeType": "YulFunctionCall",
																"src": "18198:31:15"
															},
															"nativeSrc": "18198:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "18198:31:15"
														}
													]
												},
												"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
												"nativeSrc": "18013:223:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18111:6:15",
														"nodeType": "YulTypedName",
														"src": "18111:6:15",
														"type": ""
													}
												],
												"src": "18013:223:15"
											},
											{
												"body": {
													"nativeSrc": "18388:220:15",
													"nodeType": "YulBlock",
													"src": "18388:220:15",
													"statements": [
														{
															"nativeSrc": "18398:74:15",
															"nodeType": "YulAssignment",
															"src": "18398:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18464:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "18464:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18469:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18469:2:15",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18405:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "18405:58:15"
																},
																"nativeSrc": "18405:67:15",
																"nodeType": "YulFunctionCall",
																"src": "18405:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18398:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18398:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18570:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "18570:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																	"nativeSrc": "18481:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "18481:88:15"
																},
																"nativeSrc": "18481:93:15",
																"nodeType": "YulFunctionCall",
																"src": "18481:93:15"
															},
															"nativeSrc": "18481:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "18481:93:15"
														},
														{
															"nativeSrc": "18583:19:15",
															"nodeType": "YulAssignment",
															"src": "18583:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18594:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "18594:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18599:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18599:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18590:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18590:3:15"
																},
																"nativeSrc": "18590:12:15",
																"nodeType": "YulFunctionCall",
																"src": "18590:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18583:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18583:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18242:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18376:3:15",
														"nodeType": "YulTypedName",
														"src": "18376:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18384:3:15",
														"nodeType": "YulTypedName",
														"src": "18384:3:15",
														"type": ""
													}
												],
												"src": "18242:366:15"
											},
											{
												"body": {
													"nativeSrc": "18785:248:15",
													"nodeType": "YulBlock",
													"src": "18785:248:15",
													"statements": [
														{
															"nativeSrc": "18795:26:15",
															"nodeType": "YulAssignment",
															"src": "18795:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18807:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18807:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18818:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18818:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18803:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18803:3:15"
																},
																"nativeSrc": "18803:18:15",
																"nodeType": "YulFunctionCall",
																"src": "18803:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18795:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18795:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18842:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18842:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18853:1:15",
																				"nodeType": "YulLiteral",
																				"src": "18853:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18838:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18838:3:15"
																		},
																		"nativeSrc": "18838:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18838:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18861:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "18861:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18867:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18867:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18857:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18857:3:15"
																		},
																		"nativeSrc": "18857:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18857:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18831:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18831:6:15"
																},
																"nativeSrc": "18831:47:15",
																"nodeType": "YulFunctionCall",
																"src": "18831:47:15"
															},
															"nativeSrc": "18831:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "18831:47:15"
														},
														{
															"nativeSrc": "18887:139:15",
															"nodeType": "YulAssignment",
															"src": "18887:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19021:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19021:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18895:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "18895:124:15"
																},
																"nativeSrc": "18895:131:15",
																"nodeType": "YulFunctionCall",
																"src": "18895:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18887:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18887:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18614:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18765:9:15",
														"nodeType": "YulTypedName",
														"src": "18765:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18780:4:15",
														"nodeType": "YulTypedName",
														"src": "18780:4:15",
														"type": ""
													}
												],
												"src": "18614:419:15"
											},
											{
												"body": {
													"nativeSrc": "19145:69:15",
													"nodeType": "YulBlock",
													"src": "19145:69:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19167:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "19167:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19175:1:15",
																				"nodeType": "YulLiteral",
																				"src": "19175:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19163:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19163:3:15"
																		},
																		"nativeSrc": "19163:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19163:14:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "19179:27:15",
																		"nodeType": "YulLiteral",
																		"src": "19179:27:15",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19156:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19156:6:15"
																},
																"nativeSrc": "19156:51:15",
																"nodeType": "YulFunctionCall",
																"src": "19156:51:15"
															},
															"nativeSrc": "19156:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "19156:51:15"
														}
													]
												},
												"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
												"nativeSrc": "19039:175:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19137:6:15",
														"nodeType": "YulTypedName",
														"src": "19137:6:15",
														"type": ""
													}
												],
												"src": "19039:175:15"
											},
											{
												"body": {
													"nativeSrc": "19366:220:15",
													"nodeType": "YulBlock",
													"src": "19366:220:15",
													"statements": [
														{
															"nativeSrc": "19376:74:15",
															"nodeType": "YulAssignment",
															"src": "19376:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19442:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19442:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19447:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19447:2:15",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19383:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "19383:58:15"
																},
																"nativeSrc": "19383:67:15",
																"nodeType": "YulFunctionCall",
																"src": "19383:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19376:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19376:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19548:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19548:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																	"nativeSrc": "19459:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "19459:88:15"
																},
																"nativeSrc": "19459:93:15",
																"nodeType": "YulFunctionCall",
																"src": "19459:93:15"
															},
															"nativeSrc": "19459:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "19459:93:15"
														},
														{
															"nativeSrc": "19561:19:15",
															"nodeType": "YulAssignment",
															"src": "19561:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19572:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19572:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19577:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19577:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19568:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19568:3:15"
																},
																"nativeSrc": "19568:12:15",
																"nodeType": "YulFunctionCall",
																"src": "19568:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19561:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19561:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19220:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19354:3:15",
														"nodeType": "YulTypedName",
														"src": "19354:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19362:3:15",
														"nodeType": "YulTypedName",
														"src": "19362:3:15",
														"type": ""
													}
												],
												"src": "19220:366:15"
											},
											{
												"body": {
													"nativeSrc": "19763:248:15",
													"nodeType": "YulBlock",
													"src": "19763:248:15",
													"statements": [
														{
															"nativeSrc": "19773:26:15",
															"nodeType": "YulAssignment",
															"src": "19773:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19785:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19785:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19796:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19796:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19781:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19781:3:15"
																},
																"nativeSrc": "19781:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19781:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19773:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19773:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19820:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19820:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19831:1:15",
																				"nodeType": "YulLiteral",
																				"src": "19831:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19816:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19816:3:15"
																		},
																		"nativeSrc": "19816:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19816:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19839:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "19839:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19845:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19845:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19835:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19835:3:15"
																		},
																		"nativeSrc": "19835:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19835:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19809:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19809:6:15"
																},
																"nativeSrc": "19809:47:15",
																"nodeType": "YulFunctionCall",
																"src": "19809:47:15"
															},
															"nativeSrc": "19809:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "19809:47:15"
														},
														{
															"nativeSrc": "19865:139:15",
															"nodeType": "YulAssignment",
															"src": "19865:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19999:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19999:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19873:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "19873:124:15"
																},
																"nativeSrc": "19873:131:15",
																"nodeType": "YulFunctionCall",
																"src": "19873:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19865:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19865:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19592:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19743:9:15",
														"nodeType": "YulTypedName",
														"src": "19743:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19758:4:15",
														"nodeType": "YulTypedName",
														"src": "19758:4:15",
														"type": ""
													}
												],
												"src": "19592:419:15"
											},
											{
												"body": {
													"nativeSrc": "20123:131:15",
													"nodeType": "YulBlock",
													"src": "20123:131:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20145:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "20145:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20153:1:15",
																				"nodeType": "YulLiteral",
																				"src": "20153:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20141:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20141:3:15"
																		},
																		"nativeSrc": "20141:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20141:14:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nativeSrc": "20157:34:15",
																		"nodeType": "YulLiteral",
																		"src": "20157:34:15",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20134:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20134:6:15"
																},
																"nativeSrc": "20134:58:15",
																"nodeType": "YulFunctionCall",
																"src": "20134:58:15"
															},
															"nativeSrc": "20134:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "20134:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20213:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "20213:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20221:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20221:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20209:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20209:3:15"
																		},
																		"nativeSrc": "20209:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20209:15:15"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nativeSrc": "20226:20:15",
																		"nodeType": "YulLiteral",
																		"src": "20226:20:15",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20202:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20202:6:15"
																},
																"nativeSrc": "20202:45:15",
																"nodeType": "YulFunctionCall",
																"src": "20202:45:15"
															},
															"nativeSrc": "20202:45:15",
															"nodeType": "YulExpressionStatement",
															"src": "20202:45:15"
														}
													]
												},
												"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
												"nativeSrc": "20017:237:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20115:6:15",
														"nodeType": "YulTypedName",
														"src": "20115:6:15",
														"type": ""
													}
												],
												"src": "20017:237:15"
											},
											{
												"body": {
													"nativeSrc": "20406:220:15",
													"nodeType": "YulBlock",
													"src": "20406:220:15",
													"statements": [
														{
															"nativeSrc": "20416:74:15",
															"nodeType": "YulAssignment",
															"src": "20416:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20482:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20482:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20487:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20487:2:15",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20423:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "20423:58:15"
																},
																"nativeSrc": "20423:67:15",
																"nodeType": "YulFunctionCall",
																"src": "20423:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20416:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20416:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20588:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20588:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																	"nativeSrc": "20499:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "20499:88:15"
																},
																"nativeSrc": "20499:93:15",
																"nodeType": "YulFunctionCall",
																"src": "20499:93:15"
															},
															"nativeSrc": "20499:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "20499:93:15"
														},
														{
															"nativeSrc": "20601:19:15",
															"nodeType": "YulAssignment",
															"src": "20601:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20612:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20612:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20617:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20617:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20608:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20608:3:15"
																},
																"nativeSrc": "20608:12:15",
																"nodeType": "YulFunctionCall",
																"src": "20608:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20601:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20601:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20260:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20394:3:15",
														"nodeType": "YulTypedName",
														"src": "20394:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20402:3:15",
														"nodeType": "YulTypedName",
														"src": "20402:3:15",
														"type": ""
													}
												],
												"src": "20260:366:15"
											},
											{
												"body": {
													"nativeSrc": "20803:248:15",
													"nodeType": "YulBlock",
													"src": "20803:248:15",
													"statements": [
														{
															"nativeSrc": "20813:26:15",
															"nodeType": "YulAssignment",
															"src": "20813:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20825:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20825:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20836:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20836:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20821:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20821:3:15"
																},
																"nativeSrc": "20821:18:15",
																"nodeType": "YulFunctionCall",
																"src": "20821:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20813:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "20813:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20860:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20860:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20871:1:15",
																				"nodeType": "YulLiteral",
																				"src": "20871:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20856:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20856:3:15"
																		},
																		"nativeSrc": "20856:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20856:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20879:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "20879:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20885:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20885:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20875:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20875:3:15"
																		},
																		"nativeSrc": "20875:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20875:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20849:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20849:6:15"
																},
																"nativeSrc": "20849:47:15",
																"nodeType": "YulFunctionCall",
																"src": "20849:47:15"
															},
															"nativeSrc": "20849:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "20849:47:15"
														},
														{
															"nativeSrc": "20905:139:15",
															"nodeType": "YulAssignment",
															"src": "20905:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21039:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "21039:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20913:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "20913:124:15"
																},
																"nativeSrc": "20913:131:15",
																"nodeType": "YulFunctionCall",
																"src": "20913:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20905:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "20905:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20632:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20783:9:15",
														"nodeType": "YulTypedName",
														"src": "20783:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20798:4:15",
														"nodeType": "YulTypedName",
														"src": "20798:4:15",
														"type": ""
													}
												],
												"src": "20632:419:15"
											},
											{
												"body": {
													"nativeSrc": "21085:152:15",
													"nodeType": "YulBlock",
													"src": "21085:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21102:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21102:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21105:77:15",
																		"nodeType": "YulLiteral",
																		"src": "21105:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21095:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21095:6:15"
																},
																"nativeSrc": "21095:88:15",
																"nodeType": "YulFunctionCall",
																"src": "21095:88:15"
															},
															"nativeSrc": "21095:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "21095:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21199:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21199:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21202:4:15",
																		"nodeType": "YulLiteral",
																		"src": "21202:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21192:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21192:6:15"
																},
																"nativeSrc": "21192:15:15",
																"nodeType": "YulFunctionCall",
																"src": "21192:15:15"
															},
															"nativeSrc": "21192:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "21192:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21223:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21223:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21226:4:15",
																		"nodeType": "YulLiteral",
																		"src": "21226:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21216:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21216:6:15"
																},
																"nativeSrc": "21216:15:15",
																"nodeType": "YulFunctionCall",
																"src": "21216:15:15"
															},
															"nativeSrc": "21216:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "21216:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "21057:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "21057:180:15"
											},
											{
												"body": {
													"nativeSrc": "21271:152:15",
													"nodeType": "YulBlock",
													"src": "21271:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21288:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21288:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21291:77:15",
																		"nodeType": "YulLiteral",
																		"src": "21291:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21281:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21281:6:15"
																},
																"nativeSrc": "21281:88:15",
																"nodeType": "YulFunctionCall",
																"src": "21281:88:15"
															},
															"nativeSrc": "21281:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "21281:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21385:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21385:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21388:4:15",
																		"nodeType": "YulLiteral",
																		"src": "21388:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21378:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21378:6:15"
																},
																"nativeSrc": "21378:15:15",
																"nodeType": "YulFunctionCall",
																"src": "21378:15:15"
															},
															"nativeSrc": "21378:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "21378:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21409:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21409:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21412:4:15",
																		"nodeType": "YulLiteral",
																		"src": "21412:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21402:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21402:6:15"
																},
																"nativeSrc": "21402:15:15",
																"nodeType": "YulFunctionCall",
																"src": "21402:15:15"
															},
															"nativeSrc": "21402:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "21402:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "21243:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "21243:180:15"
											},
											{
												"body": {
													"nativeSrc": "21474:149:15",
													"nodeType": "YulBlock",
													"src": "21474:149:15",
													"statements": [
														{
															"nativeSrc": "21484:25:15",
															"nodeType": "YulAssignment",
															"src": "21484:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21507:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "21507:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21489:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "21489:17:15"
																},
																"nativeSrc": "21489:20:15",
																"nodeType": "YulFunctionCall",
																"src": "21489:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21484:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "21484:1:15"
																}
															]
														},
														{
															"nativeSrc": "21518:25:15",
															"nodeType": "YulAssignment",
															"src": "21518:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21541:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "21541:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21523:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "21523:17:15"
																},
																"nativeSrc": "21523:20:15",
																"nodeType": "YulFunctionCall",
																"src": "21523:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21518:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "21518:1:15"
																}
															]
														},
														{
															"nativeSrc": "21552:17:15",
															"nodeType": "YulAssignment",
															"src": "21552:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21564:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "21564:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21567:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "21567:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "21560:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21560:3:15"
																},
																"nativeSrc": "21560:9:15",
																"nodeType": "YulFunctionCall",
																"src": "21560:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "21552:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21552:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21594:22:15",
																"nodeType": "YulBlock",
																"src": "21594:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21596:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "21596:16:15"
																			},
																			"nativeSrc": "21596:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "21596:18:15"
																		},
																		"nativeSrc": "21596:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "21596:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "21585:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "21585:4:15"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "21591:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "21591:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21582:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "21582:2:15"
																},
																"nativeSrc": "21582:11:15",
																"nodeType": "YulFunctionCall",
																"src": "21582:11:15"
															},
															"nativeSrc": "21579:37:15",
															"nodeType": "YulIf",
															"src": "21579:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "21429:194:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21460:1:15",
														"nodeType": "YulTypedName",
														"src": "21460:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21463:1:15",
														"nodeType": "YulTypedName",
														"src": "21463:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "21469:4:15",
														"nodeType": "YulTypedName",
														"src": "21469:4:15",
														"type": ""
													}
												],
												"src": "21429:194:15"
											},
											{
												"body": {
													"nativeSrc": "21673:147:15",
													"nodeType": "YulBlock",
													"src": "21673:147:15",
													"statements": [
														{
															"nativeSrc": "21683:25:15",
															"nodeType": "YulAssignment",
															"src": "21683:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21706:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "21706:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21688:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "21688:17:15"
																},
																"nativeSrc": "21688:20:15",
																"nodeType": "YulFunctionCall",
																"src": "21688:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21683:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "21683:1:15"
																}
															]
														},
														{
															"nativeSrc": "21717:25:15",
															"nodeType": "YulAssignment",
															"src": "21717:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21740:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "21740:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21722:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "21722:17:15"
																},
																"nativeSrc": "21722:20:15",
																"nodeType": "YulFunctionCall",
																"src": "21722:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21717:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "21717:1:15"
																}
															]
														},
														{
															"nativeSrc": "21751:16:15",
															"nodeType": "YulAssignment",
															"src": "21751:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21762:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "21762:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21765:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "21765:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21758:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21758:3:15"
																},
																"nativeSrc": "21758:9:15",
																"nodeType": "YulFunctionCall",
																"src": "21758:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21751:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21751:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21791:22:15",
																"nodeType": "YulBlock",
																"src": "21791:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21793:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "21793:16:15"
																			},
																			"nativeSrc": "21793:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "21793:18:15"
																		},
																		"nativeSrc": "21793:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "21793:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21783:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "21783:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21786:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21786:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21780:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "21780:2:15"
																},
																"nativeSrc": "21780:10:15",
																"nodeType": "YulFunctionCall",
																"src": "21780:10:15"
															},
															"nativeSrc": "21777:36:15",
															"nodeType": "YulIf",
															"src": "21777:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "21629:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21660:1:15",
														"nodeType": "YulTypedName",
														"src": "21660:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21663:1:15",
														"nodeType": "YulTypedName",
														"src": "21663:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21669:3:15",
														"nodeType": "YulTypedName",
														"src": "21669:3:15",
														"type": ""
													}
												],
												"src": "21629:191:15"
											},
											{
												"body": {
													"nativeSrc": "21884:40:15",
													"nodeType": "YulBlock",
													"src": "21884:40:15",
													"statements": [
														{
															"nativeSrc": "21895:22:15",
															"nodeType": "YulAssignment",
															"src": "21895:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21911:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "21911:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21905:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "21905:5:15"
																},
																"nativeSrc": "21905:12:15",
																"nodeType": "YulFunctionCall",
																"src": "21905:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21895:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21895:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "21826:98:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21867:5:15",
														"nodeType": "YulTypedName",
														"src": "21867:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21877:6:15",
														"nodeType": "YulTypedName",
														"src": "21877:6:15",
														"type": ""
													}
												],
												"src": "21826:98:15"
											},
											{
												"body": {
													"nativeSrc": "22025:73:15",
													"nodeType": "YulBlock",
													"src": "22025:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22042:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22042:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22047:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22047:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22035:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22035:6:15"
																},
																"nativeSrc": "22035:19:15",
																"nodeType": "YulFunctionCall",
																"src": "22035:19:15"
															},
															"nativeSrc": "22035:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "22035:19:15"
														},
														{
															"nativeSrc": "22063:29:15",
															"nodeType": "YulAssignment",
															"src": "22063:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22082:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22082:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22087:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22087:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22078:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22078:3:15"
																},
																"nativeSrc": "22078:14:15",
																"nodeType": "YulFunctionCall",
																"src": "22078:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "22063:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "22063:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "21930:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21997:3:15",
														"nodeType": "YulTypedName",
														"src": "21997:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "22002:6:15",
														"nodeType": "YulTypedName",
														"src": "22002:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "22013:11:15",
														"nodeType": "YulTypedName",
														"src": "22013:11:15",
														"type": ""
													}
												],
												"src": "21930:168:15"
											},
											{
												"body": {
													"nativeSrc": "22194:283:15",
													"nodeType": "YulBlock",
													"src": "22194:283:15",
													"statements": [
														{
															"nativeSrc": "22204:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "22204:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22250:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "22250:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "22218:31:15",
																	"nodeType": "YulIdentifier",
																	"src": "22218:31:15"
																},
																"nativeSrc": "22218:38:15",
																"nodeType": "YulFunctionCall",
																"src": "22218:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "22208:6:15",
																	"nodeType": "YulTypedName",
																	"src": "22208:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22265:77:15",
															"nodeType": "YulAssignment",
															"src": "22265:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22330:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22330:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22335:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22335:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22272:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "22272:57:15"
																},
																"nativeSrc": "22272:70:15",
																"nodeType": "YulFunctionCall",
																"src": "22272:70:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22265:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22265:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22390:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "22390:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22397:4:15",
																				"nodeType": "YulLiteral",
																				"src": "22397:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22386:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22386:3:15"
																		},
																		"nativeSrc": "22386:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22386:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22404:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22404:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22409:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22409:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "22351:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "22351:34:15"
																},
																"nativeSrc": "22351:65:15",
																"nodeType": "YulFunctionCall",
																"src": "22351:65:15"
															},
															"nativeSrc": "22351:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "22351:65:15"
														},
														{
															"nativeSrc": "22425:46:15",
															"nodeType": "YulAssignment",
															"src": "22425:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22436:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22436:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "22463:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "22463:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "22441:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "22441:21:15"
																		},
																		"nativeSrc": "22441:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22441:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22432:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22432:3:15"
																},
																"nativeSrc": "22432:39:15",
																"nodeType": "YulFunctionCall",
																"src": "22432:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22425:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22425:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22104:373:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22175:5:15",
														"nodeType": "YulTypedName",
														"src": "22175:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "22182:3:15",
														"nodeType": "YulTypedName",
														"src": "22182:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22190:3:15",
														"nodeType": "YulTypedName",
														"src": "22190:3:15",
														"type": ""
													}
												],
												"src": "22104:373:15"
											},
											{
												"body": {
													"nativeSrc": "22683:440:15",
													"nodeType": "YulBlock",
													"src": "22683:440:15",
													"statements": [
														{
															"nativeSrc": "22693:27:15",
															"nodeType": "YulAssignment",
															"src": "22693:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22705:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22705:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22716:3:15",
																		"nodeType": "YulLiteral",
																		"src": "22716:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22701:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22701:3:15"
																},
																"nativeSrc": "22701:19:15",
																"nodeType": "YulFunctionCall",
																"src": "22701:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22693:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22693:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22774:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22774:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22787:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22787:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22798:1:15",
																				"nodeType": "YulLiteral",
																				"src": "22798:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22783:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22783:3:15"
																		},
																		"nativeSrc": "22783:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22783:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22730:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22730:43:15"
																},
																"nativeSrc": "22730:71:15",
																"nodeType": "YulFunctionCall",
																"src": "22730:71:15"
															},
															"nativeSrc": "22730:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "22730:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22855:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22855:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22868:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22868:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22879:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22879:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22864:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22864:3:15"
																		},
																		"nativeSrc": "22864:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22864:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22811:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22811:43:15"
																},
																"nativeSrc": "22811:72:15",
																"nodeType": "YulFunctionCall",
																"src": "22811:72:15"
															},
															"nativeSrc": "22811:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "22811:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22937:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22937:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22950:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22950:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22961:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22961:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22946:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22946:3:15"
																		},
																		"nativeSrc": "22946:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22946:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22893:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22893:43:15"
																},
																"nativeSrc": "22893:72:15",
																"nodeType": "YulFunctionCall",
																"src": "22893:72:15"
															},
															"nativeSrc": "22893:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "22893:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22986:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22986:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22997:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22997:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22982:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22982:3:15"
																		},
																		"nativeSrc": "22982:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22982:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23006:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "23006:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23012:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23012:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23002:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23002:3:15"
																		},
																		"nativeSrc": "23002:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23002:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22975:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22975:6:15"
																},
																"nativeSrc": "22975:48:15",
																"nodeType": "YulFunctionCall",
																"src": "22975:48:15"
															},
															"nativeSrc": "22975:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "22975:48:15"
														},
														{
															"nativeSrc": "23032:84:15",
															"nodeType": "YulAssignment",
															"src": "23032:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "23102:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "23102:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23111:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "23111:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "23040:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "23040:61:15"
																},
																"nativeSrc": "23040:76:15",
																"nodeType": "YulFunctionCall",
																"src": "23040:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23032:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "23032:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "22483:640:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22631:9:15",
														"nodeType": "YulTypedName",
														"src": "22631:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "22643:6:15",
														"nodeType": "YulTypedName",
														"src": "22643:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22651:6:15",
														"nodeType": "YulTypedName",
														"src": "22651:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22659:6:15",
														"nodeType": "YulTypedName",
														"src": "22659:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22667:6:15",
														"nodeType": "YulTypedName",
														"src": "22667:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22678:4:15",
														"nodeType": "YulTypedName",
														"src": "22678:4:15",
														"type": ""
													}
												],
												"src": "22483:640:15"
											},
											{
												"body": {
													"nativeSrc": "23191:79:15",
													"nodeType": "YulBlock",
													"src": "23191:79:15",
													"statements": [
														{
															"nativeSrc": "23201:22:15",
															"nodeType": "YulAssignment",
															"src": "23201:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "23216:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "23216:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23210:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "23210:5:15"
																},
																"nativeSrc": "23210:13:15",
																"nodeType": "YulFunctionCall",
																"src": "23210:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23201:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "23201:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23258:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "23258:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "23232:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "23232:25:15"
																},
																"nativeSrc": "23232:32:15",
																"nodeType": "YulFunctionCall",
																"src": "23232:32:15"
															},
															"nativeSrc": "23232:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "23232:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "23129:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "23169:6:15",
														"nodeType": "YulTypedName",
														"src": "23169:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23177:3:15",
														"nodeType": "YulTypedName",
														"src": "23177:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "23185:5:15",
														"nodeType": "YulTypedName",
														"src": "23185:5:15",
														"type": ""
													}
												],
												"src": "23129:141:15"
											},
											{
												"body": {
													"nativeSrc": "23352:273:15",
													"nodeType": "YulBlock",
													"src": "23352:273:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "23398:83:15",
																"nodeType": "YulBlock",
																"src": "23398:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "23400:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "23400:77:15"
																			},
																			"nativeSrc": "23400:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "23400:79:15"
																		},
																		"nativeSrc": "23400:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "23400:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23373:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "23373:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23382:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23382:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23369:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23369:3:15"
																		},
																		"nativeSrc": "23369:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23369:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23394:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23394:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "23365:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23365:3:15"
																},
																"nativeSrc": "23365:32:15",
																"nodeType": "YulFunctionCall",
																"src": "23365:32:15"
															},
															"nativeSrc": "23362:119:15",
															"nodeType": "YulIf",
															"src": "23362:119:15"
														},
														{
															"nativeSrc": "23491:127:15",
															"nodeType": "YulBlock",
															"src": "23491:127:15",
															"statements": [
																{
																	"nativeSrc": "23506:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "23506:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23520:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23520:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "23510:6:15",
																			"nodeType": "YulTypedName",
																			"src": "23510:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "23535:73:15",
																	"nodeType": "YulAssignment",
																	"src": "23535:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "23580:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "23580:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "23591:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "23591:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23576:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "23576:3:15"
																				},
																				"nativeSrc": "23576:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "23576:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23600:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "23600:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "23545:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "23545:30:15"
																		},
																		"nativeSrc": "23545:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23545:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "23535:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "23535:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "23276:349:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23322:9:15",
														"nodeType": "YulTypedName",
														"src": "23322:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "23333:7:15",
														"nodeType": "YulTypedName",
														"src": "23333:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "23345:6:15",
														"nodeType": "YulTypedName",
														"src": "23345:6:15",
														"type": ""
													}
												],
												"src": "23276:349:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c80636352211e1161008a578063a22cb46511610064578063a22cb46514610221578063b88d4fde1461023d578063c87b56dd14610259578063e985e9c514610289576100cd565b80636352211e146101a357806370a08231146101d357806395d89b4114610203576100cd565b806301ffc9a7146100d157806306fdde0314610101578063081812fc1461011f578063095ea7b31461014f57806323b872dd1461016b57806342842e0e14610187575b5f5ffd5b6100eb60048036038101906100e691906115bf565b6102b9565b6040516100f89190611604565b60405180910390f35b61010961039a565b604051610116919061168d565b60405180910390f35b610139600480360381019061013491906116e0565b610429565b604051610146919061174a565b60405180910390f35b6101696004803603810190610164919061178d565b61046b565b005b610185600480360381019061018091906117cb565b610581565b005b6101a1600480360381019061019c91906117cb565b6105e1565b005b6101bd60048036038101906101b891906116e0565b610600565b6040516101ca919061174a565b60405180910390f35b6101ed60048036038101906101e8919061181b565b610684565b6040516101fa9190611855565b60405180910390f35b61020b610738565b604051610218919061168d565b60405180910390f35b61023b60048036038101906102369190611898565b6107c8565b005b61025760048036038101906102529190611a02565b6107de565b005b610273600480360381019061026e91906116e0565b610840565b604051610280919061168d565b60405180910390f35b6102a3600480360381019061029e9190611a82565b6108a5565b6040516102b09190611604565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610393575061039282610933565b5b9050919050565b60605f80546103a890611aed565b80601f01602080910402602001604051908101604052809291908181526020018280546103d490611aed565b801561041f5780601f106103f65761010080835404028352916020019161041f565b820191905f5260205f20905b81548152906001019060200180831161040257829003601f168201915b5050505050905090565b5f6104338261099c565b60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f61047582610600565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90611b8d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105046109e7565b73ffffffffffffffffffffffffffffffffffffffff16148061053357506105328161052d6109e7565b6108a5565b5b610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056990611c1b565b60405180910390fd5b61057c83836109ee565b505050565b61059261058c6109e7565b82610aa4565b6105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c890611ca9565b60405180910390fd5b6105dc838383610b38565b505050565b6105fb83838360405180602001604052805f8152506107de565b505050565b5f5f61060b83610e24565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290611d11565b60405180910390fd5b80915050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea90611d9f565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461074790611aed565b80601f016020809104026020016040519081016040528092919081815260200182805461077390611aed565b80156107be5780601f10610795576101008083540402835291602001916107be565b820191905f5260205f20905b8154815290600101906020018083116107a157829003601f168201915b5050505050905090565b6107da6107d36109e7565b8383610e5d565b5050565b6107ef6107e96109e7565b83610aa4565b61082e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082590611ca9565b60405180910390fd5b61083a84848484610fc4565b50505050565b606061084b8261099c565b5f610854611020565b90505f8151116108725760405180602001604052805f81525061089d565b8061087c84611036565b60405160200161088d929190611df7565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109a581611100565b6109e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109db90611d11565b60405180910390fd5b50565b5f33905090565b8160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a5e83610600565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f5f610aaf83610600565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610af15750610af081856108a5565b5b80610b2f57508373ffffffffffffffffffffffffffffffffffffffff16610b1784610429565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b5882610600565b73ffffffffffffffffffffffffffffffffffffffff1614610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba590611e8a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1390611f18565b60405180910390fd5b610c298383836001611140565b8273ffffffffffffffffffffffffffffffffffffffff16610c4982610600565b73ffffffffffffffffffffffffffffffffffffffff1614610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9690611e8a565b60405180910390fd5b60045f8281526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282540392505081905550600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508160025f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e1f838383600161125e565b505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec290611f80565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fb79190611604565b60405180910390a3505050565b610fcf848484610b38565b610fdb84848484611264565b61101a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110119061200e565b60405180910390fd5b50505050565b606060405180602001604052805f815250905090565b60605f6001611044846113e6565b0190505f8167ffffffffffffffff811115611062576110616118de565b5b6040519080825280601f01601f1916602001820160405280156110945781602001600182028036833780820191505090505b5090505f82602001820190505b6001156110f5578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816110ea576110e961202c565b5b0494505f85036110a1575b819350505050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff1661112183610e24565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6001811115611258575f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146111d0578060035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546111c89190612086565b925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611257578060035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461124f91906120b9565b925050819055505b5b50505050565b50505050565b5f6112848473ffffffffffffffffffffffffffffffffffffffff16611537565b156113d9578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026112ad6109e7565b8786866040518563ffffffff1660e01b81526004016112cf949392919061213e565b6020604051808303815f875af192505050801561130a57506040513d601f19601f82011682018060405250810190611307919061219c565b60015b611389573d805f8114611338576040519150601f19603f3d011682016040523d82523d5f602084013e61133d565b606091505b505f815103611381576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113789061200e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506113de565b600190505b949350505050565b5f5f5f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611442577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114385761143761202c565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061147f576d04ee2d6d415b85acef810000000083816114755761147461202c565b5b0492506020810190505b662386f26fc1000083106114ae57662386f26fc1000083816114a4576114a361202c565b5b0492506010810190505b6305f5e10083106114d7576305f5e10083816114cd576114cc61202c565b5b0492506008810190505b61271083106114fc5761271083816114f2576114f161202c565b5b0492506004810190505b6064831061151f57606483816115155761151461202c565b5b0492506002810190505b600a831061152e576001810190505b80915050919050565b5f5f8273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61159e8161156a565b81146115a8575f5ffd5b50565b5f813590506115b981611595565b92915050565b5f602082840312156115d4576115d3611562565b5b5f6115e1848285016115ab565b91505092915050565b5f8115159050919050565b6115fe816115ea565b82525050565b5f6020820190506116175f8301846115f5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61165f8261161d565b6116698185611627565b9350611679818560208601611637565b61168281611645565b840191505092915050565b5f6020820190508181035f8301526116a58184611655565b905092915050565b5f819050919050565b6116bf816116ad565b81146116c9575f5ffd5b50565b5f813590506116da816116b6565b92915050565b5f602082840312156116f5576116f4611562565b5b5f611702848285016116cc565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117348261170b565b9050919050565b6117448161172a565b82525050565b5f60208201905061175d5f83018461173b565b92915050565b61176c8161172a565b8114611776575f5ffd5b50565b5f8135905061178781611763565b92915050565b5f5f604083850312156117a3576117a2611562565b5b5f6117b085828601611779565b92505060206117c1858286016116cc565b9150509250929050565b5f5f5f606084860312156117e2576117e1611562565b5b5f6117ef86828701611779565b935050602061180086828701611779565b9250506040611811868287016116cc565b9150509250925092565b5f602082840312156118305761182f611562565b5b5f61183d84828501611779565b91505092915050565b61184f816116ad565b82525050565b5f6020820190506118685f830184611846565b92915050565b611877816115ea565b8114611881575f5ffd5b50565b5f813590506118928161186e565b92915050565b5f5f604083850312156118ae576118ad611562565b5b5f6118bb85828601611779565b92505060206118cc85828601611884565b9150509250929050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61191482611645565b810181811067ffffffffffffffff82111715611933576119326118de565b5b80604052505050565b5f611945611559565b9050611951828261190b565b919050565b5f67ffffffffffffffff8211156119705761196f6118de565b5b61197982611645565b9050602081019050919050565b828183375f83830152505050565b5f6119a66119a184611956565b61193c565b9050828152602081018484840111156119c2576119c16118da565b5b6119cd848285611986565b509392505050565b5f82601f8301126119e9576119e86118d6565b5b81356119f9848260208601611994565b91505092915050565b5f5f5f5f60808587031215611a1a57611a19611562565b5b5f611a2787828801611779565b9450506020611a3887828801611779565b9350506040611a49878288016116cc565b925050606085013567ffffffffffffffff811115611a6a57611a69611566565b5b611a76878288016119d5565b91505092959194509250565b5f5f60408385031215611a9857611a97611562565b5b5f611aa585828601611779565b9250506020611ab685828601611779565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611b0457607f821691505b602082108103611b1757611b16611ac0565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f611b77602183611627565b9150611b8282611b1d565b604082019050919050565b5f6020820190508181035f830152611ba481611b6b565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f5f8201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b5f611c05603d83611627565b9150611c1082611bab565b604082019050919050565b5f6020820190508181035f830152611c3281611bf9565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e655f8201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b5f611c93602d83611627565b9150611c9e82611c39565b604082019050919050565b5f6020820190508181035f830152611cc081611c87565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e20494400000000000000005f82015250565b5f611cfb601883611627565b9150611d0682611cc7565b602082019050919050565b5f6020820190508181035f830152611d2881611cef565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f7420612076615f8201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b5f611d89602983611627565b9150611d9482611d2f565b604082019050919050565b5f6020820190508181035f830152611db681611d7d565b9050919050565b5f81905092915050565b5f611dd18261161d565b611ddb8185611dbd565b9350611deb818560208601611637565b80840191505092915050565b5f611e028285611dc7565b9150611e0e8284611dc7565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f7272656374205f8201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b5f611e74602583611627565b9150611e7f82611e1a565b604082019050919050565b5f6020820190508181035f830152611ea181611e68565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611f02602483611627565b9150611f0d82611ea8565b604082019050919050565b5f6020820190508181035f830152611f2f81611ef6565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c6572000000000000005f82015250565b5f611f6a601983611627565b9150611f7582611f36565b602082019050919050565b5f6020820190508181035f830152611f9781611f5e565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e2045524337323152655f8201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b5f611ff8603283611627565b915061200382611f9e565b604082019050919050565b5f6020820190508181035f83015261202581611fec565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612090826116ad565b915061209b836116ad565b92508282039050818111156120b3576120b2612059565b5b92915050565b5f6120c3826116ad565b91506120ce836116ad565b92508282019050808211156120e6576120e5612059565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f612110826120ec565b61211a81856120f6565b935061212a818560208601611637565b61213381611645565b840191505092915050565b5f6080820190506121515f83018761173b565b61215e602083018661173b565b61216b6040830185611846565b818103606083015261217d8184612106565b905095945050505050565b5f8151905061219681611595565b92915050565b5f602082840312156121b1576121b0611562565b5b5f6121be84828501612188565b9150509291505056fea2646970667358221220daf03df298e84f044f0c2679c7813b872a5090c0daec9b95248c60839a9d6a9c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x289 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1855 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x383 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0x933 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x1AED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x1AED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x402 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x475 DUP3 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x504 PUSH2 0x9E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x533 JUMPI POP PUSH2 0x532 DUP2 PUSH2 0x52D PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST JUMPDEST PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57C DUP4 DUP4 PUSH2 0x9EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x592 PUSH2 0x58C PUSH2 0x9E7 JUMP JUMPDEST DUP3 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DC DUP4 DUP4 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x60B DUP4 PUSH2 0xE24 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EA SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x747 SWAP1 PUSH2 0x1AED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x773 SWAP1 PUSH2 0x1AED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x795 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7DA PUSH2 0x7D3 PUSH2 0x9E7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE5D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x7E9 PUSH2 0x9E7 JUMP JUMPDEST DUP4 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x825 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83A DUP5 DUP5 DUP5 DUP5 PUSH2 0xFC4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x84B DUP3 PUSH2 0x99C JUMP JUMPDEST PUSH0 PUSH2 0x854 PUSH2 0x1020 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x89D JUMP JUMPDEST DUP1 PUSH2 0x87C DUP5 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x88D SWAP3 SWAP2 SWAP1 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A5 DUP2 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DB SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA5E DUP4 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAAF DUP4 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xAF1 JUMPI POP PUSH2 0xAF0 DUP2 DUP6 PUSH2 0x8A5 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB2F JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB17 DUP5 PUSH2 0x429 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB58 DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC13 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC29 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1140 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC49 DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC96 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE1F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x125E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC2 SWAP1 PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFCF DUP5 DUP5 DUP5 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0xFDB DUP5 DUP5 DUP5 DUP5 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x101A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1011 SWAP1 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1044 DUP5 PUSH2 0x13E6 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1062 JUMPI PUSH2 0x1061 PUSH2 0x18DE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1094 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x10F5 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x10EA JUMPI PUSH2 0x10E9 PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x10A1 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1121 DUP4 PUSH2 0xE24 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1258 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D0 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11C8 SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1257 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x124F SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1284 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1537 JUMP JUMPDEST ISZERO PUSH2 0x13D9 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x12AD PUSH2 0x9E7 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x130A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1307 SWAP2 SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1389 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1338 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x133D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1381 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1378 SWAP1 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1442 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1438 JUMPI PUSH2 0x1437 PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x147F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1475 JUMPI PUSH2 0x1474 PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x14AE JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x14A4 JUMPI PUSH2 0x14A3 PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x14D7 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x14CD JUMPI PUSH2 0x14CC PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x14FC JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x14F2 JUMPI PUSH2 0x14F1 PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x151F JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1515 JUMPI PUSH2 0x1514 PUSH2 0x202C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x152E JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x159E DUP2 PUSH2 0x156A JUMP JUMPDEST DUP2 EQ PUSH2 0x15A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B9 DUP2 PUSH2 0x1595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D4 JUMPI PUSH2 0x15D3 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E1 DUP5 DUP3 DUP6 ADD PUSH2 0x15AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FE DUP2 PUSH2 0x15EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1617 PUSH0 DUP4 ADD DUP5 PUSH2 0x15F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x165F DUP3 PUSH2 0x161D JUMP JUMPDEST PUSH2 0x1669 DUP2 DUP6 PUSH2 0x1627 JUMP JUMPDEST SWAP4 POP PUSH2 0x1679 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x1682 DUP2 PUSH2 0x1645 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16A5 DUP2 DUP5 PUSH2 0x1655 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16BF DUP2 PUSH2 0x16AD JUMP JUMPDEST DUP2 EQ PUSH2 0x16C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16DA DUP2 PUSH2 0x16B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F5 JUMPI PUSH2 0x16F4 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1702 DUP5 DUP3 DUP6 ADD PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1734 DUP3 PUSH2 0x170B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1744 DUP2 PUSH2 0x172A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x175D PUSH0 DUP4 ADD DUP5 PUSH2 0x173B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x176C DUP2 PUSH2 0x172A JUMP JUMPDEST DUP2 EQ PUSH2 0x1776 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1787 DUP2 PUSH2 0x1763 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A3 JUMPI PUSH2 0x17A2 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17B0 DUP6 DUP3 DUP7 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17C1 DUP6 DUP3 DUP7 ADD PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E1 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17EF DUP7 DUP3 DUP8 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1800 DUP7 DUP3 DUP8 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1811 DUP7 DUP3 DUP8 ADD PUSH2 0x16CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1830 JUMPI PUSH2 0x182F PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x183D DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x184F DUP2 PUSH2 0x16AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1868 PUSH0 DUP4 ADD DUP5 PUSH2 0x1846 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1877 DUP2 PUSH2 0x15EA JUMP JUMPDEST DUP2 EQ PUSH2 0x1881 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1892 DUP2 PUSH2 0x186E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AE JUMPI PUSH2 0x18AD PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18BB DUP6 DUP3 DUP7 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18CC DUP6 DUP3 DUP7 ADD PUSH2 0x1884 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1914 DUP3 PUSH2 0x1645 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1933 JUMPI PUSH2 0x1932 PUSH2 0x18DE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1945 PUSH2 0x1559 JUMP JUMPDEST SWAP1 POP PUSH2 0x1951 DUP3 DUP3 PUSH2 0x190B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1970 JUMPI PUSH2 0x196F PUSH2 0x18DE JUMP JUMPDEST JUMPDEST PUSH2 0x1979 DUP3 PUSH2 0x1645 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19A6 PUSH2 0x19A1 DUP5 PUSH2 0x1956 JUMP JUMPDEST PUSH2 0x193C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x19C2 JUMPI PUSH2 0x19C1 PUSH2 0x18DA JUMP JUMPDEST JUMPDEST PUSH2 0x19CD DUP5 DUP3 DUP6 PUSH2 0x1986 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19E9 JUMPI PUSH2 0x19E8 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19F9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1994 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A1A JUMPI PUSH2 0x1A19 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A27 DUP8 DUP3 DUP9 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP8 DUP3 DUP9 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1A49 DUP8 DUP3 DUP9 ADD PUSH2 0x16CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A6A JUMPI PUSH2 0x1A69 PUSH2 0x1566 JUMP JUMPDEST JUMPDEST PUSH2 0x1A76 DUP8 DUP3 DUP9 ADD PUSH2 0x19D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A98 JUMPI PUSH2 0x1A97 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AA5 DUP6 DUP3 DUP7 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AB6 DUP6 DUP3 DUP7 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B04 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B17 JUMPI PUSH2 0x1B16 PUSH2 0x1AC0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B77 PUSH1 0x21 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B82 DUP3 PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BA4 DUP2 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C05 PUSH1 0x3D DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C10 DUP3 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 PUSH2 0x1BF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C93 PUSH1 0x2D DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9E DUP3 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CC0 DUP2 PUSH2 0x1C87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CFB PUSH1 0x18 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D06 DUP3 PUSH2 0x1CC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D28 DUP2 PUSH2 0x1CEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D89 PUSH1 0x29 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D94 DUP3 PUSH2 0x1D2F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 PUSH2 0x1D7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD1 DUP3 PUSH2 0x161D JUMP JUMPDEST PUSH2 0x1DDB DUP2 DUP6 PUSH2 0x1DBD JUMP JUMPDEST SWAP4 POP PUSH2 0x1DEB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1637 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E02 DUP3 DUP6 PUSH2 0x1DC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E0E DUP3 DUP5 PUSH2 0x1DC7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E74 PUSH1 0x25 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7F DUP3 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EA1 DUP2 PUSH2 0x1E68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F02 PUSH1 0x24 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0D DUP3 PUSH2 0x1EA8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F2F DUP2 PUSH2 0x1EF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6A PUSH1 0x19 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F75 DUP3 PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F97 DUP2 PUSH2 0x1F5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF8 PUSH1 0x32 DUP4 PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP PUSH2 0x2003 DUP3 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2025 DUP2 PUSH2 0x1FEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2090 DUP3 PUSH2 0x16AD JUMP JUMPDEST SWAP2 POP PUSH2 0x209B DUP4 PUSH2 0x16AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x20B3 JUMPI PUSH2 0x20B2 PUSH2 0x2059 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20C3 DUP3 PUSH2 0x16AD JUMP JUMPDEST SWAP2 POP PUSH2 0x20CE DUP4 PUSH2 0x16AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20E6 JUMPI PUSH2 0x20E5 PUSH2 0x2059 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2110 DUP3 PUSH2 0x20EC JUMP JUMPDEST PUSH2 0x211A DUP2 DUP6 PUSH2 0x20F6 JUMP JUMPDEST SWAP4 POP PUSH2 0x212A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x2133 DUP2 PUSH2 0x1645 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2151 PUSH0 DUP4 ADD DUP8 PUSH2 0x173B JUMP JUMPDEST PUSH2 0x215E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x173B JUMP JUMPDEST PUSH2 0x216B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1846 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x217D DUP2 DUP5 PUSH2 0x2106 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2196 DUP2 PUSH2 0x1595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B1 JUMPI PUSH2 0x21B0 PUSH2 0x1562 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21BE DUP5 DUP3 DUP6 ADD PUSH2 0x2188 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA CREATE RETURNDATASIZE CALLCODE SWAP9 0xE8 0x4F DIV 0x4F 0xC 0x26 PUSH26 0xC7813B872A5090C0DAEC9B95248C60839A9D6A9C64736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "628:16327:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:11:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:2:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;12768:171:2:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;415:696:10:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;788:280;1032:21;788:280;1088:6;1081:13;;;;;415:696;;;:::o;7256:126:2:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;9889:890:13:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:7:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:329::-;5467:6;5516:2;5504:9;5495:7;5491:23;5487:32;5484:119;;;5522:79;;:::i;:::-;5484:119;5642:1;5667:53;5712:7;5703:6;5692:9;5688:22;5667:53;:::i;:::-;5657:63;;5613:117;5408:329;;;;:::o;5743:118::-;5830:24;5848:5;5830:24;:::i;:::-;5825:3;5818:37;5743:118;;:::o;5867:222::-;5960:4;5998:2;5987:9;5983:18;5975:26;;6011:71;6079:1;6068:9;6064:17;6055:6;6011:71;:::i;:::-;5867:222;;;;:::o;6095:116::-;6165:21;6180:5;6165:21;:::i;:::-;6158:5;6155:32;6145:60;;6201:1;6198;6191:12;6145:60;6095:116;:::o;6217:133::-;6260:5;6298:6;6285:20;6276:29;;6314:30;6338:5;6314:30;:::i;:::-;6217:133;;;;:::o;6356:468::-;6421:6;6429;6478:2;6466:9;6457:7;6453:23;6449:32;6446:119;;;6484:79;;:::i;:::-;6446:119;6604:1;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;:::i;:::-;6619:63;;6575:117;6731:2;6757:50;6799:7;6790:6;6779:9;6775:22;6757:50;:::i;:::-;6747:60;;6702:115;6356:468;;;;;:::o;6830:117::-;6939:1;6936;6929:12;6953:117;7062:1;7059;7052:12;7076:180;7124:77;7121:1;7114:88;7221:4;7218:1;7211:15;7245:4;7242:1;7235:15;7262:281;7345:27;7367:4;7345:27;:::i;:::-;7337:6;7333:40;7475:6;7463:10;7460:22;7439:18;7427:10;7424:34;7421:62;7418:88;;;7486:18;;:::i;:::-;7418:88;7526:10;7522:2;7515:22;7305:238;7262:281;;:::o;7549:129::-;7583:6;7610:20;;:::i;:::-;7600:30;;7639:33;7667:4;7659:6;7639:33;:::i;:::-;7549:129;;;:::o;7684:307::-;7745:4;7835:18;7827:6;7824:30;7821:56;;;7857:18;;:::i;:::-;7821:56;7895:29;7917:6;7895:29;:::i;:::-;7887:37;;7979:4;7973;7969:15;7961:23;;7684:307;;;:::o;7997:148::-;8095:6;8090:3;8085;8072:30;8136:1;8127:6;8122:3;8118:16;8111:27;7997:148;;;:::o;8151:423::-;8228:5;8253:65;8269:48;8310:6;8269:48;:::i;:::-;8253:65;:::i;:::-;8244:74;;8341:6;8334:5;8327:21;8379:4;8372:5;8368:16;8417:3;8408:6;8403:3;8399:16;8396:25;8393:112;;;8424:79;;:::i;:::-;8393:112;8514:54;8561:6;8556:3;8551;8514:54;:::i;:::-;8234:340;8151:423;;;;;:::o;8593:338::-;8648:5;8697:3;8690:4;8682:6;8678:17;8674:27;8664:122;;8705:79;;:::i;:::-;8664:122;8822:6;8809:20;8847:78;8921:3;8913:6;8906:4;8898:6;8894:17;8847:78;:::i;:::-;8838:87;;8654:277;8593:338;;;;:::o;8937:943::-;9032:6;9040;9048;9056;9105:3;9093:9;9084:7;9080:23;9076:33;9073:120;;;9112:79;;:::i;:::-;9073:120;9232:1;9257:53;9302:7;9293:6;9282:9;9278:22;9257:53;:::i;:::-;9247:63;;9203:117;9359:2;9385:53;9430:7;9421:6;9410:9;9406:22;9385:53;:::i;:::-;9375:63;;9330:118;9487:2;9513:53;9558:7;9549:6;9538:9;9534:22;9513:53;:::i;:::-;9503:63;;9458:118;9643:2;9632:9;9628:18;9615:32;9674:18;9666:6;9663:30;9660:117;;;9696:79;;:::i;:::-;9660:117;9801:62;9855:7;9846:6;9835:9;9831:22;9801:62;:::i;:::-;9791:72;;9586:287;8937:943;;;;;;;:::o;9886:474::-;9954:6;9962;10011:2;9999:9;9990:7;9986:23;9982:32;9979:119;;;10017:79;;:::i;:::-;9979:119;10137:1;10162:53;10207:7;10198:6;10187:9;10183:22;10162:53;:::i;:::-;10152:63;;10108:117;10264:2;10290:53;10335:7;10326:6;10315:9;10311:22;10290:53;:::i;:::-;10280:63;;10235:118;9886:474;;;;;:::o;10366:180::-;10414:77;10411:1;10404:88;10511:4;10508:1;10501:15;10535:4;10532:1;10525:15;10552:320;10596:6;10633:1;10627:4;10623:12;10613:22;;10680:1;10674:4;10670:12;10701:18;10691:81;;10757:4;10749:6;10745:17;10735:27;;10691:81;10819:2;10811:6;10808:14;10788:18;10785:38;10782:84;;10838:18;;:::i;:::-;10782:84;10603:269;10552:320;;;:::o;10878:220::-;11018:34;11014:1;11006:6;11002:14;10995:58;11087:3;11082:2;11074:6;11070:15;11063:28;10878:220;:::o;11104:366::-;11246:3;11267:67;11331:2;11326:3;11267:67;:::i;:::-;11260:74;;11343:93;11432:3;11343:93;:::i;:::-;11461:2;11456:3;11452:12;11445:19;;11104:366;;;:::o;11476:419::-;11642:4;11680:2;11669:9;11665:18;11657:26;;11729:9;11723:4;11719:20;11715:1;11704:9;11700:17;11693:47;11757:131;11883:4;11757:131;:::i;:::-;11749:139;;11476:419;;;:::o;11901:248::-;12041:34;12037:1;12029:6;12025:14;12018:58;12110:31;12105:2;12097:6;12093:15;12086:56;11901:248;:::o;12155:366::-;12297:3;12318:67;12382:2;12377:3;12318:67;:::i;:::-;12311:74;;12394:93;12483:3;12394:93;:::i;:::-;12512:2;12507:3;12503:12;12496:19;;12155:366;;;:::o;12527:419::-;12693:4;12731:2;12720:9;12716:18;12708:26;;12780:9;12774:4;12770:20;12766:1;12755:9;12751:17;12744:47;12808:131;12934:4;12808:131;:::i;:::-;12800:139;;12527:419;;;:::o;12952:232::-;13092:34;13088:1;13080:6;13076:14;13069:58;13161:15;13156:2;13148:6;13144:15;13137:40;12952:232;:::o;13190:366::-;13332:3;13353:67;13417:2;13412:3;13353:67;:::i;:::-;13346:74;;13429:93;13518:3;13429:93;:::i;:::-;13547:2;13542:3;13538:12;13531:19;;13190:366;;;:::o;13562:419::-;13728:4;13766:2;13755:9;13751:18;13743:26;;13815:9;13809:4;13805:20;13801:1;13790:9;13786:17;13779:47;13843:131;13969:4;13843:131;:::i;:::-;13835:139;;13562:419;;;:::o;13987:174::-;14127:26;14123:1;14115:6;14111:14;14104:50;13987:174;:::o;14167:366::-;14309:3;14330:67;14394:2;14389:3;14330:67;:::i;:::-;14323:74;;14406:93;14495:3;14406:93;:::i;:::-;14524:2;14519:3;14515:12;14508:19;;14167:366;;;:::o;14539:419::-;14705:4;14743:2;14732:9;14728:18;14720:26;;14792:9;14786:4;14782:20;14778:1;14767:9;14763:17;14756:47;14820:131;14946:4;14820:131;:::i;:::-;14812:139;;14539:419;;;:::o;14964:228::-;15104:34;15100:1;15092:6;15088:14;15081:58;15173:11;15168:2;15160:6;15156:15;15149:36;14964:228;:::o;15198:366::-;15340:3;15361:67;15425:2;15420:3;15361:67;:::i;:::-;15354:74;;15437:93;15526:3;15437:93;:::i;:::-;15555:2;15550:3;15546:12;15539:19;;15198:366;;;:::o;15570:419::-;15736:4;15774:2;15763:9;15759:18;15751:26;;15823:9;15817:4;15813:20;15809:1;15798:9;15794:17;15787:47;15851:131;15977:4;15851:131;:::i;:::-;15843:139;;15570:419;;;:::o;15995:148::-;16097:11;16134:3;16119:18;;15995:148;;;;:::o;16149:390::-;16255:3;16283:39;16316:5;16283:39;:::i;:::-;16338:89;16420:6;16415:3;16338:89;:::i;:::-;16331:96;;16436:65;16494:6;16489:3;16482:4;16475:5;16471:16;16436:65;:::i;:::-;16526:6;16521:3;16517:16;16510:23;;16259:280;16149:390;;;;:::o;16545:435::-;16725:3;16747:95;16838:3;16829:6;16747:95;:::i;:::-;16740:102;;16859:95;16950:3;16941:6;16859:95;:::i;:::-;16852:102;;16971:3;16964:10;;16545:435;;;;;:::o;16986:224::-;17126:34;17122:1;17114:6;17110:14;17103:58;17195:7;17190:2;17182:6;17178:15;17171:32;16986:224;:::o;17216:366::-;17358:3;17379:67;17443:2;17438:3;17379:67;:::i;:::-;17372:74;;17455:93;17544:3;17455:93;:::i;:::-;17573:2;17568:3;17564:12;17557:19;;17216:366;;;:::o;17588:419::-;17754:4;17792:2;17781:9;17777:18;17769:26;;17841:9;17835:4;17831:20;17827:1;17816:9;17812:17;17805:47;17869:131;17995:4;17869:131;:::i;:::-;17861:139;;17588:419;;;:::o;18013:223::-;18153:34;18149:1;18141:6;18137:14;18130:58;18222:6;18217:2;18209:6;18205:15;18198:31;18013:223;:::o;18242:366::-;18384:3;18405:67;18469:2;18464:3;18405:67;:::i;:::-;18398:74;;18481:93;18570:3;18481:93;:::i;:::-;18599:2;18594:3;18590:12;18583:19;;18242:366;;;:::o;18614:419::-;18780:4;18818:2;18807:9;18803:18;18795:26;;18867:9;18861:4;18857:20;18853:1;18842:9;18838:17;18831:47;18895:131;19021:4;18895:131;:::i;:::-;18887:139;;18614:419;;;:::o;19039:175::-;19179:27;19175:1;19167:6;19163:14;19156:51;19039:175;:::o;19220:366::-;19362:3;19383:67;19447:2;19442:3;19383:67;:::i;:::-;19376:74;;19459:93;19548:3;19459:93;:::i;:::-;19577:2;19572:3;19568:12;19561:19;;19220:366;;;:::o;19592:419::-;19758:4;19796:2;19785:9;19781:18;19773:26;;19845:9;19839:4;19835:20;19831:1;19820:9;19816:17;19809:47;19873:131;19999:4;19873:131;:::i;:::-;19865:139;;19592:419;;;:::o;20017:237::-;20157:34;20153:1;20145:6;20141:14;20134:58;20226:20;20221:2;20213:6;20209:15;20202:45;20017:237;:::o;20260:366::-;20402:3;20423:67;20487:2;20482:3;20423:67;:::i;:::-;20416:74;;20499:93;20588:3;20499:93;:::i;:::-;20617:2;20612:3;20608:12;20601:19;;20260:366;;;:::o;20632:419::-;20798:4;20836:2;20825:9;20821:18;20813:26;;20885:9;20879:4;20875:20;20871:1;20860:9;20856:17;20849:47;20913:131;21039:4;20913:131;:::i;:::-;20905:139;;20632:419;;;:::o;21057:180::-;21105:77;21102:1;21095:88;21202:4;21199:1;21192:15;21226:4;21223:1;21216:15;21243:180;21291:77;21288:1;21281:88;21388:4;21385:1;21378:15;21412:4;21409:1;21402:15;21429:194;21469:4;21489:20;21507:1;21489:20;:::i;:::-;21484:25;;21523:20;21541:1;21523:20;:::i;:::-;21518:25;;21567:1;21564;21560:9;21552:17;;21591:1;21585:4;21582:11;21579:37;;;21596:18;;:::i;:::-;21579:37;21429:194;;;;:::o;21629:191::-;21669:3;21688:20;21706:1;21688:20;:::i;:::-;21683:25;;21722:20;21740:1;21722:20;:::i;:::-;21717:25;;21765:1;21762;21758:9;21751:16;;21786:3;21783:1;21780:10;21777:36;;;21793:18;;:::i;:::-;21777:36;21629:191;;;;:::o;21826:98::-;21877:6;21911:5;21905:12;21895:22;;21826:98;;;:::o;21930:168::-;22013:11;22047:6;22042:3;22035:19;22087:4;22082:3;22078:14;22063:29;;21930:168;;;;:::o;22104:373::-;22190:3;22218:38;22250:5;22218:38;:::i;:::-;22272:70;22335:6;22330:3;22272:70;:::i;:::-;22265:77;;22351:65;22409:6;22404:3;22397:4;22390:5;22386:16;22351:65;:::i;:::-;22441:29;22463:6;22441:29;:::i;:::-;22436:3;22432:39;22425:46;;22194:283;22104:373;;;;:::o;22483:640::-;22678:4;22716:3;22705:9;22701:19;22693:27;;22730:71;22798:1;22787:9;22783:17;22774:6;22730:71;:::i;:::-;22811:72;22879:2;22868:9;22864:18;22855:6;22811:72;:::i;:::-;22893;22961:2;22950:9;22946:18;22937:6;22893:72;:::i;:::-;23012:9;23006:4;23002:20;22997:2;22986:9;22982:18;22975:48;23040:76;23111:4;23102:6;23040:76;:::i;:::-;23032:84;;22483:640;;;;;;;:::o;23129:141::-;23185:5;23216:6;23210:13;23201:22;;23232:32;23258:5;23232:32;:::i;:::-;23129:141;;;;:::o;23276:349::-;23345:6;23394:2;23382:9;23373:7;23369:23;23365:32;23362:119;;;23400:79;;:::i;:::-;23362:119;23520:1;23545:63;23600:7;23591:6;23580:9;23576:22;23545:63;:::i;:::-;23535:73;;23491:127;23276:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1740200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2908",
								"getApproved(uint256)": "5258",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "3005",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2306",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "2244",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 15
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2683,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2705,
									"end": 2712,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2701,
									"end": 2724,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 2697,
									"end": 2729,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 2732,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "tag",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "tag",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2873,
									"end": 2874,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2862,
									"end": 2871,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2852,
									"end": 2876,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2903,
									"end": 2921,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2892,
									"end": 2922,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 2925,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "tag",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "tag",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 3096,
									"end": 3103,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3087,
									"end": 3093,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3072,
									"end": 3094,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 3030,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "tag",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2823,
									"end": 3114,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3174,
									"end": 3176,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3163,
									"end": 3172,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3159,
									"end": 3177,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3153,
									"end": 3178,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3194,
									"end": 3224,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 3227,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "tag",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "tag",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 3398,
									"end": 3405,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3378,
									"end": 3387,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3374,
									"end": 3396,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 3332,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "tag",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3124,
									"end": 3416,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 3423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3481,
									"end": 3487,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3520,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3429,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3582,
									"end": 3659,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3660,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3679,
									"end": 3683,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 3676,
									"end": 3677,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 3669,
									"end": 3684,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3802,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3869,
									"end": 3887,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3913,
									"end": 3930,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "tag",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3987,
									"end": 3989,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3976,
									"end": 3990,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 3956,
									"end": 3974,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3953,
									"end": 3991,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 4006,
									"end": 4024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "tag",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "tag",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3771,
									"end": 4040,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3720,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4095,
									"end": 4099,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4141,
									"end": 4144,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4138,
									"end": 4139,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4274,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4261,
									"end": 4275,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4257,
									"end": 4280,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4193,
									"end": 4286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4336,
									"end": 4344,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4391,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4376,
									"end": 4392,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4292,
									"end": 4399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4474,
									"end": 4480,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4508,
									"end": 4526,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 4577,
									"end": 4643,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4575,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 4547,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "tag",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "92"
								},
								{
									"begin": 4695,
									"end": 4703,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 4684,
									"end": 4693,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 4665,
									"end": 4704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "tag",
									"source": 15,
									"value": "92"
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4733,
									"end": 4742,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 4726,
									"end": 4731,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4722,
									"end": 4743,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4786,
									"end": 4790,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4776,
									"end": 4784,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 4772,
									"end": 4791,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4765,
									"end": 4770,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4762,
									"end": 4792,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4841,
									"end": 4848,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4870,
									"end": 4875,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4804,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4941,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4887,
									"end": 4947,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "96"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 5081,
									"end": 5086,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 5063,
									"end": 5087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "tag",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 5054,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "tag",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 5036,
									"end": 5089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "tag",
									"source": 15,
									"value": "96"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4953,
									"end": 5095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5144,
									"end": 5147,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5165,
									"end": 5170,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5101,
									"end": 5176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 5323,
									"end": 5330,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 5292,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "tag",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 5426,
									"end": 5442,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 5402,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "tag",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5394,
									"end": 5400,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5387,
									"end": 5391,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5381,
									"end": 5392,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 5353,
									"end": 5444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "tag",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5340,
									"end": 5445,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5258,
									"end": 5451,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5182,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5502,
									"end": 5505,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5523,
									"end": 5524,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5457,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 5613,
									"end": 5645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "tag",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5704,
									"end": 5710,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 5654,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "tag",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5589,
									"end": 5725,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5536,
									"end": 5725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5801,
									"end": 5806,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5798,
									"end": 5812,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 5899,
									"end": 5900,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5897,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 5862,
									"end": 5901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "tag",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5835,
									"end": 5836,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5824,
									"end": 5837,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5731,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6024,
									"end": 6026,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6016,
									"end": 6027,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "115"
								},
								{
									"begin": 6090,
									"end": 6095,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 6058,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "tag",
									"source": 15,
									"value": "115"
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 6160,
									"end": 6170,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 6142,
									"end": 6171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "tag",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6128,
									"end": 6172,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6325,
									"end": 6327,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 6313,
									"end": 6323,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6310,
									"end": 6328,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6346,
									"end": 6354,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "tag",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 6443,
									"end": 6446,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 6425,
									"end": 6447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "tag",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6415,
									"end": 6423,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6411,
									"end": 6448,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 6369,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "tag",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "tag",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5923,
									"end": 6466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6526,
									"end": 6534,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6570,
									"end": 6574,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6566,
									"end": 6582,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6472,
									"end": 6589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6722,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6705,
									"end": 6706,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 6701,
									"end": 6714,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 6672,
									"end": 6723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "tag",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6668,
									"end": 6724,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 6753,
									"end": 6757,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 6747,
									"end": 6751,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6743,
									"end": 6758,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6646,
									"end": 6764,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 7016,
									"end": 7019,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 6991,
									"end": 7020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "tag",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7053,
									"end": 7056,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7050,
									"end": 7051,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 7046,
									"end": 7057,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 7040,
									"end": 7044,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7037,
									"end": 7058,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6769,
									"end": 7064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "tag",
									"source": 15,
									"value": "7"
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "126"
								},
								{
									"begin": 7219,
									"end": 7222,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 7186,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "tag",
									"source": 15,
									"value": "126"
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7288,
									"end": 7306,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7280,
									"end": 7286,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 7277,
									"end": 7307,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "127"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "128"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 7310,
									"end": 7328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "tag",
									"source": 15,
									"value": "128"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "tag",
									"source": 15,
									"value": "127"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "129"
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7380,
									"end": 7391,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 7354,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "tag",
									"source": 15,
									"value": "129"
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7485,
									"end": 7489,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 7439,
									"end": 7506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "tag",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7561,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7589,
									"end": 7591,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 7581,
									"end": 7587,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7578,
									"end": 7592,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 7606,
									"end": 7607,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "132"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 8280,
									"end": 8286,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "133"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8329,
									"end": 8338,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8324,
									"end": 8327,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 8320,
									"end": 8339,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8314,
									"end": 8340,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "tag",
									"source": 15,
									"value": "133"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "134"
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 8433,
									"end": 8438,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 8380,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "tag",
									"source": 15,
									"value": "134"
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8374,
									"end": 8378,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 8367,
									"end": 8448,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 8236,
									"end": 8458,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "131"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "tag",
									"source": 15,
									"value": "132"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 7649,
									"end": 7658,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 7641,
									"end": 7647,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "135"
								},
								{
									"begin": 7719,
									"end": 7723,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 7687,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "tag",
									"source": 15,
									"value": "135"
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 15,
									"value": "136"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7774,
									"end": 7781,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 7768,
									"end": 7782,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "138"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 7844,
									"end": 7863,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7838,
									"end": 7864,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7823,
									"end": 7865,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 7896,
									"end": 7902,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7892,
									"end": 7906,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7951,
									"end": 7953,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 7936,
									"end": 7954,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7797,
									"end": 7801,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "136"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 15,
									"value": "138"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 7987,
									"end": 7994,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7984,
									"end": 8003,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "139"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8054,
									"end": 8063,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 8045,
									"end": 8064,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8039,
									"end": 8065,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "140"
								},
								{
									"begin": 8139,
									"end": 8143,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 8131,
									"end": 8137,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 8127,
									"end": 8144,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 8116,
									"end": 8125,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 8097,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "tag",
									"source": 15,
									"value": "140"
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 8082,
									"end": 8146,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 8004,
									"end": 8160,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "tag",
									"source": 15,
									"value": "139"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 8202,
									"end": 8203,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 8194,
									"end": 8200,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 8190,
									"end": 8204,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 8186,
									"end": 8208,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 8173,
									"end": 8209,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "tag",
									"source": 15,
									"value": "131"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7069,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220daf03df298e84f044f0c2679c7813b872a5090c0daec9b95248c60839a9d6a9c64736f6c634300081e0033",
									".code": [
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1827,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4030,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4094,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4064,
											"end": 4095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4064,
											"end": 4095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3597,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3702,
											"end": 3707,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3686,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3686,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3698,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3686,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3735,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3711,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3665,
											"end": 3835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4820,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4820,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4820,
											"end": 4832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4820,
											"end": 4832,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4820,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4801,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4793,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4903,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4903,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4903,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4903,
											"end": 4931,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4903,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5154,
											"end": 5158,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5162,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5164,
											"end": 5171,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5137,
											"end": 5176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2306,
											"end": 2313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2297,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2297,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2297,
											"end": 2314,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2297,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2324,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2402,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2033,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2020,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2126,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4282,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4282,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4263,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5436,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 5436,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5436,
											"end": 5448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5436,
											"end": 5448,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 5436,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5417,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5409,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 5549,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5555,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5518,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2957,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2957,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4532,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4542,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13547,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 13555,
											"end": 13562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13547,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 13547,
											"end": 13563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13547,
											"end": 13563,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 13547,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 13539,
											"end": 13592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13466,
											"end": 13599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12869,
											"end": 12871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12857,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12858,
											"end": 12865,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12924,
											"end": 12931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12920,
											"end": 12922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 12910,
											"end": 12917,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12895,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 12895,
											"end": 12918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12768,
											"end": 12939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7633,
											"end": 7637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7680,
											"end": 7687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 7665,
											"end": 7688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7717,
											"end": 7722,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7713,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7743,
											"end": 7748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7750,
											"end": 7757,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7726,
											"end": 7758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7786,
											"end": 7793,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7774,
											"end": 7781,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7762,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7762,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7698,
											"end": 7794,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7698,
											"end": 7794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7698,
											"end": 7794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7540,
											"end": 7801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11577,
											"end": 11581,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 11565,
											"end": 11572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11550,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 11550,
											"end": 11573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 11542,
											"end": 11623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11655,
											"end": 11656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11641,
											"end": 11643,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 11633,
											"end": 11698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 11730,
											"end": 11734,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11749,
											"end": 11750,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11709,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 11709,
											"end": 11751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11878,
											"end": 11882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 11866,
											"end": 11873,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11851,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 11851,
											"end": 11874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 11843,
											"end": 11924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12008,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12009,
											"end": 12016,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12480,
											"end": 12481,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12461,
											"end": 12470,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12471,
											"end": 12475,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12512,
											"end": 12513,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12495,
											"end": 12504,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12505,
											"end": 12507,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12552,
											"end": 12554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12540,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12541,
											"end": 12548,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12589,
											"end": 12596,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12585,
											"end": 12587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12579,
											"end": 12583,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 12608,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 12628,
											"end": 12632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12634,
											"end": 12636,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12638,
											"end": 12645,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12647,
											"end": 12648,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12608,
											"end": 12627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 12608,
											"end": 12649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12608,
											"end": 12649,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 12608,
											"end": 12649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 12656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6953,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6838,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6904,
											"end": 6911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 6946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 6946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13225,
											"end": 13233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13216,
											"end": 13221,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 13208,
											"end": 13263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13311,
											"end": 13319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13291,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13292,
											"end": 13297,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13299,
											"end": 13307,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13356,
											"end": 13364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13349,
											"end": 13354,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13366,
											"end": 13374,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 13334,
											"end": 13375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13075,
											"end": 13382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6584,
											"end": 6588,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6590,
											"end": 6592,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6594,
											"end": 6601,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6574,
											"end": 6602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6643,
											"end": 6647,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6653,
											"end": 6660,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6662,
											"end": 6666,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6620,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6620,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6612,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 471,
											"end": 484,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 537,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 537,
											"end": 554,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 537,
											"end": 558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 595,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 572,
											"end": 613,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 572,
											"end": 613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 627,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 726,
											"end": 761,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 726,
											"end": 761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 795,
											"end": 799,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 819,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 819,
											"end": 824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 819,
											"end": 824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 958,
											"end": 966,
											"name": "PUSH",
											"source": 10,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 946,
											"end": 951,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 942,
											"end": 956,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 937,
											"end": 967,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 932,
											"end": 935,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 924,
											"end": 968,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1003,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1041,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 415,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7256,
											"end": 7382,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7256,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7344,
											"end": 7375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 7353,
											"end": 7360,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7344,
											"end": 7361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 7344,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7344,
											"end": 7375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7375,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7337,
											"end": 7375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7337,
											"end": 7375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7256,
											"end": 7382,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7256,
											"end": 7382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7256,
											"end": 7382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7256,
											"end": 7382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15882,
											"end": 15883,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15870,
											"end": 15879,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15919,
											"end": 15920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15903,
											"end": 15907,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15950,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15951,
											"end": 15955,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 15941,
											"end": 15969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16015,
											"end": 16016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16001,
											"end": 16003,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15997,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 15997,
											"end": 16078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16047,
											"end": 16049,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 16037,
											"end": 16063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15997,
											"end": 16078,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 15997,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 16094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16800,
											"end": 16953,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 16800,
											"end": 16953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16800,
											"end": 16953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16800,
											"end": 16953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16800,
											"end": 16953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16800,
											"end": 16953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16800,
											"end": 16953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14300,
											"end": 14304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14320,
											"end": 14335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 14320,
											"end": 14322,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 14320,
											"end": 14335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14320,
											"end": 14335,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 14320,
											"end": 14335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14371,
											"end": 14373,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 14392,
											"end": 14404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 14392,
											"end": 14402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 14392,
											"end": 14404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14392,
											"end": 14404,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 14392,
											"end": 14404,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14412,
											"end": 14419,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14421,
											"end": 14425,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 14355,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 14355,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14610,
											"end": 14611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14593,
											"end": 14599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14593,
											"end": 14606,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14593,
											"end": 14611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 14635,
											"end": 14695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14862,
											"end": 14868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14856,
											"end": 14869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14847,
											"end": 14853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14843,
											"end": 14845,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14839,
											"end": 14854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14832,
											"end": 14870,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14486,
											"end": 14527,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 14486,
											"end": 14527,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14486,
											"end": 14527,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14476,
											"end": 14482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14961,
											"end": 14965,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14954,
											"end": 14965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14954,
											"end": 14965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9975,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10026,
											"end": 10032,
											"name": "PUSH",
											"source": 13,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10061,
											"end": 10067,
											"name": "PUSH",
											"source": 13,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 10052,
											"end": 10067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10129,
											"end": 10144,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 10164,
											"end": 10179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10241,
											"end": 10256,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10285,
											"end": 10291,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 10276,
											"end": 10291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10362,
											"end": 10367,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10353,
											"end": 10367,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10396,
											"end": 10401,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 10387,
											"end": 10401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10462,
											"end": 10476,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 10496,
											"end": 10510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10614,
											"end": 10619,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 10605,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 10680,
											"end": 10685,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9889,
											"end": 10779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5518,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5495,
											"end": 5502,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5487,
											"end": 5519,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 5522,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 5712,
											"end": 5719,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5688,
											"end": 5710,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 5667,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5613,
											"end": 5730,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 5848,
											"end": 5853,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 5830,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5825,
											"end": 5828,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5818,
											"end": 5855,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5743,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5960,
											"end": 5964,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6064,
											"end": 6081,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 6011,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 6165,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6158,
											"end": 6163,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6155,
											"end": 6187,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6203,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6095,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6285,
											"end": 6305,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6478,
											"end": 6480,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6453,
											"end": 6476,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6449,
											"end": 6481,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 6484,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 6674,
											"end": 6681,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6665,
											"end": 6671,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 6629,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6575,
											"end": 6692,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6731,
											"end": 6733,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 6799,
											"end": 6806,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 6757,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7124,
											"end": 7201,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7202,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7211,
											"end": 7226,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 7367,
											"end": 7371,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 7345,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7333,
											"end": 7373,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7463,
											"end": 7473,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7460,
											"end": 7482,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7427,
											"end": 7437,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7424,
											"end": 7458,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7421,
											"end": 7483,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 7486,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7522,
											"end": 7524,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7537,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7305,
											"end": 7543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7262,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 7610,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 7639,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7549,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7745,
											"end": 7749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 7857,
											"end": 7875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 7895,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7984,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7684,
											"end": 7991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8072,
											"end": 8102,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8118,
											"end": 8134,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8111,
											"end": 8138,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7997,
											"end": 8145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 8269,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 8253,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8334,
											"end": 8339,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8327,
											"end": 8348,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8377,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8368,
											"end": 8384,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8417,
											"end": 8420,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8399,
											"end": 8415,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 8424,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8556,
											"end": 8559,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8551,
											"end": 8554,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 8514,
											"end": 8568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8234,
											"end": 8574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8648,
											"end": 8653,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8700,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8678,
											"end": 8695,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8674,
											"end": 8701,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8809,
											"end": 8829,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8906,
											"end": 8910,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8894,
											"end": 8911,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 8847,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8654,
											"end": 8931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9032,
											"end": 9038,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9054,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9076,
											"end": 9109,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 9112,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 9302,
											"end": 9309,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9278,
											"end": 9300,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 9257,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9203,
											"end": 9320,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9359,
											"end": 9361,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9410,
											"end": 9419,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9406,
											"end": 9428,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 9385,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9330,
											"end": 9448,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 9558,
											"end": 9565,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 9513,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9458,
											"end": 9576,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9643,
											"end": 9645,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9615,
											"end": 9647,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9666,
											"end": 9672,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9663,
											"end": 9693,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 9696,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "tag",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 9855,
											"end": 9862,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9835,
											"end": 9844,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9831,
											"end": 9853,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 9801,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9586,
											"end": 9873,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10011,
											"end": 10013,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9986,
											"end": 10009,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9982,
											"end": 10014,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 10017,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10187,
											"end": 10196,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10183,
											"end": 10205,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 10162,
											"end": 10215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10108,
											"end": 10225,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10311,
											"end": 10333,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 10290,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "tag",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10235,
											"end": 10353,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10414,
											"end": 10491,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10492,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10511,
											"end": 10515,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 10508,
											"end": 10509,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 10501,
											"end": 10516,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10540,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10596,
											"end": 10602,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10634,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10623,
											"end": 10635,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10674,
											"end": 10678,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10670,
											"end": 10682,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10757,
											"end": 10761,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 10749,
											"end": 10755,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "tag",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10811,
											"end": 10817,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10808,
											"end": 10822,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10788,
											"end": 10806,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10785,
											"end": 10823,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 10838,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "tag",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10603,
											"end": 10872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 11098,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 10878,
											"end": 11098,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11018,
											"end": 11052,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 11014,
											"end": 11015,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11006,
											"end": 11012,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11002,
											"end": 11016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10995,
											"end": 11053,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11087,
											"end": 11090,
											"name": "PUSH",
											"source": 15,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11082,
											"end": 11084,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11074,
											"end": 11080,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11070,
											"end": 11085,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11063,
											"end": 11091,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 11098,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 11098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11104,
											"end": 11470,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 11104,
											"end": 11470,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11246,
											"end": 11249,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11267,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 11331,
											"end": 11333,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 11326,
											"end": 11329,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11267,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 11267,
											"end": 11334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11267,
											"end": 11334,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 11267,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11260,
											"end": 11334,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11260,
											"end": 11334,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11343,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 11432,
											"end": 11435,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11343,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 11343,
											"end": 11436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11343,
											"end": 11436,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 11343,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11461,
											"end": 11463,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11456,
											"end": 11459,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11452,
											"end": 11464,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 11464,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 11464,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11104,
											"end": 11470,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11104,
											"end": 11470,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11104,
											"end": 11470,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11104,
											"end": 11470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11476,
											"end": 11895,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 11476,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11642,
											"end": 11646,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11680,
											"end": 11682,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11669,
											"end": 11678,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11657,
											"end": 11683,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11657,
											"end": 11683,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11729,
											"end": 11738,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11723,
											"end": 11727,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11719,
											"end": 11739,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11715,
											"end": 11716,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11704,
											"end": 11713,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11700,
											"end": 11717,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11693,
											"end": 11740,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11757,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 11883,
											"end": 11887,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11757,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 11757,
											"end": 11888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11757,
											"end": 11888,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 11757,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11749,
											"end": 11888,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11749,
											"end": 11888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11476,
											"end": 11895,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11476,
											"end": 11895,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11476,
											"end": 11895,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11476,
											"end": 11895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11901,
											"end": 12149,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 11901,
											"end": 12149,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12041,
											"end": 12075,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 12037,
											"end": 12038,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12029,
											"end": 12035,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12025,
											"end": 12039,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12018,
											"end": 12076,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12110,
											"end": 12141,
											"name": "PUSH",
											"source": 15,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 12105,
											"end": 12107,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12097,
											"end": 12103,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12108,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12086,
											"end": 12142,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11901,
											"end": 12149,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11901,
											"end": 12149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12155,
											"end": 12521,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 12155,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12297,
											"end": 12300,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12318,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 12382,
											"end": 12384,
											"name": "PUSH",
											"source": 15,
											"value": "3D"
										},
										{
											"begin": 12377,
											"end": 12380,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12318,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 12318,
											"end": 12385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12318,
											"end": 12385,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 12318,
											"end": 12385,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12311,
											"end": 12385,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12311,
											"end": 12385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12394,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 12483,
											"end": 12486,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12394,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 12394,
											"end": 12487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12394,
											"end": 12487,
											"name": "tag",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 12394,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12512,
											"end": 12514,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12507,
											"end": 12510,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12503,
											"end": 12515,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12496,
											"end": 12515,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12496,
											"end": 12515,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12155,
											"end": 12521,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12155,
											"end": 12521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12155,
											"end": 12521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12155,
											"end": 12521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12527,
											"end": 12946,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 12527,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12693,
											"end": 12697,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12731,
											"end": 12733,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12720,
											"end": 12729,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12708,
											"end": 12734,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12708,
											"end": 12734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12780,
											"end": 12789,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12774,
											"end": 12778,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12770,
											"end": 12790,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12766,
											"end": 12767,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12755,
											"end": 12764,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12751,
											"end": 12768,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12744,
											"end": 12791,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12808,
											"end": 12939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 12934,
											"end": 12938,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12808,
											"end": 12939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 12808,
											"end": 12939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12808,
											"end": 12939,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 12808,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12800,
											"end": 12939,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12800,
											"end": 12939,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12527,
											"end": 12946,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12527,
											"end": 12946,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12527,
											"end": 12946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12527,
											"end": 12946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 13184,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 12952,
											"end": 13184,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13092,
											"end": 13126,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 13088,
											"end": 13089,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13080,
											"end": 13086,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13076,
											"end": 13090,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13069,
											"end": 13127,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13161,
											"end": 13176,
											"name": "PUSH",
											"source": 15,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 13156,
											"end": 13158,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13148,
											"end": 13154,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13144,
											"end": 13159,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13137,
											"end": 13177,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 13184,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 13184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13190,
											"end": 13556,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 13190,
											"end": 13556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13332,
											"end": 13335,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13353,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 13417,
											"end": 13419,
											"name": "PUSH",
											"source": 15,
											"value": "2D"
										},
										{
											"begin": 13412,
											"end": 13415,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13353,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 13353,
											"end": 13420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13353,
											"end": 13420,
											"name": "tag",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 13353,
											"end": 13420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13346,
											"end": 13420,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13346,
											"end": 13420,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13429,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 13518,
											"end": 13521,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13429,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 13429,
											"end": 13522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13429,
											"end": 13522,
											"name": "tag",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 13429,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13547,
											"end": 13549,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13542,
											"end": 13545,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13538,
											"end": 13550,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13531,
											"end": 13550,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13531,
											"end": 13550,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13190,
											"end": 13556,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13190,
											"end": 13556,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13190,
											"end": 13556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13190,
											"end": 13556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13562,
											"end": 13981,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 13562,
											"end": 13981,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13728,
											"end": 13732,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13766,
											"end": 13768,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13755,
											"end": 13764,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13751,
											"end": 13769,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13743,
											"end": 13769,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13743,
											"end": 13769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13815,
											"end": 13824,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13809,
											"end": 13813,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13805,
											"end": 13825,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13801,
											"end": 13802,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13790,
											"end": 13799,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13786,
											"end": 13803,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13779,
											"end": 13826,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13843,
											"end": 13974,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 13969,
											"end": 13973,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13843,
											"end": 13974,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 13843,
											"end": 13974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13843,
											"end": 13974,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 13843,
											"end": 13974,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13835,
											"end": 13974,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13835,
											"end": 13974,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13562,
											"end": 13981,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13562,
											"end": 13981,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13562,
											"end": 13981,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13562,
											"end": 13981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13987,
											"end": 14161,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 13987,
											"end": 14161,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14127,
											"end": 14153,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 14123,
											"end": 14124,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14115,
											"end": 14121,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14111,
											"end": 14125,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14104,
											"end": 14154,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13987,
											"end": 14161,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13987,
											"end": 14161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14167,
											"end": 14533,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 14167,
											"end": 14533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14309,
											"end": 14312,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14330,
											"end": 14397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 14394,
											"end": 14396,
											"name": "PUSH",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 14389,
											"end": 14392,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14330,
											"end": 14397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 14330,
											"end": 14397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14330,
											"end": 14397,
											"name": "tag",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 14330,
											"end": 14397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14323,
											"end": 14397,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14323,
											"end": 14397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14406,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 14495,
											"end": 14498,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14406,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 14406,
											"end": 14499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14406,
											"end": 14499,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 14406,
											"end": 14499,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14524,
											"end": 14526,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14519,
											"end": 14522,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14515,
											"end": 14527,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14508,
											"end": 14527,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14508,
											"end": 14527,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14167,
											"end": 14533,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14167,
											"end": 14533,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14167,
											"end": 14533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14167,
											"end": 14533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14539,
											"end": 14958,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 14539,
											"end": 14958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14705,
											"end": 14709,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14743,
											"end": 14745,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14732,
											"end": 14741,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14728,
											"end": 14746,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14720,
											"end": 14746,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14720,
											"end": 14746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14792,
											"end": 14801,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14786,
											"end": 14790,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14782,
											"end": 14802,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14778,
											"end": 14779,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14767,
											"end": 14776,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14763,
											"end": 14780,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14756,
											"end": 14803,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14820,
											"end": 14951,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 14946,
											"end": 14950,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14820,
											"end": 14951,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 14820,
											"end": 14951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14820,
											"end": 14951,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 14820,
											"end": 14951,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14812,
											"end": 14951,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14812,
											"end": 14951,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14539,
											"end": 14958,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14539,
											"end": 14958,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14539,
											"end": 14958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14539,
											"end": 14958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14964,
											"end": 15192,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 14964,
											"end": 15192,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15104,
											"end": 15138,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 15100,
											"end": 15101,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15092,
											"end": 15098,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15088,
											"end": 15102,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15081,
											"end": 15139,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15173,
											"end": 15184,
											"name": "PUSH",
											"source": 15,
											"value": "6C6964206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15168,
											"end": 15170,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15160,
											"end": 15166,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15156,
											"end": 15171,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15149,
											"end": 15185,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14964,
											"end": 15192,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14964,
											"end": 15192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15198,
											"end": 15564,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 15198,
											"end": 15564,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15340,
											"end": 15343,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15361,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 15425,
											"end": 15427,
											"name": "PUSH",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 15420,
											"end": 15423,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15361,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 15361,
											"end": 15428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15361,
											"end": 15428,
											"name": "tag",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 15361,
											"end": 15428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15354,
											"end": 15428,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15354,
											"end": 15428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15437,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 15526,
											"end": 15529,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15437,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 15437,
											"end": 15530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15437,
											"end": 15530,
											"name": "tag",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 15437,
											"end": 15530,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15555,
											"end": 15557,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 15550,
											"end": 15553,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15546,
											"end": 15558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15539,
											"end": 15558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15539,
											"end": 15558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15198,
											"end": 15564,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15198,
											"end": 15564,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15198,
											"end": 15564,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15198,
											"end": 15564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15570,
											"end": 15989,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 15570,
											"end": 15989,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15736,
											"end": 15740,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15774,
											"end": 15776,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15763,
											"end": 15772,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15759,
											"end": 15777,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15751,
											"end": 15777,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15751,
											"end": 15777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15823,
											"end": 15832,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15817,
											"end": 15821,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15813,
											"end": 15833,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15809,
											"end": 15810,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15798,
											"end": 15807,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15794,
											"end": 15811,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15787,
											"end": 15834,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15851,
											"end": 15982,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 15977,
											"end": 15981,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15851,
											"end": 15982,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 15851,
											"end": 15982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15851,
											"end": 15982,
											"name": "tag",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 15851,
											"end": 15982,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15843,
											"end": 15982,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15843,
											"end": 15982,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15570,
											"end": 15989,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15570,
											"end": 15989,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15570,
											"end": 15989,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15570,
											"end": 15989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15995,
											"end": 16143,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 15995,
											"end": 16143,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16108,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16134,
											"end": 16137,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15995,
											"end": 16143,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15995,
											"end": 16143,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15995,
											"end": 16143,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15995,
											"end": 16143,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15995,
											"end": 16143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16149,
											"end": 16539,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 16149,
											"end": 16539,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16255,
											"end": 16258,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16283,
											"end": 16322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 16316,
											"end": 16321,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16283,
											"end": 16322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 16283,
											"end": 16322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16283,
											"end": 16322,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 16283,
											"end": 16322,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16338,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 16420,
											"end": 16426,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16415,
											"end": 16418,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16338,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 16338,
											"end": 16427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16338,
											"end": 16427,
											"name": "tag",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 16338,
											"end": 16427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16331,
											"end": 16427,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16331,
											"end": 16427,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16436,
											"end": 16501,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 16494,
											"end": 16500,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16489,
											"end": 16492,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16482,
											"end": 16486,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16475,
											"end": 16480,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16471,
											"end": 16487,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16436,
											"end": 16501,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 16436,
											"end": 16501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16436,
											"end": 16501,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 16436,
											"end": 16501,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16526,
											"end": 16532,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 16521,
											"end": 16524,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16517,
											"end": 16533,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16510,
											"end": 16533,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16510,
											"end": 16533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16259,
											"end": 16539,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16149,
											"end": 16539,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16149,
											"end": 16539,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16149,
											"end": 16539,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16149,
											"end": 16539,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16149,
											"end": 16539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "tag",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16725,
											"end": 16728,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16747,
											"end": 16842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 16838,
											"end": 16841,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16829,
											"end": 16835,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16747,
											"end": 16842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 16747,
											"end": 16842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16747,
											"end": 16842,
											"name": "tag",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 16747,
											"end": 16842,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16740,
											"end": 16842,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16740,
											"end": 16842,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16859,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 16950,
											"end": 16953,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16941,
											"end": 16947,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16859,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 16859,
											"end": 16954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16859,
											"end": 16954,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 16859,
											"end": 16954,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16852,
											"end": 16954,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16852,
											"end": 16954,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16971,
											"end": 16974,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16964,
											"end": 16974,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16964,
											"end": 16974,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16986,
											"end": 17210,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 16986,
											"end": 17210,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17126,
											"end": 17160,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 17122,
											"end": 17123,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17114,
											"end": 17120,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17110,
											"end": 17124,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17103,
											"end": 17161,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17195,
											"end": 17202,
											"name": "PUSH",
											"source": 15,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17190,
											"end": 17192,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17188,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17178,
											"end": 17193,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17171,
											"end": 17203,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16986,
											"end": 17210,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16986,
											"end": 17210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17216,
											"end": 17582,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 17216,
											"end": 17582,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17358,
											"end": 17361,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17379,
											"end": 17446,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 17443,
											"end": 17445,
											"name": "PUSH",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 17438,
											"end": 17441,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17379,
											"end": 17446,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 17379,
											"end": 17446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17379,
											"end": 17446,
											"name": "tag",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 17379,
											"end": 17446,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17372,
											"end": 17446,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17372,
											"end": 17446,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17455,
											"end": 17548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 17544,
											"end": 17547,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17455,
											"end": 17548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 17455,
											"end": 17548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17455,
											"end": 17548,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 17455,
											"end": 17548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17573,
											"end": 17575,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17568,
											"end": 17571,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17564,
											"end": 17576,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17557,
											"end": 17576,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17557,
											"end": 17576,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17216,
											"end": 17582,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17216,
											"end": 17582,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17216,
											"end": 17582,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17216,
											"end": 17582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17588,
											"end": 18007,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 17588,
											"end": 18007,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17754,
											"end": 17758,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17792,
											"end": 17794,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17781,
											"end": 17790,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17777,
											"end": 17795,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17769,
											"end": 17795,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17769,
											"end": 17795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17841,
											"end": 17850,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17835,
											"end": 17839,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17831,
											"end": 17851,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 17827,
											"end": 17828,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17816,
											"end": 17825,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17812,
											"end": 17829,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17805,
											"end": 17852,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17869,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 17995,
											"end": 17999,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17869,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 17869,
											"end": 18000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17869,
											"end": 18000,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 17869,
											"end": 18000,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17861,
											"end": 18000,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17861,
											"end": 18000,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17588,
											"end": 18007,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17588,
											"end": 18007,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17588,
											"end": 18007,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17588,
											"end": 18007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18013,
											"end": 18236,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 18013,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18153,
											"end": 18187,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 18149,
											"end": 18150,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18141,
											"end": 18147,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18137,
											"end": 18151,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18130,
											"end": 18188,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18222,
											"end": 18228,
											"name": "PUSH",
											"source": 15,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18217,
											"end": 18219,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18209,
											"end": 18215,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18205,
											"end": 18220,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18198,
											"end": 18229,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18013,
											"end": 18236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18013,
											"end": 18236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18384,
											"end": 18387,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18405,
											"end": 18472,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 18469,
											"end": 18471,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18464,
											"end": 18467,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18405,
											"end": 18472,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 18405,
											"end": 18472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18405,
											"end": 18472,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 18405,
											"end": 18472,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18398,
											"end": 18472,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18398,
											"end": 18472,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18481,
											"end": 18574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 18570,
											"end": 18573,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18481,
											"end": 18574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 18481,
											"end": 18574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18481,
											"end": 18574,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 18481,
											"end": 18574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18599,
											"end": 18601,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 18594,
											"end": 18597,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18590,
											"end": 18602,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18583,
											"end": 18602,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18583,
											"end": 18602,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18242,
											"end": 18608,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18242,
											"end": 18608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "tag",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18780,
											"end": 18784,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18818,
											"end": 18820,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18807,
											"end": 18816,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18803,
											"end": 18821,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18795,
											"end": 18821,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18795,
											"end": 18821,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18867,
											"end": 18876,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18861,
											"end": 18865,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18857,
											"end": 18877,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 18853,
											"end": 18854,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18842,
											"end": 18851,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18838,
											"end": 18855,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18831,
											"end": 18878,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18895,
											"end": 19026,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 19021,
											"end": 19025,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18895,
											"end": 19026,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 18895,
											"end": 19026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18895,
											"end": 19026,
											"name": "tag",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 18895,
											"end": 19026,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18887,
											"end": 19026,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18887,
											"end": 19026,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18614,
											"end": 19033,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18614,
											"end": 19033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19039,
											"end": 19214,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 19039,
											"end": 19214,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19179,
											"end": 19206,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 19175,
											"end": 19176,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19167,
											"end": 19173,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19163,
											"end": 19177,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19156,
											"end": 19207,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19039,
											"end": 19214,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19039,
											"end": 19214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19220,
											"end": 19586,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 19220,
											"end": 19586,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19362,
											"end": 19365,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19383,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 19447,
											"end": 19449,
											"name": "PUSH",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 19442,
											"end": 19445,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19383,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 19383,
											"end": 19450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19383,
											"end": 19450,
											"name": "tag",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 19383,
											"end": 19450,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19376,
											"end": 19450,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19376,
											"end": 19450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19459,
											"end": 19552,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 19548,
											"end": 19551,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19459,
											"end": 19552,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 19459,
											"end": 19552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19459,
											"end": 19552,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 19459,
											"end": 19552,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19577,
											"end": 19579,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19572,
											"end": 19575,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19568,
											"end": 19580,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19561,
											"end": 19580,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19561,
											"end": 19580,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19220,
											"end": 19586,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19220,
											"end": 19586,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19220,
											"end": 19586,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19220,
											"end": 19586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19592,
											"end": 20011,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 19592,
											"end": 20011,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19758,
											"end": 19762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19796,
											"end": 19798,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19785,
											"end": 19794,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19781,
											"end": 19799,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19845,
											"end": 19854,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19839,
											"end": 19843,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19835,
											"end": 19855,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19831,
											"end": 19832,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19820,
											"end": 19829,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19816,
											"end": 19833,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19809,
											"end": 19856,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19873,
											"end": 20004,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 19999,
											"end": 20003,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19873,
											"end": 20004,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 19873,
											"end": 20004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19873,
											"end": 20004,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 19873,
											"end": 20004,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19865,
											"end": 20004,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19865,
											"end": 20004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19592,
											"end": 20011,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19592,
											"end": 20011,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19592,
											"end": 20011,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19592,
											"end": 20011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20017,
											"end": 20254,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 20017,
											"end": 20254,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20157,
											"end": 20191,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 20153,
											"end": 20154,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20145,
											"end": 20151,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20141,
											"end": 20155,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20134,
											"end": 20192,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20226,
											"end": 20246,
											"name": "PUSH",
											"source": 15,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 20221,
											"end": 20223,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20213,
											"end": 20219,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20209,
											"end": 20224,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20202,
											"end": 20247,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20017,
											"end": 20254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20017,
											"end": 20254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20260,
											"end": 20626,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 20260,
											"end": 20626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20402,
											"end": 20405,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20423,
											"end": 20490,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 20487,
											"end": 20489,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 20482,
											"end": 20485,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20423,
											"end": 20490,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 20423,
											"end": 20490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20423,
											"end": 20490,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 20423,
											"end": 20490,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20416,
											"end": 20490,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20416,
											"end": 20490,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20499,
											"end": 20592,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 20588,
											"end": 20591,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20499,
											"end": 20592,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 20499,
											"end": 20592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20499,
											"end": 20592,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 20499,
											"end": 20592,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20617,
											"end": 20619,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 20612,
											"end": 20615,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20608,
											"end": 20620,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20601,
											"end": 20620,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20601,
											"end": 20620,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20260,
											"end": 20626,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20260,
											"end": 20626,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20260,
											"end": 20626,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20260,
											"end": 20626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20632,
											"end": 21051,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 20632,
											"end": 21051,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20798,
											"end": 20802,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20836,
											"end": 20838,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20825,
											"end": 20834,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20821,
											"end": 20839,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20813,
											"end": 20839,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20813,
											"end": 20839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20885,
											"end": 20894,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20879,
											"end": 20883,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20875,
											"end": 20895,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 20871,
											"end": 20872,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20860,
											"end": 20869,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20856,
											"end": 20873,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20849,
											"end": 20896,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20913,
											"end": 21044,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 21039,
											"end": 21043,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20913,
											"end": 21044,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 20913,
											"end": 21044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20913,
											"end": 21044,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 20913,
											"end": 21044,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20905,
											"end": 21044,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20905,
											"end": 21044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20632,
											"end": 21051,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20632,
											"end": 21051,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20632,
											"end": 21051,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20632,
											"end": 21051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21057,
											"end": 21237,
											"name": "tag",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 21057,
											"end": 21237,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21105,
											"end": 21182,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21102,
											"end": 21103,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21095,
											"end": 21183,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21202,
											"end": 21206,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 21199,
											"end": 21200,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 21192,
											"end": 21207,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21226,
											"end": 21230,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 21223,
											"end": 21224,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21216,
											"end": 21231,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 21243,
											"end": 21423,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 21243,
											"end": 21423,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21291,
											"end": 21368,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21288,
											"end": 21289,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21281,
											"end": 21369,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21388,
											"end": 21392,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 21385,
											"end": 21386,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 21378,
											"end": 21393,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21412,
											"end": 21416,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 21409,
											"end": 21410,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21402,
											"end": 21417,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 21429,
											"end": 21623,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 21429,
											"end": 21623,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21469,
											"end": 21473,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21489,
											"end": 21509,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 21507,
											"end": 21508,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21489,
											"end": 21509,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 21489,
											"end": 21509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21489,
											"end": 21509,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 21489,
											"end": 21509,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21484,
											"end": 21509,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21484,
											"end": 21509,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21523,
											"end": 21543,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 21541,
											"end": 21542,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21523,
											"end": 21543,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 21523,
											"end": 21543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21523,
											"end": 21543,
											"name": "tag",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 21523,
											"end": 21543,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21518,
											"end": 21543,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21518,
											"end": 21543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21567,
											"end": 21568,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21564,
											"end": 21565,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21560,
											"end": 21569,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 21552,
											"end": 21569,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21552,
											"end": 21569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21591,
											"end": 21592,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21585,
											"end": 21589,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21582,
											"end": 21593,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 21579,
											"end": 21616,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 21579,
											"end": 21616,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 21579,
											"end": 21616,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 21596,
											"end": 21614,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 21596,
											"end": 21614,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 21596,
											"end": 21614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21596,
											"end": 21614,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 21596,
											"end": 21614,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21579,
											"end": 21616,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 21579,
											"end": 21616,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21429,
											"end": 21623,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21429,
											"end": 21623,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21429,
											"end": 21623,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21429,
											"end": 21623,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21429,
											"end": 21623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21629,
											"end": 21820,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 21629,
											"end": 21820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21669,
											"end": 21672,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21688,
											"end": 21708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 21706,
											"end": 21707,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21688,
											"end": 21708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 21688,
											"end": 21708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21688,
											"end": 21708,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 21688,
											"end": 21708,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21683,
											"end": 21708,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21683,
											"end": 21708,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21722,
											"end": 21742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 21740,
											"end": 21741,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21722,
											"end": 21742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 21722,
											"end": 21742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21722,
											"end": 21742,
											"name": "tag",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 21722,
											"end": 21742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21717,
											"end": 21742,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21717,
											"end": 21742,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21765,
											"end": 21766,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21762,
											"end": 21763,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21758,
											"end": 21767,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21751,
											"end": 21767,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21751,
											"end": 21767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21786,
											"end": 21789,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 21783,
											"end": 21784,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21780,
											"end": 21790,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 21777,
											"end": 21813,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 21777,
											"end": 21813,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 21777,
											"end": 21813,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 21793,
											"end": 21811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 21793,
											"end": 21811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 21793,
											"end": 21811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21793,
											"end": 21811,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 21793,
											"end": 21811,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21777,
											"end": 21813,
											"name": "tag",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 21777,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21629,
											"end": 21820,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21629,
											"end": 21820,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21629,
											"end": 21820,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21629,
											"end": 21820,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21629,
											"end": 21820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21826,
											"end": 21924,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 21826,
											"end": 21924,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21877,
											"end": 21883,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21911,
											"end": 21916,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21905,
											"end": 21917,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 21895,
											"end": 21917,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21895,
											"end": 21917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21826,
											"end": 21924,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21826,
											"end": 21924,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21826,
											"end": 21924,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21826,
											"end": 21924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21930,
											"end": 22098,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 21930,
											"end": 22098,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22013,
											"end": 22024,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22047,
											"end": 22053,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22042,
											"end": 22045,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22035,
											"end": 22054,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22087,
											"end": 22091,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22082,
											"end": 22085,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22078,
											"end": 22092,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22063,
											"end": 22092,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22063,
											"end": 22092,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21930,
											"end": 22098,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21930,
											"end": 22098,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21930,
											"end": 22098,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21930,
											"end": 22098,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21930,
											"end": 22098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22104,
											"end": 22477,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 22104,
											"end": 22477,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22190,
											"end": 22193,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22218,
											"end": 22256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 22250,
											"end": 22255,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22218,
											"end": 22256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 22218,
											"end": 22256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22218,
											"end": 22256,
											"name": "tag",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 22218,
											"end": 22256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22272,
											"end": 22342,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 22335,
											"end": 22341,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22330,
											"end": 22333,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22272,
											"end": 22342,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 22272,
											"end": 22342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22272,
											"end": 22342,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 22272,
											"end": 22342,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22265,
											"end": 22342,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 22265,
											"end": 22342,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22351,
											"end": 22416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 22409,
											"end": 22415,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22404,
											"end": 22407,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22397,
											"end": 22401,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22390,
											"end": 22395,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 22386,
											"end": 22402,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22351,
											"end": 22416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 22351,
											"end": 22416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22351,
											"end": 22416,
											"name": "tag",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 22351,
											"end": 22416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22441,
											"end": 22470,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 22463,
											"end": 22469,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22441,
											"end": 22470,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 22441,
											"end": 22470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22441,
											"end": 22470,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 22441,
											"end": 22470,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22436,
											"end": 22439,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22432,
											"end": 22471,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22425,
											"end": 22471,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22425,
											"end": 22471,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22194,
											"end": 22477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22104,
											"end": 22477,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 22104,
											"end": 22477,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22104,
											"end": 22477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22104,
											"end": 22477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22104,
											"end": 22477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22483,
											"end": 23123,
											"name": "tag",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 22483,
											"end": 23123,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22678,
											"end": 22682,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22716,
											"end": 22719,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 22705,
											"end": 22714,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22701,
											"end": 22720,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22693,
											"end": 22720,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22693,
											"end": 22720,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22730,
											"end": 22801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 22798,
											"end": 22799,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22787,
											"end": 22796,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 22800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22774,
											"end": 22780,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 22730,
											"end": 22801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 22730,
											"end": 22801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22730,
											"end": 22801,
											"name": "tag",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 22730,
											"end": 22801,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22811,
											"end": 22883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 22879,
											"end": 22881,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22868,
											"end": 22877,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22864,
											"end": 22882,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22855,
											"end": 22861,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 22811,
											"end": 22883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 22811,
											"end": 22883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22811,
											"end": 22883,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 22811,
											"end": 22883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22893,
											"end": 22965,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 22961,
											"end": 22963,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 22950,
											"end": 22959,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22946,
											"end": 22964,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22937,
											"end": 22943,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22893,
											"end": 22965,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 22893,
											"end": 22965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22893,
											"end": 22965,
											"name": "tag",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 22893,
											"end": 22965,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23012,
											"end": 23021,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23006,
											"end": 23010,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23002,
											"end": 23022,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 22997,
											"end": 22999,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 22986,
											"end": 22995,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22982,
											"end": 23000,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22975,
											"end": 23023,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23040,
											"end": 23116,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 23111,
											"end": 23115,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23102,
											"end": 23108,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23040,
											"end": 23116,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 23040,
											"end": 23116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23040,
											"end": 23116,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 23040,
											"end": 23116,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23032,
											"end": 23116,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23032,
											"end": 23116,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22483,
											"end": 23123,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 22483,
											"end": 23123,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 22483,
											"end": 23123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22483,
											"end": 23123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22483,
											"end": 23123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22483,
											"end": 23123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22483,
											"end": 23123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22483,
											"end": 23123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23129,
											"end": 23270,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 23129,
											"end": 23270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23185,
											"end": 23190,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23216,
											"end": 23222,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23210,
											"end": 23223,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 23201,
											"end": 23223,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23201,
											"end": 23223,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23232,
											"end": 23264,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 23258,
											"end": 23263,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23232,
											"end": 23264,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 23232,
											"end": 23264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23232,
											"end": 23264,
											"name": "tag",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 23232,
											"end": 23264,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23129,
											"end": 23270,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23129,
											"end": 23270,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23129,
											"end": 23270,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23129,
											"end": 23270,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23129,
											"end": 23270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23625,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 23276,
											"end": 23625,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23345,
											"end": 23351,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23394,
											"end": 23396,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23382,
											"end": 23391,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23373,
											"end": 23380,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23369,
											"end": 23392,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 23365,
											"end": 23397,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 23362,
											"end": 23481,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 23362,
											"end": 23481,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 23362,
											"end": 23481,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 23400,
											"end": 23479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 23400,
											"end": 23479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 23400,
											"end": 23479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23400,
											"end": 23479,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 23400,
											"end": 23479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23362,
											"end": 23481,
											"name": "tag",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 23362,
											"end": 23481,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23520,
											"end": 23521,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23545,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 23600,
											"end": 23607,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23591,
											"end": 23597,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23580,
											"end": 23589,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 23576,
											"end": 23598,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23545,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 23545,
											"end": 23608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23545,
											"end": 23608,
											"name": "tag",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 23545,
											"end": 23608,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23535,
											"end": 23608,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23535,
											"end": 23608,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23491,
											"end": 23618,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23625,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23625,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23625,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23625,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/shoToken/ShoToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 246,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 252,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 256,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 260,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 266,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ERC721Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be burned (destroyed).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x52da94e59d870f54ca0eb4f485c3d9602011f668ba34d72c88124a1496ebaab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09656a37963a61e79df0b718ad0ec323cd29d409d6ead33dbb91d0770ff87fa4\",\"dweb:/ipfs/QmXLWCYoMpZ4SecK4kVaL53LZWXZNbQG8gUzACmZ6A64rE\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 246,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 252,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 256,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 260,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 266,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212203bdd8b4b99692110ca2418c40d05ac1b4c70d831a26189de16fbea33e118036364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203bdd8b4b99692110ca2418c40d05ac1b4c70d831a26189de16fbea33e118036364736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xDD DUP12 0x4B SWAP10 PUSH10 0x2110CA2418C40D05AC1B 0x4C PUSH17 0xD831A26189DE16FBEA33E118036364736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "194:8964:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203bdd8b4b99692110ca2418c40d05ac1b4c70d831a26189de16fbea33e118036364736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xDD DUP12 0x4B SWAP10 PUSH10 0x2110CA2418C40D05AC1B 0x4C PUSH17 0xD831A26189DE16FBEA33E118036364736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "194:8964:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203bdd8b4b99692110ca2418c40d05ac1b4c70d831a26189de16fbea33e118036364736f6c634300081e0033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/shoToken/ShoToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220fac4d045c4bd17ce8015a27bf91a683b3625bee18c30c82fae0ccc39cce8f5ce64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fac4d045c4bd17ce8015a27bf91a683b3625bee18c30c82fae0ccc39cce8f5ce64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xC4 0xD0 GASLIMIT 0xC4 0xBD OR 0xCE DUP1 ISZERO LOG2 PUSH28 0xF91A683B3625BEE18C30C82FAE0CCC39CCE8F5CE64736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "424:971:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fac4d045c4bd17ce8015a27bf91a683b3625bee18c30c82fae0ccc39cce8f5ce64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xC4 0xD0 GASLIMIT 0xC4 0xBD OR 0xCE DUP1 ISZERO LOG2 PUSH28 0xF91A683B3625BEE18C30C82FAE0CCC39CCE8F5CE64736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "424:971:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fac4d045c4bd17ce8015a27bf91a683b3625bee18c30c82fae0ccc39cce8f5ce64736f6c634300081e0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/shoToken/ShoToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212202c5a0e1ece28c13db35d761d2fee1bc824cfc5a4627de85330958ccfaafff68164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202c5a0e1ece28c13db35d761d2fee1bc824cfc5a4627de85330958ccfaafff68164736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C GAS 0xE 0x1E 0xCE 0x28 0xC1 RETURNDATASIZE 0xB3 TSTORE PUSH23 0x1D2FEE1BC824CFC5A4627DE85330958CCFAAFFF6816473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "188:2065:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202c5a0e1ece28c13db35d761d2fee1bc824cfc5a4627de85330958ccfaafff68164736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C GAS 0xE 0x1E 0xCE 0x28 0xC1 RETURNDATASIZE 0xB3 TSTORE PUSH23 0x1D2FEE1BC824CFC5A4627DE85330958CCFAAFFF6816473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "188:2065:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c5a0e1ece28c13db35d761d2fee1bc824cfc5a4627de85330958ccfaafff68164736f6c634300081e0033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/shoToken/ShoToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220b5fc6cdb065ebd8fcc6df3a6aa35eff9493719247ee0e41c15a153f5fe68da5464736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b5fc6cdb065ebd8fcc6df3a6aa35eff9493719247ee0e41c15a153f5fe68da5464736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xFC PUSH13 0xDB065EBD8FCC6DF3A6AA35EFF9 BLOBHASH CALLDATACOPY NOT 0x24 PUSH31 0xE0E41C15A153F5FE68DA5464736F6C634300081E0033000000000000000000 ",
							"sourceMap": "202:12302:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b5fc6cdb065ebd8fcc6df3a6aa35eff9493719247ee0e41c15a153f5fe68da5464736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xFC PUSH13 0xDB065EBD8FCC6DF3A6AA35EFF9 BLOBHASH CALLDATACOPY NOT 0x24 PUSH31 0xE0E41C15A153F5FE68DA5464736F6C634300081E0033000000000000000000 ",
							"sourceMap": "202:12302:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b5fc6cdb065ebd8fcc6df3a6aa35eff9493719247ee0e41c15a153f5fe68da5464736f6c634300081e0033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/shoToken/ShoToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/shoToken/ShoToken.sol": {
				"ShoToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "supportcs@ntiloyalty.com",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint()": "1249c58b",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"supportcs@ntiloyalty.com\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint()\":{\"notice\":\"server method - mint nft\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shoToken/ShoToken.sol\":\"ShoToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x52da94e59d870f54ca0eb4f485c3d9602011f668ba34d72c88124a1496ebaab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09656a37963a61e79df0b718ad0ec323cd29d409d6ead33dbb91d0770ff87fa4\",\"dweb:/ipfs/QmXLWCYoMpZ4SecK4kVaL53LZWXZNbQG8gUzACmZ6A64rE\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/shoToken/ShoToken.sol\":{\"keccak256\":\"0xeea243a52895f7793c4a09e9a44a973315034693e9115d7623caa894f8547fb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d805f35c778dfdfc25479b025d80aa08a7fd3a5cff05ac549a4d1479a366a97\",\"dweb:/ipfs/Qmcix67CKzW5pyF3y5698tAGiR1Kgg4t5dCWzS4z5iEWAi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 246,
								"contract": "contracts/shoToken/ShoToken.sol:ShoToken",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 248,
								"contract": "contracts/shoToken/ShoToken.sol:ShoToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 252,
								"contract": "contracts/shoToken/ShoToken.sol:ShoToken",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 256,
								"contract": "contracts/shoToken/ShoToken.sol:ShoToken",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 260,
								"contract": "contracts/shoToken/ShoToken.sol:ShoToken",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 266,
								"contract": "contracts/shoToken/ShoToken.sol:ShoToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 130,
								"contract": "contracts/shoToken/ShoToken.sol:ShoToken",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 7,
								"contract": "contracts/shoToken/ShoToken.sol:ShoToken",
								"label": "_owner",
								"offset": 1,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2888,
								"contract": "contracts/shoToken/ShoToken.sol:ShoToken",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)1714_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1714_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1713,
										"contract": "contracts/shoToken/ShoToken.sol:ShoToken",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"mint()": {
								"notice": "server method - mint nft"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1708
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1709,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1708,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1708
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1698,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1698,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1708
						],
						"Pausable": [
							220
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 1709,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nameLocations": [
											"632:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1708,
										"src": "632:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								1708
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 123,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 128,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 220,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 147,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 155,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 220,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 220,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 220,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 198,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1698,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 220,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1698,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 220,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "602:1950:1",
							"usedErrors": [],
							"usedEvents": [
								123,
								128
							]
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1686
						],
						"Context": [
							1708
						],
						"ERC165": [
							1981
						],
						"ERC721": [
							1165
						],
						"IERC165": [
							1993
						],
						"IERC721": [
							1281
						],
						"IERC721Metadata": [
							1356
						],
						"IERC721Receiver": [
							1299
						],
						"Math": [
							2858
						],
						"Strings": [
							1957
						]
					},
					"id": 1166,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 223,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1282,
							"src": "132:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 224,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1300,
							"src": "156:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1357,
							"src": "188:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 226,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1687,
							"src": "231:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 227,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1709,
							"src": "265:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 228,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1958,
							"src": "299:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1982,
							"src": "333:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 231,
										"name": "Context",
										"nameLocations": [
											"647:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1708,
										"src": "647:7:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:2"
								},
								{
									"baseName": {
										"id": 233,
										"name": "ERC165",
										"nameLocations": [
											"656:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "656:6:2"
									},
									"id": 234,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:2"
								},
								{
									"baseName": {
										"id": 235,
										"name": "IERC721",
										"nameLocations": [
											"664:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1281,
										"src": "664:7:2"
									},
									"id": 236,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:2"
								},
								{
									"baseName": {
										"id": 237,
										"name": "IERC721Metadata",
										"nameLocations": [
											"673:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1356,
										"src": "673:15:2"
									},
									"id": 238,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1165,
							"linearizedBaseContracts": [
								1165,
								1356,
								1281,
								1981,
								1993,
								1708
							],
							"name": "ERC721",
							"nameLocation": "637:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 241,
									"libraryName": {
										"id": 239,
										"name": "Address",
										"nameLocations": [
											"701:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1686,
										"src": "701:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:2",
									"typeName": {
										"id": 240,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 244,
									"libraryName": {
										"id": 242,
										"name": "Strings",
										"nameLocations": [
											"732:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1957,
										"src": "732:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:2",
									"typeName": {
										"id": 243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 246,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "776:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 245,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "823:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 247,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 252,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "898:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 251,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 249,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 250,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 256,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "992:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 255,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 253,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 254,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 260,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "1093:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 259,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 257,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 258,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 266,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "1199:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 265,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 261,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 264,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 262,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 263,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "1446:57:2",
										"statements": [
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 274,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "1456:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 275,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "1464:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:2"
											},
											{
												"expression": {
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 278,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1479:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 279,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "1489:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:2"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 283,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1402:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1423:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:2"
									},
									"scope": 1165,
									"src": "1390:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1980,
										1992
									],
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "1678:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 294,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "1707:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 296,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "1727:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1281_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1281_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 295,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1281",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1736:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 300,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "1763:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 302,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1356,
																			"src": "1783:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1356_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1356_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 301,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1356",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1800:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 309,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "1851:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 307,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1165_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1833:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1980,
															"src": "1827:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 293,
												"id": 312,
												"nodeType": "Return",
												"src": "1688:175:2"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 290,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 288,
												"name": "ERC165",
												"nameLocations": [
													"1646:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1981,
												"src": "1646:6:2"
											},
											{
												"id": 289,
												"name": "IERC165",
												"nameLocations": [
													"1654:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1993,
												"src": "1654:7:2"
											}
										],
										"src": "1637:25:2"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1597:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 285,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1672:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:2"
									},
									"scope": 1165,
									"src": "1570:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1206
									],
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "2010:123:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 324,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "2028:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 325,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2020:73:2"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 333,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2110:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 335,
													"indexExpression": {
														"id": 334,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "2120:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2110:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 322,
												"id": 336,
												"nodeType": "Return",
												"src": "2103:23:2"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 319,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:2"
									},
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1948:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:2"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2001:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:2"
									},
									"scope": 1165,
									"src": "1929:204:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1214
									],
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "2271:138:2",
										"statements": [
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2289:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 365,
														"src": "2281:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 347,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2281:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 352,
												"initialValue": {
													"arguments": [
														{
															"id": 350,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "2306:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 349,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "2297:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2281:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 354,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "2332:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 355,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 353,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "2324:56:2"
											},
											{
												"expression": {
													"id": 363,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "2397:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 346,
												"id": 364,
												"nodeType": "Return",
												"src": "2390:12:2"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "2139:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2199:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 343,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2244:8:2"
									},
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2215:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2207:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:17:2"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2262:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:9:2"
									},
									"scope": 1165,
									"src": "2190:219:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1341
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "2540:29:2",
										"statements": [
											{
												"expression": {
													"id": 373,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 246,
													"src": "2557:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 372,
												"id": 374,
												"nodeType": "Return",
												"src": "2550:12:2"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "2415:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2480:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 369,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2507:8:2"
									},
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2484:2:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2525:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:2"
									},
									"scope": 1165,
									"src": "2471:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1347
									],
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "2704:31:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 382,
												"id": 384,
												"nodeType": "Return",
												"src": "2714:14:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "2575:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2642:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 379,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2671:8:2"
									},
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:2:2"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "2689:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 380,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2689:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:15:2"
									},
									"scope": 1165,
									"src": "2633:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "2889:188:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 396,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "2914:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 395,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "2899:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2899:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "2899:23:2"
											},
											{
												"assignments": [
													400
												],
												"declarations": [
													{
														"constant": false,
														"id": 400,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2947:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 424,
														"src": "2933:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 399,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2933:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 403,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 401,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "2957:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2933:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 406,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "2990:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2984:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2984:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2984:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2999:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2984:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3008:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2984:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3068:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2984:86:2",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 415,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "3036:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 416,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 389,
																				"src": "3045:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3053:8:2",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1840,
																			"src": "3045:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3045:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 413,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3019:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3023:12:2",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3019:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3019:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3012:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 411,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3012:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3012:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 394,
												"id": 423,
												"nodeType": "Return",
												"src": "2977:93:2"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "2741:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2810:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 391,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2856:8:2"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2827:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2819:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2819:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:17:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2874:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2874:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:15:2"
									},
									"scope": 1165,
									"src": "2801:276:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "3385:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3402:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 430,
												"id": 432,
												"nodeType": "Return",
												"src": "3395:9:2"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "3083:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3328:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3336:2:2"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3370:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 428,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3370:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:15:2"
									},
									"scope": 1165,
									"src": "3319:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1254
									],
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "3538:336:2",
										"statements": [
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3556:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 476,
														"src": "3548:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 443,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3548:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 449,
												"initialValue": {
													"arguments": [
														{
															"id": 447,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "3579:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 445,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "3564:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1165_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3571:7:2",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 366,
														"src": "3564:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3548:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 451,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "3605:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 452,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "3611:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3605:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3618:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3597:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "3597:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 458,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1698,
																		"src": "3686:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3686:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 460,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "3702:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3686:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 463,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "3728:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 464,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1698,
																			"src": "3735:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3735:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 462,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "3711:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3711:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3686:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3762:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3665:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3665:170:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3665:170:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 472,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "3855:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 473,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "3859:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 471,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "3846:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "3846:21:2"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "3417:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3477:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 441,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3529:8:2"
									},
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3493:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3485:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3485:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3505:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3497:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:29:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3538:0:2"
									},
									"scope": 1165,
									"src": "3468:406:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1270
									],
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "4020:82:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 487,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "4045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 486,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "4030:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4030:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "4030:23:2"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 490,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "4071:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 492,
													"indexExpression": {
														"id": 491,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "4087:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4071:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 485,
												"id": 493,
												"nodeType": "Return",
												"src": "4064:31:2"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "3880:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3944:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 482,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3993:8:2"
									},
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3964:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3956:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:17:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "4011:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4011:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4010:9:2"
									},
									"scope": 1165,
									"src": "3935:167:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1262
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "4253:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 505,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1698,
																"src": "4282:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "4296:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "4306:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 504,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4263:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "4263:52:2"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "4108:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4178:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 502,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4244:8:2"
									},
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4204:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "4196:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4196:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4219:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "4214:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4214:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4195:33:2"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4253:0:2"
									},
									"scope": 1165,
									"src": "4169:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1280
									],
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "4491:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 523,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4508:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 525,
														"indexExpression": {
															"id": 524,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "4527:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4508:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 527,
													"indexExpression": {
														"id": 526,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "4534:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4508:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 522,
												"id": 528,
												"nodeType": "Return",
												"src": "4501:42:2"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "4328:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4397:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 519,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4467:8:2"
									},
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4422:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "4414:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4437:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "4429:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4413:33:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "4485:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4485:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:6:2"
									},
									"scope": 1165,
									"src": "4388:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1246
									],
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "4731:207:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 543,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1698,
																		"src": "4820:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4820:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 545,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "4834:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 542,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "4801:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4801:41:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4844:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4793:99:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "4793:99:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 551,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "4913:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "4919:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4923:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 550,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "4903:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4903:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "4903:28:2"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "4556:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4621:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 539,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4722:8:2"
									},
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4651:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "4643:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4643:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4673:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "4665:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4693:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "4685:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4633:73:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4731:0:2"
									},
									"scope": 1165,
									"src": "4612:326:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1236
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "5127:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "5154:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "5160:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5164:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5173:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 568,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															576,
															606
														],
														"referencedDeclaration": 606,
														"src": "5137:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "5137:39:2"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "4944:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5013:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 566,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5118:8:2"
									},
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5047:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5039:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5069:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5061:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5089:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5081:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5081:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5029:73:2"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5127:0:2"
									},
									"scope": 1165,
									"src": "5004:179:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1226
									],
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5399:164:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 591,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1698,
																		"src": "5436:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5436:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 593,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5450:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 590,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "5417:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5417:41:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5460:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5409:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5409:99:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "5409:99:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 600,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "5538:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "5542:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 602,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "5551:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 598,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "5518:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5518:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "5518:38:2"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "5189:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5258:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 587,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5390:8:2"
									},
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5292:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5284:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5284:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5314:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5306:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5306:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5364:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5351:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5351:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5274:100:2"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5399:0:2"
									},
									"scope": 1165,
									"src": "5249:314:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "6564:165:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "6584:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "6590:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "6594:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 618,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "6574:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6574:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "6574:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 626,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "6643:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 627,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "6649:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 628,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "6653:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 629,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "6662:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 625,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "6620:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6620:47:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6669:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6612:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6612:110:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "6612:110:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "5569:850:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6433:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6464:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "6456:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6456:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6486:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "6478:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6478:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6506:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "6498:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6498:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6536:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "6523:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6523:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6446:100:2"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6564:0:2"
									},
									"scope": 1165,
									"src": "6424:305:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "6913:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 643,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "6930:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 645,
													"indexExpression": {
														"id": 644,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "6938:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6930:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 642,
												"id": 646,
												"nodeType": "Return",
												"src": "6923:23:2"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "6735:98:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "6847:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6864:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "6856:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6856:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6855:17:2"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "6904:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6903:9:2"
									},
									"scope": 1165,
									"src": "6838:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "7327:55:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 657,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "7353:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 656,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "7344:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7344:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7373:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7365:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 659,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7365:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7365:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7344:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 655,
												"id": 664,
												"nodeType": "Return",
												"src": "7337:38:2"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "6959:292:2",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7265:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7281:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "7273:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7273:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7272:17:2"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "7321:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 653,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7321:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7320:6:2"
									},
									"scope": 1165,
									"src": "7256:126:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "7639:162:2",
										"statements": [
											{
												"assignments": [
													677
												],
												"declarations": [
													{
														"constant": false,
														"id": 677,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7657:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 699,
														"src": "7649:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 676,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7649:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 682,
												"initialValue": {
													"arguments": [
														{
															"id": 680,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "7680:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 678,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "7665:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1165_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7672:7:2",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 366,
														"src": "7665:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7665:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7649:39:2"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 683,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7706:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 684,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "7717:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7706:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 687,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "7743:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 688,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 669,
																			"src": "7750:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 686,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "7726:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7726:32:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7706:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 692,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "7774:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 691,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "7762:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7762:20:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 694,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "7786:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7762:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7706:87:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 697,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7705:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 675,
												"id": 698,
												"nodeType": "Return",
												"src": "7698:96:2"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "7388:147:2",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7549:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7576:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7568:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7567:34:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7633:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7633:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7632:6:2"
									},
									"scope": 1165,
									"src": "7540:261:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "8196:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 709,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "8216:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "8220:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8229:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 708,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															715,
															744
														],
														"referencedDeclaration": 744,
														"src": "8206:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8206:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "8206:26:2"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "7807:319:2",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8140:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8158:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "8150:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8150:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8170:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "8162:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8162:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8149:29:2"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8196:0:2"
									},
									"scope": 1165,
									"src": "8131:108:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "8574:195:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 726,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "8590:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "8594:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 725,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "8584:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8584:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "8584:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8664:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8656:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 732,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8656:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8656:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 736,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "8668:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 737,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "8672:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 738,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "8681:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 731,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "8633:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8633:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8700:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8612:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8612:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "8612:150:2"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "8245:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8469:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8496:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8488:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8516:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8508:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8508:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8546:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8533:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8533:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8478:78:2"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8574:0:2"
									},
									"scope": 1165,
									"src": "8460:309:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "9152:859:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 753,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "9170:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9184:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9176:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 754,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9176:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9176:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9170:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9188:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 752,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9162:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9162:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "9162:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9241:17:2",
															"subExpression": {
																"arguments": [
																	{
																		"id": 764,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "9250:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 763,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "9242:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9242:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9260:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9233:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9233:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "9233:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9331:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9323:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 771,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9323:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9323:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "9335:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9339:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9348:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 770,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "9302:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9302:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "9302:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9445:17:2",
															"subExpression": {
																"arguments": [
																	{
																		"id": 782,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "9454:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 781,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "9446:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9446:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9464:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9437:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9437:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "9437:58:2"
											},
											{
												"id": 794,
												"nodeType": "UncheckedBlock",
												"src": "9506:360:2",
												"statements": [
													{
														"expression": {
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 788,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "9837:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 790,
																"indexExpression": {
																	"id": 789,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "9847:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9837:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9854:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9837:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 793,
														"nodeType": "ExpressionStatement",
														"src": "9837:18:2"
													}
												]
											},
											{
												"expression": {
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 795,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "9876:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 797,
														"indexExpression": {
															"id": 796,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9884:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9876:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 798,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "9895:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9876:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "9876:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9930:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9922:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9922:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9922:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "9934:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9938:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 801,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "9913:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9913:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "EmitStatement",
												"src": "9908:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9985:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9977:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 811,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9977:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9977:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "9989:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9993:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10002:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 810,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "9957:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9957:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "9957:47:2"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "8775:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9100:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9114:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "9106:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9106:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "9118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9118:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9105:29:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9152:0:2"
									},
									"scope": 1165,
									"src": "9091:920:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "10386:713:2",
										"statements": [
											{
												"assignments": [
													828
												],
												"declarations": [
													{
														"constant": false,
														"id": 828,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10404:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "10396:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 827,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10396:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 833,
												"initialValue": {
													"arguments": [
														{
															"id": 831,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "10427:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 829,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "10412:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1165_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10419:7:2",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 366,
														"src": "10412:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10412:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10396:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 835,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "10467:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10482:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10474:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 836,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10474:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10474:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "10486:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10495:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 834,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "10446:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10446:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "10446:51:2"
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 844,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "10599:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 847,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "10622:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 845,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "10607:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1165_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10614:7:2",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 366,
															"src": "10607:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10607:23:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10599:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "10599:31:2"
											},
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10668:31:2",
													"subExpression": {
														"baseExpression": {
															"id": 851,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "10675:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 853,
														"indexExpression": {
															"id": 852,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "10691:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10675:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "10668:31:2"
											},
											{
												"id": 862,
												"nodeType": "UncheckedBlock",
												"src": "10710:237:2",
												"statements": [
													{
														"expression": {
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 856,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "10915:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 858,
																"indexExpression": {
																	"id": 857,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "10925:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10915:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10935:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10915:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 861,
														"nodeType": "ExpressionStatement",
														"src": "10915:21:2"
													}
												]
											},
											{
												"expression": {
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10956:23:2",
													"subExpression": {
														"baseExpression": {
															"id": 863,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "10963:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 865,
														"indexExpression": {
															"id": 864,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "10971:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10963:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "10956:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 869,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "11004:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11019:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11011:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 870,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11011:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11011:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "11023:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 868,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "10995:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10995:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "EmitStatement",
												"src": "10990:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "11062:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11069:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 879,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11069:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11069:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "11081:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11090:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 877,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "11042:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11042:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "11042:50:2"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "10017:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10346:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10360:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "10352:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10352:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10351:17:2"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10386:0:2"
									},
									"scope": 1165,
									"src": "10337:762:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "11532:1124:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 901,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "11565:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 899,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "11550:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1165_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11557:7:2",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 366,
																	"src": "11550:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11550:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 903,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "11577:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11550:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11583:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11542:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11542:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "11542:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 909,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "11641:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11655:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11647:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 910,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11647:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11647:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11641:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11659:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11633:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11633:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "11633:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 919,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "11730:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 920,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "11736:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "11740:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11749:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 918,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "11709:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11709:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "11709:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 928,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "11866:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 926,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "11851:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1165_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11858:7:2",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 366,
																	"src": "11851:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11851:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 930,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "11878:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11851:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11884:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 925,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11843:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11843:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "11843:81:2"
											},
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11986:31:2",
													"subExpression": {
														"baseExpression": {
															"id": 935,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "11993:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 937,
														"indexExpression": {
															"id": 936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "12009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11993:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "11986:31:2"
											},
											{
												"id": 952,
												"nodeType": "UncheckedBlock",
												"src": "12028:496:2",
												"statements": [
													{
														"expression": {
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 940,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "12461:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 942,
																"indexExpression": {
																	"id": 941,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "12471:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12461:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12480:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12461:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 945,
														"nodeType": "ExpressionStatement",
														"src": "12461:20:2"
													},
													{
														"expression": {
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 946,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "12495:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 948,
																"indexExpression": {
																	"id": 947,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "12505:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12495:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12512:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12495:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 951,
														"nodeType": "ExpressionStatement",
														"src": "12495:18:2"
													}
												]
											},
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 953,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "12533:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 955,
														"indexExpression": {
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "12541:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12533:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 956,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "12552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12533:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "12533:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 960,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "12579:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 961,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "12585:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "12589:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "12570:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12570:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "EmitStatement",
												"src": "12565:32:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 966,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "12628:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "12634:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "12638:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12647:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 965,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "12608:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12608:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "12608:41:2"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "11105:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11432:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11459:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11451:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11481:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11473:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11501:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11493:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11441:73:2"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11532:0:2"
									},
									"scope": 1165,
									"src": "11423:1233:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "12832:107:2",
										"statements": [
											{
												"expression": {
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 981,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "12842:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 983,
														"indexExpression": {
															"id": 982,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "12858:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12842:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 984,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "12869:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12842:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "12842:29:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 990,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "12910:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 988,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "12895:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1165_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12902:7:2",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 366,
																"src": "12895:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12895:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 992,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "12920:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 993,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "12924:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 987,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "12886:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12886:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "EmitStatement",
												"src": "12881:51:2"
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "12662:101:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12777:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12794:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "12786:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12786:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12806:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "12798:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12785:29:2"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12832:0:2"
									},
									"scope": 1165,
									"src": "12768:171:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "13198:184:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1008,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "13216:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1009,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "13225:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13216:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13235:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 1007,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13208:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13208:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "13208:55:2"
											},
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1014,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "13273:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1017,
															"indexExpression": {
																"id": 1015,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "13292:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13273:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1018,
														"indexExpression": {
															"id": 1016,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "13299:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13273:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1019,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "13311:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13273:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "13273:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1023,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "13349:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1024,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "13356:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1025,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "13366:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1022,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "13334:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13334:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "EmitStatement",
												"src": "13329:46:2"
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "12945:125:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13084:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13120:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "13112:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13112:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13143:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "13135:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13135:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13166:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "13161:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13161:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13102:78:2"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13198:0:2"
									},
									"scope": 1165,
									"src": "13075:307:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "13529:70:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1037,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "13555:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1036,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "13547:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13547:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13565:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 1035,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13539:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13539:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "13539:53:2"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "13388:73:2",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "13475:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "13490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13489:17:2"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13529:0:2"
									},
									"scope": 1165,
									"src": "13466:133:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "14306:676:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1057,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "14320:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14323:10:2",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1374,
														"src": "14320:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14320:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1102,
													"nodeType": "Block",
													"src": "14940:36:2",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14961:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1056,
															"id": 1101,
															"nodeType": "Return",
															"src": "14954:11:2"
														}
													]
												},
												"id": 1103,
												"nodeType": "IfStatement",
												"src": "14316:660:2",
												"trueBody": {
													"id": 1099,
													"nodeType": "Block",
													"src": "14337:597:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1079,
																		"nodeType": "Block",
																		"src": "14451:91:2",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1077,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1073,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1071,
																						"src": "14476:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1074,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1299,
																								"src": "14486:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1299_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1075,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14502:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1298,
																							"src": "14486:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1076,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14519:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14486:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14476:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1056,
																				"id": 1078,
																				"nodeType": "Return",
																				"src": "14469:58:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1080,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1072,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1071,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14443:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1080,
																				"src": "14436:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1070,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14436:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14435:15:2"
																	},
																	"src": "14427:115:2"
																},
																{
																	"block": {
																		"id": 1096,
																		"nodeType": "Block",
																		"src": "14571:353:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1087,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1084,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1082,
																							"src": "14593:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1085,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14600:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14593:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1086,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14610:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14593:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1094,
																					"nodeType": "Block",
																					"src": "14720:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14806:86:2",
																								"nodeType": "YulBlock",
																								"src": "14806:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14843:2:2",
																															"nodeType": "YulLiteral",
																															"src": "14843:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14847:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14847:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14839:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "14839:3:2"
																													},
																													"nativeSrc": "14839:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14839:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14862:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14862:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14856:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "14856:5:2"
																													},
																													"nativeSrc": "14856:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14856:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14832:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "14832:6:2"
																											},
																											"nativeSrc": "14832:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "14832:38:2"
																										},
																										"nativeSrc": "14832:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "14832:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "prague",
																							"externalReferences": [
																								{
																									"declaration": 1082,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14847:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1082,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14862:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1093,
																							"nodeType": "InlineAssembly",
																							"src": "14797:95:2"
																						}
																					]
																				},
																				"id": 1095,
																				"nodeType": "IfStatement",
																				"src": "14589:321:2",
																				"trueBody": {
																					"id": 1092,
																					"nodeType": "Block",
																					"src": "14613:101:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1089,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14642:52:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1088,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14635:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1090,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14635:60:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1091,
																							"nodeType": "ExpressionStatement",
																							"src": "14635:60:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1097,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1083,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1082,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14563:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1097,
																				"src": "14550:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1081,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14550:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14549:21:2"
																	},
																	"src": "14543:381:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1064,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1698,
																			"src": "14392:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14392:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1066,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1046,
																		"src": "14406:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1067,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1050,
																		"src": "14412:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1068,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "14421:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1061,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1048,
																				"src": "14371:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1060,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "14355:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1299_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14355:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1299",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14375:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1298,
																	"src": "14355:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14355:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1098,
															"nodeType": "TryStatement",
															"src": "14351:573:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "13605:541:2",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "14160:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14200:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "14192:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14222:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "14214:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14214:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14242:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "14234:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14272:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "14259:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1051,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14259:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14182:100:2"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "14300:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1054,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14299:6:2"
									},
									"scope": 1165,
									"src": "14151:831:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "15856:238:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1117,
														"name": "batchSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "15870:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15882:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15870:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1149,
												"nodeType": "IfStatement",
												"src": "15866:222:2",
												"trueBody": {
													"id": 1148,
													"nodeType": "Block",
													"src": "15885:203:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1120,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "15903:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15919:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15911:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1121,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "15911:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15911:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15903:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1133,
															"nodeType": "IfStatement",
															"src": "15899:85:2",
															"trueBody": {
																"id": 1132,
																"nodeType": "Block",
																"src": "15923:61:2",
																"statements": [
																	{
																		"expression": {
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1126,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "15941:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1128,
																				"indexExpression": {
																					"id": 1127,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "15951:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "15941:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 1129,
																				"name": "batchSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1114,
																				"src": "15960:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15941:28:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1131,
																		"nodeType": "ExpressionStatement",
																		"src": "15941:28:2"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1134,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "16001:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16015:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16007:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1135,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16007:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16007:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16001:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1147,
															"nodeType": "IfStatement",
															"src": "15997:81:2",
															"trueBody": {
																"id": 1146,
																"nodeType": "Block",
																"src": "16019:59:2",
																"statements": [
																	{
																		"expression": {
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1140,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "16037:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1142,
																				"indexExpression": {
																					"id": 1141,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "16047:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "16037:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1143,
																				"name": "batchSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1114,
																				"src": "16054:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16037:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1145,
																		"nodeType": "ExpressionStatement",
																		"src": "16037:26:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "14988:705:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15707:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15745:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "15737:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15767:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "15759:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "15779:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "15823:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "15815:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15815:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15727:111:2"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15856:0:2"
									},
									"scope": 1165,
									"src": "15698:396:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "16951:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "16100:695:2",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16809:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16846:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "16838:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16838:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16868:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "16860:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16888:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "16880:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16880:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16918:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "16910:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16910:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16828:105:2"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16951:0:2"
									},
									"scope": 1165,
									"src": "16800:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1166,
							"src": "628:16327:2",
							"usedErrors": [],
							"usedEvents": [
								1180,
								1189,
								1198
							]
						}
					],
					"src": "107:16849:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1993
						],
						"IERC721": [
							1281
						]
					},
					"id": 1282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1167,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1282,
							"sourceUnit": 1994,
							"src": "133:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1170,
										"name": "IERC165",
										"nameLocations": [
											"271:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1993,
										"src": "271:7:3"
									},
									"id": 1171,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1169,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1281,
							"linearizedBaseContracts": [
								1281,
								1993
							],
							"name": "IERC721",
							"nameLocation": "260:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1180,
									"name": "Transfer",
									"nameLocation": "384:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "393:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "415:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "435:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:3"
									},
									"src": "378:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1189,
									"name": "Approval",
									"nameLocation": "571:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "580:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "603:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "629:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:3"
									},
									"src": "565:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1198,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "803:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "826:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "852:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:3"
									},
									"src": "782:85:3"
								},
								{
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "973:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:3"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "1011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:3"
									},
									"scope": 1281,
									"src": "954:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "1187:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:3"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "1227:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:3"
									},
									"scope": 1281,
									"src": "1170:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "1844:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "1866:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "1911:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:3"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:3"
									},
									"scope": 1281,
									"src": "1809:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "2679:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "2701:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "2721:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:3"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:3"
									},
									"scope": 1281,
									"src": "2644:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "3526:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "3548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "3568:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:3"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:3"
									},
									"scope": 1281,
									"src": "3495:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "4079:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "4091:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:3"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:3"
									},
									"scope": 1281,
									"src": "4062:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "4464:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "4482:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:3"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:3"
									},
									"scope": 1281,
									"src": "4437:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "4678:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:3"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "4718:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:3"
									},
									"scope": 1281,
									"src": "4657:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4911:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4926:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:3"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4967:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:3"
									},
									"scope": 1281,
									"src": "4885:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1282,
							"src": "250:4725:3",
							"usedErrors": [],
							"usedEvents": [
								1180,
								1189,
								1198
							]
						}
					],
					"src": "108:4868:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1299
						]
					},
					"id": 1300,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1283,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1284,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1299,
							"linearizedBaseContracts": [
								1299
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "859:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "885:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "907:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "932:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:4"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "976:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1295,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:4"
									},
									"scope": 1299,
									"src": "824:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1300,
							"src": "294:692:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:871:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
					"exportedSymbols": {
						"Address": [
							1686
						],
						"Context": [
							1708
						],
						"ERC165": [
							1981
						],
						"ERC721": [
							1165
						],
						"ERC721Burnable": [
							1329
						],
						"IERC165": [
							1993
						],
						"IERC721": [
							1281
						],
						"IERC721Metadata": [
							1356
						],
						"IERC721Receiver": [
							1299
						],
						"Math": [
							2858
						],
						"Strings": [
							1957
						]
					},
					"id": 1330,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1301,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "126:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1302,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1330,
							"sourceUnit": 1166,
							"src": "151:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1303,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1330,
							"sourceUnit": 1709,
							"src": "175:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1305,
										"name": "Context",
										"nameLocations": [
											"342:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1708,
										"src": "342:7:5"
									},
									"id": 1306,
									"nodeType": "InheritanceSpecifier",
									"src": "342:7:5"
								},
								{
									"baseName": {
										"id": 1307,
										"name": "ERC721",
										"nameLocations": [
											"351:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1165,
										"src": "351:6:5"
									},
									"id": 1308,
									"nodeType": "InheritanceSpecifier",
									"src": "351:6:5"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1304,
								"nodeType": "StructuredDocumentation",
								"src": "213:92:5",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 1329,
							"linearizedBaseContracts": [
								1329,
								1165,
								1356,
								1281,
								1981,
								1993,
								1708
							],
							"name": "ERC721Burnable",
							"nameLocation": "324:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "577:192:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1316,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1698,
																		"src": "666:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "666:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1318,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "680:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1315,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "647:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "647:41:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "690:47:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 1314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "639:99:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "639:99:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1324,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "754:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1323,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "748:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "748:14:5"
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "364:162:5",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "540:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "553:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "545:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:17:5"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "577:0:5"
									},
									"scope": 1329,
									"src": "531:238:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1330,
							"src": "306:465:5",
							"usedErrors": [],
							"usedEvents": [
								1180,
								1189,
								1198
							]
						}
					],
					"src": "126:646:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1993
						],
						"IERC721": [
							1281
						],
						"IERC721Metadata": [
							1356
						]
					},
					"id": 1357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1331,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1357,
							"sourceUnit": 1282,
							"src": "137:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1334,
										"name": "IERC721",
										"nameLocations": [
											"326:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1281,
										"src": "326:7:6"
									},
									"id": 1335,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1333,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1356,
							"linearizedBaseContracts": [
								1356,
								1281,
								1993
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:6"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "442:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1338,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:6"
									},
									"scope": 1356,
									"src": "403:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:6"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "569:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:6"
									},
									"scope": 1356,
									"src": "528:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "703:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:6"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "743:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1352,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:6"
									},
									"scope": 1356,
									"src": "685:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1357,
							"src": "297:463:6",
							"usedErrors": [],
							"usedEvents": [
								1180,
								1189,
								1198
							]
						}
					],
					"src": "112:649:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1686
						]
					},
					"id": 1687,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1358,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1359,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1686,
							"linearizedBaseContracts": [
								1686
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "1241:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1367,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "1465:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1366,
												"id": 1372,
												"nodeType": "Return",
												"src": "1458:30:7"
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "1195:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:7"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "1235:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:7"
									},
									"scope": 1686,
									"src": "1175:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "2483:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1385,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1686",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1686",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1383,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1388,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "2526:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:7"
											},
											{
												"assignments": [
													1394,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1407,
														"src": "2578:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1393,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1401,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1395,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "2596:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1397,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "2618:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1403,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "2647:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:7"
											}
										]
									},
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "2431:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "2458:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:7"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:7"
									},
									"scope": 1686,
									"src": "2412:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "3555:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1419,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "3594:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "3602:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1418,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1466,
															1510
														],
														"referencedDeclaration": 1510,
														"src": "3572:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1417,
												"id": 1424,
												"nodeType": "Return",
												"src": "3565:79:7"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "3488:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "3504:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:7"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "3541:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:7"
									},
									"scope": 1686,
									"src": "3466:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "4020:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1439,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "4059:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1440,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "4067:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1442,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "4076:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1438,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1466,
															1510
														],
														"referencedDeclaration": 1510,
														"src": "4037:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1437,
												"id": 1444,
												"nodeType": "Return",
												"src": "4030:59:7"
											}
										]
									},
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "3904:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "3928:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1430,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "3955:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1432,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:7"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "4006:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1435,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:7"
									},
									"scope": 1686,
									"src": "3873:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "4601:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1459,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "4640:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1460,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "4648:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1461,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "4654:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1458,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1466,
															1510
														],
														"referencedDeclaration": 1510,
														"src": "4618:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1457,
												"id": 1464,
												"nodeType": "Return",
												"src": "4611:94:7"
											}
										]
									},
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "4498:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "4522:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "4549:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:7"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "4587:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:7"
									},
									"scope": 1686,
									"src": "4458:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "5139:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1483,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1686",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1686",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1481,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1486,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "5182:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:7"
											},
											{
												"assignments": [
													1492,
													1494
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1509,
														"src": "5241:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1491,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1494,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1509,
														"src": "5255:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1493,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1501,
												"initialValue": {
													"arguments": [
														{
															"id": 1499,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "5308:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1495,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "5282:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1497,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "5301:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1503,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "5357:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "5365:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1505,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "5374:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1506,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "5386:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1502,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "5330:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1479,
												"id": 1508,
												"nodeType": "Return",
												"src": "5323:76:7"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "5000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "5024:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "5051:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "5074:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1474,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:7"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "5125:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1477,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:7"
									},
									"scope": 1686,
									"src": "4960:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "5683:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1521,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "5719:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1522,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "5727:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1520,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1527,
															1556
														],
														"referencedDeclaration": 1556,
														"src": "5700:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1519,
												"id": 1525,
												"nodeType": "Return",
												"src": "5693:80:7"
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "5611:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "5627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:7"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "5669:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:7"
									},
									"scope": 1686,
									"src": "5583:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "6122:168:7",
										"statements": [
											{
												"assignments": [
													1540,
													1542
												],
												"declarations": [
													{
														"constant": false,
														"id": 1540,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1555,
														"src": "6133:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1539,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1542,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1555,
														"src": "6147:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1541,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1547,
												"initialValue": {
													"arguments": [
														{
															"id": 1545,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "6192:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "6174:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1549,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "6241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1550,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "6249:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1551,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "6258:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1552,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "6270:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1548,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "6214:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1554,
												"nodeType": "Return",
												"src": "6207:76:7"
											}
										]
									},
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "6001:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "6025:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "6052:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:7"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "6108:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:7"
									},
									"scope": 1686,
									"src": "5964:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "6566:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1567,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "6604:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1568,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "6612:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1566,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1573,
															1602
														],
														"referencedDeclaration": 1602,
														"src": "6583:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1565,
												"id": 1571,
												"nodeType": "Return",
												"src": "6576:84:7"
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "6499:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "6515:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1560,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:7"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "6552:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:7"
									},
									"scope": 1686,
									"src": "6469:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "7008:170:7",
										"statements": [
											{
												"assignments": [
													1586,
													1588
												],
												"declarations": [
													{
														"constant": false,
														"id": 1586,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1601,
														"src": "7019:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1585,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1588,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1601,
														"src": "7033:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1587,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1593,
												"initialValue": {
													"arguments": [
														{
															"id": 1591,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "7080:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1589,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "7060:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1595,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "7129:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1596,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "7137:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1597,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "7146:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1598,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "7158:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1594,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "7102:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1600,
												"nodeType": "Return",
												"src": "7095:76:7"
											}
										]
									},
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "6892:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "6916:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1577,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "6943:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:7"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "6994:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:7"
									},
									"scope": 1686,
									"src": "6853:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1640,
										"nodeType": "Block",
										"src": "7660:434:7",
										"statements": [
											{
												"condition": {
													"id": 1616,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1607,
													"src": "7674:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1638,
													"nodeType": "Block",
													"src": "8030:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1634,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "8052:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1635,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "8064:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1633,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "8044:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1637,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:7"
														}
													]
												},
												"id": 1639,
												"nodeType": "IfStatement",
												"src": "7670:418:7",
												"trueBody": {
													"id": 1632,
													"nodeType": "Block",
													"src": "7683:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1617,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "7701:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1629,
															"nodeType": "IfStatement",
															"src": "7697:286:7",
															"trueBody": {
																"id": 1628,
																"nodeType": "Block",
																"src": "7725:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1623,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1605,
																							"src": "7927:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1622,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1374,
																						"src": "7916:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1624,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1625,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1621,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1627,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1630,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "8003:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1615,
															"id": 1631,
															"nodeType": "Return",
															"src": "7996:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "7511:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "7535:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "7557:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "7590:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:7"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "7646:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:7"
									},
									"scope": 1686,
									"src": "7466:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "8475:135:7",
										"statements": [
											{
												"condition": {
													"id": 1653,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1644,
													"src": "8489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1662,
													"nodeType": "Block",
													"src": "8546:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1658,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1646,
																		"src": "8568:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1659,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1648,
																		"src": "8580:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1657,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "8560:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1661,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:7"
														}
													]
												},
												"id": 1663,
												"nodeType": "IfStatement",
												"src": "8485:119:7",
												"trueBody": {
													"id": 1656,
													"nodeType": "Block",
													"src": "8498:42:7",
													"statements": [
														{
															"expression": {
																"id": 1654,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "8519:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1652,
															"id": 1655,
															"nodeType": "Return",
															"src": "8512:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "8350:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "8372:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1645,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "8405:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:7"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "8461:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:7"
									},
									"scope": 1686,
									"src": "8315:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "8699:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1672,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "8775:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1682,
													"nodeType": "Block",
													"src": "9105:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1679,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "9126:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1678,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1681,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:7"
														}
													]
												},
												"id": 1683,
												"nodeType": "IfStatement",
												"src": "8771:379:7",
												"trueBody": {
													"id": 1677,
													"nodeType": "Block",
													"src": "8798:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "8956:133:7",
																"nodeType": "YulBlock",
																"src": "8956:133:7",
																"statements": [
																	{
																		"nativeSrc": "8974:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9003:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8997:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:7"
																			},
																			"nativeSrc": "8997:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "8978:15:7",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9042:2:7",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9046:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9038:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:7"
																					},
																					"nativeSrc": "9038:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9059:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9031:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:7"
																			},
																			"nativeSrc": "9031:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:7"
																		},
																		"nativeSrc": "9031:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 1667,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1667,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:7",
																	"valueSize": 1
																}
															],
															"id": 1676,
															"nodeType": "InlineAssembly",
															"src": "8947:142:7"
														}
													]
												}
											}
										]
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "8633:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "8658:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:7"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:7"
									},
									"scope": 1686,
									"src": "8616:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1687,
							"src": "194:8964:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9058:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1708
						]
					},
					"id": 1709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1688,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1689,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1708,
							"linearizedBaseContracts": [
								1708
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1694,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1693,
												"id": 1696,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 1708,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1703,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1702,
												"id": 1705,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1700,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 1708,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1709,
							"src": "608:235:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1782
						]
					},
					"id": 1783,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1711,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:9",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1782,
							"linearizedBaseContracts": [
								1782
							],
							"name": "Counters",
							"nameLocation": "432:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1714,
									"members": [
										{
											"constant": false,
											"id": 1713,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1714,
											"src": "786:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1712,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:9",
									"nodeType": "StructDefinition",
									"scope": 1782,
									"src": "447:374:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "901:38:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1722,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "918:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1713,
													"src": "918:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1721,
												"id": 1724,
												"nodeType": "Return",
												"src": "911:21:9"
											}
										]
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "844:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1716,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1715,
														"name": "Counter",
														"nameLocations": [
															"844:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1714,
														"src": "844:7:9"
													},
													"referencedDeclaration": 1714,
													"src": "844:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:9"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "892:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:9"
									},
									"scope": 1782,
									"src": "827:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "998:70:9",
										"statements": [
											{
												"id": 1738,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:9",
												"statements": [
													{
														"expression": {
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1732,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "1032:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1734,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1713,
																"src": "1032:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1737,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:9"
													}
												]
											}
										]
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "964:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1728,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1727,
														"name": "Counter",
														"nameLocations": [
															"964:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1714,
														"src": "964:7:9"
													},
													"referencedDeclaration": 1714,
													"src": "964:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:9"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:9"
									},
									"scope": 1782,
									"src": "945:123:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "1127:176:9",
										"statements": [
											{
												"assignments": [
													1747
												],
												"declarations": [
													{
														"constant": false,
														"id": 1747,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1767,
														"src": "1137:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1746,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"expression": {
														"id": 1748,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "1153:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1713,
													"src": "1153:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1752,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "1185:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:9"
											},
											{
												"id": 1766,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:9",
												"statements": [
													{
														"expression": {
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1758,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "1260:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1713,
																"src": "1260:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1761,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "1277:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1765,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:9"
													}
												]
											}
										]
									},
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "1093:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1741,
														"name": "Counter",
														"nameLocations": [
															"1093:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1714,
														"src": "1093:7:9"
													},
													"referencedDeclaration": 1714,
													"src": "1093:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:9"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:9"
									},
									"scope": 1782,
									"src": "1074:229:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "1358:35:9",
										"statements": [
											{
												"expression": {
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1774,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "1368:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:9",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1713,
														"src": "1368:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1779,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:9"
											}
										]
									},
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1324:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1770,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1769,
														"name": "Counter",
														"nameLocations": [
															"1324:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1714,
														"src": "1324:7:9"
													},
													"referencedDeclaration": 1714,
													"src": "1324:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:9"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:9"
									},
									"scope": 1782,
									"src": "1309:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1783,
							"src": "424:971:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2858
						],
						"Strings": [
							1957
						]
					},
					"id": 1958,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1784,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1785,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1958,
							"sourceUnit": 2859,
							"src": "126:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1786,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1957,
							"linearizedBaseContracts": [
								1957
							],
							"name": "Strings",
							"nameLocation": "196:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1789,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1957,
									"src": "210:54:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1787,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1788,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1792,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1957,
									"src": "270:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1790,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1791,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "486:625:10",
										"statements": [
											{
												"id": 1838,
												"nodeType": "UncheckedBlock",
												"src": "496:609:10",
												"statements": [
													{
														"assignments": [
															1801
														],
														"declarations": [
															{
																"constant": false,
																"id": 1801,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1838,
																"src": "520:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1800,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1808,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1804,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "548:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1802,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2858,
																		"src": "537:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2858_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2695,
																	"src": "537:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:10"
													},
													{
														"assignments": [
															1810
														],
														"declarations": [
															{
																"constant": false,
																"id": 1810,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1838,
																"src": "572:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1809,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1815,
														"initialValue": {
															"arguments": [
																{
																	"id": 1813,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "606:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1811,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:10"
													},
													{
														"assignments": [
															1817
														],
														"declarations": [
															{
																"constant": false,
																"id": 1817,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1838,
																"src": "627:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1816,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1818,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:10"
													},
													{
														"AST": {
															"nativeSrc": "708:67:10",
															"nodeType": "YulBlock",
															"src": "708:67:10",
															"statements": [
																{
																	"nativeSrc": "726:35:10",
																	"nodeType": "YulAssignment",
																	"src": "726:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "737:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "749:2:10",
																						"nodeType": "YulLiteral",
																						"src": "749:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "753:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "745:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:10"
																				},
																				"nativeSrc": "745:15:10",
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "733:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:10"
																		},
																		"nativeSrc": "733:28:10",
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "726:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1810,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1801,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1817,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:10",
																"valueSize": 1
															}
														],
														"id": 1819,
														"nodeType": "InlineAssembly",
														"src": "699:76:10"
													},
													{
														"body": {
															"id": 1834,
															"nodeType": "Block",
															"src": "801:267:10",
															"statements": [
																{
																	"expression": {
																		"id": 1822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:10",
																		"subExpression": {
																			"id": 1821,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "819:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1823,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:10"
																},
																{
																	"AST": {
																		"nativeSrc": "902:84:10",
																		"nodeType": "YulBlock",
																		"src": "902:84:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "932:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "946:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "953:2:10",
																											"nodeType": "YulLiteral",
																											"src": "953:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "942:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:10"
																									},
																									"nativeSrc": "942:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:10"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "958:8:10",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "937:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:10"
																							},
																							"nativeSrc": "937:30:10",
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "924:7:10",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:10"
																					},
																					"nativeSrc": "924:44:10",
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:10"
																				},
																				"nativeSrc": "924:44:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "prague",
																	"externalReferences": [
																		{
																			"declaration": 1789,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1817,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1795,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 1824,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:10"
																},
																{
																	"expression": {
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1825,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1795,
																			"src": "1003:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1828,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1829,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1795,
																			"src": "1036:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1833,
																	"nodeType": "IfStatement",
																	"src": "1032:21:10",
																	"trueBody": {
																		"id": 1832,
																		"nodeType": "Break",
																		"src": "1048:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1835,
														"nodeType": "WhileStatement",
														"src": "788:280:10"
													},
													{
														"expression": {
															"id": 1836,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "1088:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1799,
														"id": 1837,
														"nodeType": "Return",
														"src": "1081:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "433:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:10"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "471:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:10"
									},
									"scope": 1957,
									"src": "415:696:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "1290:100:10",
										"statements": [
											{
												"id": 1858,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1849,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "1343:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1852,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1843,
																				"src": "1362:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1850,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2858,
																				"src": "1350:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2858_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2818,
																			"src": "1350:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1848,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1860,
																	1936,
																	1956
																],
																"referencedDeclaration": 1936,
																"src": "1331:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1847,
														"id": 1857,
														"nodeType": "Return",
														"src": "1324:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "1237:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:10"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "1275:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:10"
									},
									"scope": 1957,
									"src": "1216:174:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "1603:347:10",
										"statements": [
											{
												"assignments": [
													1871
												],
												"declarations": [
													{
														"constant": false,
														"id": 1871,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1935,
														"src": "1613:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1870,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1880,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1875,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "1649:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1872,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:10"
											},
											{
												"expression": {
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1881,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "1670:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1883,
														"indexExpression": {
															"hexValue": "30",
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1886,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:10"
											},
											{
												"expression": {
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1887,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "1695:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1889,
														"indexExpression": {
															"hexValue": "31",
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1892,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:10"
											},
											{
												"body": {
													"id": 1921,
													"nodeType": "Block",
													"src": "1765:83:10",
													"statements": [
														{
															"expression": {
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1907,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "1779:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1909,
																	"indexExpression": {
																		"id": 1908,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "1786:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1910,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1789,
																		"src": "1791:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1914,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1911,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1863,
																			"src": "1800:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1916,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:10"
														},
														{
															"expression": {
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1917,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "1826:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1920,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1901,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "1753:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1922,
												"initializationExpression": {
													"assignments": [
														1894
													],
													"declarations": [
														{
															"constant": false,
															"id": 1894,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1922,
															"src": "1725:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1893,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1900,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1896,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "1741:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:10"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:10",
														"subExpression": {
															"id": 1904,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "1762:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1906,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:10"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1924,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "1865:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1923,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1932,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "1936:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1930,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1869,
												"id": 1934,
												"nodeType": "Return",
												"src": "1922:21:10"
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "1534:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "1549:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:10"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "1588:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:10"
									},
									"scope": 1957,
									"src": "1513:437:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "2175:76:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1949,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1939,
																			"src": "2220:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1947,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1945,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1952,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "2228:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1944,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1860,
															1936,
															1956
														],
														"referencedDeclaration": 1936,
														"src": "2192:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1943,
												"id": 1954,
												"nodeType": "Return",
												"src": "2185:59:10"
											}
										]
									},
									"documentation": {
										"id": 1937,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2123:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:10"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2160:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1941,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:10"
									},
									"scope": 1957,
									"src": "2102:149:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1958,
							"src": "188:2065:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2153:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1981
						],
						"IERC165": [
							1993
						]
					},
					"id": 1982,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1959,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1960,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1982,
							"sourceUnit": 1994,
							"src": "124:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1962,
										"name": "IERC165",
										"nameLocations": [
											"754:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1993,
										"src": "754:7:11"
									},
									"id": 1963,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1961,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1981,
							"linearizedBaseContracts": [
								1981,
								1993
							],
							"name": "ERC165",
							"nameLocation": "744:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1992
									],
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "920:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1972,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "937:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1974,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1993,
																	"src": "957:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1993_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1993_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1973,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1993",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1971,
												"id": 1978,
												"nodeType": "Return",
												"src": "930:47:11"
											}
										]
									},
									"documentation": {
										"id": 1964,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1968,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:11"
									},
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "856:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1965,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:11"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "914:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:11"
									},
									"scope": 1981,
									"src": "829:155:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1982,
							"src": "726:260:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1993
						]
					},
					"id": 1994,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1983,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1984,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1993,
							"linearizedBaseContracts": [
								1993
							],
							"name": "IERC165",
							"nameLocation": "415:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1992,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "801:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1986,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:12"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "844:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1989,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:12"
									},
									"scope": 1993,
									"src": "774:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1994,
							"src": "405:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2858
						]
					},
					"id": 2859,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1995,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1996,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2858,
							"linearizedBaseContracts": [
								2858
							],
							"name": "Math",
							"nameLocation": "210:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 2000,
									"members": [
										{
											"id": 1997,
											"name": "Down",
											"nameLocation": "245:4:13",
											"nodeType": "EnumValue",
											"src": "245:4:13"
										},
										{
											"id": 1998,
											"name": "Up",
											"nameLocation": "287:2:13",
											"nodeType": "EnumValue",
											"src": "287:2:13"
										},
										{
											"id": 1999,
											"name": "Zero",
											"nameLocation": "318:4:13",
											"nodeType": "EnumValue",
											"src": "318:4:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:13",
									"nodeType": "EnumDefinition",
									"src": "221:122:13"
								},
								{
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "480:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2010,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "497:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2011,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "501:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2014,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "509:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:13",
													"trueExpression": {
														"id": 2013,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "505:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2009,
												"id": 2016,
												"nodeType": "Return",
												"src": "490:20:13"
											}
										]
									},
									"documentation": {
										"id": 2001,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "426:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "437:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:13"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "471:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:13"
									},
									"scope": 2858,
									"src": "413:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "655:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2028,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "672:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2029,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "676:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2032,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2023,
														"src": "684:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:13",
													"trueExpression": {
														"id": 2031,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "680:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2027,
												"id": 2034,
												"nodeType": "Return",
												"src": "665:20:13"
											}
										]
									},
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "646:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:13"
									},
									"scope": 2858,
									"src": "588:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "876:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2046,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2047,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "935:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2049,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2050,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2039,
																		"src": "941:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2051,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "945:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2053,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2045,
												"id": 2057,
												"nodeType": "Return",
												"src": "923:28:13"
											}
										]
									},
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "822:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "833:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:13"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "867:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:13"
									},
									"scope": 2858,
									"src": "805:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "1228:123:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2069,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "1316:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2073,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2062,
																			"src": "1330:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2076,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2077,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2064,
																"src": "1339:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2068,
												"id": 2082,
												"nodeType": "Return",
												"src": "1309:35:13"
											}
										]
									},
									"documentation": {
										"id": 2060,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "1174:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "1185:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:13"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "1219:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:13"
									},
									"scope": 2858,
									"src": "1157:194:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "1795:3797:13",
										"statements": [
											{
												"id": 2204,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:13",
												"statements": [
													{
														"assignments": [
															2097
														],
														"declarations": [
															{
																"constant": false,
																"id": 2097,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2204,
																"src": "2126:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2096,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2098,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:13"
													},
													{
														"assignments": [
															2100
														],
														"declarations": [
															{
																"constant": false,
																"id": 2100,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2204,
																"src": "2198:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2099,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2101,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:13"
													},
													{
														"AST": {
															"nativeSrc": "2278:157:13",
															"nodeType": "YulBlock",
															"src": "2278:157:13",
															"statements": [
																{
																	"nativeSrc": "2296:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2313:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2316:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2323:1:13",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2319:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:13"
																				},
																				"nativeSrc": "2319:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2306:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:13"
																		},
																		"nativeSrc": "2306:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2300:2:13",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2343:18:13",
																	"nodeType": "YulAssignment",
																	"src": "2343:18:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2356:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2359:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2352:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:13"
																		},
																		"nativeSrc": "2352:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2343:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "2378:43:13",
																	"nodeType": "YulAssignment",
																	"src": "2378:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2395:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2399:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2391:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:13"
																				},
																				"nativeSrc": "2391:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2410:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2414:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2407:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:13"
																				},
																				"nativeSrc": "2407:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2387:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:13"
																		},
																		"nativeSrc": "2387:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2378:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 2097,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2097,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2097,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2100,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2087,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2087,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:13",
																"valueSize": 1
															}
														],
														"id": 2102,
														"nodeType": "InlineAssembly",
														"src": "2269:166:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2103,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2100,
																"src": "2516:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2111,
														"nodeType": "IfStatement",
														"src": "2512:75:13",
														"trueBody": {
															"id": 2110,
															"nodeType": "Block",
															"src": "2528:59:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2106,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2097,
																			"src": "2553:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2107,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2091,
																			"src": "2561:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2095,
																	"id": 2109,
																	"nodeType": "Return",
																	"src": "2546:26:13"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2113,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "2697:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2114,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2100,
																		"src": "2711:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 2112,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2117,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:13"
													},
													{
														"assignments": [
															2119
														],
														"declarations": [
															{
																"constant": false,
																"id": 2119,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2204,
																"src": "2973:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2118,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2120,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:13"
													},
													{
														"AST": {
															"nativeSrc": "3013:291:13",
															"nodeType": "YulBlock",
															"src": "3013:291:13",
															"statements": [
																{
																	"nativeSrc": "3082:38:13",
																	"nodeType": "YulAssignment",
																	"src": "3082:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3102:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3105:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3108:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3095:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:13"
																		},
																		"nativeSrc": "3095:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3082:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "3202:41:13",
																	"nodeType": "YulAssignment",
																	"src": "3202:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3215:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3225:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3236:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3222:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:13"
																				},
																				"nativeSrc": "3222:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3211:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:13"
																		},
																		"nativeSrc": "3211:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3202:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "3260:30:13",
																	"nodeType": "YulAssignment",
																	"src": "3260:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3273:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3280:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3269:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:13"
																		},
																		"nativeSrc": "3269:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3260:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 2091,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2097,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2097,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2097,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2100,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2100,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2119,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2119,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2119,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2087,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:13",
																"valueSize": 1
															}
														],
														"id": 2121,
														"nodeType": "InlineAssembly",
														"src": "3004:300:13"
													},
													{
														"assignments": [
															2123
														],
														"declarations": [
															{
																"constant": false,
																"id": 2123,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2204,
																"src": "3611:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2122,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2131,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2124,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "3626:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:13",
																			"subExpression": {
																				"id": 2125,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2091,
																				"src": "3642:11:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:13"
													},
													{
														"AST": {
															"nativeSrc": "3681:362:13",
															"nodeType": "YulBlock",
															"src": "3681:362:13",
															"statements": [
																{
																	"nativeSrc": "3746:37:13",
																	"nodeType": "YulAssignment",
																	"src": "3746:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "3765:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3778:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3761:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:13"
																		},
																		"nativeSrc": "3761:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "3746:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "3850:25:13",
																	"nodeType": "YulAssignment",
																	"src": "3850:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3863:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3870:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3859:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:13"
																		},
																		"nativeSrc": "3859:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3850:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "3990:39:13",
																	"nodeType": "YulAssignment",
																	"src": "3990:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4010:1:13",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4013:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4006:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:13"
																						},
																						"nativeSrc": "4006:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4020:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4002:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:13"
																				},
																				"nativeSrc": "4002:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3998:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:13"
																		},
																		"nativeSrc": "3998:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "3990:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 2091,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2091,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2097,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2097,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2123,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2123,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2123,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2123,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2123,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:13",
																"valueSize": 1
															}
														],
														"id": 2132,
														"nodeType": "InlineAssembly",
														"src": "3672:371:13"
													},
													{
														"expression": {
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2133,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "4109:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2134,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2100,
																	"src": "4118:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2135,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "4126:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2138,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:13"
													},
													{
														"assignments": [
															2140
														],
														"declarations": [
															{
																"constant": false,
																"id": 2140,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2204,
																"src": "4448:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2139,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2147,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2142,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2091,
																			"src": "4471:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2144,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:13"
													},
													{
														"expression": {
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2148,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "4704:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2150,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "4719:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2151,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "4733:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2155,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:13"
													},
													{
														"expression": {
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2156,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "4773:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2158,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "4788:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2159,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "4802:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2163,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:13"
													},
													{
														"expression": {
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2164,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "4843:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2166,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "4858:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2167,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "4872:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2171,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:13"
													},
													{
														"expression": {
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2172,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "4913:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2174,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "4928:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2175,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "4942:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2179,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:13"
													},
													{
														"expression": {
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2180,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "4983:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2182,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "4998:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2183,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "5012:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2187,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:13"
													},
													{
														"expression": {
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2188,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "5054:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2190,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "5069:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2191,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "5083:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2195,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:13"
													},
													{
														"expression": {
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2196,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "5524:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2197,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2097,
																	"src": "5533:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2198,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2140,
																	"src": "5541:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2201,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:13"
													},
													{
														"expression": {
															"id": 2202,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "5569:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2095,
														"id": 2203,
														"nodeType": "Return",
														"src": "5562:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "1692:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "1711:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "1730:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:13"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "1779:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:13"
									},
									"scope": 2858,
									"src": "1667:3925:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "5872:189:13",
										"statements": [
											{
												"assignments": [
													2222
												],
												"declarations": [
													{
														"constant": false,
														"id": 2222,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2249,
														"src": "5882:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2228,
												"initialValue": {
													"arguments": [
														{
															"id": 2224,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "5906:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2225,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "5909:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2226,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "5912:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2223,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2206,
															2250
														],
														"referencedDeclaration": 2206,
														"src": "5899:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$2000",
															"typeString": "enum Math.Rounding"
														},
														"id": 2232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2229,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2216,
															"src": "5938:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2000",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2230,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "5950:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$2000_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:13",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1998,
															"src": "5950:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2000",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2234,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "5972:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2235,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2211,
																	"src": "5975:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2236,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "5978:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2233,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2246,
												"nodeType": "IfStatement",
												"src": "5934:98:13",
												"trueBody": {
													"id": 2245,
													"nodeType": "Block",
													"src": "5996:36:13",
													"statements": [
														{
															"expression": {
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2241,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2222,
																	"src": "6010:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2244,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2247,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2222,
													"src": "6048:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2220,
												"id": 2248,
												"nodeType": "Return",
												"src": "6041:13:13"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "5749:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "5768:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "5787:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "5816:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2000",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2214,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "5816:8:13"
													},
													"referencedDeclaration": 2000,
													"src": "5816:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2000",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:13"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "5863:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:13"
									},
									"scope": 2858,
									"src": "5724:337:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "6337:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2258,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "6351:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2264,
												"nodeType": "IfStatement",
												"src": "6347:45:13",
												"trueBody": {
													"id": 2263,
													"nodeType": "Block",
													"src": "6359:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2257,
															"id": 2262,
															"nodeType": "Return",
															"src": "6373:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2266
												],
												"declarations": [
													{
														"constant": false,
														"id": 2266,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2361,
														"src": "7071:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2275,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2269,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2253,
																			"src": "7099:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2268,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2530,
																			2566
																		],
																		"referencedDeclaration": 2530,
																		"src": "7094:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2273,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:13"
											},
											{
												"id": 2360,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:13",
												"statements": [
													{
														"expression": {
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2276,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "7532:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2277,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2266,
																				"src": "7542:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2278,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "7551:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2279,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2266,
																					"src": "7555:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2282,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2286,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:13"
													},
													{
														"expression": {
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2287,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "7581:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2288,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2266,
																				"src": "7591:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2289,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "7600:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2290,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2266,
																					"src": "7604:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2293,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2297,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:13"
													},
													{
														"expression": {
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2298,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "7630:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2299,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2266,
																				"src": "7640:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2300,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "7649:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2301,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2266,
																					"src": "7653:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2304,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2308,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:13"
													},
													{
														"expression": {
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2309,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "7679:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2310,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2266,
																				"src": "7689:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2311,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "7698:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2312,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2266,
																					"src": "7702:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2315,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2319,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:13"
													},
													{
														"expression": {
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2320,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "7728:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2321,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2266,
																				"src": "7738:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2322,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "7747:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2323,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2266,
																					"src": "7751:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2326,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2330,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:13"
													},
													{
														"expression": {
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2331,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "7777:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2332,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2266,
																				"src": "7787:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2333,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "7796:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2334,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2266,
																					"src": "7800:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2337,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2341,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:13"
													},
													{
														"expression": {
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2342,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "7826:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2343,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2266,
																				"src": "7836:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2344,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "7845:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2345,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2266,
																					"src": "7849:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2348,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2352,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2354,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "7886:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2355,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2253,
																		"src": "7894:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2356,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2266,
																		"src": "7898:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2353,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "7882:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2257,
														"id": 2359,
														"nodeType": "Return",
														"src": "7875:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "6294:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:13"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "6328:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:13"
									},
									"scope": 2858,
									"src": "6280:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2397,
										"nodeType": "Block",
										"src": "8098:161:13",
										"statements": [
											{
												"id": 2396,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:13",
												"statements": [
													{
														"assignments": [
															2374
														],
														"declarations": [
															{
																"constant": false,
																"id": 2374,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2396,
																"src": "8132:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2373,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2378,
														"initialValue": {
															"arguments": [
																{
																	"id": 2376,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2365,
																	"src": "8154:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2375,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2362,
																	2398
																],
																"referencedDeclaration": 2362,
																"src": "8149:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2379,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "8177:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2000",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2380,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2368,
																					"src": "8187:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2000",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2381,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2000,
																						"src": "8199:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2000_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2382,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1998,
																					"src": "8199:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2000",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2384,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2374,
																						"src": "8214:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2385,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2374,
																						"src": "8223:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2387,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2365,
																					"src": "8232:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2393,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2372,
														"id": 2395,
														"nodeType": "Return",
														"src": "8170:72:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "8036:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "8047:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2000",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2366,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "8047:8:13"
													},
													"referencedDeclaration": 2000,
													"src": "8047:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2000",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:13"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "8089:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:13"
									},
									"scope": 2858,
									"src": "8022:237:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2529,
										"nodeType": "Block",
										"src": "8444:922:13",
										"statements": [
											{
												"assignments": [
													2407
												],
												"declarations": [
													{
														"constant": false,
														"id": 2407,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2529,
														"src": "8454:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2406,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2409,
												"initialValue": {
													"hexValue": "30",
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:13"
											},
											{
												"id": 2526,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2410,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "8510:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2424,
														"nodeType": "IfStatement",
														"src": "8506:99:13",
														"trueBody": {
															"id": 2423,
															"nodeType": "Block",
															"src": "8528:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2415,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2401,
																			"src": "8546:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2418,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:13"
																},
																{
																	"expression": {
																		"id": 2421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2419,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "8577:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2422,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2425,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "8622:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2439,
														"nodeType": "IfStatement",
														"src": "8618:96:13",
														"trueBody": {
															"id": 2438,
															"nodeType": "Block",
															"src": "8639:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2430,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2401,
																			"src": "8657:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2433,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:13"
																},
																{
																	"expression": {
																		"id": 2436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2434,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "8687:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2437,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2440,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "8731:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2454,
														"nodeType": "IfStatement",
														"src": "8727:96:13",
														"trueBody": {
															"id": 2453,
															"nodeType": "Block",
															"src": "8748:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2401,
																			"src": "8766:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2448,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:13"
																},
																{
																	"expression": {
																		"id": 2451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2449,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "8796:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2452,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2455,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "8840:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2469,
														"nodeType": "IfStatement",
														"src": "8836:96:13",
														"trueBody": {
															"id": 2468,
															"nodeType": "Block",
															"src": "8857:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2460,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2401,
																			"src": "8875:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2463,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:13"
																},
																{
																	"expression": {
																		"id": 2466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2464,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "8905:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2467,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2470,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "8949:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2484,
														"nodeType": "IfStatement",
														"src": "8945:93:13",
														"trueBody": {
															"id": 2483,
															"nodeType": "Block",
															"src": "8965:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2475,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2401,
																			"src": "8983:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2478,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:13"
																},
																{
																	"expression": {
																		"id": 2481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2479,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "9012:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2482,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2485,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "9055:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2499,
														"nodeType": "IfStatement",
														"src": "9051:93:13",
														"trueBody": {
															"id": 2498,
															"nodeType": "Block",
															"src": "9071:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2490,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2401,
																			"src": "9089:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2493,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:13"
																},
																{
																	"expression": {
																		"id": 2496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2494,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "9118:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2497,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2500,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "9161:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2514,
														"nodeType": "IfStatement",
														"src": "9157:93:13",
														"trueBody": {
															"id": 2513,
															"nodeType": "Block",
															"src": "9177:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2505,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2401,
																			"src": "9195:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2508,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:13"
																},
																{
																	"expression": {
																		"id": 2511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2509,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "9224:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2512,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2515,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "9267:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2525,
														"nodeType": "IfStatement",
														"src": "9263:64:13",
														"trueBody": {
															"id": 2524,
															"nodeType": "Block",
															"src": "9283:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2520,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "9301:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2523,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2527,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2407,
													"src": "9353:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2405,
												"id": 2528,
												"nodeType": "Return",
												"src": "9346:13:13"
											}
										]
									},
									"documentation": {
										"id": 2399,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:13",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "8397:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:13"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "8435:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:13"
									},
									"scope": 2858,
									"src": "8383:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2565,
										"nodeType": "Block",
										"src": "9599:165:13",
										"statements": [
											{
												"id": 2564,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:13",
												"statements": [
													{
														"assignments": [
															2542
														],
														"declarations": [
															{
																"constant": false,
																"id": 2542,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2564,
																"src": "9633:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2541,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2546,
														"initialValue": {
															"arguments": [
																{
																	"id": 2544,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2533,
																	"src": "9655:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2543,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2530,
																	2566
																],
																"referencedDeclaration": 2530,
																"src": "9650:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2547,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2542,
																"src": "9682:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2000",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2548,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2536,
																					"src": "9692:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2000",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2549,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2000,
																						"src": "9704:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2000_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2550,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1998,
																					"src": "9704:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2000",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2554,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2552,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2553,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2542,
																						"src": "9724:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2555,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2533,
																					"src": "9733:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2561,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2540,
														"id": 2563,
														"nodeType": "Return",
														"src": "9675:72:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2531,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2566,
												"src": "9533:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2566,
												"src": "9548:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2000",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2535,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2534,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "9548:8:13"
													},
													"referencedDeclaration": 2000,
													"src": "9548:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2000",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:13"
									},
									"returnParameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2566,
												"src": "9590:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:13"
									},
									"scope": 2858,
									"src": "9519:245:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2694,
										"nodeType": "Block",
										"src": "9951:828:13",
										"statements": [
											{
												"assignments": [
													2575
												],
												"declarations": [
													{
														"constant": false,
														"id": 2575,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2694,
														"src": "9961:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2574,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2577,
												"initialValue": {
													"hexValue": "30",
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:13"
											},
											{
												"id": 2691,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2578,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "10017:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2594,
														"nodeType": "IfStatement",
														"src": "10013:99:13",
														"trueBody": {
															"id": 2593,
															"nodeType": "Block",
															"src": "10034:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2583,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "10052:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2588,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:13"
																},
																{
																	"expression": {
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2589,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "10085:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2592,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2595,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "10129:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2611,
														"nodeType": "IfStatement",
														"src": "10125:99:13",
														"trueBody": {
															"id": 2610,
															"nodeType": "Block",
															"src": "10146:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "10164:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2605,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:13"
																},
																{
																	"expression": {
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "10197:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2609,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2612,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "10241:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2628,
														"nodeType": "IfStatement",
														"src": "10237:99:13",
														"trueBody": {
															"id": 2627,
															"nodeType": "Block",
															"src": "10258:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "10276:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2622,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:13"
																},
																{
																	"expression": {
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2623,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "10309:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2626,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2629,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "10353:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2645,
														"nodeType": "IfStatement",
														"src": "10349:96:13",
														"trueBody": {
															"id": 2644,
															"nodeType": "Block",
															"src": "10369:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "10387:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2639,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:13"
																},
																{
																	"expression": {
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2640,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "10419:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2643,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2646,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "10462:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2662,
														"nodeType": "IfStatement",
														"src": "10458:96:13",
														"trueBody": {
															"id": 2661,
															"nodeType": "Block",
															"src": "10478:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2651,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "10496:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2656,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:13"
																},
																{
																	"expression": {
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2657,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "10528:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2660,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2663,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "10571:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2679,
														"nodeType": "IfStatement",
														"src": "10567:96:13",
														"trueBody": {
															"id": 2678,
															"nodeType": "Block",
															"src": "10587:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2668,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "10605:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2673,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:13"
																},
																{
																	"expression": {
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2674,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "10637:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2677,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2680,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "10680:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2690,
														"nodeType": "IfStatement",
														"src": "10676:64:13",
														"trueBody": {
															"id": 2689,
															"nodeType": "Block",
															"src": "10696:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2685,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "10714:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2688,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2692,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2575,
													"src": "10766:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2573,
												"id": 2693,
												"nodeType": "Return",
												"src": "10759:13:13"
											}
										]
									},
									"documentation": {
										"id": 2567,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:13",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "9904:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:13"
									},
									"returnParameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "9942:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:13"
									},
									"scope": 2858,
									"src": "9889:890:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2730,
										"nodeType": "Block",
										"src": "11014:165:13",
										"statements": [
											{
												"id": 2729,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:13",
												"statements": [
													{
														"assignments": [
															2707
														],
														"declarations": [
															{
																"constant": false,
																"id": 2707,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2729,
																"src": "11048:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2706,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2711,
														"initialValue": {
															"arguments": [
																{
																	"id": 2709,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2698,
																	"src": "11071:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2708,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2695,
																	2731
																],
																"referencedDeclaration": 2695,
																"src": "11065:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2712,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2707,
																"src": "11098:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2000",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2713,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2701,
																					"src": "11108:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2000",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2714,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2000,
																						"src": "11120:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2000_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2715,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1998,
																					"src": "11120:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2000",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2719,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2717,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2718,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2707,
																						"src": "11139:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2720,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2698,
																					"src": "11148:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2726,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2705,
														"id": 2728,
														"nodeType": "Return",
														"src": "11091:71:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2696,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "10948:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "10963:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2000",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2700,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2699,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "10963:8:13"
													},
													"referencedDeclaration": 2000,
													"src": "10963:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2000",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:13"
									},
									"returnParameters": {
										"id": 2705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "11005:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:13"
									},
									"scope": 2858,
									"src": "10933:246:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2817,
										"nodeType": "Block",
										"src": "11493:600:13",
										"statements": [
											{
												"assignments": [
													2740
												],
												"declarations": [
													{
														"constant": false,
														"id": 2740,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2817,
														"src": "11503:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2739,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2742,
												"initialValue": {
													"hexValue": "30",
													"id": 2741,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:13"
											},
											{
												"id": 2814,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2743,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2734,
																	"src": "11559:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2757,
														"nodeType": "IfStatement",
														"src": "11555:98:13",
														"trueBody": {
															"id": 2756,
															"nodeType": "Block",
															"src": "11577:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2748,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2734,
																			"src": "11595:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2751,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:13"
																},
																{
																	"expression": {
																		"id": 2754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2752,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2740,
																			"src": "11626:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2755,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2758,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2734,
																	"src": "11670:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2772,
														"nodeType": "IfStatement",
														"src": "11666:95:13",
														"trueBody": {
															"id": 2771,
															"nodeType": "Block",
															"src": "11687:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2763,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2734,
																			"src": "11705:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2766,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:13"
																},
																{
																	"expression": {
																		"id": 2769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2767,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2740,
																			"src": "11735:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2770,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2773,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2734,
																	"src": "11778:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2787,
														"nodeType": "IfStatement",
														"src": "11774:95:13",
														"trueBody": {
															"id": 2786,
															"nodeType": "Block",
															"src": "11795:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2778,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2734,
																			"src": "11813:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2781,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:13"
																},
																{
																	"expression": {
																		"id": 2784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2782,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2740,
																			"src": "11843:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2785,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2734,
																	"src": "11886:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2802,
														"nodeType": "IfStatement",
														"src": "11882:95:13",
														"trueBody": {
															"id": 2801,
															"nodeType": "Block",
															"src": "11903:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2793,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2734,
																			"src": "11921:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2796,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:13"
																},
																{
																	"expression": {
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2797,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2740,
																			"src": "11951:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2800,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2803,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2734,
																	"src": "11994:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2813,
														"nodeType": "IfStatement",
														"src": "11990:64:13",
														"trueBody": {
															"id": 2812,
															"nodeType": "Block",
															"src": "12010:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2808,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2740,
																			"src": "12028:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2811,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2815,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2740,
													"src": "12080:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2738,
												"id": 2816,
												"nodeType": "Return",
												"src": "12073:13:13"
											}
										]
									},
									"documentation": {
										"id": 2732,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:13",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "11446:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:13"
									},
									"returnParameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "11484:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:13"
									},
									"scope": 2858,
									"src": "11430:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2856,
										"nodeType": "Block",
										"src": "12329:173:13",
										"statements": [
											{
												"id": 2855,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:13",
												"statements": [
													{
														"assignments": [
															2830
														],
														"declarations": [
															{
																"constant": false,
																"id": 2830,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2855,
																"src": "12363:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2829,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2834,
														"initialValue": {
															"arguments": [
																{
																	"id": 2832,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2821,
																	"src": "12387:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2831,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2818,
																	2857
																],
																"referencedDeclaration": 2818,
																"src": "12380:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2835,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2830,
																"src": "12414:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2000",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2836,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2824,
																					"src": "12424:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2000",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2837,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2000,
																						"src": "12436:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2000_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2838,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1998,
																					"src": "12436:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2000",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2847,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2845,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2840,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2843,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2841,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2830,
																									"src": "12457:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 2842,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2844,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2846,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2821,
																					"src": "12471:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2852,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2828,
														"id": 2854,
														"nodeType": "Return",
														"src": "12407:78:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2819,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "12263:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "12278:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2000",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2823,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2822,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "12278:8:13"
													},
													"referencedDeclaration": 2000,
													"src": "12278:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2000",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:13"
									},
									"returnParameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "12320:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:13"
									},
									"scope": 2858,
									"src": "12247:255:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2859,
							"src": "202:12302:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12402:13"
				},
				"id": 13
			},
			"contracts/shoToken/ShoToken.sol": {
				"ast": {
					"absolutePath": "contracts/shoToken/ShoToken.sol",
					"exportedSymbols": {
						"Address": [
							1686
						],
						"Context": [
							1708
						],
						"Counters": [
							1782
						],
						"ERC165": [
							1981
						],
						"ERC721": [
							1165
						],
						"ERC721Burnable": [
							1329
						],
						"IERC165": [
							1993
						],
						"IERC721": [
							1281
						],
						"IERC721Metadata": [
							1356
						],
						"IERC721Receiver": [
							1299
						],
						"Math": [
							2858
						],
						"Ownable": [
							112
						],
						"Pausable": [
							220
						],
						"ShoToken": [
							3017
						],
						"Strings": [
							1957
						]
					},
					"id": 3018,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2860,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2861,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3018,
							"sourceUnit": 1166,
							"src": "57:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 2862,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3018,
							"sourceUnit": 221,
							"src": "115:55:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2863,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3018,
							"sourceUnit": 113,
							"src": "171:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"id": 2864,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3018,
							"sourceUnit": 1330,
							"src": "224:76:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 2865,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3018,
							"sourceUnit": 1783,
							"src": "301:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2867,
										"name": "ERC721",
										"nameLocations": [
											"439:6:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1165,
										"src": "439:6:14"
									},
									"id": 2868,
									"nodeType": "InheritanceSpecifier",
									"src": "439:6:14"
								},
								{
									"baseName": {
										"id": 2869,
										"name": "Pausable",
										"nameLocations": [
											"447:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "447:8:14"
									},
									"id": 2870,
									"nodeType": "InheritanceSpecifier",
									"src": "447:8:14"
								},
								{
									"baseName": {
										"id": 2871,
										"name": "Ownable",
										"nameLocations": [
											"457:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "457:7:14"
									},
									"id": 2872,
									"nodeType": "InheritanceSpecifier",
									"src": "457:7:14"
								},
								{
									"baseName": {
										"id": 2873,
										"name": "ERC721Burnable",
										"nameLocations": [
											"466:14:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1329,
										"src": "466:14:14"
									},
									"id": 2874,
									"nodeType": "InheritanceSpecifier",
									"src": "466:14:14"
								}
							],
							"canonicalName": "ShoToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2866,
								"nodeType": "StructuredDocumentation",
								"src": "355:54:14",
								"text": "@custom:security-contact supportcs@ntiloyalty.com"
							},
							"fullyImplemented": true,
							"id": 3017,
							"linearizedBaseContracts": [
								3017,
								1329,
								112,
								220,
								1165,
								1356,
								1281,
								1981,
								1993,
								1708
							],
							"name": "ShoToken",
							"nameLocation": "427:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2877,
									"libraryName": {
										"id": 2875,
										"name": "Strings",
										"nameLocations": [
											"659:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1957,
										"src": "659:7:14"
									},
									"nodeType": "UsingForDirective",
									"src": "653:26:14",
									"typeName": {
										"id": 2876,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "671:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2881,
									"libraryName": {
										"id": 2878,
										"name": "Counters",
										"nameLocations": [
											"690:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1782,
										"src": "690:8:14"
									},
									"nodeType": "UsingForDirective",
									"src": "684:36:14",
									"typeName": {
										"id": 2880,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2879,
											"name": "Counters.Counter",
											"nameLocations": [
												"703:8:14",
												"712:7:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1714,
											"src": "703:16:14"
										},
										"referencedDeclaration": 1714,
										"src": "703:16:14",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "07883703ed0e86588a40d76551c92f8a4b329e3bf19765e0e6749473c1a84665",
									"id": 2885,
									"name": "Mint",
									"nameLocation": "899:4:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2883,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "912:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "904:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:17:14"
									},
									"src": "893:28:14"
								},
								{
									"constant": false,
									"id": 2888,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "1119:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 3017,
									"src": "1094:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1714_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2887,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2886,
											"name": "Counters.Counter",
											"nameLocations": [
												"1094:8:14",
												"1103:7:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1714,
											"src": "1094:16:14"
										},
										"referencedDeclaration": 1714,
										"src": "1094:16:14",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1714_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2895,
										"nodeType": "Block",
										"src": "1356:2:14",
										"statements": []
									},
									"id": 2896,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53686f546f6b656e",
													"id": 2891,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1334:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_691f21a5653e67437101b4a2899f6d56dcaec58452fd98ccd655b6899a049702",
														"typeString": "literal_string \"ShoToken\""
													},
													"value": "ShoToken"
												},
												{
													"hexValue": "53484f544b4e",
													"id": 2892,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1346:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_567e72a213beed7e30de5dd4696b292f1763b2b87d5ad6535e56e7870c18a384",
														"typeString": "literal_string \"SHOTKN\""
													},
													"value": "SHOTKN"
												}
											],
											"id": 2893,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2890,
												"name": "ERC721",
												"nameLocations": [
													"1327:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1165,
												"src": "1327:6:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1327:28:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1324:2:14"
									},
									"returnParameters": {
										"id": 2894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1356:0:14"
									},
									"scope": 3017,
									"src": "1313:45:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										434
									],
									"body": {
										"id": 2904,
										"nodeType": "Block",
										"src": "1439:55:14",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f6e66742e63727970746f73686f7065652e636f6d2f",
													"id": 2902,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1456:31:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d98c1096ec211b2aba583854d191d709ecb1ba26a1d5c05dd0f62e105042beb2",
														"typeString": "literal_string \"https://nft.cryptoshopee.com/\""
													},
													"value": "https://nft.cryptoshopee.com/"
												},
												"functionReturnParameters": 2901,
												"id": 2903,
												"nodeType": "Return",
												"src": "1449:38:14"
											}
										]
									},
									"id": 2905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "1373:8:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2898,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1406:8:14"
									},
									"parameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:2:14"
									},
									"returnParameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "1424:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1424:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:15:14"
									},
									"scope": 3017,
									"src": "1364:130:14",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2913,
										"nodeType": "Block",
										"src": "1534:25:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2910,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1544:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1544:8:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2912,
												"nodeType": "ExpressionStatement",
												"src": "1544:8:14"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2914,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2908,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2907,
												"name": "onlyOwner",
												"nameLocations": [
													"1524:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1524:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1524:9:14"
										}
									],
									"name": "pause",
									"nameLocation": "1509:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1514:2:14"
									},
									"returnParameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1534:0:14"
									},
									"scope": 3017,
									"src": "1500:59:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2922,
										"nodeType": "Block",
										"src": "1601:27:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2919,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "1611:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1611:10:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2921,
												"nodeType": "ExpressionStatement",
												"src": "1611:10:14"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2923,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2917,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2916,
												"name": "onlyOwner",
												"nameLocations": [
													"1591:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1591:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1591:9:14"
										}
									],
									"name": "unpause",
									"nameLocation": "1574:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:2:14"
									},
									"returnParameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1601:0:14"
									},
									"scope": 3017,
									"src": "1565:63:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1151
									],
									"body": {
										"id": 2946,
										"nodeType": "Block",
										"src": "1796:73:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2940,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2925,
															"src": "1833:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2927,
															"src": "1839:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2929,
															"src": "1843:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2943,
															"name": "batchSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2931,
															"src": "1852:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2937,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1806:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ShoToken_$3017_$",
																"typeString": "type(contract super ShoToken)"
															}
														},
														"id": 2939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1812:20:14",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "1806:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1806:56:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2945,
												"nodeType": "ExpressionStatement",
												"src": "1806:56:14"
											}
										]
									},
									"id": 2947,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2934,
												"name": "whenNotPaused",
												"nameLocations": [
													"1782:13:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1782:13:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1782:13:14"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1643:20:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2933,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1773:8:14"
									},
									"parameters": {
										"id": 2932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1681:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "1673:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1703:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "1695:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1723:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "1715:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2931,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "1748:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "1740:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:100:14"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:14"
									},
									"scope": 3017,
									"src": "1634:235:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2978,
										"nodeType": "Block",
										"src": "2136:189:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2955,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2888,
															"src": "2146:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1714_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2957,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2162:9:14",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1740,
														"src": "2146:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1714_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1714_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2959,
												"nodeType": "ExpressionStatement",
												"src": "2146:27:14"
											},
											{
												"assignments": [
													2961
												],
												"declarations": [
													{
														"constant": false,
														"id": 2961,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "2191:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2978,
														"src": "2183:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2960,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2183:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2965,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2962,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2888,
															"src": "2201:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1714_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2963,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2217:7:14",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1726,
														"src": "2201:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1714_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1714_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2201:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2183:43:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2967,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "2247:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2247:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2969,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2961,
															"src": "2256:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2966,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															715,
															744
														],
														"referencedDeclaration": 715,
														"src": "2237:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2971,
												"nodeType": "ExpressionStatement",
												"src": "2237:27:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2973,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2961,
															"src": "2285:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2972,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2885,
														"src": "2280:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2280:13:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2975,
												"nodeType": "EmitStatement",
												"src": "2275:18:14"
											},
											{
												"expression": {
													"id": 2976,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2961,
													"src": "2311:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2954,
												"id": 2977,
												"nodeType": "Return",
												"src": "2304:14:14"
											}
										]
									},
									"documentation": {
										"id": 2948,
										"nodeType": "StructuredDocumentation",
										"src": "2050:28:14",
										"text": "server method - mint nft"
									},
									"functionSelector": "1249c58b",
									"id": 2979,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2951,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2950,
												"name": "onlyOwner",
												"nameLocations": [
													"2108:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2108:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2108:9:14"
										}
									],
									"name": "mint",
									"nameLocation": "2092:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2096:2:14"
									},
									"returnParameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "2127:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:9:14"
									},
									"scope": 3017,
									"src": "2083:242:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2988,
										"nodeType": "Block",
										"src": "2463:49:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2984,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2888,
															"src": "2480:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1714_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2985,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2496:7:14",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1726,
														"src": "2480:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1714_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1714_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2983,
												"id": 2987,
												"nodeType": "Return",
												"src": "2473:32:14"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 2989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2417:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2428:2:14"
									},
									"returnParameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "2454:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:9:14"
									},
									"scope": 3017,
									"src": "2408:104:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3015,
										"nodeType": "Block",
										"src": "2710:139:14",
										"statements": [
											{
												"assignments": [
													2995,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2995,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2726:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 3015,
														"src": "2721:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2994,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2721:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 3010,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2998,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "2747:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2747:7:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2739:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 2996,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2739:8:14",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 3000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:16:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 3001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2756:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2739:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 3004,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2776:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ShoToken_$3017",
																				"typeString": "contract ShoToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ShoToken_$3017",
																				"typeString": "contract ShoToken"
																			}
																		],
																		"id": 3003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2768:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3002,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2768:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2768:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2782:7:14",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2768:21:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2739:51:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:77:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2720:96:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3012,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "2834:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2826:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2826:16:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3014,
												"nodeType": "ExpressionStatement",
												"src": "2826:16:14"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 3016,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2992,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2991,
												"name": "onlyOwner",
												"nameLocations": [
													"2700:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2700:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2700:9:14"
										}
									],
									"name": "withdraw",
									"nameLocation": "2680:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2688:2:14"
									},
									"returnParameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:0:14"
									},
									"scope": 3017,
									"src": "2671:178:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3018,
							"src": "409:2442:14",
							"usedErrors": [],
							"usedEvents": [
								13,
								123,
								128,
								1180,
								1189,
								1198,
								2885
							]
						}
					],
					"src": "32:2820:14"
				},
				"id": 14
			}
		}
	}
}