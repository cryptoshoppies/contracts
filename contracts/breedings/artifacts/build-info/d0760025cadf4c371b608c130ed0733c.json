{
	"id": "d0760025cadf4c371b608c130ed0733c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/breedings/Breeding.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"contracts/common/IBreeding.sol\";\nimport \"contracts/common/GenesUtil.sol\";\n\ncontract Breading is Ownable, IBreeding {\n    // enum BodyPartId {\n    //     Eyes,\n    //     Mouth,\n    //     Ears,\n    //     HandL,\n    //     Head,\n    //     HandR,\n    //     LegL,\n    //     Body,\n    //     LegR\n    // }\n\n    using GenesUtil for uint256;\n\n    uint256 private _globalSeed = 1;\n    uint256 private _randomPercent = 5;\n    uint256 private _minArcane = 1;\n    uint256 private _maxArcane = 30;\n    uint256 private _minId = 1;\n    uint256 private _maxId = 36;\n\n    function breading(uint256 genes1, uint256 genes2)\n        external\n        returns (uint256)\n    {\n        uint256 randomSeed = uint256(\n            keccak256(\n                abi.encodePacked(\n                    block.timestamp,\n                    block.number,\n                    block.prevrandao,\n                    genes1,\n                    genes2,\n                    _globalSeed\n                )\n            )\n        );\n\n        require(randomSeed != 0, \"randomSeed can't be 0\");\n\n        _globalSeed++;\n\n        uint32 generation = (GenesUtil.getGeneration(genes1) +\n            GenesUtil.getGeneration(genes2)) /\n            2 +\n            1;\n\n        uint8 bodyPartsCount = 9;\n        uint256 randomIndex = 0;\n\n        uint256 genes = 0;\n\n        // body parts\n        for (\n            uint8 bodyPartIndex = 0;\n            bodyPartIndex < bodyPartsCount;\n            bodyPartIndex++\n        ) {\n            uint256 arcanePercent = getArcanePercent(\n                generation,\n                _minArcane,\n                _maxArcane,\n                100\n            );\n            bool isArc = arcanePercent >=\n                random(_globalSeed, randomIndex++, 0, _maxArcane * 100);\n\n            uint8 id = 1;\n            if (_randomPercent >= random(_globalSeed, randomIndex++, 0, 100)) {\n                id = uint8(\n                    random(_globalSeed, randomIndex++, _minId, _maxId + 1) & 0xFF\n                );\n            } else {\n                if (random(_globalSeed, randomIndex++, 0, 100) >= 50) {\n                    id = GenesUtil.getId(genes2, bodyPartIndex);\n                } else {\n                    id = GenesUtil.getId(genes1, bodyPartIndex);\n                }\n            }\n\n            genes = GenesUtil.setId(genes, bodyPartIndex, id);\n            genes = GenesUtil.setLevel(genes, bodyPartIndex, 1);\n            genes = GenesUtil.setArcane(genes, bodyPartIndex, isArc ? 1 : 0);\n        }\n\n        // set generation\n        genes = GenesUtil.setGeneration(genes, generation);\n\n        // set charges\n        genes = GenesUtil.setCharges(genes, 1);\n\n        return genes;\n    }\n\n    // --------------------------------------------------------------------\n    // GET / SET\n    // --------------------------------------------------------------------\n\n    function getGlobalSeed() external view returns (uint256) {\n        return _globalSeed;\n    }\n\n    function setGlobalSeed(uint256 value) public onlyOwner {\n        _globalSeed = value;\n    }\n\n    // --------------------------------------------------------------------\n\n    function getMinArcane() external view returns (uint256) {\n        return _minArcane;\n    }\n\n    function setMinArcane(uint256 value) public onlyOwner {\n        _minArcane = value;\n    }\n\n    // --------------------------------------------------------------------\n\n    function getMaxArcane() external view returns (uint256) {\n        return _maxArcane;\n    }\n\n    function setMaxArcane(uint256 value) public onlyOwner {\n        _maxArcane = value;\n    }\n\n    // --------------------------------------------------------------------\n\n    function getRandomPercent() external view returns (uint256) {\n        return _randomPercent;\n    }\n\n    function setRandomPercent(uint256 value) public onlyOwner {\n        _randomPercent = value;\n    }\n\n    // --------------------------------------------------------------------\n\n    function getMinId() external view returns (uint256) {\n        return _minId;\n    }\n\n    function setMinId(uint256 value) public onlyOwner {\n        _minId = value;\n    }\n\n    // --------------------------------------------------------------------\n\n    function getMaxId() external view returns (uint256) {\n        return _maxId;\n    }\n\n    function setMaxId(uint256 value) public onlyOwner {\n        _maxId = value;\n    }\n\n    // --------------------------------------------------------------------\n    // RANDOM\n    // --------------------------------------------------------------------\n\n    function random(\n        uint256 seed,\n        uint256 index,\n        uint256 minNumber,\n        uint256 maxNumber\n    ) internal pure returns (uint256 value) {\n        value =\n            uint256(keccak256(abi.encodePacked(seed, index))) %\n            (maxNumber - minNumber);\n        value = minNumber + value;\n        return value;\n    }\n\n    // --------------------------------------------------------------------\n    // ARCANE\n    // --------------------------------------------------------------------\n\n    function getArcanePercent(\n        uint256 generation,\n        uint256 min,\n        uint256 max,\n        uint256 mult\n    ) internal pure returns (uint256) {\n        if (generation <= min) {\n            return 0;\n        }\n        return ((generation - min) * mult) / max;\n    }\n}\n"
			},
			"contracts/common/GenesUtil.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.17;\n\n// body properties\nlibrary GenesUtil {\n    function getGeneration(uint256 genes) public pure returns (uint32) {\n        unchecked {\n            return (uint32)(genes & 0xFFFFFFFF);\n        }\n    }\n\n    function getCharges(uint256 genes) public pure returns (uint8) {\n        unchecked {\n            return (uint8)((genes >> (31 * 8)) & 0xFF);\n        }\n    }\n\n    function setGeneration(uint256 genes, uint32 generation)\n        public\n        pure\n        returns (uint256)\n    {\n        return ((genes >> 4) << 4) | generation;\n    }\n\n    function setCharges(uint256 genes, uint8 charges)\n        public\n        pure\n        returns (uint256)\n    {\n        return ((genes << 8) >> 8) | (uint256(charges) << (31 * 8));\n    }\n\n    function getId(uint256 genes, uint8 partId) public pure returns (uint8) {\n        uint256 startIndex = 4;\n        uint256 index = partId * 3;\n        return (uint8)((genes >> ((startIndex + index + 0) * 8)) & 0xFF);\n    }\n\n    function setId(\n        uint256 genes,\n        uint256 partId,\n        uint8 id\n    ) public pure returns (uint256) {\n        uint256 startIndex = 4;\n        uint256 index = partId * 3;\n        uint256 shift = (startIndex + index + 0) * 8;\n        // clear bytes, n & ~(1 << k)\n        genes = genes & ~(0xFF << shift);\n        return genes | (uint256(id) << shift);\n    }\n\n    function getLevel(uint256 genes, uint8 partId) public pure returns (uint8) {\n        uint256 startIndex = 4;\n        uint256 index = partId * 3;\n        return (uint8)((genes >> ((startIndex + index + 1) * 8)) & 0xFF);\n    }\n\n    function setLevel(\n        uint256 genes,\n        uint256 partId,\n        uint8 level\n    ) public pure returns (uint256) {\n        uint256 startIndex = 4;\n        uint256 index = partId * 3;\n        uint256 shift = (startIndex + index + 1) * 8;\n        // clear bytes, n & ~(1 << k)\n        genes = genes & ~(0xFF << shift);\n        return genes | (uint256(level) << shift);\n    }\n\n    function getArcane(uint256 genes, uint8 partId)\n        public\n        pure\n        returns (uint8)\n    {\n        uint256 startIndex = 4;\n        uint256 index = partId * 3;\n        return (uint8)((genes >> ((startIndex + index + 2) * 8)) & 0xFF);\n    }\n\n    function setArcane(\n        uint256 genes,\n        uint256 partId,\n        uint8 arcane\n    ) public pure returns (uint256) {\n        uint256 startIndex = 4;\n        uint256 index = partId * 3;\n        uint256 shift = (startIndex + index + 2) * 8;\n        // clear bytes, n & ~(1 << k)\n        genes = genes & ~(0xFF << shift);\n        return genes | (uint256(arcane) << shift);\n    }\n}\n"
			},
			"contracts/common/IBreeding.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.17;\n\ninterface IBreeding {\n    /// @dev given genes of token 1 & 2, return a genetic combination - may have a random factor\n    /// @param genes1 genes of mom\n    /// @param genes2 genes of dad\n    /// @return the genes that are supposed to be passed down the child\n    function breading(uint256 genes1, uint256 genes2)\n        external\n        returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/breedings/Breeding.sol": {
				"Breading": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "genes1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "genes2",
									"type": "uint256"
								}
							],
							"name": "breading",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGlobalSeed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxArcane",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMinArcane",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMinId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRandomPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "setGlobalSeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "setMaxArcane",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "setMaxId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "setMinArcane",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "setMinId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "setRandomPercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"breading(uint256,uint256)": {
								"details": "given genes of token 1 & 2, return a genetic combination - may have a random factor",
								"params": {
									"genes1": "genes of mom",
									"genes2": "genes of dad"
								},
								"returns": {
									"_0": "the genes that are supposed to be passed down the child"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/breedings/Breeding.sol\":195:5458  contract Breading is Ownable, IBreeding {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/breedings/Breeding.sol\":495:496  1 */\n  0x01\n    /* \"contracts/breedings/Breeding.sol\":465:496  uint256 private _globalSeed = 1 */\n  dup1\n  sstore\n    /* \"contracts/breedings/Breeding.sol\":535:536  5 */\n  0x05\n    /* \"contracts/breedings/Breeding.sol\":502:536  uint256 private _randomPercent = 5 */\n  0x02\n  sstore\n    /* \"contracts/breedings/Breeding.sol\":571:572  1 */\n  0x01\n    /* \"contracts/breedings/Breeding.sol\":542:572  uint256 private _minArcane = 1 */\n  0x03\n  sstore\n    /* \"contracts/breedings/Breeding.sol\":607:609  30 */\n  0x1e\n    /* \"contracts/breedings/Breeding.sol\":578:609  uint256 private _maxArcane = 30 */\n  0x04\n  sstore\n    /* \"contracts/breedings/Breeding.sol\":640:641  1 */\n  0x01\n    /* \"contracts/breedings/Breeding.sol\":615:641  uint256 private _minId = 1 */\n  0x05\n  sstore\n    /* \"contracts/breedings/Breeding.sol\":672:674  36 */\n  0x24\n    /* \"contracts/breedings/Breeding.sol\":647:674  uint256 private _maxId = 36 */\n  0x06\n  sstore\n    /* \"contracts/breedings/Breeding.sol\":195:5458  contract Breading is Ownable, IBreeding {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/breedings/Breeding.sol\":195:5458  contract Breading is Ownable, IBreeding {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/breedings/Breeding.sol\":195:5458  contract Breading is Ownable, IBreeding {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/breedings/Breeding.sol\":195:5458  contract Breading is Ownable, IBreeding {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xe2e3a0db\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xe2e3a0db\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe4a13fb7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xeb4b0e51\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x91b66725\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd477a712\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe238b8c6\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x32099cc4\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x32099cc4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x615ebe28\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x878cf3a6\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x02aff378\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x054fee6a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x16bd8646\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1bb39f84\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/breedings/Breeding.sol\":3077:3168  function setGlobalSeed(uint256 value) public onlyOwner {... */\n    tag_3:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/breedings/Breeding.sol\":3891:3988  function setRandomPercent(uint256 value) public onlyOwner {... */\n    tag_4:\n      tag_22\n      tag_27\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n        /* \"contracts/breedings/Breeding.sol\":4411:4492  function setMaxId(uint256 value) public onlyOwner {... */\n    tag_5:\n      tag_22\n      tag_30\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n        /* \"contracts/breedings/Breeding.sol\":3615:3704  function setMaxArcane(uint256 value) public onlyOwner {... */\n    tag_6:\n      tag_22\n      tag_33\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n        /* \"contracts/breedings/Breeding.sol\":3251:3341  function getMinArcane() external view returns (uint256) {... */\n    tag_7:\n        /* \"contracts/breedings/Breeding.sol\":3324:3334  _minArcane */\n      sload(0x03)\n        /* \"contracts/breedings/Breeding.sol\":3251:3341  function getMinArcane() external view returns (uint256) {... */\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/breedings/Breeding.sol\":3251:3341  function getMinArcane() external view returns (uint256) {... */\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/breedings/Breeding.sol\":3519:3609  function getMaxArcane() external view returns (uint256) {... */\n    tag_8:\n        /* \"contracts/breedings/Breeding.sol\":3592:3602  _maxArcane */\n      sload(0x04)\n        /* \"contracts/breedings/Breeding.sol\":3519:3609  function getMaxArcane() external view returns (uint256) {... */\n      jump(tag_35)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_22\n      tag_43\n      jump\t// in\n        /* \"contracts/breedings/Breeding.sol\":2979:3071  function getGlobalSeed() external view returns (uint256) {... */\n    tag_10:\n        /* \"contracts/breedings/Breeding.sol\":3053:3064  _globalSeed */\n      sload(0x01)\n        /* \"contracts/breedings/Breeding.sol\":2979:3071  function getGlobalSeed() external view returns (uint256) {... */\n      jump(tag_35)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":527:578   */\n      dup2\n      mstore\n        /* \"#utility.yul\":515:517   */\n      0x20\n        /* \"#utility.yul\":500:518   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_37\n        /* \"#utility.yul\":381:584   */\n      jump\n        /* \"contracts/breedings/Breeding.sol\":3347:3436  function setMinArcane(uint256 value) public onlyOwner {... */\n    tag_12:\n      tag_22\n      tag_52\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/breedings/Breeding.sol\":4323:4405  function getMaxId() external view returns (uint256) {... */\n    tag_13:\n        /* \"contracts/breedings/Breeding.sol\":4392:4398  _maxId */\n      sload(0x06)\n        /* \"contracts/breedings/Breeding.sol\":4323:4405  function getMaxId() external view returns (uint256) {... */\n      jump(tag_35)\n        /* \"contracts/breedings/Breeding.sol\":3787:3885  function getRandomPercent() external view returns (uint256) {... */\n    tag_14:\n        /* \"contracts/breedings/Breeding.sol\":3864:3878  _randomPercent */\n      sload(0x02)\n        /* \"contracts/breedings/Breeding.sol\":3787:3885  function getRandomPercent() external view returns (uint256) {... */\n      jump(tag_35)\n        /* \"contracts/breedings/Breeding.sol\":4159:4240  function setMinId(uint256 value) public onlyOwner {... */\n    tag_15:\n      tag_22\n      tag_61\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"contracts/breedings/Breeding.sol\":681:2803  function breading(uint256 genes1, uint256 genes2)... */\n    tag_16:\n      tag_35\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"contracts/breedings/Breeding.sol\":4071:4153  function getMinId() external view returns (uint256) {... */\n    tag_17:\n        /* \"contracts/breedings/Breeding.sol\":4140:4146  _minId */\n      sload(0x05)\n        /* \"contracts/breedings/Breeding.sol\":4071:4153  function getMinId() external view returns (uint256) {... */\n      jump(tag_35)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_22\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"contracts/breedings/Breeding.sol\":3077:3168  function setGlobalSeed(uint256 value) public onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/breedings/Breeding.sol\":3142:3153  _globalSeed */\n      0x01\n        /* \"contracts/breedings/Breeding.sol\":3142:3161  _globalSeed = value */\n      sstore\n        /* \"contracts/breedings/Breeding.sol\":3077:3168  function setGlobalSeed(uint256 value) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/breedings/Breeding.sol\":3891:3988  function setRandomPercent(uint256 value) public onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_80:\n        /* \"contracts/breedings/Breeding.sol\":3959:3973  _randomPercent */\n      0x02\n        /* \"contracts/breedings/Breeding.sol\":3959:3981  _randomPercent = value */\n      sstore\n        /* \"contracts/breedings/Breeding.sol\":3891:3988  function setRandomPercent(uint256 value) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/breedings/Breeding.sol\":4411:4492  function setMaxId(uint256 value) public onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_83:\n        /* \"contracts/breedings/Breeding.sol\":4471:4477  _maxId */\n      0x06\n        /* \"contracts/breedings/Breeding.sol\":4471:4485  _maxId = value */\n      sstore\n        /* \"contracts/breedings/Breeding.sol\":4411:4492  function setMaxId(uint256 value) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/breedings/Breeding.sol\":3615:3704  function setMaxArcane(uint256 value) public onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_86:\n        /* \"contracts/breedings/Breeding.sol\":3679:3689  _maxArcane */\n      0x04\n        /* \"contracts/breedings/Breeding.sol\":3679:3697  _maxArcane = value */\n      sstore\n        /* \"contracts/breedings/Breeding.sol\":3615:3704  function setMaxArcane(uint256 value) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/breedings/Breeding.sol\":3347:3436  function setMinArcane(uint256 value) public onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/breedings/Breeding.sol\":3411:3421  _minArcane */\n      0x03\n        /* \"contracts/breedings/Breeding.sol\":3411:3429  _minArcane = value */\n      sstore\n        /* \"contracts/breedings/Breeding.sol\":3347:3436  function setMinArcane(uint256 value) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/breedings/Breeding.sol\":4159:4240  function setMinId(uint256 value) public onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_103:\n        /* \"contracts/breedings/Breeding.sol\":4219:4225  _minId */\n      0x05\n        /* \"contracts/breedings/Breeding.sol\":4219:4233  _minId = value */\n      sstore\n        /* \"contracts/breedings/Breeding.sol\":4159:4240  function setMinId(uint256 value) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/breedings/Breeding.sol\":681:2803  function breading(uint256 genes1, uint256 genes2)... */\n    tag_66:\n        /* \"contracts/breedings/Breeding.sol\":1060:1071  _globalSeed */\n      sload(0x01)\n        /* \"contracts/breedings/Breeding.sol\":857:1089  abi.encodePacked(... */\n      0x40\n      dup1\n      mload\n        /* \"contracts/breedings/Breeding.sol\":895:910  block.timestamp */\n      timestamp\n        /* \"contracts/breedings/Breeding.sol\":857:1089  abi.encodePacked(... */\n      0x20\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1402:1421   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":932:944  block.number */\n      number\n        /* \"#utility.yul\":1437:1449   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":1430:1458   */\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":966:982  block.prevrandao */\n      prevrandao\n        /* \"#utility.yul\":1474:1486   */\n      0x60\n      dup4\n      add\n        /* \"#utility.yul\":1467:1495   */\n      mstore\n        /* \"#utility.yul\":1511:1523   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":1504:1532   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":1548:1561   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":1541:1570   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":1586:1599   */\n      0xc0\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1579:1608   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":857:1089  abi.encodePacked(... */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap5\n      add\n      dup5\n      mstore\n        /* \"#utility.yul\":1624:1637   */\n      0xe0\n      swap1\n      swap2\n      add\n        /* \"contracts/breedings/Breeding.sol\":857:1089  abi.encodePacked(... */\n      swap1\n      swap2\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":830:1103  keccak256(... */\n      dup2\n      mload\n      swap2\n      add\n      keccak256\n      0x00\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":1132:1147  randomSeed != 0 */\n      dup1\n      dup3\n      sub\n        /* \"contracts/breedings/Breeding.sol\":1124:1173  require(randomSeed != 0, \"randomSeed can't be 0\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1850:1852   */\n      0x20\n        /* \"contracts/breedings/Breeding.sol\":1124:1173  require(randomSeed != 0, \"randomSeed can't be 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1832:1853   */\n      mstore\n        /* \"#utility.yul\":1889:1891   */\n      0x15\n        /* \"#utility.yul\":1869:1887   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1862:1892   */\n      mstore\n      shl(0x5c, 0x072616e646f6d536565642063616e2774206265203)\n        /* \"#utility.yul\":1908:1926   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1901:1952   */\n      mstore\n        /* \"#utility.yul\":1969:1987   */\n      0x64\n      add\n        /* \"contracts/breedings/Breeding.sol\":1124:1173  require(randomSeed != 0, \"randomSeed can't be 0\") */\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/breedings/Breeding.sol\":1184:1195  _globalSeed */\n      0x01\n        /* \"contracts/breedings/Breeding.sol\":1184:1197  _globalSeed++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":1184:1195  _globalSeed */\n      0x00\n        /* \"contracts/breedings/Breeding.sol\":1184:1197  _globalSeed++ */\n      tag_111\n      dup4\n      tag_112\n      jump\t// in\n    tag_111:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/breedings/Breeding.sol\":1275:1306  GenesUtil.getGeneration(genes2) */\n      mload(0x40)\n      shl(0xe0, 0x56e3df97)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":345:370   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":1208:1225  uint32 generation */\n      0x00\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":1322:1323  2 */\n      0x02\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":1275:1284  GenesUtil */\n      linkerSymbol(\"bc34c519aa7d1b67b54ee96cd6fbdfb8db30b25488a806873ff83a6f9e643b6b\")\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":1275:1298  GenesUtil.getGeneration */\n      0x56e3df97\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/breedings/Breeding.sol\":1275:1306  GenesUtil.getGeneration(genes2) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"contracts/breedings/Breeding.sol\":1229:1260  GenesUtil.getGeneration(genes1) */\n      mload(0x40)\n      shl(0xe0, 0x56e3df97)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":345:370   */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":1229:1238  GenesUtil */\n      linkerSymbol(\"bc34c519aa7d1b67b54ee96cd6fbdfb8db30b25488a806873ff83a6f9e643b6b\")\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":1229:1252  GenesUtil.getGeneration */\n      0x56e3df97\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/breedings/Breeding.sol\":1229:1260  GenesUtil.getGeneration(genes1) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_122:\n        /* \"contracts/breedings/Breeding.sol\":1229:1306  GenesUtil.getGeneration(genes1) +... */\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"contracts/breedings/Breeding.sol\":1228:1323  (GenesUtil.getGeneration(genes1) +... */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/breedings/Breeding.sol\":1228:1339  (GenesUtil.getGeneration(genes1) +... */\n      tag_127\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":1338:1339  1 */\n      0x01\n        /* \"contracts/breedings/Breeding.sol\":1228:1339  (GenesUtil.getGeneration(genes1) +... */\n      tag_124\n      jump\t// in\n    tag_127:\n        /* \"contracts/breedings/Breeding.sol\":1208:1339  uint32 generation = (GenesUtil.getGeneration(genes1) +... */\n      swap1\n      pop\n        /* \"contracts/breedings/Breeding.sol\":1373:1374  9 */\n      0x09\n        /* \"contracts/breedings/Breeding.sol\":1350:1370  uint8 bodyPartsCount */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/breedings/Breeding.sol\":1468:2615  for (... */\n    tag_128:\n        /* \"contracts/breedings/Breeding.sol\":1539:1553  bodyPartsCount */\n      dup4\n        /* \"contracts/breedings/Breeding.sol\":1523:1553  bodyPartIndex < bodyPartsCount */\n      0xff\n      and\n        /* \"contracts/breedings/Breeding.sol\":1523:1536  bodyPartIndex */\n      dup2\n        /* \"contracts/breedings/Breeding.sol\":1523:1553  bodyPartIndex < bodyPartsCount */\n      0xff\n      and\n      lt\n        /* \"contracts/breedings/Breeding.sol\":1468:2615  for (... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/breedings/Breeding.sol\":1607:1628  uint256 arcanePercent */\n      0x00\n        /* \"contracts/breedings/Breeding.sol\":1631:1766  getArcanePercent(... */\n      tag_131\n        /* \"contracts/breedings/Breeding.sol\":1665:1675  generation */\n      dup7\n        /* \"contracts/breedings/Breeding.sol\":1631:1766  getArcanePercent(... */\n      0xffffffff\n      and\n        /* \"contracts/breedings/Breeding.sol\":1693:1703  _minArcane */\n      sload(0x03)\n        /* \"contracts/breedings/Breeding.sol\":1721:1731  _maxArcane */\n      sload(0x04)\n        /* \"contracts/breedings/Breeding.sol\":1749:1752  100 */\n      0x64\n        /* \"contracts/breedings/Breeding.sol\":1631:1647  getArcanePercent */\n      tag_132\n        /* \"contracts/breedings/Breeding.sol\":1631:1766  getArcanePercent(... */\n      jump\t// in\n    tag_131:\n        /* \"contracts/breedings/Breeding.sol\":1607:1766  uint256 arcanePercent = getArcanePercent(... */\n      swap1\n      pop\n        /* \"contracts/breedings/Breeding.sol\":1780:1790  bool isArc */\n      0x00\n        /* \"contracts/breedings/Breeding.sol\":1826:1881  random(_globalSeed, randomIndex++, 0, _maxArcane * 100) */\n      tag_133\n        /* \"contracts/breedings/Breeding.sol\":1833:1844  _globalSeed */\n      sload(0x01)\n        /* \"contracts/breedings/Breeding.sol\":1846:1859  randomIndex++ */\n      dup7\n      dup1\n      tag_134\n      swap1\n      tag_112\n      jump\t// in\n    tag_134:\n      swap8\n      pop\n        /* \"contracts/breedings/Breeding.sol\":1861:1862  0 */\n      0x00\n        /* \"contracts/breedings/Breeding.sol\":1864:1874  _maxArcane */\n      sload(0x04)\n        /* \"contracts/breedings/Breeding.sol\":1877:1880  100 */\n      0x64\n        /* \"contracts/breedings/Breeding.sol\":1864:1880  _maxArcane * 100 */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"contracts/breedings/Breeding.sol\":1826:1832  random */\n      tag_137\n        /* \"contracts/breedings/Breeding.sol\":1826:1881  random(_globalSeed, randomIndex++, 0, _maxArcane * 100) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/breedings/Breeding.sol\":1907:1908  1 */\n      0x01\n        /* \"contracts/breedings/Breeding.sol\":1951:1962  _globalSeed */\n      dup1\n      sload\n        /* \"contracts/breedings/Breeding.sol\":1793:1881  arcanePercent >=... */\n      swap2\n      dup5\n      lt\n      iszero\n      swap3\n      pop\n        /* \"contracts/breedings/Breeding.sol\":1907:1908  1 */\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":1944:1986  random(_globalSeed, randomIndex++, 0, 100) */\n      tag_138\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":1964:1977  randomIndex++ */\n      dup8\n      tag_139\n      dup2\n      tag_112\n      jump\t// in\n    tag_139:\n      swap9\n      pop\n        /* \"contracts/breedings/Breeding.sol\":1979:1980  0 */\n      0x00\n        /* \"contracts/breedings/Breeding.sol\":1982:1985  100 */\n      0x64\n        /* \"contracts/breedings/Breeding.sol\":1944:1950  random */\n      tag_137\n        /* \"contracts/breedings/Breeding.sol\":1944:1986  random(_globalSeed, randomIndex++, 0, 100) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/breedings/Breeding.sol\":1926:1940  _randomPercent */\n      sload(0x02)\n        /* \"contracts/breedings/Breeding.sol\":1926:1986  _randomPercent >= random(_globalSeed, randomIndex++, 0, 100) */\n      lt\n        /* \"contracts/breedings/Breeding.sol\":1922:2398  if (_randomPercent >= random(_globalSeed, randomIndex++, 0, 100)) {... */\n      tag_140\n      jumpi\n        /* \"contracts/breedings/Breeding.sol\":2038:2092  random(_globalSeed, randomIndex++, _minId, _maxId + 1) */\n      tag_141\n        /* \"contracts/breedings/Breeding.sol\":2045:2056  _globalSeed */\n      sload(0x01)\n        /* \"contracts/breedings/Breeding.sol\":2058:2071  randomIndex++ */\n      dup8\n      dup1\n      tag_142\n      swap1\n      tag_112\n      jump\t// in\n    tag_142:\n      swap9\n      pop\n        /* \"contracts/breedings/Breeding.sol\":2073:2079  _minId */\n      sload(0x05)\n        /* \"contracts/breedings/Breeding.sol\":2081:2087  _maxId */\n      sload(0x06)\n        /* \"contracts/breedings/Breeding.sol\":2090:2091  1 */\n      0x01\n        /* \"contracts/breedings/Breeding.sol\":2081:2091  _maxId + 1 */\n      tag_135\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n        /* \"contracts/breedings/Breeding.sol\":2038:2092  random(_globalSeed, randomIndex++, _minId, _maxId + 1) */\n    tag_141:\n        /* \"contracts/breedings/Breeding.sol\":2095:2099  0xFF */\n      0xff\n        /* \"contracts/breedings/Breeding.sol\":2038:2099  random(_globalSeed, randomIndex++, _minId, _maxId + 1) & 0xFF */\n      and\n        /* \"contracts/breedings/Breeding.sol\":2006:2117  id = uint8(... */\n      swap1\n      pop\n        /* \"contracts/breedings/Breeding.sol\":1922:2398  if (_randomPercent >= random(_globalSeed, randomIndex++, 0, 100)) {... */\n      jump(tag_155)\n    tag_140:\n        /* \"contracts/breedings/Breeding.sol\":2206:2208  50 */\n      0x32\n        /* \"contracts/breedings/Breeding.sol\":2160:2202  random(_globalSeed, randomIndex++, 0, 100) */\n      tag_146\n        /* \"contracts/breedings/Breeding.sol\":2167:2178  _globalSeed */\n      sload(0x01)\n        /* \"contracts/breedings/Breeding.sol\":2180:2193  randomIndex++ */\n      dup9\n      dup1\n      tag_147\n      swap1\n      tag_112\n      jump\t// in\n    tag_147:\n      swap10\n      pop\n        /* \"contracts/breedings/Breeding.sol\":2195:2196  0 */\n      0x00\n        /* \"contracts/breedings/Breeding.sol\":2198:2201  100 */\n      0x64\n        /* \"contracts/breedings/Breeding.sol\":2160:2166  random */\n      tag_137\n        /* \"contracts/breedings/Breeding.sol\":2160:2202  random(_globalSeed, randomIndex++, 0, 100) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/breedings/Breeding.sol\":2160:2208  random(_globalSeed, randomIndex++, 0, 100) >= 50 */\n      lt\n        /* \"contracts/breedings/Breeding.sol\":2156:2384  if (random(_globalSeed, randomIndex++, 0, 100) >= 50) {... */\n      tag_148\n      jumpi\n        /* \"contracts/breedings/Breeding.sol\":2237:2275  GenesUtil.getId(genes2, bodyPartIndex) */\n      mload(0x40)\n      shl(0xe0, 0x5d2029f1)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3731:3756   */\n      dup13\n      swap1\n      mstore\n        /* \"#utility.yul\":3804:3808   */\n      0xff\n        /* \"#utility.yul\":3792:3809   */\n      dup6\n      and\n        /* \"#utility.yul\":3772:3790   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3765:3810   */\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":2237:2246  GenesUtil */\n      linkerSymbol(\"bc34c519aa7d1b67b54ee96cd6fbdfb8db30b25488a806873ff83a6f9e643b6b\")\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":2237:2252  GenesUtil.getId */\n      0x5d2029f1\n      swap1\n        /* \"#utility.yul\":3704:3722   */\n      0x44\n      add\n        /* \"contracts/breedings/Breeding.sol\":2237:2275  GenesUtil.getId(genes2, bodyPartIndex) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"contracts/breedings/Breeding.sol\":2232:2275  id = GenesUtil.getId(genes2, bodyPartIndex) */\n      swap1\n      pop\n        /* \"contracts/breedings/Breeding.sol\":2156:2384  if (random(_globalSeed, randomIndex++, 0, 100) >= 50) {... */\n      jump(tag_155)\n    tag_148:\n        /* \"contracts/breedings/Breeding.sol\":2327:2365  GenesUtil.getId(genes1, bodyPartIndex) */\n      mload(0x40)\n      shl(0xe0, 0x5d2029f1)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3731:3756   */\n      dup14\n      swap1\n      mstore\n        /* \"#utility.yul\":3804:3808   */\n      0xff\n        /* \"#utility.yul\":3792:3809   */\n      dup6\n      and\n        /* \"#utility.yul\":3772:3790   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3765:3810   */\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":2327:2336  GenesUtil */\n      linkerSymbol(\"bc34c519aa7d1b67b54ee96cd6fbdfb8db30b25488a806873ff83a6f9e643b6b\")\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":2327:2342  GenesUtil.getId */\n      0x5d2029f1\n      swap1\n        /* \"#utility.yul\":3704:3722   */\n      0x44\n      add\n        /* \"contracts/breedings/Breeding.sol\":2327:2365  GenesUtil.getId(genes1, bodyPartIndex) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_159:\n        /* \"contracts/breedings/Breeding.sol\":2322:2365  id = GenesUtil.getId(genes1, bodyPartIndex) */\n      swap1\n      pop\n        /* \"contracts/breedings/Breeding.sol\":2156:2384  if (random(_globalSeed, randomIndex++, 0, 100) >= 50) {... */\n    tag_155:\n        /* \"contracts/breedings/Breeding.sol\":2420:2461  GenesUtil.setId(genes, bodyPartIndex, id) */\n      mload(0x40)\n      shl(0xe0, 0x34a51d0f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4303:4328   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":4376:4380   */\n      0xff\n        /* \"#utility.yul\":4364:4381   */\n      dup1\n      dup7\n      and\n        /* \"#utility.yul\":4344:4362   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4337:4382   */\n      mstore\n        /* \"#utility.yul\":4418:4435   */\n      dup3\n      and\n        /* \"#utility.yul\":4398:4416   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4391:4436   */\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":2420:2429  GenesUtil */\n      linkerSymbol(\"bc34c519aa7d1b67b54ee96cd6fbdfb8db30b25488a806873ff83a6f9e643b6b\")\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":2420:2435  GenesUtil.setId */\n      0x34a51d0f\n      swap1\n        /* \"#utility.yul\":4276:4294   */\n      0x64\n      add\n        /* \"contracts/breedings/Breeding.sol\":2420:2461  GenesUtil.setId(genes, bodyPartIndex, id) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"contracts/breedings/Breeding.sol\":2483:2526  GenesUtil.setLevel(genes, bodyPartIndex, 1) */\n      mload(0x40)\n      shl(0xe0, 0xe1b30ab7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4303:4328   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4376:4380   */\n      0xff\n        /* \"#utility.yul\":4364:4381   */\n      dup7\n      and\n        /* \"#utility.yul\":4344:4362   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4337:4382   */\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":2524:2525  1 */\n      0x01\n        /* \"#utility.yul\":4398:4416   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4391:4436   */\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":2412:2461  genes = GenesUtil.setId(genes, bodyPartIndex, id) */\n      swap1\n      swap6\n      pop\n        /* \"contracts/breedings/Breeding.sol\":2483:2492  GenesUtil */\n      linkerSymbol(\"bc34c519aa7d1b67b54ee96cd6fbdfb8db30b25488a806873ff83a6f9e643b6b\")\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":2483:2501  GenesUtil.setLevel */\n      0xe1b30ab7\n      swap1\n        /* \"#utility.yul\":4276:4294   */\n      0x64\n      add\n        /* \"contracts/breedings/Breeding.sol\":2483:2526  GenesUtil.setLevel(genes, bodyPartIndex, 1) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_170:\n        /* \"contracts/breedings/Breeding.sol\":2475:2526  genes = GenesUtil.setLevel(genes, bodyPartIndex, 1) */\n      swap5\n      pop\n        /* \"contracts/breedings/Breeding.sol\":2548:2557  GenesUtil */\n      linkerSymbol(\"bc34c519aa7d1b67b54ee96cd6fbdfb8db30b25488a806873ff83a6f9e643b6b\")\n        /* \"contracts/breedings/Breeding.sol\":2548:2567  GenesUtil.setArcane */\n      0x55d6ed43\n        /* \"contracts/breedings/Breeding.sol\":2568:2573  genes */\n      dup7\n        /* \"contracts/breedings/Breeding.sol\":2575:2588  bodyPartIndex */\n      dup7\n        /* \"contracts/breedings/Breeding.sol\":2590:2595  isArc */\n      dup6\n        /* \"contracts/breedings/Breeding.sol\":2590:2603  isArc ? 1 : 0 */\n      tag_171\n      jumpi\n        /* \"contracts/breedings/Breeding.sol\":2602:2603  0 */\n      0x00\n        /* \"contracts/breedings/Breeding.sol\":2590:2603  isArc ? 1 : 0 */\n      jump(tag_172)\n    tag_171:\n        /* \"contracts/breedings/Breeding.sol\":2598:2599  1 */\n      0x01\n        /* \"contracts/breedings/Breeding.sol\":2590:2603  isArc ? 1 : 0 */\n    tag_172:\n        /* \"contracts/breedings/Breeding.sol\":2548:2604  GenesUtil.setArcane(genes, bodyPartIndex, isArc ? 1 : 0) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup7\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4303:4328   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":4376:4380   */\n      0xff\n        /* \"#utility.yul\":4364:4381   */\n      swap2\n      dup3\n      and\n        /* \"#utility.yul\":4344:4362   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":4337:4382   */\n      mstore\n        /* \"#utility.yul\":4418:4435   */\n      and\n        /* \"#utility.yul\":4398:4416   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4391:4436   */\n      mstore\n        /* \"#utility.yul\":4276:4294   */\n      0x64\n      add\n        /* \"contracts/breedings/Breeding.sol\":2548:2604  GenesUtil.setArcane(genes, bodyPartIndex, isArc ? 1 : 0) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_176:\n        /* \"contracts/breedings/Breeding.sol\":2540:2604  genes = GenesUtil.setArcane(genes, bodyPartIndex, isArc ? 1 : 0) */\n      swap5\n      pop\n        /* \"contracts/breedings/Breeding.sol\":1593:2615  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/breedings/Breeding.sol\":1567:1582  bodyPartIndex++ */\n      dup1\n      dup1\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      swap2\n      pop\n      pop\n        /* \"contracts/breedings/Breeding.sol\":1468:2615  for (... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"contracts/breedings/Breeding.sol\":2659:2701  GenesUtil.setGeneration(genes, generation) */\n      mload(0x40)\n      shl(0xe0, 0x8de97f4f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5354:5379   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":5427:5437   */\n      0xffffffff\n        /* \"#utility.yul\":5415:5438   */\n      dup6\n      and\n        /* \"#utility.yul\":5395:5413   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5388:5439   */\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":2659:2668  GenesUtil */\n      linkerSymbol(\"bc34c519aa7d1b67b54ee96cd6fbdfb8db30b25488a806873ff83a6f9e643b6b\")\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":2659:2682  GenesUtil.setGeneration */\n      0x8de97f4f\n      swap1\n        /* \"#utility.yul\":5327:5345   */\n      0x44\n      add\n        /* \"contracts/breedings/Breeding.sol\":2659:2701  GenesUtil.setGeneration(genes, generation) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_183:\n        /* \"contracts/breedings/Breeding.sol\":2743:2773  GenesUtil.setCharges(genes, 1) */\n      mload(0x40)\n      shl(0xe0, 0xb52b6659)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3731:3756   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":2771:2772  1 */\n      0x01\n        /* \"#utility.yul\":3772:3790   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3765:3810   */\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":2651:2701  genes = GenesUtil.setGeneration(genes, generation) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/breedings/Breeding.sol\":2743:2752  GenesUtil */\n      linkerSymbol(\"bc34c519aa7d1b67b54ee96cd6fbdfb8db30b25488a806873ff83a6f9e643b6b\")\n      swap1\n        /* \"contracts/breedings/Breeding.sol\":2743:2763  GenesUtil.setCharges */\n      0xb52b6659\n      swap1\n        /* \"#utility.yul\":3704:3722   */\n      0x44\n      add\n        /* \"contracts/breedings/Breeding.sol\":2743:2773  GenesUtil.setCharges(genes, 1) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_188:\n        /* \"contracts/breedings/Breeding.sol\":2735:2773  genes = GenesUtil.setCharges(genes, 1) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/breedings/Breeding.sol\":681:2803  function breading(uint256 genes1, uint256 genes2)... */\n    tag_105:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5930:5932   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5912:5933   */\n      mstore\n        /* \"#utility.yul\":5969:5971   */\n      0x26\n        /* \"#utility.yul\":5949:5967   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5942:5972   */\n      mstore\n        /* \"#utility.yul\":6008:6042   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5988:6006   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5981:6043   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6059:6077   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6052:6088   */\n      mstore\n        /* \"#utility.yul\":6105:6124   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_109\n        /* \"#utility.yul\":5728:6130   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6337:6339   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6319:6340   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6356:6374   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6349:6379   */\n      mstore\n        /* \"#utility.yul\":6415:6449   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6395:6413   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6388:6450   */\n      mstore\n        /* \"#utility.yul\":6467:6485   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_109\n        /* \"#utility.yul\":6135:6491   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/breedings/Breeding.sol\":5178:5456  function getArcanePercent(... */\n    tag_132:\n        /* \"contracts/breedings/Breeding.sol\":5325:5332  uint256 */\n      0x00\n        /* \"contracts/breedings/Breeding.sol\":5362:5365  min */\n      dup4\n        /* \"contracts/breedings/Breeding.sol\":5348:5358  generation */\n      dup6\n        /* \"contracts/breedings/Breeding.sol\":5348:5365  generation <= min */\n      gt\n        /* \"contracts/breedings/Breeding.sol\":5344:5400  if (generation <= min) {... */\n      tag_206\n      jumpi\n      pop\n        /* \"contracts/breedings/Breeding.sol\":5388:5389  0 */\n      0x00\n        /* \"contracts/breedings/Breeding.sol\":5381:5389  return 0 */\n      jump(tag_205)\n        /* \"contracts/breedings/Breeding.sol\":5344:5400  if (generation <= min) {... */\n    tag_206:\n        /* \"contracts/breedings/Breeding.sol\":5446:5449  max */\n      dup3\n        /* \"contracts/breedings/Breeding.sol\":5438:5442  mult */\n      dup3\n        /* \"contracts/breedings/Breeding.sol\":5418:5434  generation - min */\n      tag_207\n        /* \"contracts/breedings/Breeding.sol\":5431:5434  min */\n      dup7\n        /* \"contracts/breedings/Breeding.sol\":5418:5428  generation */\n      dup9\n        /* \"contracts/breedings/Breeding.sol\":5418:5434  generation - min */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"contracts/breedings/Breeding.sol\":5417:5442  (generation - min) * mult */\n      tag_209\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_209:\n        /* \"contracts/breedings/Breeding.sol\":5416:5449  ((generation - min) * mult) / max */\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"contracts/breedings/Breeding.sol\":5409:5449  return ((generation - min) * mult) / max */\n      swap1\n      pop\n        /* \"contracts/breedings/Breeding.sol\":5178:5456  function getArcanePercent(... */\n    tag_205:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/breedings/Breeding.sol\":4665:5005  function random(... */\n    tag_137:\n        /* \"contracts/breedings/Breeding.sol\":4809:4822  uint256 value */\n      0x00\n        /* \"contracts/breedings/Breeding.sol\":4919:4940  maxNumber - minNumber */\n      tag_213\n        /* \"contracts/breedings/Breeding.sol\":4931:4940  minNumber */\n      dup4\n        /* \"contracts/breedings/Breeding.sol\":4919:4928  maxNumber */\n      dup4\n        /* \"contracts/breedings/Breeding.sol\":4919:4940  maxNumber - minNumber */\n      tag_208\n      jump\t// in\n    tag_213:\n        /* \"contracts/breedings/Breeding.sol\":4872:4901  abi.encodePacked(seed, index) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":6911:6930   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":6946:6958   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":6939:6967   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":6983:6995   */\n      0x60\n      add\n        /* \"contracts/breedings/Breeding.sol\":4872:4901  abi.encodePacked(seed, index) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/breedings/Breeding.sol\":4862:4902  keccak256(abi.encodePacked(seed, index)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/breedings/Breeding.sol\":4854:4903  uint256(keccak256(abi.encodePacked(seed, index))) */\n      0x00\n      shr\n        /* \"contracts/breedings/Breeding.sol\":4854:4941  uint256(keccak256(abi.encodePacked(seed, index))) %... */\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"contracts/breedings/Breeding.sol\":4834:4941  value =... */\n      swap1\n      pop\n        /* \"contracts/breedings/Breeding.sol\":4959:4976  minNumber + value */\n      tag_210\n        /* \"contracts/breedings/Breeding.sol\":4834:4941  value =... */\n      dup2\n        /* \"contracts/breedings/Breeding.sol\":4959:4968  minNumber */\n      dup5\n        /* \"contracts/breedings/Breeding.sol\":4959:4976  minNumber + value */\n      tag_144\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_24:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_224:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:837   */\n    tag_65:\n        /* \"#utility.yul\":657:663   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup1\n        /* \"#utility.yul\":718:720   */\n      0x40\n        /* \"#utility.yul\":706:715   */\n      dup4\n        /* \"#utility.yul\":697:704   */\n      dup6\n        /* \"#utility.yul\":693:716   */\n      sub\n        /* \"#utility.yul\":689:721   */\n      slt\n        /* \"#utility.yul\":686:738   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":734:735   */\n      0x00\n        /* \"#utility.yul\":731:732   */\n      dup1\n        /* \"#utility.yul\":724:736   */\n      revert\n        /* \"#utility.yul\":686:738   */\n    tag_228:\n      pop\n      pop\n        /* \"#utility.yul\":757:780   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":827:829   */\n      0x20\n        /* \"#utility.yul\":812:830   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":799:831   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":589:837   */\n      jump\t// out\n        /* \"#utility.yul\":842:1128   */\n    tag_73:\n        /* \"#utility.yul\":901:907   */\n      0x00\n        /* \"#utility.yul\":954:956   */\n      0x20\n        /* \"#utility.yul\":942:951   */\n      dup3\n        /* \"#utility.yul\":933:940   */\n      dup5\n        /* \"#utility.yul\":929:952   */\n      sub\n        /* \"#utility.yul\":925:957   */\n      slt\n        /* \"#utility.yul\":922:974   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":970:971   */\n      0x00\n        /* \"#utility.yul\":967:968   */\n      dup1\n        /* \"#utility.yul\":960:972   */\n      revert\n        /* \"#utility.yul\":922:974   */\n    tag_230:\n        /* \"#utility.yul\":996:1019   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1048:1079   */\n      dup2\n      and\n        /* \"#utility.yul\":1038:1080   */\n      dup2\n      eq\n        /* \"#utility.yul\":1028:1098   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":1094:1095   */\n      0x00\n        /* \"#utility.yul\":1091:1092   */\n      dup1\n        /* \"#utility.yul\":1084:1096   */\n      revert\n        /* \"#utility.yul\":1028:1098   */\n    tag_231:\n        /* \"#utility.yul\":1117:1122   */\n      swap4\n        /* \"#utility.yul\":842:1128   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1998:2125   */\n    tag_220:\n        /* \"#utility.yul\":2059:2069   */\n      0x4e487b71\n        /* \"#utility.yul\":2054:2057   */\n      0xe0\n        /* \"#utility.yul\":2050:2070   */\n      shl\n        /* \"#utility.yul\":2047:2048   */\n      0x00\n        /* \"#utility.yul\":2040:2071   */\n      mstore\n        /* \"#utility.yul\":2090:2094   */\n      0x11\n        /* \"#utility.yul\":2087:2088   */\n      0x04\n        /* \"#utility.yul\":2080:2095   */\n      mstore\n        /* \"#utility.yul\":2114:2118   */\n      0x24\n        /* \"#utility.yul\":2111:2112   */\n      0x00\n        /* \"#utility.yul\":2104:2119   */\n      revert\n        /* \"#utility.yul\":2130:2265   */\n    tag_112:\n        /* \"#utility.yul\":2169:2172   */\n      0x00\n        /* \"#utility.yul\":2190:2207   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":2187:2230   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":2210:2228   */\n      tag_237\n      tag_220\n      jump\t// in\n    tag_237:\n      pop\n        /* \"#utility.yul\":2257:2258   */\n      0x01\n        /* \"#utility.yul\":2246:2259   */\n      add\n      swap1\n        /* \"#utility.yul\":2130:2265   */\n      jump\t// out\n        /* \"#utility.yul\":2460:2740   */\n    tag_118:\n        /* \"#utility.yul\":2529:2535   */\n      0x00\n        /* \"#utility.yul\":2582:2584   */\n      0x20\n        /* \"#utility.yul\":2570:2579   */\n      dup3\n        /* \"#utility.yul\":2561:2568   */\n      dup5\n        /* \"#utility.yul\":2557:2580   */\n      sub\n        /* \"#utility.yul\":2553:2585   */\n      slt\n        /* \"#utility.yul\":2550:2602   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2595:2596   */\n      dup1\n        /* \"#utility.yul\":2588:2600   */\n      revert\n        /* \"#utility.yul\":2550:2602   */\n    tag_240:\n        /* \"#utility.yul\":2630:2639   */\n      dup2\n        /* \"#utility.yul\":2624:2640   */\n      mload\n        /* \"#utility.yul\":2680:2690   */\n      0xffffffff\n        /* \"#utility.yul\":2673:2678   */\n      dup2\n        /* \"#utility.yul\":2669:2691   */\n      and\n        /* \"#utility.yul\":2662:2667   */\n      dup2\n        /* \"#utility.yul\":2659:2692   */\n      eq\n        /* \"#utility.yul\":2649:2710   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":2706:2707   */\n      0x00\n        /* \"#utility.yul\":2703:2704   */\n      dup1\n        /* \"#utility.yul\":2696:2708   */\n      revert\n        /* \"#utility.yul\":2745:2917   */\n    tag_124:\n        /* \"#utility.yul\":2812:2822   */\n      0xffffffff\n        /* \"#utility.yul\":2842:2852   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":2854:2864   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":2838:2865   */\n      add\n      swap1\n        /* \"#utility.yul\":2877:2888   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2874:2911   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":2891:2909   */\n      tag_244\n      tag_220\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2874:2911   */\n      pop\n        /* \"#utility.yul\":2745:2917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2922:3049   */\n    tag_221:\n        /* \"#utility.yul\":2983:2993   */\n      0x4e487b71\n        /* \"#utility.yul\":2978:2981   */\n      0xe0\n        /* \"#utility.yul\":2974:2994   */\n      shl\n        /* \"#utility.yul\":2971:2972   */\n      0x00\n        /* \"#utility.yul\":2964:2995   */\n      mstore\n        /* \"#utility.yul\":3014:3018   */\n      0x12\n        /* \"#utility.yul\":3011:3012   */\n      0x04\n        /* \"#utility.yul\":3004:3019   */\n      mstore\n        /* \"#utility.yul\":3038:3042   */\n      0x24\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3028:3043   */\n      revert\n        /* \"#utility.yul\":3054:3245   */\n    tag_126:\n        /* \"#utility.yul\":3093:3094   */\n      0x00\n        /* \"#utility.yul\":3119:3129   */\n      0xffffffff\n        /* \"#utility.yul\":3156:3158   */\n      dup1\n        /* \"#utility.yul\":3153:3154   */\n      dup5\n        /* \"#utility.yul\":3149:3159   */\n      and\n        /* \"#utility.yul\":3178:3181   */\n      dup1\n        /* \"#utility.yul\":3168:3205   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":3185:3203   */\n      tag_248\n      tag_221\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3223:3233   */\n      swap3\n      and\n        /* \"#utility.yul\":3219:3239   */\n      swap2\n      swap1\n      swap2\n      div\n      swap3\n        /* \"#utility.yul\":3054:3245   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3250:3418   */\n    tag_136:\n        /* \"#utility.yul\":3323:3332   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3354:3363   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3371:3386   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3365:3387   */\n      dup5\n      eq\n        /* \"#utility.yul\":3351:3388   */\n      or\n        /* \"#utility.yul\":3341:3412   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":3392:3410   */\n      tag_105\n      tag_220\n      jump\t// in\n        /* \"#utility.yul\":3423:3548   */\n    tag_144:\n        /* \"#utility.yul\":3488:3497   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3509:3519   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3506:3542   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":3522:3540   */\n      tag_105\n      tag_220\n      jump\t// in\n        /* \"#utility.yul\":3821:4094   */\n    tag_154:\n        /* \"#utility.yul\":3889:3895   */\n      0x00\n        /* \"#utility.yul\":3942:3944   */\n      0x20\n        /* \"#utility.yul\":3930:3939   */\n      dup3\n        /* \"#utility.yul\":3921:3928   */\n      dup5\n        /* \"#utility.yul\":3917:3940   */\n      sub\n        /* \"#utility.yul\":3913:3945   */\n      slt\n        /* \"#utility.yul\":3910:3962   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":3958:3959   */\n      0x00\n        /* \"#utility.yul\":3955:3956   */\n      dup1\n        /* \"#utility.yul\":3948:3960   */\n      revert\n        /* \"#utility.yul\":3910:3962   */\n    tag_257:\n        /* \"#utility.yul\":3990:3999   */\n      dup2\n        /* \"#utility.yul\":3984:4000   */\n      mload\n        /* \"#utility.yul\":4040:4044   */\n      0xff\n        /* \"#utility.yul\":4033:4038   */\n      dup2\n        /* \"#utility.yul\":4029:4045   */\n      and\n        /* \"#utility.yul\":4022:4027   */\n      dup2\n        /* \"#utility.yul\":4019:4046   */\n      eq\n        /* \"#utility.yul\":4009:4064   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":4060:4061   */\n      0x00\n        /* \"#utility.yul\":4057:4058   */\n      dup1\n        /* \"#utility.yul\":4050:4062   */\n      revert\n        /* \"#utility.yul\":4447:4631   */\n    tag_165:\n        /* \"#utility.yul\":4517:4523   */\n      0x00\n        /* \"#utility.yul\":4570:4572   */\n      0x20\n        /* \"#utility.yul\":4558:4567   */\n      dup3\n        /* \"#utility.yul\":4549:4556   */\n      dup5\n        /* \"#utility.yul\":4545:4568   */\n      sub\n        /* \"#utility.yul\":4541:4573   */\n      slt\n        /* \"#utility.yul\":4538:4590   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":4586:4587   */\n      0x00\n        /* \"#utility.yul\":4583:4584   */\n      dup1\n        /* \"#utility.yul\":4576:4588   */\n      revert\n        /* \"#utility.yul\":4538:4590   */\n    tag_261:\n      pop\n        /* \"#utility.yul\":4609:4625   */\n      mload\n      swap2\n        /* \"#utility.yul\":4447:4631   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4994:5169   */\n    tag_178:\n        /* \"#utility.yul\":5031:5034   */\n      0x00\n        /* \"#utility.yul\":5075:5079   */\n      0xff\n        /* \"#utility.yul\":5068:5073   */\n      dup3\n        /* \"#utility.yul\":5064:5080   */\n      and\n        /* \"#utility.yul\":5104:5108   */\n      0xff\n        /* \"#utility.yul\":5095:5102   */\n      dup2\n        /* \"#utility.yul\":5092:5109   */\n      sub\n        /* \"#utility.yul\":5089:5132   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":5112:5130   */\n      tag_265\n      tag_220\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5161:5162   */\n      0x01\n        /* \"#utility.yul\":5148:5163   */\n      add\n      swap3\n        /* \"#utility.yul\":4994:5169   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6496:6624   */\n    tag_208:\n        /* \"#utility.yul\":6563:6572   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6584:6595   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6581:6618   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":6598:6616   */\n      tag_105\n      tag_220\n      jump\t// in\n        /* \"#utility.yul\":6629:6749   */\n    tag_211:\n        /* \"#utility.yul\":6669:6670   */\n      0x00\n        /* \"#utility.yul\":6695:6696   */\n      dup3\n        /* \"#utility.yul\":6685:6720   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":6700:6718   */\n      tag_275\n      tag_221\n      jump\t// in\n    tag_275:\n      pop\n        /* \"#utility.yul\":6734:6743   */\n      div\n      swap1\n        /* \"#utility.yul\":6629:6749   */\n      jump\t// out\n        /* \"#utility.yul\":7006:7118   */\n    tag_217:\n        /* \"#utility.yul\":7038:7039   */\n      0x00\n        /* \"#utility.yul\":7064:7065   */\n      dup3\n        /* \"#utility.yul\":7054:7089   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":7069:7087   */\n      tag_279\n      tag_221\n      jump\t// in\n    tag_279:\n      pop\n        /* \"#utility.yul\":7103:7112   */\n      mod\n      swap1\n        /* \"#utility.yul\":7006:7118   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c0f304bfe4ca8b5a7559f1d213c19c1238c65ededfd4c033b4d8cc1d60bbe89864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 60,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {
								"contracts/common/GenesUtil.sol": {
									"GenesUtil": [
										{
											"length": 20,
											"start": 968
										},
										{
											"length": 20,
											"start": 1084
										},
										{
											"length": 20,
											"start": 1459
										},
										{
											"length": 20,
											"start": 1591
										},
										{
											"length": 20,
											"start": 1727
										},
										{
											"length": 20,
											"start": 1862
										},
										{
											"length": 20,
											"start": 1960
										},
										{
											"length": 20,
											"start": 2172
										},
										{
											"length": 20,
											"start": 2298
										}
									]
								}
							},
							"object": "60806040526001805560056002556001600355601e6004556001600555602460065534801561002d57600080fd5b506100373361003c565b61008c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c8c8061009b6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063e2e3a0db11610066578063e2e3a0db146101c0578063e4a13fb7146101d3578063eb4b0e51146101e6578063f2fde38b146101ee57600080fd5b80638da5cb5b1461018257806391b667251461019d578063d477a712146101b0578063e238b8c6146101b857600080fd5b806332099cc4116100d357806332099cc414610153578063615ebe281461016a578063715018a614610172578063878cf3a61461017a57600080fd5b806302aff37814610105578063054fee6a1461011a57806316bd86461461012d5780631bb39f8414610140575b600080fd5b610118610113366004610a79565b610201565b005b610118610128366004610a79565b61020e565b61011861013b366004610a79565b61021b565b61011861014e366004610a79565b610228565b6003545b6040519081526020015b60405180910390f35b600454610157565b610118610235565b600154610157565b6000546040516001600160a01b039091168152602001610161565b6101186101ab366004610a79565b610249565b600654610157565b600254610157565b6101186101ce366004610a79565b610256565b6101576101e1366004610a92565b610263565b600554610157565b6101186101fc366004610ab4565b6108cb565b610209610944565b600155565b610216610944565b600255565b610223610944565b600655565b610230610944565b600455565b61023d610944565b610247600061099e565b565b610251610944565b600355565b61025e610944565b600555565b600154604080514260208083019190915243828401524460608301526080820186905260a0820185905260c0808301949094528251808303909401845260e090910190915281519101206000908082036102fc5760405162461bcd60e51b8152602060048201526015602482015274072616e646f6d536565642063616e2774206265203605c1b60448201526064015b60405180910390fd5b6001805490600061030c83610afa565b90915550506040516356e3df9760e01b81526004810184905260009060029073__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__906356e3df9790602401602060405180830381865af4158015610367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038b9190610b13565b6040516356e3df9760e01b81526004810188905273__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__906356e3df9790602401602060405180830381865af41580156103db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ff9190610b13565b6104099190610b39565b6104139190610b73565b61041e906001610b39565b90506009600080805b8360ff168160ff1610156107be57600061044e8663ffffffff1660035460045460646109ee565b9050600061047b600154868061046390610afa565b9750600060045460646104769190610b96565b610a2a565b600180549184101592509061049f908761049481610afa565b985060006064610a2a565b600254106104d6576104cc60015487806104b890610afa565b985060055460065460016104769190610bad565b60ff1690506105fd565b60326104f460015488806104e990610afa565b995060006064610a2a565b1061057d57604051635d2029f160e01b8152600481018c905260ff8516602482015273__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__90635d2029f190604401602060405180830381865af4158015610552573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105769190610bc0565b90506105fd565b604051635d2029f160e01b8152600481018d905260ff8516602482015273__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__90635d2029f190604401602060405180830381865af41580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa9190610bc0565b90505b6040516334a51d0f60e01b81526004810186905260ff80861660248301528216604482015273__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__906334a51d0f90606401602060405180830381865af415801561065e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106829190610be3565b60405163e1b30ab760e01b81526004810182905260ff861660248201526001604482015290955073__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__9063e1b30ab790606401602060405180830381865af41580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610be3565b945073__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__6355d6ed43868685610733576000610736565b60015b6040516001600160e01b031960e086901b168152600481019390935260ff9182166024840152166044820152606401602060405180830381865af4158015610782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a69190610be3565b945050505080806107b690610bfc565b915050610427565b50604051638de97f4f60e01b81526004810182905263ffffffff8516602482015273__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__90638de97f4f90604401602060405180830381865af415801561081b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083f9190610be3565b60405163b52b665960e01b8152600481018290526001602482015290915073__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__9063b52b665990604401602060405180830381865af4158015610899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bd9190610be3565b955050505050505b92915050565b6108d3610944565b6001600160a01b0381166109385760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f3565b6109418161099e565b50565b6000546001600160a01b031633146102475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008385116109ff57506000610a22565b8282610a0b8688610c1b565b610a159190610b96565b610a1f9190610c2e565b90505b949350505050565b6000610a368383610c1b565b60408051602081018890529081018690526060016040516020818303038152906040528051906020012060001c610a6d9190610c42565b9050610a1f8184610bad565b600060208284031215610a8b57600080fd5b5035919050565b60008060408385031215610aa557600080fd5b50508035926020909101359150565b600060208284031215610ac657600080fd5b81356001600160a01b0381168114610add57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610b0c57610b0c610ae4565b5060010190565b600060208284031215610b2557600080fd5b815163ffffffff81168114610add57600080fd5b63ffffffff818116838216019080821115610b5657610b56610ae4565b5092915050565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff80841680610b8a57610b8a610b5d565b92169190910492915050565b80820281158282048414176108c5576108c5610ae4565b808201808211156108c5576108c5610ae4565b600060208284031215610bd257600080fd5b815160ff81168114610add57600080fd5b600060208284031215610bf557600080fd5b5051919050565b600060ff821660ff8103610c1257610c12610ae4565b60010192915050565b818103818111156108c5576108c5610ae4565b600082610c3d57610c3d610b5d565b500490565b600082610c5157610c51610b5d565b50069056fea2646970667358221220c0f304bfe4ca8b5a7559f1d213c19c1238c65ededfd4c033b4d8cc1d60bbe89864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x5 PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x1E PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x24 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37 CALLER PUSH2 0x3C JUMP JUMPDEST PUSH2 0x8C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC8C DUP1 PUSH2 0x9B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE2E3A0DB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE2E3A0DB EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xE4A13FB7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xEB4B0E51 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x91B66725 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xD477A712 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xE238B8C6 EQ PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32099CC4 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x32099CC4 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x615EBE28 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x878CF3A6 EQ PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AFF378 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x54FEE6A EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x16BD8646 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x1BB39F84 EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x201 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x118 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x20E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST PUSH2 0x118 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x157 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x235 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x249 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x157 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA92 JUMP JUMPDEST PUSH2 0x263 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x157 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x209 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x216 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x223 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x230 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x23D PUSH2 0x944 JUMP JUMPDEST PUSH2 0x247 PUSH1 0x0 PUSH2 0x99E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x251 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x25E PUSH2 0x944 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE NUMBER DUP3 DUP5 ADD MSTORE PREVRANDAO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP5 ADD DUP5 MSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 DUP1 DUP3 SUB PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x72616E646F6D536565642063616E2774206265203 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x30C DUP4 PUSH2 0xAFA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x56E3DF97 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x56E3DF97 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x367 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x56E3DF97 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x56E3DF97 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x409 SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x413 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x41E SWAP1 PUSH1 0x1 PUSH2 0xB39 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 PUSH2 0x44E DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x64 PUSH2 0x9EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x47B PUSH1 0x1 SLOAD DUP7 DUP1 PUSH2 0x463 SWAP1 PUSH2 0xAFA JUMP JUMPDEST SWAP8 POP PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x64 PUSH2 0x476 SWAP2 SWAP1 PUSH2 0xB96 JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP2 DUP5 LT ISZERO SWAP3 POP SWAP1 PUSH2 0x49F SWAP1 DUP8 PUSH2 0x494 DUP2 PUSH2 0xAFA JUMP JUMPDEST SWAP9 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x2 SLOAD LT PUSH2 0x4D6 JUMPI PUSH2 0x4CC PUSH1 0x1 SLOAD DUP8 DUP1 PUSH2 0x4B8 SWAP1 PUSH2 0xAFA JUMP JUMPDEST SWAP9 POP PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x1 PUSH2 0x476 SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x32 PUSH2 0x4F4 PUSH1 0x1 SLOAD DUP9 DUP1 PUSH2 0x4E9 SWAP1 PUSH2 0xAFA JUMP JUMPDEST SWAP10 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0xA2A JUMP JUMPDEST LT PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH4 0x5D2029F1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x5D2029F1 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x552 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5D2029F1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x5D2029F1 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x5D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34A51D0F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xFF DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x34A51D0F SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x65E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x682 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE1B30AB7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xFF DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 SWAP6 POP PUSH20 0x0 SWAP1 PUSH4 0xE1B30AB7 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x709 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST SWAP5 POP PUSH20 0x0 PUSH4 0x55D6ED43 DUP7 DUP7 DUP6 PUSH2 0x733 JUMPI PUSH1 0x0 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x782 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP1 PUSH2 0x7B6 SWAP1 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x427 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x8DE97F4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x8DE97F4F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x81B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83F SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB52B6659 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH20 0x0 SWAP1 PUSH4 0xB52B6659 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x899 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BD SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D3 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x99E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x247 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 GT PUSH2 0x9FF JUMPI POP PUSH1 0x0 PUSH2 0xA22 JUMP JUMPDEST DUP3 DUP3 PUSH2 0xA0B DUP7 DUP9 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0xB96 JUMP JUMPDEST PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA36 DUP4 DUP4 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xA6D SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST SWAP1 POP PUSH2 0xA1F DUP2 DUP5 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xB0C JUMPI PUSH2 0xB0C PUSH2 0xAE4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0xB56 JUMPI PUSH2 0xB56 PUSH2 0xAE4 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP1 PUSH2 0xB8A JUMPI PUSH2 0xB8A PUSH2 0xB5D JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8C5 JUMPI PUSH2 0x8C5 PUSH2 0xAE4 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8C5 JUMPI PUSH2 0x8C5 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0xC12 JUMPI PUSH2 0xC12 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8C5 JUMPI PUSH2 0x8C5 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC3D JUMPI PUSH2 0xC3D PUSH2 0xB5D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC51 JUMPI PUSH2 0xC51 PUSH2 0xB5D JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 RETURN DIV 0xBF 0xE4 0xCA DUP12 GAS PUSH22 0x59F1D213C19C1238C65EDEDFD4C033B4D8CC1D60BBE8 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "195:5263:2:-:0;;;495:1;465:31;;535:1;502:34;;571:1;542:30;;607:2;578:31;;640:1;615:26;;672:2;647:27;;195:5263;;;;;;;;;-1:-1:-1;936:32:0;719:10:1;936:18:0;:32::i;:::-;195:5263:2;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;195:5263:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 2372,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2462,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@breading_377": {
									"entryPoint": 611,
									"id": 377,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getArcanePercent_568": {
									"entryPoint": 2542,
									"id": 568,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@getGlobalSeed_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMaxArcane_425": {
									"entryPoint": null,
									"id": 425,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMaxId_485": {
									"entryPoint": null,
									"id": 485,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMinArcane_405": {
									"entryPoint": null,
									"id": 405,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMinId_465": {
									"entryPoint": null,
									"id": 465,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRandomPercent_445": {
									"entryPoint": null,
									"id": 445,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@random_537": {
									"entryPoint": 2602,
									"id": 537,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 565,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setGlobalSeed_397": {
									"entryPoint": 513,
									"id": 397,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxArcane_437": {
									"entryPoint": 552,
									"id": 437,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxId_497": {
									"entryPoint": 539,
									"id": 497,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMinArcane_417": {
									"entryPoint": 585,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMinId_477": {
									"entryPoint": 598,
									"id": 477,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRandomPercent_457": {
									"entryPoint": 526,
									"id": 457,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2251,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint32_fromMemory": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 3008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_efb6a94127d5f0a7fea72f2b77e7e45577ef22fe0c35772be4ab13e969b5e238__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint8__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint8_t_rational_1_by_1__to_t_uint256_t_uint256_t_uint8__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint8_t_uint8__to_t_uint256_t_uint256_t_uint8__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint32": {
									"entryPoint": 2873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint32": {
									"entryPoint": 2931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 3138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7120:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:5"
															},
															"nodeType": "YulIf",
															"src": "94:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:5",
														"type": ""
													}
												],
												"src": "14:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:5",
														"type": ""
													}
												],
												"src": "199:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "504:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "515:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "492:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "534:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "549:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "565:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "570:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "561:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "561:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "574:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "557:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "557:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "527:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "527:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "462:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "473:4:5",
														"type": ""
													}
												],
												"src": "381:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "676:161:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "722:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "731:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "734:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "724:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "724:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "724:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "697:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "706:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "693:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "693:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "718:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "689:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "689:32:5"
															},
															"nodeType": "YulIf",
															"src": "686:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "747:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "770:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "757:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "789:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "816:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "827:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "812:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "812:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "799:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "789:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "634:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "645:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "657:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "665:6:5",
														"type": ""
													}
												],
												"src": "589:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "912:216:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "958:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "967:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "970:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "960:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "960:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "960:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "933:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "942:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "929:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "929:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "925:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "925:32:5"
															},
															"nodeType": "YulIf",
															"src": "922:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "983:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1009:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "987:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1082:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1091:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1094:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1084:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1084:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1084:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1041:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1052:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1067:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1072:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1063:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1063:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1076:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1059:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1059:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1048:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1048:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1038:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1038:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1031:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:50:5"
															},
															"nodeType": "YulIf",
															"src": "1028:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1107:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1117:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1107:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "878:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "889:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "901:6:5",
														"type": ""
													}
												],
												"src": "842:286:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1392:251:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1409:3:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1414:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1402:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1402:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1402:19:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1441:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1446:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1437:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1437:12:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1451:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1430:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1430:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1430:28:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1478:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1483:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1474:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1474:12:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1467:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1467:28:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1515:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1520:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1511:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1511:12:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1525:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1504:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1504:28:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1552:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1557:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:13:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1541:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1541:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1541:29:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1590:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1586:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1586:13:5"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "1601:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1579:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1579:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1579:29:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1617:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1628:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1633:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1624:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1624:13:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1617:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1328:3:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1333:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1341:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1349:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1357:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1365:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1373:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1384:3:5",
														"type": ""
													}
												],
												"src": "1133:510:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1822:171:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1839:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1850:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1832:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1832:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1873:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1884:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1869:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1869:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1889:2:5",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1862:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1862:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1862:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1912:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1923:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:18:5"
																	},
																	{
																		"hexValue": "72616e646f6d536565642063616e27742062652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1928:23:5",
																		"type": "",
																		"value": "randomSeed can't be 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1901:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1901:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1901:51:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1973:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1984:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_efb6a94127d5f0a7fea72f2b77e7e45577ef22fe0c35772be4ab13e969b5e238__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1799:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1813:4:5",
														"type": ""
													}
												],
												"src": "1648:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2030:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2047:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2054:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2059:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2050:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2050:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2040:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2087:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2080:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2080:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2111:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2114:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1998:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2177:88:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2208:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2210:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2210:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2193:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2204:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2200:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2200:6:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2190:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2190:17:5"
															},
															"nodeType": "YulIf",
															"src": "2187:43:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2239:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2250:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2257:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2246:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2246:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2239:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2159:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2169:3:5",
														"type": ""
													}
												],
												"src": "2130:135:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2379:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2389:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2401:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2412:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2397:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2389:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2431:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2442:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2424:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2424:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2424:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2348:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2359:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2370:4:5",
														"type": ""
													}
												],
												"src": "2270:185:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2540:200:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2586:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2595:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2598:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2588:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2588:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2561:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2570:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2557:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2557:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2582:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2553:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2553:32:5"
															},
															"nodeType": "YulIf",
															"src": "2550:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2611:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2630:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2624:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2615:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2694:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2703:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2706:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2696:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2696:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2696:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2662:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2673:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2680:10:5",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2669:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2669:22:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2659:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:33:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:41:5"
															},
															"nodeType": "YulIf",
															"src": "2649:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2719:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2729:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2719:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2506:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2517:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2529:6:5",
														"type": ""
													}
												],
												"src": "2460:280:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2792:125:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2802:20:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2812:10:5",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2806:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2831:34:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2846:1:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2849:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2842:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2842:10:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2858:1:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2861:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2854:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2854:10:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2838:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:27:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2831:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2889:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2891:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2891:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2891:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2880:3:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2885:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2877:11:5"
															},
															"nodeType": "YulIf",
															"src": "2874:37:5"
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2775:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2778:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2784:3:5",
														"type": ""
													}
												],
												"src": "2745:172:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2954:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2971:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2978:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2983:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2974:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2974:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2964:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2964:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2964:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3011:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3014:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3004:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3004:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3038:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3028:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3028:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3028:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2922:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3099:146:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3109:20:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3119:10:5",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3113:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3138:21:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3153:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3156:2:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3149:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:10:5"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "3142:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3183:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3185:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3185:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3185:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "3178:3:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3171:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:11:5"
															},
															"nodeType": "YulIf",
															"src": "3168:37:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3214:25:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3227:1:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3230:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3223:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3223:10:5"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "3235:3:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3219:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:20:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3214:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3084:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3087:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3093:1:5",
														"type": ""
													}
												],
												"src": "3054:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3302:116:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3312:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3327:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3330:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3323:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3323:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3312:7:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3390:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3392:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3392:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3392:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3361:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3354:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3354:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3368:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3375:7:5"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3384:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3371:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3371:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3365:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3351:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:37:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:45:5"
															},
															"nodeType": "YulIf",
															"src": "3341:71:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3281:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3284:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3290:7:5",
														"type": ""
													}
												],
												"src": "3250:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3471:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3481:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3492:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3495:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3488:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3481:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3520:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3522:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3522:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3522:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3512:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3515:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3509:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3509:10:5"
															},
															"nodeType": "YulIf",
															"src": "3506:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3454:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3457:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3463:3:5",
														"type": ""
													}
												],
												"src": "3423:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3686:130:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3696:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3708:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3719:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3704:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3704:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3696:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3738:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3749:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3731:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3731:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3776:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3787:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3772:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3796:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3804:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3792:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3792:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3765:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3765:45:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3647:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3658:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3666:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3677:4:5",
														"type": ""
													}
												],
												"src": "3553:263:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3900:194:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3946:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3955:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3958:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3948:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3948:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3948:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3921:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3930:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3942:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3913:32:5"
															},
															"nodeType": "YulIf",
															"src": "3910:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3971:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3990:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3984:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3975:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4048:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4057:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4060:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4050:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4050:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4050:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4022:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4033:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4040:4:5",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4029:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4029:16:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4019:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4019:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4012:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4012:35:5"
															},
															"nodeType": "YulIf",
															"src": "4009:55:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4073:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4083:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3866:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3877:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3889:6:5",
														"type": ""
													}
												],
												"src": "3821:273:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4258:184:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4268:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4280:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4291:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4276:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4276:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4268:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4310:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4321:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4303:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4303:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4303:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4348:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4359:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4344:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4344:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4368:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4376:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4364:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4364:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4337:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4337:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4337:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4402:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4413:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4398:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4422:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4430:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4418:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4418:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4391:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4391:45:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint8_t_uint8__to_t_uint256_t_uint256_t_uint8__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4211:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4222:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4230:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4238:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4249:4:5",
														"type": ""
													}
												],
												"src": "4099:343:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4528:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4574:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4583:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4586:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4576:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4576:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4576:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4549:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4558:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4545:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4545:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4570:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4541:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4541:32:5"
															},
															"nodeType": "YulIf",
															"src": "4538:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4599:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4615:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4609:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4609:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4599:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4494:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4505:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4517:6:5",
														"type": ""
													}
												],
												"src": "4447:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4805:184:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4815:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4827:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4838:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4823:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4815:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4857:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4868:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4850:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4850:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4895:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4906:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4891:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4891:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4915:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4923:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4911:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4911:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4884:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4884:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4960:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4945:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4945:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4969:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4977:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4965:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4965:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4938:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4938:45:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint8_t_rational_1_by_1__to_t_uint256_t_uint256_t_uint8__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4758:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4769:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4777:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4785:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4796:4:5",
														"type": ""
													}
												],
												"src": "4636:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5039:130:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5049:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5068:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5075:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5064:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5064:16:5"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5053:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5110:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5112:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5112:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5112:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5095:7:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5104:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5092:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:17:5"
															},
															"nodeType": "YulIf",
															"src": "5089:43:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5141:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5152:7:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5161:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5148:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5148:15:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5141:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5021:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5031:3:5",
														"type": ""
													}
												],
												"src": "4994:175:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5309:136:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5319:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5331:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5342:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5327:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5327:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5319:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5361:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5372:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5354:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5354:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5354:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5399:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5410:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5395:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5419:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5427:10:5",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5415:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5415:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5388:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5388:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5388:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5270:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5281:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5289:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5300:4:5",
														"type": ""
													}
												],
												"src": "5174:271:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5593:130:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5603:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5615:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5626:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5611:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5611:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5603:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5645:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5656:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5638:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5638:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5683:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5694:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5679:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5679:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5703:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5711:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5699:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5699:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5672:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5672:45:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint8__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5554:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5565:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5573:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5584:4:5",
														"type": ""
													}
												],
												"src": "5450:273:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5902:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5919:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5930:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5912:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5912:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5912:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5953:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5964:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5949:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5949:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5969:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5942:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5942:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5942:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5992:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6003:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5988:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5988:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6008:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5981:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5981:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5981:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6063:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6074:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6059:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6059:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6079:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6052:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6052:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6052:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6097:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6109:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6120:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6105:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6105:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6097:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5879:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5893:4:5",
														"type": ""
													}
												],
												"src": "5728:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6309:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6326:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6337:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6319:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6319:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6319:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6360:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6371:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6356:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6356:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6376:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6349:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6349:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6399:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6410:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6395:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6395:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6415:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6388:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6388:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6388:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6459:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6471:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6482:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6467:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6467:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6459:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6286:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6300:4:5",
														"type": ""
													}
												],
												"src": "6135:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6545:79:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6555:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6567:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6570:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6563:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6563:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6555:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6596:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6598:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6598:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6598:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6587:4:5"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6593:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6584:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6584:11:5"
															},
															"nodeType": "YulIf",
															"src": "6581:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6527:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6530:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6536:4:5",
														"type": ""
													}
												],
												"src": "6496:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6675:74:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6698:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6700:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6700:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6700:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6695:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6688:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6688:9:5"
															},
															"nodeType": "YulIf",
															"src": "6685:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6729:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6738:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6741:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6734:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6734:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6729:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6660:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6663:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6669:1:5",
														"type": ""
													}
												],
												"src": "6629:120:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6901:100:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6918:3:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6923:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6911:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6911:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6911:19:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6950:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6955:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6946:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6946:12:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6960:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6939:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6939:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6939:28:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6976:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6987:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6992:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6983:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6983:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6976:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6869:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6874:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6882:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6893:3:5",
														"type": ""
													}
												],
												"src": "6754:247:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7044:74:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7067:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7069:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7069:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7069:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7064:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7057:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7057:9:5"
															},
															"nodeType": "YulIf",
															"src": "7054:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7098:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7107:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7110:1:5"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "7103:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7103:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7098:1:5"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7029:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7032:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7038:1:5",
														"type": ""
													}
												],
												"src": "7006:112:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        mstore(add(pos, 96), value3)\n        mstore(add(pos, 128), value4)\n        mstore(add(pos, 160), value5)\n        end := add(pos, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_efb6a94127d5f0a7fea72f2b77e7e45577ef22fe0c35772be4ab13e969b5e238__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"randomSeed can't be 0\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        let _1 := 0xffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint32(x, y) -> r\n    {\n        let _1 := 0xffffffff\n        let y_1 := and(y, _1)\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, _1), y_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint8_t_uint8__to_t_uint256_t_uint256_t_uint8__fromStack_library_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint8_t_rational_1_by_1__to_t_uint256_t_uint256_t_uint8__fromStack_library_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint8__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {
								"contracts/common/GenesUtil.sol": {
									"GenesUtil": [
										{
											"length": 20,
											"start": 813
										},
										{
											"length": 20,
											"start": 929
										},
										{
											"length": 20,
											"start": 1304
										},
										{
											"length": 20,
											"start": 1436
										},
										{
											"length": 20,
											"start": 1572
										},
										{
											"length": 20,
											"start": 1707
										},
										{
											"length": 20,
											"start": 1805
										},
										{
											"length": 20,
											"start": 2017
										},
										{
											"length": 20,
											"start": 2143
										}
									]
								}
							},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063e2e3a0db11610066578063e2e3a0db146101c0578063e4a13fb7146101d3578063eb4b0e51146101e6578063f2fde38b146101ee57600080fd5b80638da5cb5b1461018257806391b667251461019d578063d477a712146101b0578063e238b8c6146101b857600080fd5b806332099cc4116100d357806332099cc414610153578063615ebe281461016a578063715018a614610172578063878cf3a61461017a57600080fd5b806302aff37814610105578063054fee6a1461011a57806316bd86461461012d5780631bb39f8414610140575b600080fd5b610118610113366004610a79565b610201565b005b610118610128366004610a79565b61020e565b61011861013b366004610a79565b61021b565b61011861014e366004610a79565b610228565b6003545b6040519081526020015b60405180910390f35b600454610157565b610118610235565b600154610157565b6000546040516001600160a01b039091168152602001610161565b6101186101ab366004610a79565b610249565b600654610157565b600254610157565b6101186101ce366004610a79565b610256565b6101576101e1366004610a92565b610263565b600554610157565b6101186101fc366004610ab4565b6108cb565b610209610944565b600155565b610216610944565b600255565b610223610944565b600655565b610230610944565b600455565b61023d610944565b610247600061099e565b565b610251610944565b600355565b61025e610944565b600555565b600154604080514260208083019190915243828401524460608301526080820186905260a0820185905260c0808301949094528251808303909401845260e090910190915281519101206000908082036102fc5760405162461bcd60e51b8152602060048201526015602482015274072616e646f6d536565642063616e2774206265203605c1b60448201526064015b60405180910390fd5b6001805490600061030c83610afa565b90915550506040516356e3df9760e01b81526004810184905260009060029073__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__906356e3df9790602401602060405180830381865af4158015610367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038b9190610b13565b6040516356e3df9760e01b81526004810188905273__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__906356e3df9790602401602060405180830381865af41580156103db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ff9190610b13565b6104099190610b39565b6104139190610b73565b61041e906001610b39565b90506009600080805b8360ff168160ff1610156107be57600061044e8663ffffffff1660035460045460646109ee565b9050600061047b600154868061046390610afa565b9750600060045460646104769190610b96565b610a2a565b600180549184101592509061049f908761049481610afa565b985060006064610a2a565b600254106104d6576104cc60015487806104b890610afa565b985060055460065460016104769190610bad565b60ff1690506105fd565b60326104f460015488806104e990610afa565b995060006064610a2a565b1061057d57604051635d2029f160e01b8152600481018c905260ff8516602482015273__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__90635d2029f190604401602060405180830381865af4158015610552573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105769190610bc0565b90506105fd565b604051635d2029f160e01b8152600481018d905260ff8516602482015273__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__90635d2029f190604401602060405180830381865af41580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa9190610bc0565b90505b6040516334a51d0f60e01b81526004810186905260ff80861660248301528216604482015273__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__906334a51d0f90606401602060405180830381865af415801561065e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106829190610be3565b60405163e1b30ab760e01b81526004810182905260ff861660248201526001604482015290955073__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__9063e1b30ab790606401602060405180830381865af41580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610be3565b945073__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__6355d6ed43868685610733576000610736565b60015b6040516001600160e01b031960e086901b168152600481019390935260ff9182166024840152166044820152606401602060405180830381865af4158015610782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a69190610be3565b945050505080806107b690610bfc565b915050610427565b50604051638de97f4f60e01b81526004810182905263ffffffff8516602482015273__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__90638de97f4f90604401602060405180830381865af415801561081b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083f9190610be3565b60405163b52b665960e01b8152600481018290526001602482015290915073__$bc34c519aa7d1b67b54ee96cd6fbdfb8db$__9063b52b665990604401602060405180830381865af4158015610899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bd9190610be3565b955050505050505b92915050565b6108d3610944565b6001600160a01b0381166109385760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f3565b6109418161099e565b50565b6000546001600160a01b031633146102475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008385116109ff57506000610a22565b8282610a0b8688610c1b565b610a159190610b96565b610a1f9190610c2e565b90505b949350505050565b6000610a368383610c1b565b60408051602081018890529081018690526060016040516020818303038152906040528051906020012060001c610a6d9190610c42565b9050610a1f8184610bad565b600060208284031215610a8b57600080fd5b5035919050565b60008060408385031215610aa557600080fd5b50508035926020909101359150565b600060208284031215610ac657600080fd5b81356001600160a01b0381168114610add57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610b0c57610b0c610ae4565b5060010190565b600060208284031215610b2557600080fd5b815163ffffffff81168114610add57600080fd5b63ffffffff818116838216019080821115610b5657610b56610ae4565b5092915050565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff80841680610b8a57610b8a610b5d565b92169190910492915050565b80820281158282048414176108c5576108c5610ae4565b808201808211156108c5576108c5610ae4565b600060208284031215610bd257600080fd5b815160ff81168114610add57600080fd5b600060208284031215610bf557600080fd5b5051919050565b600060ff821660ff8103610c1257610c12610ae4565b60010192915050565b818103818111156108c5576108c5610ae4565b600082610c3d57610c3d610b5d565b500490565b600082610c5157610c51610b5d565b50069056fea2646970667358221220c0f304bfe4ca8b5a7559f1d213c19c1238c65ededfd4c033b4d8cc1d60bbe89864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE2E3A0DB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE2E3A0DB EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xE4A13FB7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xEB4B0E51 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x91B66725 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xD477A712 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xE238B8C6 EQ PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32099CC4 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x32099CC4 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x615EBE28 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x878CF3A6 EQ PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AFF378 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x54FEE6A EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x16BD8646 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x1BB39F84 EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x201 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x118 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x20E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST PUSH2 0x118 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x157 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x235 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x249 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x157 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA92 JUMP JUMPDEST PUSH2 0x263 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x157 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x209 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x216 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x223 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x230 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x23D PUSH2 0x944 JUMP JUMPDEST PUSH2 0x247 PUSH1 0x0 PUSH2 0x99E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x251 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x25E PUSH2 0x944 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE NUMBER DUP3 DUP5 ADD MSTORE PREVRANDAO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP5 ADD DUP5 MSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 DUP1 DUP3 SUB PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x72616E646F6D536565642063616E2774206265203 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x30C DUP4 PUSH2 0xAFA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x56E3DF97 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x56E3DF97 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x367 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x56E3DF97 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH20 0x0 SWAP1 PUSH4 0x56E3DF97 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x409 SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x413 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x41E SWAP1 PUSH1 0x1 PUSH2 0xB39 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 PUSH2 0x44E DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x64 PUSH2 0x9EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x47B PUSH1 0x1 SLOAD DUP7 DUP1 PUSH2 0x463 SWAP1 PUSH2 0xAFA JUMP JUMPDEST SWAP8 POP PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x64 PUSH2 0x476 SWAP2 SWAP1 PUSH2 0xB96 JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP2 DUP5 LT ISZERO SWAP3 POP SWAP1 PUSH2 0x49F SWAP1 DUP8 PUSH2 0x494 DUP2 PUSH2 0xAFA JUMP JUMPDEST SWAP9 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x2 SLOAD LT PUSH2 0x4D6 JUMPI PUSH2 0x4CC PUSH1 0x1 SLOAD DUP8 DUP1 PUSH2 0x4B8 SWAP1 PUSH2 0xAFA JUMP JUMPDEST SWAP9 POP PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x1 PUSH2 0x476 SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x32 PUSH2 0x4F4 PUSH1 0x1 SLOAD DUP9 DUP1 PUSH2 0x4E9 SWAP1 PUSH2 0xAFA JUMP JUMPDEST SWAP10 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0xA2A JUMP JUMPDEST LT PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH4 0x5D2029F1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x5D2029F1 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x552 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5D2029F1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x5D2029F1 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x5D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34A51D0F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xFF DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x34A51D0F SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x65E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x682 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE1B30AB7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xFF DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 SWAP6 POP PUSH20 0x0 SWAP1 PUSH4 0xE1B30AB7 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x709 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST SWAP5 POP PUSH20 0x0 PUSH4 0x55D6ED43 DUP7 DUP7 DUP6 PUSH2 0x733 JUMPI PUSH1 0x0 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x782 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP1 PUSH2 0x7B6 SWAP1 PUSH2 0xBFC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x427 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x8DE97F4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x8DE97F4F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x81B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83F SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB52B6659 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH20 0x0 SWAP1 PUSH4 0xB52B6659 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x899 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BD SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D3 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x99E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x247 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 GT PUSH2 0x9FF JUMPI POP PUSH1 0x0 PUSH2 0xA22 JUMP JUMPDEST DUP3 DUP3 PUSH2 0xA0B DUP7 DUP9 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0xB96 JUMP JUMPDEST PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA36 DUP4 DUP4 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xA6D SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST SWAP1 POP PUSH2 0xA1F DUP2 DUP5 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xB0C JUMPI PUSH2 0xB0C PUSH2 0xAE4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0xB56 JUMPI PUSH2 0xB56 PUSH2 0xAE4 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP1 PUSH2 0xB8A JUMPI PUSH2 0xB8A PUSH2 0xB5D JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8C5 JUMPI PUSH2 0x8C5 PUSH2 0xAE4 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8C5 JUMPI PUSH2 0x8C5 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0xC12 JUMPI PUSH2 0xC12 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8C5 JUMPI PUSH2 0x8C5 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC3D JUMPI PUSH2 0xC3D PUSH2 0xB5D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC51 JUMPI PUSH2 0xC51 PUSH2 0xB5D JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 RETURN DIV 0xBF 0xE4 0xCA DUP12 GAS PUSH22 0x59F1D213C19C1238C65EDEDFD4C033B4D8CC1D60BBE8 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "195:5263:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3077:91;;;;;;:::i;:::-;;:::i;:::-;;3891:97;;;;;;:::i;:::-;;:::i;4411:81::-;;;;;;:::i;:::-;;:::i;3615:89::-;;;;;;:::i;:::-;;:::i;3251:90::-;3324:10;;3251:90;;;345:25:5;;;333:2;318:18;3251:90:2;;;;;;;;3519;3592:10;;3519:90;;1831:101:0;;;:::i;2979:92:2:-;3053:11;;2979:92;;1201:85:0;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;527:51:5;;515:2;500:18;1201:85:0;381:203:5;3347:89:2;;;;;;:::i;:::-;;:::i;4323:82::-;4392:6;;4323:82;;3787:98;3864:14;;3787:98;;4159:81;;;;;;:::i;:::-;;:::i;681:2122::-;;;;;;:::i;:::-;;:::i;4071:82::-;4140:6;;4071:82;;2081:198:0;;;;;;:::i;:::-;;:::i;3077:91:2:-;1094:13:0;:11;:13::i;:::-;3142:11:2::1;:19:::0;3077:91::o;3891:97::-;1094:13:0;:11;:13::i;:::-;3959:14:2::1;:22:::0;3891:97::o;4411:81::-;1094:13:0;:11;:13::i;:::-;4471:6:2::1;:14:::0;4411:81::o;3615:89::-;1094:13:0;:11;:13::i;:::-;3679:10:2::1;:18:::0;3615:89::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3347:89:2:-;1094:13:0;:11;:13::i;:::-;3411:10:2::1;:18:::0;3347:89::o;4159:81::-;1094:13:0;:11;:13::i;:::-;4219:6:2::1;:14:::0;4159:81::o;681:2122::-;1060:11;;857:232;;;895:15;857:232;;;;1402:19:5;;;;932:12:2;1437::5;;;1430:28;966:16:2;1474:12:5;;;1467:28;1511:12;;;1504:28;;;1548:13;;;1541:29;;;1586:13;;;;1579:29;;;;857:232:2;;;;;;;;;;1624:13:5;;;;857:232:2;;;830:273;;;;;-1:-1:-1;;1132:15:2;;;1124:49;;;;-1:-1:-1;;;1124:49:2;;1850:2:5;1124:49:2;;;1832:21:5;1889:2;1869:18;;;1862:30;-1:-1:-1;;;1908:18:5;;;1901:51;1969:18;;1124:49:2;;;;;;;;;1184:11;:13;;;:11;:13;;;:::i;:::-;;;;-1:-1:-1;;1275:31:2;;-1:-1:-1;;;1275:31:2;;;;;345:25:5;;;1208:17:2;;1322:1;;1275:9;;:23;;318:18:5;;1275:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1229;;-1:-1:-1;;;1229:31:2;;;;;345:25:5;;;1229:9:2;;:23;;318:18:5;;1229:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:77;;;;:::i;:::-;1228:95;;;;:::i;:::-;:111;;1338:1;1228:111;:::i;:::-;1208:131;-1:-1:-1;1373:1:2;1350:20;;;1468:1147;1539:14;1523:30;;:13;:30;;;1468:1147;;;1607:21;1631:135;1665:10;1631:135;;1693:10;;1721;;1749:3;1631:16;:135::i;:::-;1607:159;;1780:10;1826:55;1833:11;;1846:13;;;;;:::i;:::-;;;1861:1;1864:10;;1877:3;1864:16;;;;:::i;:::-;1826:6;:55::i;:::-;1907:1;1951:11;;1793:88;;;;;-1:-1:-1;1907:1:2;1944:42;;1964:13;;;;:::i;:::-;;;1979:1;1982:3;1944:6;:42::i;:::-;1926:14;;:60;1922:476;;2038:54;2045:11;;2058:13;;;;;:::i;:::-;;;2073:6;;2081;;2090:1;2081:10;;;;:::i;2038:54::-;2095:4;2038:61;2006:111;;1922:476;;;2206:2;2160:42;2167:11;;2180:13;;;;;:::i;:::-;;;2195:1;2198:3;2160:6;:42::i;:::-;:48;2156:228;;2237:38;;-1:-1:-1;;;2237:38:2;;;;;3731:25:5;;;3804:4;3792:17;;3772:18;;;3765:45;2237:9:2;;:15;;3704:18:5;;2237:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2232:43;;2156:228;;;2327:38;;-1:-1:-1;;;2327:38:2;;;;;3731:25:5;;;3804:4;3792:17;;3772:18;;;3765:45;2327:9:2;;:15;;3704:18:5;;2327:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2322:43;;2156:228;2420:41;;-1:-1:-1;;;2420:41:2;;;;;4303:25:5;;;4376:4;4364:17;;;4344:18;;;4337:45;4418:17;;4398:18;;;4391:45;2420:9:2;;:15;;4276:18:5;;2420:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2483:43;;-1:-1:-1;;;2483:43:2;;;;;4303:25:5;;;4376:4;4364:17;;4344:18;;;4337:45;2524:1:2;4398:18:5;;;4391:45;2412:49:2;;-1:-1:-1;2483:9:2;;:18;;4276::5;;2483:43:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2475:51;;2548:9;:19;2568:5;2575:13;2590:5;:13;;2602:1;2590:13;;;2598:1;2590:13;2548:56;;-1:-1:-1;;;;;;2548:56:2;;;;;;;;;;4303:25:5;;;;4376:4;4364:17;;;4344:18;;;4337:45;4418:17;4398:18;;;4391:45;4276:18;;2548:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2540:64;;1593:1022;;;1567:15;;;;;:::i;:::-;;;;1468:1147;;;-1:-1:-1;2659:42:2;;-1:-1:-1;;;2659:42:2;;;;;5354:25:5;;;5427:10;5415:23;;5395:18;;;5388:51;2659:9:2;;:23;;5327:18:5;;2659:42:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2743:30;;-1:-1:-1;;;2743:30:2;;;;;3731:25:5;;;2771:1:2;3772:18:5;;;3765:45;2651:50:2;;-1:-1:-1;2743:9:2;;:20;;3704:18:5;;2743:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2735:38;-1:-1:-1;;;;;;681:2122:2;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;5930:2:5;2161:73:0::1;::::0;::::1;5912:21:5::0;5969:2;5949:18;;;5942:30;6008:34;5988:18;;;5981:62;-1:-1:-1;;;6059:18:5;;;6052:36;6105:19;;2161:73:0::1;5728:402:5::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6337:2:5;1414:68:0;;;6319:21:5;;;6356:18;;;6349:30;6415:34;6395:18;;;6388:62;6467:18;;1414:68:0;6135:356:5;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;5178:278:2:-;5325:7;5362:3;5348:10;:17;5344:56;;-1:-1:-1;5388:1:2;5381:8;;5344:56;5446:3;5438:4;5418:16;5431:3;5418:10;:16;:::i;:::-;5417:25;;;;:::i;:::-;5416:33;;;;:::i;:::-;5409:40;;5178:278;;;;;;;:::o;4665:340::-;4809:13;4919:21;4931:9;4919;:21;:::i;:::-;4872:29;;;;;;6911:19:5;;;6946:12;;;6939:28;;;6983:12;;4872:29:2;;;;;;;;;;;;4862:40;;;;;;4854:49;;:87;;;;:::i;:::-;4834:107;-1:-1:-1;4959:17:2;4834:107;4959:9;:17;:::i;14:180:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:5;;14:180;-1:-1:-1;14:180:5:o;589:248::-;657:6;665;718:2;706:9;697:7;693:23;689:32;686:52;;;734:1;731;724:12;686:52;-1:-1:-1;;757:23:5;;;827:2;812:18;;;799:32;;-1:-1:-1;589:248:5:o;842:286::-;901:6;954:2;942:9;933:7;929:23;925:32;922:52;;;970:1;967;960:12;922:52;996:23;;-1:-1:-1;;;;;1048:31:5;;1038:42;;1028:70;;1094:1;1091;1084:12;1028:70;1117:5;842:286;-1:-1:-1;;;842:286:5:o;1998:127::-;2059:10;2054:3;2050:20;2047:1;2040:31;2090:4;2087:1;2080:15;2114:4;2111:1;2104:15;2130:135;2169:3;2190:17;;;2187:43;;2210:18;;:::i;:::-;-1:-1:-1;2257:1:5;2246:13;;2130:135::o;2460:280::-;2529:6;2582:2;2570:9;2561:7;2557:23;2553:32;2550:52;;;2598:1;2595;2588:12;2550:52;2630:9;2624:16;2680:10;2673:5;2669:22;2662:5;2659:33;2649:61;;2706:1;2703;2696:12;2745:172;2812:10;2842;;;2854;;;2838:27;;2877:11;;;2874:37;;;2891:18;;:::i;:::-;2874:37;2745:172;;;;:::o;2922:127::-;2983:10;2978:3;2974:20;2971:1;2964:31;3014:4;3011:1;3004:15;3038:4;3035:1;3028:15;3054:191;3093:1;3119:10;3156:2;3153:1;3149:10;3178:3;3168:37;;3185:18;;:::i;:::-;3223:10;;3219:20;;;;;3054:191;-1:-1:-1;;3054:191:5:o;3250:168::-;3323:9;;;3354;;3371:15;;;3365:22;;3351:37;3341:71;;3392:18;;:::i;3423:125::-;3488:9;;;3509:10;;;3506:36;;;3522:18;;:::i;3821:273::-;3889:6;3942:2;3930:9;3921:7;3917:23;3913:32;3910:52;;;3958:1;3955;3948:12;3910:52;3990:9;3984:16;4040:4;4033:5;4029:16;4022:5;4019:27;4009:55;;4060:1;4057;4050:12;4447:184;4517:6;4570:2;4558:9;4549:7;4545:23;4541:32;4538:52;;;4586:1;4583;4576:12;4538:52;-1:-1:-1;4609:16:5;;4447:184;-1:-1:-1;4447:184:5:o;4994:175::-;5031:3;5075:4;5068:5;5064:16;5104:4;5095:7;5092:17;5089:43;;5112:18;;:::i;:::-;5161:1;5148:15;;4994:175;-1:-1:-1;;4994:175:5:o;6496:128::-;6563:9;;;6584:11;;;6581:37;;;6598:18;;:::i;6629:120::-;6669:1;6695;6685:35;;6700:18;;:::i;:::-;-1:-1:-1;6734:9:5;;6629:120::o;7006:112::-;7038:1;7064;7054:35;;7069:18;;:::i;:::-;-1:-1:-1;7103:9:5;;7006:112::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "642400",
								"executionCost": "159153",
								"totalCost": "801553"
							},
							"external": {
								"breading(uint256,uint256)": "infinite",
								"getGlobalSeed()": "2370",
								"getMaxArcane()": "2326",
								"getMaxId()": "2348",
								"getMinArcane()": "2293",
								"getMinId()": "2347",
								"getRandomPercent()": "2370",
								"owner()": "2324",
								"renounceOwnership()": "infinite",
								"setGlobalSeed(uint256)": "24512",
								"setMaxArcane(uint256)": "24578",
								"setMaxId(uint256)": "24556",
								"setMinArcane(uint256)": "24533",
								"setMinId(uint256)": "24510",
								"setRandomPercent(uint256)": "24534",
								"transferOwnership(address)": "28386"
							},
							"internal": {
								"getArcanePercent(uint256,uint256,uint256,uint256)": "infinite",
								"random(uint256,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 5458,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 495,
									"end": 496,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 465,
									"end": 496,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 465,
									"end": 496,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 535,
									"end": 536,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 502,
									"end": 536,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 502,
									"end": 536,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 571,
									"end": 572,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 542,
									"end": 572,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 542,
									"end": 572,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 607,
									"end": 609,
									"name": "PUSH",
									"source": 2,
									"value": "1E"
								},
								{
									"begin": 578,
									"end": 609,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 578,
									"end": 609,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 640,
									"end": 641,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 615,
									"end": 641,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 615,
									"end": 641,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 647,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 647,
									"end": 674,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 5458,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0f304bfe4ca8b5a7559f1d213c19c1238c65ededfd4c033b4d8cc1d60bbe89864736f6c63430008120033",
									".code": [
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "E2E3A0DB"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "E2E3A0DB"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "E4A13FB7"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "EB4B0E51"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "91B66725"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "D477A712"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "E238B8C6"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "32099CC4"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "32099CC4"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "615EBE28"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "878CF3A6"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "2AFF378"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "54FEE6A"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "16BD8646"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "1BB39F84"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 5458,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3077,
											"end": 3168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3077,
											"end": 3168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3891,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3891,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3891,
											"end": 3988,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3988,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3891,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3891,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3891,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3891,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4492,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4411,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4411,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4411,
											"end": 4492,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4492,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4411,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4411,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4492,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4411,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4411,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3704,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3615,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3615,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3615,
											"end": 3704,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3704,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3615,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3615,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3704,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3615,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3615,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3334,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3324,
											"end": 3334,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3251,
											"end": 3341,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3609,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3519,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3602,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3592,
											"end": 3602,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3519,
											"end": 3609,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3071,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2979,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2979,
											"end": 3071,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 527,
											"end": 578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 578,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 381,
											"end": 584,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3347,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3347,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3347,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3347,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3347,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3347,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3347,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4405,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 4323,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4392,
											"end": 4398,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4392,
											"end": 4398,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4323,
											"end": 4405,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3787,
											"end": 3885,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3787,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3878,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3864,
											"end": 3878,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3787,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3787,
											"end": 3885,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4240,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4159,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4159,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4159,
											"end": 4240,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4240,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4159,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4159,
											"end": 4240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4240,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4159,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4159,
											"end": 4240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 681,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 681,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4153,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4071,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4146,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4140,
											"end": 4146,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4071,
											"end": 4153,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3077,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3142,
											"end": 3161,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3988,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3891,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3959,
											"end": 3981,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4492,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4411,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4471,
											"end": 4485,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3704,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3615,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3679,
											"end": 3697,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3347,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3411,
											"end": 3429,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4240,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4159,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4219,
											"end": 4233,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 895,
											"end": 910,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1421,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1421,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1421,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1421,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 932,
											"end": 944,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1449,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1449,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1449,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1458,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 966,
											"end": 982,
											"name": "PREVRANDAO",
											"source": 2
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1532,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1532,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1561,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1548,
											"end": 1561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1561,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1599,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 1586,
											"end": 1599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1599,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1608,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1608,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1637,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1624,
											"end": 1637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 857,
											"end": 1089,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 830,
											"end": 1103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 830,
											"end": 1103,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 830,
											"end": 1103,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 830,
											"end": 1103,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 830,
											"end": 1103,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1132,
											"end": 1147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1147,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1889,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1892,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72616E646F6D536565642063616E2774206265203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1908,
											"end": 1926,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1908,
											"end": 1926,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1952,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1987,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1969,
											"end": 1987,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1124,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1184,
											"end": 1197,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1197,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1184,
											"end": 1197,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1184,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1197,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1184,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1197,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "56E3DF97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1225,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1323,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1322,
											"end": 1323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1284,
											"name": "PUSHLIB",
											"source": 2,
											"value": "contracts/common/GenesUtil.sol:GenesUtil"
										},
										{
											"begin": 1275,
											"end": 1284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1298,
											"name": "PUSH",
											"source": 2,
											"value": "56E3DF97"
										},
										{
											"begin": 1275,
											"end": 1298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1275,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "56E3DF97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1238,
											"name": "PUSHLIB",
											"source": 2,
											"value": "contracts/common/GenesUtil.sol:GenesUtil"
										},
										{
											"begin": 1229,
											"end": 1238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "PUSH",
											"source": 2,
											"value": "56E3DF97"
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1229,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1229,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1229,
											"end": 1306,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1229,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1306,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1229,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1228,
											"end": 1323,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1228,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1323,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1228,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1228,
											"end": 1339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1339,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1228,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1228,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1339,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1228,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1374,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 2615,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1468,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1553,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1553,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 2615,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1468,
											"end": 2615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1665,
											"end": 1675,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1703,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1693,
											"end": 1703,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1721,
											"end": 1731,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1631,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1766,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1631,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1833,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1833,
											"end": 1844,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1846,
											"end": 1859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1874,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1864,
											"end": 1874,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1864,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1864,
											"end": 1880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1864,
											"end": 1880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1880,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1864,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1826,
											"end": 1881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1881,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1826,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1951,
											"end": 1962,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1962,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1881,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1881,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1881,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1944,
											"end": 1986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1964,
											"end": 1977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1985,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1944,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1944,
											"end": 1986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1986,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1944,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1926,
											"end": 1940,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1986,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1922,
											"end": 2398,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2071,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2058,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2058,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2058,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2071,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2081,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2081,
											"end": 2091,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2081,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2092,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2038,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2099,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2038,
											"end": 2099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1922,
											"end": 2398,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1922,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2208,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2160,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2167,
											"end": 2178,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2193,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2193,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2180,
											"end": 2193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2180,
											"end": 2193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2193,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2180,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2193,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2160,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2160,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2202,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2160,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2208,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2156,
											"end": 2384,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5D2029F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3756,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3792,
											"end": 3809,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3792,
											"end": 3809,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3810,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "PUSHLIB",
											"source": 2,
											"value": "contracts/common/GenesUtil.sol:GenesUtil"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "5D2029F1"
										},
										{
											"begin": 2237,
											"end": 2252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3722,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3704,
											"end": 3722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2237,
											"end": 2275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2237,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2156,
											"end": 2384,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2384,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2156,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5D2029F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3756,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3792,
											"end": 3809,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3792,
											"end": 3809,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3810,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "PUSHLIB",
											"source": 2,
											"value": "contracts/common/GenesUtil.sol:GenesUtil"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "5D2029F1"
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3722,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3704,
											"end": 3722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2327,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2327,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2384,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2156,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34A51D0F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4380,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4364,
											"end": 4381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4381,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4391,
											"end": 4436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2429,
											"name": "PUSHLIB",
											"source": 2,
											"value": "contracts/common/GenesUtil.sol:GenesUtil"
										},
										{
											"begin": 2420,
											"end": 2429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "PUSH",
											"source": 2,
											"value": "34A51D0F"
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2420,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2420,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1B30AB7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4380,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4364,
											"end": 4381,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2525,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4391,
											"end": 4436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2461,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSHLIB",
											"source": 2,
											"value": "contracts/common/GenesUtil.sol:GenesUtil"
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2501,
											"name": "PUSH",
											"source": 2,
											"value": "E1B30AB7"
										},
										{
											"begin": 2483,
											"end": 2501,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2483,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2483,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2526,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "PUSHLIB",
											"source": 2,
											"value": "contracts/common/GenesUtil.sol:GenesUtil"
										},
										{
											"begin": 2548,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "55D6ED43"
										},
										{
											"begin": 2568,
											"end": 2573,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2588,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2595,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2603,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2603,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2603,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4380,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4364,
											"end": 4381,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4381,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4391,
											"end": 4436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2548,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2548,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2540,
											"end": 2604,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2540,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 2615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 2615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 2615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1582,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1582,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1567,
											"end": 1582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1567,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1582,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1567,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1468,
											"end": 2615,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 2615,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1468,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DE97F4F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5354,
											"end": 5379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5437,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5415,
											"end": 5438,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5438,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5388,
											"end": 5439,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2668,
											"name": "PUSHLIB",
											"source": 2,
											"value": "contracts/common/GenesUtil.sol:GenesUtil"
										},
										{
											"begin": 2659,
											"end": 2668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2682,
											"name": "PUSH",
											"source": 2,
											"value": "8DE97F4F"
										},
										{
											"begin": 2659,
											"end": 2682,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5327,
											"end": 5345,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5327,
											"end": 5345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2659,
											"end": 2701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B52B6659"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3756,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3810,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2651,
											"end": 2701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2752,
											"name": "PUSHLIB",
											"source": 2,
											"value": "contracts/common/GenesUtil.sol:GenesUtil"
										},
										{
											"begin": 2743,
											"end": 2752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "B52B6659"
										},
										{
											"begin": 2743,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3722,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3704,
											"end": 3722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2743,
											"end": 2773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2773,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 681,
											"end": 2803,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 681,
											"end": 2803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5930,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 5933,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5969,
											"end": 5971,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 5972,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6043,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6052,
											"end": 6088,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6105,
											"end": 6124,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5728,
											"end": 6130,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6319,
											"end": 6340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6319,
											"end": 6340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6319,
											"end": 6340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6374,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6356,
											"end": 6374,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6449,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6395,
											"end": 6413,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6395,
											"end": 6413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6395,
											"end": 6413,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6388,
											"end": 6450,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6135,
											"end": 6491,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5456,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5178,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5362,
											"end": 5365,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5348,
											"end": 5358,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5348,
											"end": 5365,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5344,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5344,
											"end": 5400,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5388,
											"end": 5389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5381,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 5381,
											"end": 5389,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5344,
											"end": 5400,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5344,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5446,
											"end": 5449,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5438,
											"end": 5442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5418,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5431,
											"end": 5434,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5418,
											"end": 5428,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5418,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5418,
											"end": 5434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5418,
											"end": 5434,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5418,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5417,
											"end": 5442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5417,
											"end": 5442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5442,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5417,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5416,
											"end": 5449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5456,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 5178,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5456,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5456,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4665,
											"end": 5005,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4665,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4809,
											"end": 4822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 4931,
											"end": 4940,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4928,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 4919,
											"end": 4940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4940,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 4919,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6946,
											"end": 6958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6946,
											"end": 6958,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6946,
											"end": 6958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6939,
											"end": 6967,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6939,
											"end": 6967,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6939,
											"end": 6967,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6983,
											"end": 6995,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6983,
											"end": 6995,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4901,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4902,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4902,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4902,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4902,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4902,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4902,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4854,
											"end": 4903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4903,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 4854,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 4854,
											"end": 4941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4854,
											"end": 4941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4854,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 4854,
											"end": 4941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4854,
											"end": 4941,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 4854,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4834,
											"end": 4941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4959,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 4834,
											"end": 4941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4959,
											"end": 4968,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4959,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4959,
											"end": 4976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 837,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 589,
											"end": 837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 657,
											"end": 663,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 718,
											"end": 720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 715,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 697,
											"end": 704,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 693,
											"end": 716,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 689,
											"end": 721,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 686,
											"end": 738,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 686,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 686,
											"end": 738,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 734,
											"end": 735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 724,
											"end": 736,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 686,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 686,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 757,
											"end": 780,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 780,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 757,
											"end": 780,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 827,
											"end": 829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 812,
											"end": 830,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 812,
											"end": 830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 799,
											"end": 831,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 799,
											"end": 831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 589,
											"end": 837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 842,
											"end": 1128,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 842,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 901,
											"end": 907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 956,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 951,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 933,
											"end": 940,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 929,
											"end": 952,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 925,
											"end": 957,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 922,
											"end": 974,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 922,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 922,
											"end": 974,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 970,
											"end": 971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 960,
											"end": 972,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 922,
											"end": 974,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 922,
											"end": 974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1019,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1019,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1079,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1038,
											"end": 1080,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1038,
											"end": 1080,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1028,
											"end": 1098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1095,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1092,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1084,
											"end": 1096,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1098,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1028,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1122,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 842,
											"end": 1128,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 842,
											"end": 1128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2125,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1998,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2069,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2054,
											"end": 2057,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2050,
											"end": 2070,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2094,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2114,
											"end": 2118,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2111,
											"end": 2112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2265,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2130,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2207,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2190,
											"end": 2207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2187,
											"end": 2230,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2210,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2257,
											"end": 2258,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2246,
											"end": 2259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2246,
											"end": 2259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2740,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2460,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2584,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2579,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2568,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2580,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2553,
											"end": 2585,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2602,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2550,
											"end": 2602,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2600,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2602,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2550,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2640,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2678,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2691,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 2667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2692,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2649,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2649,
											"end": 2710,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2696,
											"end": 2708,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2917,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2745,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2822,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2852,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2864,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2864,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2838,
											"end": 2865,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2838,
											"end": 2865,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2874,
											"end": 2911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2891,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2922,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2978,
											"end": 2981,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2971,
											"end": 2972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3018,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3011,
											"end": 3012,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3019,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3038,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3043,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3245,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3054,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3153,
											"end": 3154,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3159,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3178,
											"end": 3181,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 3168,
											"end": 3205,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3185,
											"end": 3203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3245,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3054,
											"end": 3245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3418,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3250,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3363,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3388,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3392,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3392,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3392,
											"end": 3410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3423,
											"end": 3548,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3423,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3497,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3497,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3519,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3519,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3542,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3506,
											"end": 3542,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3522,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3522,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3522,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 4094,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3821,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3921,
											"end": 3928,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3917,
											"end": 3940,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3910,
											"end": 3962,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3910,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3910,
											"end": 3962,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 3959,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3956,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3960,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3910,
											"end": 3962,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3910,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3990,
											"end": 3999,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4000,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4033,
											"end": 4038,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4045,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4022,
											"end": 4027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4019,
											"end": 4046,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 4009,
											"end": 4064,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4060,
											"end": 4061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4058,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4050,
											"end": 4062,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4631,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4447,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4556,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 4568,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4541,
											"end": 4573,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4587,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4583,
											"end": 4584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4576,
											"end": 4588,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4538,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4609,
											"end": 4625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4609,
											"end": 4625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4447,
											"end": 4631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5169,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4994,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5075,
											"end": 5079,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5068,
											"end": 5073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5064,
											"end": 5080,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5104,
											"end": 5108,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5095,
											"end": 5102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5092,
											"end": 5109,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5089,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 5089,
											"end": 5132,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5112,
											"end": 5130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5162,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5148,
											"end": 5163,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5148,
											"end": 5163,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5169,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 5169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6624,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6496,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6563,
											"end": 6572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6563,
											"end": 6572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6563,
											"end": 6572,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6584,
											"end": 6595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6584,
											"end": 6595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6584,
											"end": 6595,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6581,
											"end": 6618,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6581,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 6581,
											"end": 6618,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 6598,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 6598,
											"end": 6616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6629,
											"end": 6749,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6629,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6695,
											"end": 6696,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6685,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6685,
											"end": 6720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6700,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6700,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 6700,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6700,
											"end": 6718,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6700,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6734,
											"end": 6743,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6734,
											"end": 6743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6629,
											"end": 6749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7118,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 7006,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7039,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7065,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7054,
											"end": 7089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7069,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 7069,
											"end": 7087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7087,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7069,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7103,
											"end": 7112,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 7103,
											"end": 7112,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/breedings/Breeding.sol",
								"contracts/common/GenesUtil.sol",
								"contracts/common/IBreeding.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"breading(uint256,uint256)": "e4a13fb7",
							"getGlobalSeed()": "878cf3a6",
							"getMaxArcane()": "615ebe28",
							"getMaxId()": "d477a712",
							"getMinArcane()": "32099cc4",
							"getMinId()": "eb4b0e51",
							"getRandomPercent()": "e238b8c6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setGlobalSeed(uint256)": "02aff378",
							"setMaxArcane(uint256)": "1bb39f84",
							"setMaxId(uint256)": "16bd8646",
							"setMinArcane(uint256)": "91b66725",
							"setMinId(uint256)": "e2e3a0db",
							"setRandomPercent(uint256)": "054fee6a",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genes1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"genes2\",\"type\":\"uint256\"}],\"name\":\"breading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalSeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxArcane\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinArcane\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandomPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setGlobalSeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMaxArcane\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMaxId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMinArcane\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMinId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setRandomPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"breading(uint256,uint256)\":{\"details\":\"given genes of token 1 & 2, return a genetic combination - may have a random factor\",\"params\":{\"genes1\":\"genes of mom\",\"genes2\":\"genes of dad\"},\"returns\":{\"_0\":\"the genes that are supposed to be passed down the child\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/breedings/Breeding.sol\":\"Breading\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/breedings/Breeding.sol\":{\"keccak256\":\"0x9d7ba50fad0beebe72ca3552907a026a85894bf6fb2bdda9a99a41ba74d9b60c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84c40733b102acf2015206c539700e7100ea8ae2f44612a225090210d2ad2b7f\",\"dweb:/ipfs/QmQwCWsBdnmnjymzw7NLffSVawwvxpxRkmfzPjQoJQiPAE\"]},\"contracts/common/GenesUtil.sol\":{\"keccak256\":\"0x374618d733e69d4fc8b13fb7feffb00bc4604d773b34fbdf7ca7ec9fc09d872a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0d2d33ca84b4518d01bf8fe146716cb96e518e266f2b7d31677e862203e91c\",\"dweb:/ipfs/Qmdvc2MBqwVgvLk5sR3yAURe4ovdL9cpuz1Q6rACWReGZv\"]},\"contracts/common/IBreeding.sol\":{\"keccak256\":\"0xf2b910b50f2c3808d42738834bc0ce2eaabfa6fe925f6eb5e624d09e4d7d5a20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3146168b8b9ac4325956b92acc534cd0ce02c010dbf7366af8dea4bc9f9b0a2\",\"dweb:/ipfs/QmQ8LWt9HAFthPwyW1fRqn1bsUeN8b5hVs7WnNuH3Uo1p5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/breedings/Breeding.sol:Breading",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 149,
								"contract": "contracts/breedings/Breeding.sol:Breading",
								"label": "_globalSeed",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 152,
								"contract": "contracts/breedings/Breeding.sol:Breading",
								"label": "_randomPercent",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 155,
								"contract": "contracts/breedings/Breeding.sol:Breading",
								"label": "_minArcane",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 158,
								"contract": "contracts/breedings/Breeding.sol:Breading",
								"label": "_maxArcane",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 161,
								"contract": "contracts/breedings/Breeding.sol:Breading",
								"label": "_minId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 164,
								"contract": "contracts/breedings/Breeding.sol:Breading",
								"label": "_maxId",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/common/GenesUtil.sol": {
				"GenesUtil": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "genes",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "partId",
									"type": "uint8"
								}
							],
							"name": "getArcane",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "genes",
									"type": "uint256"
								}
							],
							"name": "getCharges",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "genes",
									"type": "uint256"
								}
							],
							"name": "getGeneration",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "genes",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "partId",
									"type": "uint8"
								}
							],
							"name": "getId",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "genes",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "partId",
									"type": "uint8"
								}
							],
							"name": "getLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "genes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "partId",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "arcane",
									"type": "uint8"
								}
							],
							"name": "setArcane",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "genes",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "charges",
									"type": "uint8"
								}
							],
							"name": "setCharges",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "genes",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "generation",
									"type": "uint32"
								}
							],
							"name": "setGeneration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "genes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "partId",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								}
							],
							"name": "setId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "genes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "partId",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "level",
									"type": "uint8"
								}
							],
							"name": "setLevel",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/common/GenesUtil.sol\":78:2657  library GenesUtil {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/common/GenesUtil.sol\":78:2657  library GenesUtil {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5d2029f1\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x5d2029f1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8de97f4f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa5858693\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb52b6659\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe1b30ab7\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x0317f435\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3499a7ea\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x34a51d0f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x55d6ed43\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x56e3df97\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/common/GenesUtil.sol\":261:417  function getCharges(uint256 genes) public pure returns (uint8) {... */\n    tag_2:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"contracts/common/GenesUtil.sol\":384:390  31 * 8 */\n      0xf8\n        /* \"contracts/common/GenesUtil.sol\":374:391  genes >> (31 * 8) */\n      shr\n      swap1\n        /* \"contracts/common/GenesUtil.sol\":261:417  function getCharges(uint256 genes) public pure returns (uint8) {... */\n      jump\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":379:383   */\n      0xff\n        /* \"#utility.yul\":367:384   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":349:385   */\n      dup2\n      mstore\n        /* \"#utility.yul\":337:339   */\n      0x20\n        /* \"#utility.yul\":322:340   */\n      add\n        /* \"contracts/common/GenesUtil.sol\":261:417  function getCharges(uint256 genes) public pure returns (uint8) {... */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/common/GenesUtil.sol\":1395:1619  function getLevel(uint256 genes, uint8 partId) public pure returns (uint8) {... */\n    tag_3:\n      tag_13\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n        /* \"contracts/common/GenesUtil.sol\":1017:1389  function setId(... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1289:1314   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1277:1279   */\n      0x20\n        /* \"#utility.yul\":1262:1280   */\n      add\n        /* \"contracts/common/GenesUtil.sol\":1017:1389  function setId(... */\n      tag_17\n        /* \"#utility.yul\":1135:1320   */\n      jump\n        /* \"contracts/common/GenesUtil.sol\":2271:2655  function setArcane(... */\n    tag_5:\n      tag_24\n      tag_31\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"contracts/common/GenesUtil.sol\":102:255  function getGeneration(uint256 genes) public pure returns (uint32) {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_35:\n        /* \"contracts/common/GenesUtil.sol\":227:237  0xFFFFFFFF */\n      0xffffffff\n        /* \"contracts/common/GenesUtil.sol\":219:237  genes & 0xFFFFFFFF */\n      and\n      swap1\n        /* \"contracts/common/GenesUtil.sol\":102:255  function getGeneration(uint256 genes) public pure returns (uint32) {... */\n      jump\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":1507:1517   */\n      0xffffffff\n        /* \"#utility.yul\":1495:1518   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1477:1519   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1465:1467   */\n      0x20\n        /* \"#utility.yul\":1450:1468   */\n      add\n        /* \"contracts/common/GenesUtil.sol\":102:255  function getGeneration(uint256 genes) public pure returns (uint32) {... */\n      tag_17\n        /* \"#utility.yul\":1325:1525   */\n      jump\n        /* \"contracts/common/GenesUtil.sol\":790:1011  function getId(uint256 genes, uint8 partId) public pure returns (uint8) {... */\n    tag_7:\n      tag_13\n      tag_40\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"contracts/common/GenesUtil.sol\":423:594  function setGeneration(uint256 genes, uint32 generation)... */\n    tag_8:\n      tag_24\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"contracts/common/GenesUtil.sol\":555:587  ((genes >> 4) << 4) | generation */\n      0xffffffff\n      and\n      not(0x0f)\n        /* \"contracts/common/GenesUtil.sol\":556:573  (genes >> 4) << 4 */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"contracts/common/GenesUtil.sol\":555:587  ((genes >> 4) << 4) | generation */\n      or\n      swap1\n        /* \"contracts/common/GenesUtil.sol\":423:594  function setGeneration(uint256 genes, uint32 generation)... */\n      jump\n        /* \"contracts/common/GenesUtil.sol\":2012:2265  function getArcane(uint256 genes, uint8 partId)... */\n    tag_9:\n      tag_13\n      tag_49\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"contracts/common/GenesUtil.sol\":600:784  function setCharges(uint256 genes, uint8 charges)... */\n    tag_10:\n      tag_24\n      tag_53\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_53:\n        /* \"contracts/common/GenesUtil.sol\":769:775  31 * 8 */\n      0xf8\n        /* \"contracts/common/GenesUtil.sol\":748:776  uint256(charges) << (31 * 8) */\n      shl\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      sub(shl(0xf8, 0x01), 0x01)\n        /* \"contracts/common/GenesUtil.sol\":726:743  (genes << 8) >> 8 */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"contracts/common/GenesUtil.sol\":725:777  ((genes << 8) >> 8) | (uint256(charges) << (31 * 8)) */\n      or\n      swap1\n        /* \"contracts/common/GenesUtil.sol\":600:784  function setCharges(uint256 genes, uint8 charges)... */\n      jump\n        /* \"contracts/common/GenesUtil.sol\":1625:2006  function setLevel(... */\n    tag_11:\n      tag_24\n      tag_57\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"contracts/common/GenesUtil.sol\":1395:1619  function getLevel(uint256 genes, uint8 partId) public pure returns (uint8) {... */\n    tag_22:\n        /* \"contracts/common/GenesUtil.sol\":1463:1468  uint8 */\n      0x00\n        /* \"contracts/common/GenesUtil.sol\":1501:1502  4 */\n      0x04\n        /* \"contracts/common/GenesUtil.sol\":1463:1468  uint8 */\n      dup2\n        /* \"contracts/common/GenesUtil.sol\":1528:1538  partId * 3 */\n      tag_62\n        /* \"contracts/common/GenesUtil.sol\":1528:1534  partId */\n      dup5\n        /* \"contracts/common/GenesUtil.sol\":1537:1538  3 */\n      0x03\n        /* \"contracts/common/GenesUtil.sol\":1528:1538  partId * 3 */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/common/GenesUtil.sol\":1512:1538  uint256 index = partId * 3 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/common/GenesUtil.sol\":1575:1593  startIndex + index */\n      tag_64\n        /* \"contracts/common/GenesUtil.sol\":1512:1538  uint256 index = partId * 3 */\n      dup2\n        /* \"contracts/common/GenesUtil.sol\":1575:1585  startIndex */\n      dup4\n        /* \"contracts/common/GenesUtil.sol\":1575:1593  startIndex + index */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contracts/common/GenesUtil.sol\":1575:1597  startIndex + index + 1 */\n      tag_66\n      swap1\n        /* \"contracts/common/GenesUtil.sol\":1596:1597  1 */\n      0x01\n        /* \"contracts/common/GenesUtil.sol\":1575:1597  startIndex + index + 1 */\n      tag_65\n      jump\t// in\n    tag_66:\n        /* \"contracts/common/GenesUtil.sol\":1574:1602  (startIndex + index + 1) * 8 */\n      tag_67\n      swap1\n        /* \"contracts/common/GenesUtil.sol\":1601:1602  8 */\n      0x08\n        /* \"contracts/common/GenesUtil.sol\":1574:1602  (startIndex + index + 1) * 8 */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"contracts/common/GenesUtil.sol\":1564:1569  genes */\n      dup6\n        /* \"contracts/common/GenesUtil.sol\":1564:1603  genes >> ((startIndex + index + 1) * 8) */\n      swap1\n      shr\n        /* \"contracts/common/GenesUtil.sol\":1607:1611  0xFF */\n      0xff\n        /* \"contracts/common/GenesUtil.sol\":1563:1611  (genes >> ((startIndex + index + 1) * 8)) & 0xFF */\n      and\n        /* \"contracts/common/GenesUtil.sol\":1548:1612  return (uint8)((genes >> ((startIndex + index + 1) * 8)) & 0xFF) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/common/GenesUtil.sol\":1395:1619  function getLevel(uint256 genes, uint8 partId) public pure returns (uint8) {... */\n    tag_61:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/common/GenesUtil.sol\":1017:1389  function setId(... */\n    tag_27:\n        /* \"contracts/common/GenesUtil.sol\":1124:1131  uint256 */\n      0x00\n        /* \"contracts/common/GenesUtil.sol\":1164:1165  4 */\n      0x04\n        /* \"contracts/common/GenesUtil.sol\":1124:1131  uint256 */\n      dup2\n        /* \"contracts/common/GenesUtil.sol\":1191:1201  partId * 3 */\n      tag_70\n        /* \"contracts/common/GenesUtil.sol\":1191:1197  partId */\n      dup6\n        /* \"contracts/common/GenesUtil.sol\":1200:1201  3 */\n      0x03\n        /* \"contracts/common/GenesUtil.sol\":1191:1201  partId * 3 */\n      tag_68\n      jump\t// in\n    tag_70:\n        /* \"contracts/common/GenesUtil.sol\":1175:1201  uint256 index = partId * 3 */\n      swap1\n      pop\n        /* \"contracts/common/GenesUtil.sol\":1211:1224  uint256 shift */\n      0x00\n        /* \"contracts/common/GenesUtil.sol\":1228:1246  startIndex + index */\n      tag_71\n        /* \"contracts/common/GenesUtil.sol\":1175:1201  uint256 index = partId * 3 */\n      dup3\n        /* \"contracts/common/GenesUtil.sol\":1228:1238  startIndex */\n      dup5\n        /* \"contracts/common/GenesUtil.sol\":1228:1246  startIndex + index */\n      tag_65\n      jump\t// in\n    tag_71:\n        /* \"contracts/common/GenesUtil.sol\":1228:1250  startIndex + index + 0 */\n      tag_72\n      swap1\n        /* \"contracts/common/GenesUtil.sol\":1249:1250  0 */\n      0x00\n        /* \"contracts/common/GenesUtil.sol\":1228:1250  startIndex + index + 0 */\n      tag_65\n      jump\t// in\n    tag_72:\n        /* \"contracts/common/GenesUtil.sol\":1227:1255  (startIndex + index + 0) * 8 */\n      tag_73\n      swap1\n        /* \"contracts/common/GenesUtil.sol\":1254:1255  8 */\n      0x08\n        /* \"contracts/common/GenesUtil.sol\":1227:1255  (startIndex + index + 0) * 8 */\n      tag_68\n      jump\t// in\n    tag_73:\n        /* \"contracts/common/GenesUtil.sol\":1321:1325  0xFF */\n      0xff\n        /* \"contracts/common/GenesUtil.sol\":1361:1372  uint256(id) */\n      swap6\n      dup7\n      and\n        /* \"contracts/common/GenesUtil.sol\":1361:1381  uint256(id) << shift */\n      dup2\n      shl\n        /* \"contracts/common/GenesUtil.sol\":1321:1334  0xFF << shift */\n      swap6\n      swap1\n      shl\n        /* \"contracts/common/GenesUtil.sol\":1319:1335  ~(0xFF << shift) */\n      not\n        /* \"contracts/common/GenesUtil.sol\":1311:1335  genes & ~(0xFF << shift) */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"contracts/common/GenesUtil.sol\":1352:1382  genes | (uint256(id) << shift) */\n      swap4\n      swap1\n      swap4\n      or\n      swap6\n        /* \"contracts/common/GenesUtil.sol\":1017:1389  function setId(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/common/GenesUtil.sol\":2271:2655  function setArcane(... */\n    tag_32:\n        /* \"contracts/common/GenesUtil.sol\":2386:2393  uint256 */\n      0x00\n        /* \"contracts/common/GenesUtil.sol\":2426:2427  4 */\n      0x04\n        /* \"contracts/common/GenesUtil.sol\":2386:2393  uint256 */\n      dup2\n        /* \"contracts/common/GenesUtil.sol\":2453:2463  partId * 3 */\n      tag_75\n        /* \"contracts/common/GenesUtil.sol\":2453:2459  partId */\n      dup6\n        /* \"contracts/common/GenesUtil.sol\":2462:2463  3 */\n      0x03\n        /* \"contracts/common/GenesUtil.sol\":2453:2463  partId * 3 */\n      tag_68\n      jump\t// in\n    tag_75:\n        /* \"contracts/common/GenesUtil.sol\":2437:2463  uint256 index = partId * 3 */\n      swap1\n      pop\n        /* \"contracts/common/GenesUtil.sol\":2473:2486  uint256 shift */\n      0x00\n        /* \"contracts/common/GenesUtil.sol\":2490:2508  startIndex + index */\n      tag_76\n        /* \"contracts/common/GenesUtil.sol\":2437:2463  uint256 index = partId * 3 */\n      dup3\n        /* \"contracts/common/GenesUtil.sol\":2490:2500  startIndex */\n      dup5\n        /* \"contracts/common/GenesUtil.sol\":2490:2508  startIndex + index */\n      tag_65\n      jump\t// in\n    tag_76:\n        /* \"contracts/common/GenesUtil.sol\":2490:2512  startIndex + index + 2 */\n      tag_72\n      swap1\n        /* \"contracts/common/GenesUtil.sol\":2511:2512  2 */\n      0x02\n        /* \"contracts/common/GenesUtil.sol\":2490:2512  startIndex + index + 2 */\n      tag_65\n      jump\t// in\n        /* \"contracts/common/GenesUtil.sol\":790:1011  function getId(uint256 genes, uint8 partId) public pure returns (uint8) {... */\n    tag_41:\n        /* \"contracts/common/GenesUtil.sol\":855:860  uint8 */\n      0x00\n        /* \"contracts/common/GenesUtil.sol\":893:894  4 */\n      0x04\n        /* \"contracts/common/GenesUtil.sol\":855:860  uint8 */\n      dup2\n        /* \"contracts/common/GenesUtil.sol\":920:930  partId * 3 */\n      tag_81\n        /* \"contracts/common/GenesUtil.sol\":920:926  partId */\n      dup5\n        /* \"contracts/common/GenesUtil.sol\":929:930  3 */\n      0x03\n        /* \"contracts/common/GenesUtil.sol\":920:930  partId * 3 */\n      tag_63\n      jump\t// in\n    tag_81:\n        /* \"contracts/common/GenesUtil.sol\":904:930  uint256 index = partId * 3 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/common/GenesUtil.sol\":967:985  startIndex + index */\n      tag_82\n        /* \"contracts/common/GenesUtil.sol\":904:930  uint256 index = partId * 3 */\n      dup2\n        /* \"contracts/common/GenesUtil.sol\":967:977  startIndex */\n      dup4\n        /* \"contracts/common/GenesUtil.sol\":967:985  startIndex + index */\n      tag_65\n      jump\t// in\n    tag_82:\n        /* \"contracts/common/GenesUtil.sol\":967:989  startIndex + index + 0 */\n      tag_66\n      swap1\n        /* \"contracts/common/GenesUtil.sol\":988:989  0 */\n      0x00\n        /* \"contracts/common/GenesUtil.sol\":967:989  startIndex + index + 0 */\n      tag_65\n      jump\t// in\n        /* \"contracts/common/GenesUtil.sol\":2012:2265  function getArcane(uint256 genes, uint8 partId)... */\n    tag_50:\n        /* \"contracts/common/GenesUtil.sol\":2105:2110  uint8 */\n      0x00\n        /* \"contracts/common/GenesUtil.sol\":2147:2148  4 */\n      0x04\n        /* \"contracts/common/GenesUtil.sol\":2105:2110  uint8 */\n      dup2\n        /* \"contracts/common/GenesUtil.sol\":2174:2184  partId * 3 */\n      tag_87\n        /* \"contracts/common/GenesUtil.sol\":2174:2180  partId */\n      dup5\n        /* \"contracts/common/GenesUtil.sol\":2183:2184  3 */\n      0x03\n        /* \"contracts/common/GenesUtil.sol\":2174:2184  partId * 3 */\n      tag_63\n      jump\t// in\n    tag_87:\n        /* \"contracts/common/GenesUtil.sol\":2158:2184  uint256 index = partId * 3 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/common/GenesUtil.sol\":2221:2239  startIndex + index */\n      tag_88\n        /* \"contracts/common/GenesUtil.sol\":2158:2184  uint256 index = partId * 3 */\n      dup2\n        /* \"contracts/common/GenesUtil.sol\":2221:2231  startIndex */\n      dup4\n        /* \"contracts/common/GenesUtil.sol\":2221:2239  startIndex + index */\n      tag_65\n      jump\t// in\n    tag_88:\n        /* \"contracts/common/GenesUtil.sol\":2221:2243  startIndex + index + 2 */\n      tag_66\n      swap1\n        /* \"contracts/common/GenesUtil.sol\":2242:2243  2 */\n      0x02\n        /* \"contracts/common/GenesUtil.sol\":2221:2243  startIndex + index + 2 */\n      tag_65\n      jump\t// in\n        /* \"contracts/common/GenesUtil.sol\":1625:2006  function setLevel(... */\n    tag_58:\n        /* \"contracts/common/GenesUtil.sol\":1738:1745  uint256 */\n      0x00\n        /* \"contracts/common/GenesUtil.sol\":1778:1779  4 */\n      0x04\n        /* \"contracts/common/GenesUtil.sol\":1738:1745  uint256 */\n      dup2\n        /* \"contracts/common/GenesUtil.sol\":1805:1815  partId * 3 */\n      tag_93\n        /* \"contracts/common/GenesUtil.sol\":1805:1811  partId */\n      dup6\n        /* \"contracts/common/GenesUtil.sol\":1814:1815  3 */\n      0x03\n        /* \"contracts/common/GenesUtil.sol\":1805:1815  partId * 3 */\n      tag_68\n      jump\t// in\n    tag_93:\n        /* \"contracts/common/GenesUtil.sol\":1789:1815  uint256 index = partId * 3 */\n      swap1\n      pop\n        /* \"contracts/common/GenesUtil.sol\":1825:1838  uint256 shift */\n      0x00\n        /* \"contracts/common/GenesUtil.sol\":1842:1860  startIndex + index */\n      tag_94\n        /* \"contracts/common/GenesUtil.sol\":1789:1815  uint256 index = partId * 3 */\n      dup3\n        /* \"contracts/common/GenesUtil.sol\":1842:1852  startIndex */\n      dup5\n        /* \"contracts/common/GenesUtil.sol\":1842:1860  startIndex + index */\n      tag_65\n      jump\t// in\n    tag_94:\n        /* \"contracts/common/GenesUtil.sol\":1842:1864  startIndex + index + 1 */\n      tag_72\n      swap1\n        /* \"contracts/common/GenesUtil.sol\":1863:1864  1 */\n      0x01\n        /* \"contracts/common/GenesUtil.sol\":1842:1864  startIndex + index + 1 */\n      tag_65\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_15:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_101:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":396:552   */\n    tag_97:\n        /* \"#utility.yul\":462:482   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":522:526   */\n      0xff\n        /* \"#utility.yul\":511:527   */\n      dup2\n      and\n        /* \"#utility.yul\":501:528   */\n      dup2\n      eq\n        /* \"#utility.yul\":491:546   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":542:543   */\n      0x00\n        /* \"#utility.yul\":539:540   */\n      dup1\n        /* \"#utility.yul\":532:544   */\n      revert\n        /* \"#utility.yul\":491:546   */\n    tag_104:\n        /* \"#utility.yul\":396:552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":557:807   */\n    tag_21:\n        /* \"#utility.yul\":623:629   */\n      0x00\n        /* \"#utility.yul\":631:637   */\n      dup1\n        /* \"#utility.yul\":684:686   */\n      0x40\n        /* \"#utility.yul\":672:681   */\n      dup4\n        /* \"#utility.yul\":663:670   */\n      dup6\n        /* \"#utility.yul\":659:682   */\n      sub\n        /* \"#utility.yul\":655:687   */\n      slt\n        /* \"#utility.yul\":652:704   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":700:701   */\n      0x00\n        /* \"#utility.yul\":697:698   */\n      dup1\n        /* \"#utility.yul\":690:702   */\n      revert\n        /* \"#utility.yul\":652:704   */\n    tag_106:\n        /* \"#utility.yul\":736:745   */\n      dup3\n        /* \"#utility.yul\":723:746   */\n      calldataload\n        /* \"#utility.yul\":713:746   */\n      swap2\n      pop\n        /* \"#utility.yul\":765:801   */\n      tag_107\n        /* \"#utility.yul\":797:799   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup5\n        /* \"#utility.yul\":782:800   */\n      add\n        /* \"#utility.yul\":765:801   */\n      tag_97\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":755:801   */\n      swap1\n      pop\n        /* \"#utility.yul\":557:807   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":812:1130   */\n    tag_26:\n        /* \"#utility.yul\":887:893   */\n      0x00\n        /* \"#utility.yul\":895:901   */\n      dup1\n        /* \"#utility.yul\":903:909   */\n      0x00\n        /* \"#utility.yul\":956:958   */\n      0x60\n        /* \"#utility.yul\":944:953   */\n      dup5\n        /* \"#utility.yul\":935:942   */\n      dup7\n        /* \"#utility.yul\":931:954   */\n      sub\n        /* \"#utility.yul\":927:959   */\n      slt\n        /* \"#utility.yul\":924:976   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":972:973   */\n      0x00\n        /* \"#utility.yul\":969:970   */\n      dup1\n        /* \"#utility.yul\":962:974   */\n      revert\n        /* \"#utility.yul\":924:976   */\n    tag_109:\n        /* \"#utility.yul\":1008:1017   */\n      dup4\n        /* \"#utility.yul\":995:1018   */\n      calldataload\n        /* \"#utility.yul\":985:1018   */\n      swap3\n      pop\n        /* \"#utility.yul\":1065:1067   */\n      0x20\n        /* \"#utility.yul\":1054:1063   */\n      dup5\n        /* \"#utility.yul\":1050:1068   */\n      add\n        /* \"#utility.yul\":1037:1069   */\n      calldataload\n        /* \"#utility.yul\":1027:1069   */\n      swap2\n      pop\n        /* \"#utility.yul\":1088:1124   */\n      tag_110\n        /* \"#utility.yul\":1120:1122   */\n      0x40\n        /* \"#utility.yul\":1109:1118   */\n      dup6\n        /* \"#utility.yul\":1105:1123   */\n      add\n        /* \"#utility.yul\":1088:1124   */\n      tag_97\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1078:1124   */\n      swap1\n      pop\n        /* \"#utility.yul\":812:1130   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1530:1874   */\n    tag_45:\n        /* \"#utility.yul\":1597:1603   */\n      0x00\n        /* \"#utility.yul\":1605:1611   */\n      dup1\n        /* \"#utility.yul\":1658:1660   */\n      0x40\n        /* \"#utility.yul\":1646:1655   */\n      dup4\n        /* \"#utility.yul\":1637:1644   */\n      dup6\n        /* \"#utility.yul\":1633:1656   */\n      sub\n        /* \"#utility.yul\":1629:1661   */\n      slt\n        /* \"#utility.yul\":1626:1678   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":1674:1675   */\n      0x00\n        /* \"#utility.yul\":1671:1672   */\n      dup1\n        /* \"#utility.yul\":1664:1676   */\n      revert\n        /* \"#utility.yul\":1626:1678   */\n    tag_114:\n        /* \"#utility.yul\":1710:1719   */\n      dup3\n        /* \"#utility.yul\":1697:1720   */\n      calldataload\n        /* \"#utility.yul\":1687:1720   */\n      swap2\n      pop\n        /* \"#utility.yul\":1770:1772   */\n      0x20\n        /* \"#utility.yul\":1759:1768   */\n      dup4\n        /* \"#utility.yul\":1755:1773   */\n      add\n        /* \"#utility.yul\":1742:1774   */\n      calldataload\n        /* \"#utility.yul\":1814:1824   */\n      0xffffffff\n        /* \"#utility.yul\":1807:1812   */\n      dup2\n        /* \"#utility.yul\":1803:1825   */\n      and\n        /* \"#utility.yul\":1796:1801   */\n      dup2\n        /* \"#utility.yul\":1793:1826   */\n      eq\n        /* \"#utility.yul\":1783:1844   */\n      tag_115\n      jumpi\n        /* \"#utility.yul\":1840:1841   */\n      0x00\n        /* \"#utility.yul\":1837:1838   */\n      dup1\n        /* \"#utility.yul\":1830:1842   */\n      revert\n        /* \"#utility.yul\":1783:1844   */\n    tag_115:\n        /* \"#utility.yul\":1863:1868   */\n      dup1\n        /* \"#utility.yul\":1853:1868   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1530:1874   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1879:2006   */\n    tag_98:\n        /* \"#utility.yul\":1940:1950   */\n      0x4e487b71\n        /* \"#utility.yul\":1935:1938   */\n      0xe0\n        /* \"#utility.yul\":1931:1951   */\n      shl\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1921:1952   */\n      mstore\n        /* \"#utility.yul\":1971:1975   */\n      0x11\n        /* \"#utility.yul\":1968:1969   */\n      0x04\n        /* \"#utility.yul\":1961:1976   */\n      mstore\n        /* \"#utility.yul\":1995:1999   */\n      0x24\n        /* \"#utility.yul\":1992:1993   */\n      0x00\n        /* \"#utility.yul\":1985:2000   */\n      revert\n        /* \"#utility.yul\":2011:2236   */\n    tag_63:\n        /* \"#utility.yul\":2115:2119   */\n      0xff\n        /* \"#utility.yul\":2094:2106   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":2108:2120   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":2090:2121   */\n      mul\n        /* \"#utility.yul\":2141:2163   */\n      swap1\n      dup2\n      and\n      swap1\n        /* \"#utility.yul\":2182:2206   */\n      dup2\n      dup2\n      eq\n        /* \"#utility.yul\":2172:2230   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":2210:2228   */\n      tag_119\n      tag_98\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2172:2230   */\n      pop\n        /* \"#utility.yul\":2011:2236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2241:2366   */\n    tag_65:\n        /* \"#utility.yul\":2306:2315   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2327:2337   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2324:2360   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":2340:2358   */\n      tag_61\n      tag_98\n      jump\t// in\n        /* \"#utility.yul\":2371:2539   */\n    tag_68:\n        /* \"#utility.yul\":2444:2453   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2475:2484   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2492:2507   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2486:2508   */\n      dup5\n      eq\n        /* \"#utility.yul\":2472:2509   */\n      or\n        /* \"#utility.yul\":2462:2533   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":2513:2531   */\n      tag_61\n      tag_98\n      jump\t// in\n\n    auxdata: 0xa264697066735822122063dae4464fb5b6fad35672f7557d6da45024f06d21325cbd39a34847bb0d8ea364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "61046c61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100a85760003560e01c80635d2029f1116100705780635d2029f11461014b5780638de97f4f1461015e578063a58586931461017d578063b52b665914610190578063e1b30ab7146101bb57600080fd5b80630317f435146100ad5780633499a7ea146100d857806334a51d0f146100eb57806355d6ed431461010c57806356e3df971461011f575b600080fd5b6100c16100bb36600461030a565b60f81c90565b60405160ff90911681526020015b60405180910390f35b6100c16100e6366004610339565b6101ce565b6100fe6100f9366004610365565b610214565b6040519081526020016100cf565b6100fe61011a366004610365565b610264565b61013661012d36600461030a565b63ffffffff1690565b60405163ffffffff90911681526020016100cf565b6100c1610159366004610339565b61028d565b6100fe61016c36600461039a565b63ffffffff16600f19919091161790565b6100c161018b366004610339565b6102b7565b6100fe61019e366004610339565b60f81b6001600160f81b0319166001600160f81b03919091161790565b6100fe6101c9366004610365565b6102e1565b60006004816101de8460036103e9565b60ff1690506101ed818361040c565b6101f890600161040c565b61020390600861041f565b85901c60ff16925050505b92915050565b600060048161022485600361041f565b90506000610232828461040c565b61023d90600061040c565b61024890600861041f565b60ff958616811b95901b19969096169390931795945050505050565b600060048161027485600361041f565b90506000610282828461040c565b61023d90600261040c565b600060048161029d8460036103e9565b60ff1690506102ac818361040c565b6101f890600061040c565b60006004816102c78460036103e9565b60ff1690506102d6818361040c565b6101f890600261040c565b60006004816102f185600361041f565b905060006102ff828461040c565b61023d90600161040c565b60006020828403121561031c57600080fd5b5035919050565b803560ff8116811461033457600080fd5b919050565b6000806040838503121561034c57600080fd5b8235915061035c60208401610323565b90509250929050565b60008060006060848603121561037a57600080fd5b833592506020840135915061039160408501610323565b90509250925092565b600080604083850312156103ad57600080fd5b82359150602083013563ffffffff811681146103c857600080fd5b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b60ff8181168382160290811690818114610405576104056103d3565b5092915050565b8082018082111561020e5761020e6103d3565b808202811582820484141761020e5761020e6103d356fea264697066735822122063dae4464fb5b6fad35672f7557d6da45024f06d21325cbd39a34847bb0d8ea364736f6c63430008120033",
							"opcodes": "PUSH2 0x46C PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D2029F1 GT PUSH2 0x70 JUMPI DUP1 PUSH4 0x5D2029F1 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x8DE97F4F EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xA5858693 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xB52B6659 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xE1B30AB7 EQ PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x317F435 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x3499A7EA EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x34A51D0F EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x55D6ED43 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x56E3DF97 EQ PUSH2 0x11F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x30A JUMP JUMPDEST PUSH1 0xF8 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH2 0xFE PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x365 JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0xFE PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x365 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x30A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH2 0xFE PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0xF NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB SWAP2 SWAP1 SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x365 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x1DE DUP5 PUSH1 0x3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x1ED DUP2 DUP4 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH1 0x1 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x203 SWAP1 PUSH1 0x8 PUSH2 0x41F JUMP JUMPDEST DUP6 SWAP1 SHR PUSH1 0xFF AND SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x224 DUP6 PUSH1 0x3 PUSH2 0x41F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x232 DUP3 DUP5 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x23D SWAP1 PUSH1 0x0 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x248 SWAP1 PUSH1 0x8 PUSH2 0x41F JUMP JUMPDEST PUSH1 0xFF SWAP6 DUP7 AND DUP2 SHL SWAP6 SWAP1 SHL NOT SWAP7 SWAP1 SWAP7 AND SWAP4 SWAP1 SWAP4 OR SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x274 DUP6 PUSH1 0x3 PUSH2 0x41F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x282 DUP3 DUP5 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x23D SWAP1 PUSH1 0x2 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x29D DUP5 PUSH1 0x3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x2AC DUP2 DUP4 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH1 0x0 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x2C7 DUP5 PUSH1 0x3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x2D6 DUP2 DUP4 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH1 0x2 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x2F1 DUP6 PUSH1 0x3 PUSH2 0x41F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FF DUP3 DUP5 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x23D SWAP1 PUSH1 0x1 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x35C PUSH1 0x20 DUP5 ADD PUSH2 0x323 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x391 PUSH1 0x40 DUP6 ADD PUSH2 0x323 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND MUL SWAP1 DUP2 AND SWAP1 DUP2 DUP2 EQ PUSH2 0x405 JUMPI PUSH2 0x405 PUSH2 0x3D3 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x20E JUMPI PUSH2 0x20E PUSH2 0x3D3 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x20E JUMPI PUSH2 0x20E PUSH2 0x3D3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xDAE4464F 0xB5 0xB6 STATICCALL 0xD3 JUMP PUSH19 0xF7557D6DA45024F06D21325CBD39A34847BB0D DUP15 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "78:2579:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;78:2579:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getArcane_883": {
									"entryPoint": 695,
									"id": 883,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getCharges_611": {
									"entryPoint": null,
									"id": 611,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getGeneration_588": {
									"entryPoint": null,
									"id": 588,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getId_699": {
									"entryPoint": 653,
									"id": 699,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getLevel_791": {
									"entryPoint": 462,
									"id": 791,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setArcane_936": {
									"entryPoint": 612,
									"id": 936,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@setCharges_660": {
									"entryPoint": null,
									"id": 660,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setGeneration_631": {
									"entryPoint": null,
									"id": 631,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setId_752": {
									"entryPoint": 532,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@setLevel_844": {
									"entryPoint": 737,
									"id": 844,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint8": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint32": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint8": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_uint8": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint8": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2541:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:5"
															},
															"nodeType": "YulIf",
															"src": "94:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:5",
														"type": ""
													}
												],
												"src": "14:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "304:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "314:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "326:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "337:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "322:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "314:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "356:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "371:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "379:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "349:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "349:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "273:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "284:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "295:4:5",
														"type": ""
													}
												],
												"src": "199:192:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "443:109:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "453:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "475:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "462:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "462:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "453:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "530:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "539:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "542:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "532:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "504:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "515:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "522:4:5",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "511:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "511:16:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "501:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "494:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:35:5"
															},
															"nodeType": "YulIf",
															"src": "491:55:5"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "422:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "433:5:5",
														"type": ""
													}
												],
												"src": "396:156:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:165:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "688:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "697:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "700:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "690:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "690:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "690:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "663:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "672:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "659:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "659:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "684:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "655:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:32:5"
															},
															"nodeType": "YulIf",
															"src": "652:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "713:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "736:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "723:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "755:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "797:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "765:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:36:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "755:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "600:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "611:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "623:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "631:6:5",
														"type": ""
													}
												],
												"src": "557:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "914:216:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "960:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "969:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "972:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "962:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "962:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "962:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "935:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "944:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "931:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "931:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "956:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "927:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:32:5"
															},
															"nodeType": "YulIf",
															"src": "924:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "985:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1008:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "995:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "995:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "985:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1027:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1054:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1065:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1050:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1050:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1037:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1037:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1027:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1078:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1109:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1120:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1105:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1105:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "1088:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:36:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "864:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "875:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "887:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "895:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "903:6:5",
														"type": ""
													}
												],
												"src": "812:318:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1254:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1266:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1277:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1254:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1296:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1289:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1289:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1289:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:5",
														"type": ""
													}
												],
												"src": "1135:185:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1432:93:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1442:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1454:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1465:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1450:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1442:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1484:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1499:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1507:10:5",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1495:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1495:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1477:42:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1401:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1412:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1423:4:5",
														"type": ""
													}
												],
												"src": "1325:200:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1616:258:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1662:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1671:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1674:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1664:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1664:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1664:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1637:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1646:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1633:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1633:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1658:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1629:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1629:32:5"
															},
															"nodeType": "YulIf",
															"src": "1626:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1687:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1710:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1697:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1697:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1729:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1770:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1755:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1755:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1742:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:32:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1733:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1828:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1837:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1840:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1830:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1830:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1830:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1796:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1807:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1814:10:5",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1803:22:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1793:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1793:33:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1786:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1786:41:5"
															},
															"nodeType": "YulIf",
															"src": "1783:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1853:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1863:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1574:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1585:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1597:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1605:6:5",
														"type": ""
													}
												],
												"src": "1530:344:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1911:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1935:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1940:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1931:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1931:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1921:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1921:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1968:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1971:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1961:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1961:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1995:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1985:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1985:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1879:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2061:175:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2071:50:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2098:1:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2101:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2094:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2094:12:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2112:1:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2115:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2108:12:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2090:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:31:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "2075:11:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2130:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "2145:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2158:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2141:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2141:22:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2130:7:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2208:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2210:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2210:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nodeType": "YulIdentifier",
																				"src": "2185:7:5"
																			},
																			{
																				"name": "product_raw",
																				"nodeType": "YulIdentifier",
																				"src": "2194:11:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2182:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2182:24:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2175:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2175:32:5"
															},
															"nodeType": "YulIf",
															"src": "2172:58:5"
														}
													]
												},
												"name": "checked_mul_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2040:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2043:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2049:7:5",
														"type": ""
													}
												],
												"src": "2011:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2289:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2299:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2310:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2313:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2306:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2299:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2338:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2340:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2330:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2333:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2327:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2327:10:5"
															},
															"nodeType": "YulIf",
															"src": "2324:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2272:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2275:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2281:3:5",
														"type": ""
													}
												],
												"src": "2241:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2423:116:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2433:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2448:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2451:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2444:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2433:7:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2511:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2513:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2513:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2513:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2482:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2475:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2475:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2489:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2496:7:5"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2505:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2492:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2492:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2486:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2486:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2472:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2472:37:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2465:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:45:5"
															},
															"nodeType": "YulIf",
															"src": "2462:71:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2402:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2405:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2411:7:5",
														"type": ""
													}
												],
												"src": "2371:168:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint8(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_uint8(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint8(x, y) -> product\n    {\n        let product_raw := mul(and(x, 0xff), and(y, 0xff))\n        product := and(product_raw, 0xff)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100a85760003560e01c80635d2029f1116100705780635d2029f11461014b5780638de97f4f1461015e578063a58586931461017d578063b52b665914610190578063e1b30ab7146101bb57600080fd5b80630317f435146100ad5780633499a7ea146100d857806334a51d0f146100eb57806355d6ed431461010c57806356e3df971461011f575b600080fd5b6100c16100bb36600461030a565b60f81c90565b60405160ff90911681526020015b60405180910390f35b6100c16100e6366004610339565b6101ce565b6100fe6100f9366004610365565b610214565b6040519081526020016100cf565b6100fe61011a366004610365565b610264565b61013661012d36600461030a565b63ffffffff1690565b60405163ffffffff90911681526020016100cf565b6100c1610159366004610339565b61028d565b6100fe61016c36600461039a565b63ffffffff16600f19919091161790565b6100c161018b366004610339565b6102b7565b6100fe61019e366004610339565b60f81b6001600160f81b0319166001600160f81b03919091161790565b6100fe6101c9366004610365565b6102e1565b60006004816101de8460036103e9565b60ff1690506101ed818361040c565b6101f890600161040c565b61020390600861041f565b85901c60ff16925050505b92915050565b600060048161022485600361041f565b90506000610232828461040c565b61023d90600061040c565b61024890600861041f565b60ff958616811b95901b19969096169390931795945050505050565b600060048161027485600361041f565b90506000610282828461040c565b61023d90600261040c565b600060048161029d8460036103e9565b60ff1690506102ac818361040c565b6101f890600061040c565b60006004816102c78460036103e9565b60ff1690506102d6818361040c565b6101f890600261040c565b60006004816102f185600361041f565b905060006102ff828461040c565b61023d90600161040c565b60006020828403121561031c57600080fd5b5035919050565b803560ff8116811461033457600080fd5b919050565b6000806040838503121561034c57600080fd5b8235915061035c60208401610323565b90509250929050565b60008060006060848603121561037a57600080fd5b833592506020840135915061039160408501610323565b90509250925092565b600080604083850312156103ad57600080fd5b82359150602083013563ffffffff811681146103c857600080fd5b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b60ff8181168382160290811690818114610405576104056103d3565b5092915050565b8082018082111561020e5761020e6103d3565b808202811582820484141761020e5761020e6103d356fea264697066735822122063dae4464fb5b6fad35672f7557d6da45024f06d21325cbd39a34847bb0d8ea364736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D2029F1 GT PUSH2 0x70 JUMPI DUP1 PUSH4 0x5D2029F1 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x8DE97F4F EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xA5858693 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xB52B6659 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xE1B30AB7 EQ PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x317F435 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x3499A7EA EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x34A51D0F EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x55D6ED43 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x56E3DF97 EQ PUSH2 0x11F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x30A JUMP JUMPDEST PUSH1 0xF8 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH2 0xFE PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x365 JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0xFE PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x365 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x30A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH2 0xFE PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0xF NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB SWAP2 SWAP1 SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x365 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x1DE DUP5 PUSH1 0x3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x1ED DUP2 DUP4 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH1 0x1 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x203 SWAP1 PUSH1 0x8 PUSH2 0x41F JUMP JUMPDEST DUP6 SWAP1 SHR PUSH1 0xFF AND SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x224 DUP6 PUSH1 0x3 PUSH2 0x41F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x232 DUP3 DUP5 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x23D SWAP1 PUSH1 0x0 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x248 SWAP1 PUSH1 0x8 PUSH2 0x41F JUMP JUMPDEST PUSH1 0xFF SWAP6 DUP7 AND DUP2 SHL SWAP6 SWAP1 SHL NOT SWAP7 SWAP1 SWAP7 AND SWAP4 SWAP1 SWAP4 OR SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x274 DUP6 PUSH1 0x3 PUSH2 0x41F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x282 DUP3 DUP5 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x23D SWAP1 PUSH1 0x2 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x29D DUP5 PUSH1 0x3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x2AC DUP2 DUP4 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH1 0x0 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x2C7 DUP5 PUSH1 0x3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x2D6 DUP2 DUP4 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x1F8 SWAP1 PUSH1 0x2 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x2F1 DUP6 PUSH1 0x3 PUSH2 0x41F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2FF DUP3 DUP5 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x23D SWAP1 PUSH1 0x1 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x35C PUSH1 0x20 DUP5 ADD PUSH2 0x323 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x391 PUSH1 0x40 DUP6 ADD PUSH2 0x323 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND MUL SWAP1 DUP2 AND SWAP1 DUP2 DUP2 EQ PUSH2 0x405 JUMPI PUSH2 0x405 PUSH2 0x3D3 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x20E JUMPI PUSH2 0x20E PUSH2 0x3D3 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x20E JUMPI PUSH2 0x20E PUSH2 0x3D3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xDAE4464F 0xB5 0xB6 STATICCALL 0xD3 JUMP PUSH19 0xF7557D6DA45024F06D21325CBD39A34847BB0D DUP15 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "78:2579:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;261:156;;;;;;:::i;:::-;384:6;374:17;;261:156;;;;379:4:5;367:17;;;349:36;;337:2;322:18;261:156:3;;;;;;;;1395:224;;;;;;:::i;:::-;;:::i;1017:372::-;;;;;;:::i;:::-;;:::i;:::-;;;1289:25:5;;;1277:2;1262:18;1017:372:3;1135:185:5;2271:384:3;;;;;;:::i;:::-;;:::i;102:153::-;;;;;;:::i;:::-;227:10;219:18;;102:153;;;;1507:10:5;1495:23;;;1477:42;;1465:2;1450:18;102:153:3;1325:200:5;790:221:3;;;;;;:::i;:::-;;:::i;423:171::-;;;;;;:::i;:::-;555:32;;-1:-1:-1;;556:17:3;;;;555:32;;423:171;2012:253;;;;;;:::i;:::-;;:::i;600:184::-;;;;;;:::i;:::-;769:6;748:28;-1:-1:-1;;;;;;748:28:3;-1:-1:-1;;;;;726:17:3;;;;725:52;;600:184;1625:381;;;;;;:::i;:::-;;:::i;1395:224::-;1463:5;1501:1;1463:5;1528:10;:6;1537:1;1528:10;:::i;:::-;1512:26;;;-1:-1:-1;1575:18:3;1512:26;1575:10;:18;:::i;:::-;:22;;1596:1;1575:22;:::i;:::-;1574:28;;1601:1;1574:28;:::i;:::-;1564:5;:39;;1607:4;1563:48;1548:64;;;;1395:224;;;;;:::o;1017:372::-;1124:7;1164:1;1124:7;1191:10;:6;1200:1;1191:10;:::i;:::-;1175:26;-1:-1:-1;1211:13:3;1228:18;1175:26;1228:10;:18;:::i;:::-;:22;;1249:1;1228:22;:::i;:::-;1227:28;;1254:1;1227:28;:::i;:::-;1321:4;1361:11;;;:20;;1321:13;;;1319:16;1311:24;;;;1352:30;;;;;1017:372;-1:-1:-1;;;;;1017:372:3:o;2271:384::-;2386:7;2426:1;2386:7;2453:10;:6;2462:1;2453:10;:::i;:::-;2437:26;-1:-1:-1;2473:13:3;2490:18;2437:26;2490:10;:18;:::i;:::-;:22;;2511:1;2490:22;:::i;790:221::-;855:5;893:1;855:5;920:10;:6;929:1;920:10;:::i;:::-;904:26;;;-1:-1:-1;967:18:3;904:26;967:10;:18;:::i;:::-;:22;;988:1;967:22;:::i;2012:253::-;2105:5;2147:1;2105:5;2174:10;:6;2183:1;2174:10;:::i;:::-;2158:26;;;-1:-1:-1;2221:18:3;2158:26;2221:10;:18;:::i;:::-;:22;;2242:1;2221:22;:::i;1625:381::-;1738:7;1778:1;1738:7;1805:10;:6;1814:1;1805:10;:::i;:::-;1789:26;-1:-1:-1;1825:13:3;1842:18;1789:26;1842:10;:18;:::i;:::-;:22;;1863:1;1842:22;:::i;14:180:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:5;;14:180;-1:-1:-1;14:180:5:o;396:156::-;462:20;;522:4;511:16;;501:27;;491:55;;542:1;539;532:12;491:55;396:156;;;:::o;557:250::-;623:6;631;684:2;672:9;663:7;659:23;655:32;652:52;;;700:1;697;690:12;652:52;736:9;723:23;713:33;;765:36;797:2;786:9;782:18;765:36;:::i;:::-;755:46;;557:250;;;;;:::o;812:318::-;887:6;895;903;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;1008:9;995:23;985:33;;1065:2;1054:9;1050:18;1037:32;1027:42;;1088:36;1120:2;1109:9;1105:18;1088:36;:::i;:::-;1078:46;;812:318;;;;;:::o;1530:344::-;1597:6;1605;1658:2;1646:9;1637:7;1633:23;1629:32;1626:52;;;1674:1;1671;1664:12;1626:52;1710:9;1697:23;1687:33;;1770:2;1759:9;1755:18;1742:32;1814:10;1807:5;1803:22;1796:5;1793:33;1783:61;;1840:1;1837;1830:12;1783:61;1863:5;1853:15;;;1530:344;;;;;:::o;1879:127::-;1940:10;1935:3;1931:20;1928:1;1921:31;1971:4;1968:1;1961:15;1995:4;1992:1;1985:15;2011:225;2115:4;2094:12;;;2108;;;2090:31;2141:22;;;;2182:24;;;2172:58;;2210:18;;:::i;:::-;2172:58;2011:225;;;;:::o;2241:125::-;2306:9;;;2327:10;;;2324:36;;;2340:18;;:::i;2371:168::-;2444:9;;;2475;;2492:15;;;2486:22;;2472:37;2462:71;;2513:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "226400",
								"executionCost": "300",
								"totalCost": "226700"
							},
							"external": {
								"getArcane(uint256,uint8)": "infinite",
								"getCharges(uint256)": "258",
								"getGeneration(uint256)": "357",
								"getId(uint256,uint8)": "infinite",
								"getLevel(uint256,uint8)": "infinite",
								"setArcane(uint256,uint256,uint8)": "infinite",
								"setCharges(uint256,uint8)": "471",
								"setGeneration(uint256,uint32)": "367",
								"setId(uint256,uint256,uint8)": "infinite",
								"setLevel(uint256,uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 78,
									"end": 2657,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122063dae4464fb5b6fad35672f7557d6da45024f06d21325cbd39a34847bb0d8ea364736f6c63430008120033",
									".code": [
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "5D2029F1"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "5D2029F1"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "8DE97F4F"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "A5858693"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "B52B6659"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "E1B30AB7"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "317F435"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "3499A7EA"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "34A51D0F"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "55D6ED43"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "56E3DF97"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 78,
											"end": 2657,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 261,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 261,
											"end": 417,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 261,
											"end": 417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 261,
											"end": 417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 384,
											"end": 390,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 374,
											"end": 391,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 374,
											"end": 391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 261,
											"end": 417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 379,
											"end": 383,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 367,
											"end": 384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 367,
											"end": 384,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 367,
											"end": 384,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 349,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 337,
											"end": 339,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 261,
											"end": 417,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 261,
											"end": 417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 261,
											"end": 417,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1395,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1395,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1017,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1017,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1289,
											"end": 1314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1289,
											"end": 1314,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1279,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1280,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1135,
											"end": 1320,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2655,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2271,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2271,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2271,
											"end": 2655,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2655,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2271,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2271,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2655,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2271,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2271,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 102,
											"end": 255,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 102,
											"end": 255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 102,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 102,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 102,
											"end": 255,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 102,
											"end": 255,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 102,
											"end": 255,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 102,
											"end": 255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 227,
											"end": 237,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 219,
											"end": 237,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 219,
											"end": 237,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 102,
											"end": 255,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 102,
											"end": 255,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 102,
											"end": 255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 102,
											"end": 255,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 255,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1517,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1450,
											"end": 1468,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 102,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1325,
											"end": 1525,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 790,
											"end": 1011,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 790,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 790,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 790,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 1011,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 790,
											"end": 1011,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 790,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 790,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 790,
											"end": 1011,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 790,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 790,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 423,
											"end": 594,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 423,
											"end": 594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 423,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 423,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 423,
											"end": 594,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 423,
											"end": 594,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 423,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 423,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 423,
											"end": 594,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 423,
											"end": 594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 555,
											"end": 587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 555,
											"end": 587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 556,
											"end": 573,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 556,
											"end": 573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 556,
											"end": 573,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 556,
											"end": 573,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 555,
											"end": 587,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 555,
											"end": 587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 423,
											"end": 594,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2265,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2012,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2012,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2012,
											"end": 2265,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2265,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2012,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2012,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2265,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2012,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2012,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 600,
											"end": 784,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 600,
											"end": 784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 600,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 600,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 600,
											"end": 784,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 600,
											"end": 784,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 600,
											"end": 784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 600,
											"end": 784,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 600,
											"end": 784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 769,
											"end": 775,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 748,
											"end": 776,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 748,
											"end": 776,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 726,
											"end": 743,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 726,
											"end": 743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 726,
											"end": 743,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 726,
											"end": 743,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 725,
											"end": 777,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 725,
											"end": 777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 600,
											"end": 784,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1625,
											"end": 2006,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1625,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1625,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1625,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1625,
											"end": 2006,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1625,
											"end": 2006,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1625,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1625,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1625,
											"end": 2006,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1625,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1625,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1625,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1463,
											"end": 1468,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1528,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1528,
											"end": 1538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1538,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1528,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1512,
											"end": 1538,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1512,
											"end": 1538,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1512,
											"end": 1538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1512,
											"end": 1538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1575,
											"end": 1593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1575,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1575,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1575,
											"end": 1597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1575,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1574,
											"end": 1602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1574,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1574,
											"end": 1602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1602,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1574,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1603,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1607,
											"end": 1611,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1563,
											"end": 1611,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1612,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1131,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1165,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1191,
											"end": 1197,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1201,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1191,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1224,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1175,
											"end": 1201,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1238,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1228,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1246,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1228,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1228,
											"end": 1250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1228,
											"end": 1250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1250,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1228,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1227,
											"end": 1255,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1255,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1227,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1227,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1255,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1227,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1325,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1361,
											"end": 1372,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1372,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1381,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1381,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1334,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1334,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1319,
											"end": 1335,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1311,
											"end": 1335,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1311,
											"end": 1335,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1311,
											"end": 1335,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1311,
											"end": 1335,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1382,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1382,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1382,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1382,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1389,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1017,
											"end": 1389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2655,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2271,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2386,
											"end": 2393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2386,
											"end": 2393,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2453,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2453,
											"end": 2463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2453,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2473,
											"end": 2486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2437,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2500,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2490,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2508,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2490,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2490,
											"end": 2512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2512,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2490,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2490,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 790,
											"end": 1011,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 790,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 855,
											"end": 860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 855,
											"end": 860,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 920,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 920,
											"end": 926,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 929,
											"end": 930,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 920,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 920,
											"end": 930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 930,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 920,
											"end": 930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 904,
											"end": 930,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 904,
											"end": 930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 967,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 904,
											"end": 930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 967,
											"end": 977,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 967,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 967,
											"end": 985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 967,
											"end": 985,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 967,
											"end": 985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 967,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 967,
											"end": 989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 988,
											"end": 989,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 967,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2265,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2012,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2174,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2174,
											"end": 2184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2184,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2174,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2158,
											"end": 2184,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2158,
											"end": 2184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2221,
											"end": 2231,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2221,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2221,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2221,
											"end": 2239,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2221,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2221,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2221,
											"end": 2243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2243,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2221,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2221,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1625,
											"end": 2006,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1625,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1815,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1805,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1805,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1815,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1805,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1789,
											"end": 1815,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1842,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1864,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1842,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1842,
											"end": 1864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 396,
											"end": 552,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 396,
											"end": 552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 462,
											"end": 482,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 462,
											"end": 482,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 522,
											"end": 526,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 511,
											"end": 527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 527,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 501,
											"end": 528,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 528,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 491,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 491,
											"end": 546,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 542,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 540,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 532,
											"end": 544,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 491,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 491,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 396,
											"end": 552,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 396,
											"end": 552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 396,
											"end": 552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 396,
											"end": 552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 807,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 557,
											"end": 807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 623,
											"end": 629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 684,
											"end": 686,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 681,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 663,
											"end": 670,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 659,
											"end": 682,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 655,
											"end": 687,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 652,
											"end": 704,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 652,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 652,
											"end": 704,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 700,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 690,
											"end": 702,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 652,
											"end": 704,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 652,
											"end": 704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 723,
											"end": 746,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 713,
											"end": 746,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 713,
											"end": 746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 765,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 797,
											"end": 799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 782,
											"end": 800,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 765,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 765,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 765,
											"end": 801,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 765,
											"end": 801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 755,
											"end": 801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 755,
											"end": 801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 807,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 557,
											"end": 807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 807,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 557,
											"end": 807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 557,
											"end": 807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 812,
											"end": 1130,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 812,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 887,
											"end": 893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 958,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 944,
											"end": 953,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 935,
											"end": 942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 931,
											"end": 954,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 927,
											"end": 959,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 924,
											"end": 976,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 924,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 972,
											"end": 973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 970,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 962,
											"end": 974,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 924,
											"end": 976,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 995,
											"end": 1018,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1018,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1065,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1063,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1068,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1069,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1088,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1124,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1088,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1124,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 812,
											"end": 1130,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 812,
											"end": 1130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 812,
											"end": 1130,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 812,
											"end": 1130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 812,
											"end": 1130,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 812,
											"end": 1130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1874,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1530,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1644,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1661,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1678,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1626,
											"end": 1678,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1676,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1678,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1626,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1719,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1720,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1742,
											"end": 1774,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1814,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1825,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1826,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1783,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1783,
											"end": 1844,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1783,
											"end": 1844,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1783,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1874,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1874,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 2006,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1879,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1950,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1935,
											"end": 1938,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1931,
											"end": 1951,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1921,
											"end": 1952,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1968,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1961,
											"end": 1976,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1995,
											"end": 1999,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1992,
											"end": 1993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2236,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2011,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2121,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2163,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2172,
											"end": 2230,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2210,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2236,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2366,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2241,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2315,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2315,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2315,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2337,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2337,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2337,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2360,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2324,
											"end": 2360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2340,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2539,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2371,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2486,
											"end": 2508,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2486,
											"end": 2508,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2472,
											"end": 2509,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2462,
											"end": 2533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2513,
											"end": 2531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/breedings/Breeding.sol",
								"contracts/common/GenesUtil.sol",
								"contracts/common/IBreeding.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getArcane(uint256,uint8)": "a5858693",
							"getCharges(uint256)": "0317f435",
							"getGeneration(uint256)": "56e3df97",
							"getId(uint256,uint8)": "5d2029f1",
							"getLevel(uint256,uint8)": "3499a7ea",
							"setArcane(uint256,uint256,uint8)": "55d6ed43",
							"setCharges(uint256,uint8)": "b52b6659",
							"setGeneration(uint256,uint32)": "8de97f4f",
							"setId(uint256,uint256,uint8)": "34a51d0f",
							"setLevel(uint256,uint256,uint8)": "e1b30ab7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"partId\",\"type\":\"uint8\"}],\"name\":\"getArcane\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"}],\"name\":\"getCharges\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"}],\"name\":\"getGeneration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"partId\",\"type\":\"uint8\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"partId\",\"type\":\"uint8\"}],\"name\":\"getLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"partId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"arcane\",\"type\":\"uint8\"}],\"name\":\"setArcane\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"charges\",\"type\":\"uint8\"}],\"name\":\"setCharges\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"generation\",\"type\":\"uint32\"}],\"name\":\"setGeneration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"partId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"setId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"partId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"}],\"name\":\"setLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/common/GenesUtil.sol\":\"GenesUtil\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/common/GenesUtil.sol\":{\"keccak256\":\"0x374618d733e69d4fc8b13fb7feffb00bc4604d773b34fbdf7ca7ec9fc09d872a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0d2d33ca84b4518d01bf8fe146716cb96e518e266f2b7d31677e862203e91c\",\"dweb:/ipfs/Qmdvc2MBqwVgvLk5sR3yAURe4ovdL9cpuz1Q6rACWReGZv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/common/IBreeding.sol": {
				"IBreeding": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "genes1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "genes2",
									"type": "uint256"
								}
							],
							"name": "breading",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"breading(uint256,uint256)": {
								"details": "given genes of token 1 & 2, return a genetic combination - may have a random factor",
								"params": {
									"genes1": "genes of mom",
									"genes2": "genes of dad"
								},
								"returns": {
									"_0": "the genes that are supposed to be passed down the child"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"breading(uint256,uint256)": "e4a13fb7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genes1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"genes2\",\"type\":\"uint256\"}],\"name\":\"breading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"breading(uint256,uint256)\":{\"details\":\"given genes of token 1 & 2, return a genetic combination - may have a random factor\",\"params\":{\"genes1\":\"genes of mom\",\"genes2\":\"genes of dad\"},\"returns\":{\"_0\":\"the genes that are supposed to be passed down the child\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/common/IBreeding.sol\":\"IBreeding\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/common/IBreeding.sol\":{\"keccak256\":\"0xf2b910b50f2c3808d42738834bc0ce2eaabfa6fe925f6eb5e624d09e4d7d5a20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3146168b8b9ac4325956b92acc534cd0ce02c010dbf7366af8dea4bc9f9b0a2\",\"dweb:/ipfs/QmQ8LWt9HAFthPwyW1fRqn1bsUeN8b5hVs7WnNuH3Uo1p5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/breedings/Breeding.sol": {
				"ast": {
					"absolutePath": "contracts/breedings/Breeding.sol",
					"exportedSymbols": {
						"Breading": [
							569
						],
						"Context": [
							134
						],
						"GenesUtil": [
							937
						],
						"IBreeding": [
							950
						],
						"Ownable": [
							112
						]
					},
					"id": 570,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 570,
							"sourceUnit": 113,
							"src": "59:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/common/IBreeding.sol",
							"file": "contracts/common/IBreeding.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 570,
							"sourceUnit": 951,
							"src": "112:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/common/GenesUtil.sol",
							"file": "contracts/common/GenesUtil.sol",
							"id": 139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 570,
							"sourceUnit": 938,
							"src": "153:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 140,
										"name": "Ownable",
										"nameLocations": [
											"216:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "216:7:2"
									},
									"id": 141,
									"nodeType": "InheritanceSpecifier",
									"src": "216:7:2"
								},
								{
									"baseName": {
										"id": 142,
										"name": "IBreeding",
										"nameLocations": [
											"225:9:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 950,
										"src": "225:9:2"
									},
									"id": 143,
									"nodeType": "InheritanceSpecifier",
									"src": "225:9:2"
								}
							],
							"canonicalName": "Breading",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 569,
							"linearizedBaseContracts": [
								569,
								950,
								112,
								134
							],
							"name": "Breading",
							"nameLocation": "204:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 146,
									"libraryName": {
										"id": 144,
										"name": "GenesUtil",
										"nameLocations": [
											"437:9:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 937,
										"src": "437:9:2"
									},
									"nodeType": "UsingForDirective",
									"src": "431:28:2",
									"typeName": {
										"id": 145,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 149,
									"mutability": "mutable",
									"name": "_globalSeed",
									"nameLocation": "481:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 569,
									"src": "465:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 147,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "465:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "495:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 152,
									"mutability": "mutable",
									"name": "_randomPercent",
									"nameLocation": "518:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 569,
									"src": "502:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "502:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "535:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 155,
									"mutability": "mutable",
									"name": "_minArcane",
									"nameLocation": "558:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 569,
									"src": "542:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "542:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "571:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_maxArcane",
									"nameLocation": "594:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 569,
									"src": "578:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "578:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 157,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "607:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "_minId",
									"nameLocation": "631:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 569,
									"src": "615:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "615:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "640:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 164,
									"mutability": "mutable",
									"name": "_maxId",
									"nameLocation": "663:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 569,
									"src": "647:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "647:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3336",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "672:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_36_by_1",
											"typeString": "int_const 36"
										},
										"value": "36"
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										949
									],
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "778:2025:2",
										"statements": [
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"mutability": "mutable",
														"name": "randomSeed",
														"nameLocation": "796:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "788:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "788:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 192,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 180,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "895:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "901:9:2",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "895:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 182,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "932:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "938:6:2",
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "932:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 184,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "966:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "972:10:2",
																			"memberName": "prevrandao",
																			"nodeType": "MemberAccess",
																			"src": "966:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 186,
																			"name": "genes1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 166,
																			"src": "1004:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 187,
																			"name": "genes2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 168,
																			"src": "1032:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 188,
																			"name": "_globalSeed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "1060:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 178,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "857:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "861:12:2",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "857:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "857:232:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 177,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "830:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "830:273:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 175,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "809:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "809:304:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "788:325:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "randomSeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1132:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1146:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1132:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "72616e646f6d536565642063616e27742062652030",
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1149:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_efb6a94127d5f0a7fea72f2b77e7e45577ef22fe0c35772be4ab13e969b5e238",
																"typeString": "literal_string \"randomSeed can't be 0\""
															},
															"value": "randomSeed can't be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_efb6a94127d5f0a7fea72f2b77e7e45577ef22fe0c35772be4ab13e969b5e238",
																"typeString": "literal_string \"randomSeed can't be 0\""
															}
														],
														"id": 193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1124:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1124:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "1124:49:2"
											},
											{
												"expression": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1184:13:2",
													"subExpression": {
														"id": 200,
														"name": "_globalSeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "1184:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "1184:13:2"
											},
											{
												"assignments": [
													204
												],
												"declarations": [
													{
														"constant": false,
														"id": 204,
														"mutability": "mutable",
														"name": "generation",
														"nameLocation": "1215:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "1208:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 203,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1208:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 207,
																				"name": "genes1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 166,
																				"src": "1253:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 205,
																				"name": "GenesUtil",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 937,
																				"src": "1229:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_GenesUtil_$937_$",
																					"typeString": "type(library GenesUtil)"
																				}
																			},
																			"id": 206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1239:13:2",
																			"memberName": "getGeneration",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 588,
																			"src": "1229:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$returns$_t_uint32_$",
																				"typeString": "function (uint256) pure returns (uint32)"
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1229:31:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 211,
																				"name": "genes2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 168,
																				"src": "1299:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 209,
																				"name": "GenesUtil",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 937,
																				"src": "1275:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_GenesUtil_$937_$",
																					"typeString": "type(library GenesUtil)"
																				}
																			},
																			"id": 210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1285:13:2",
																			"memberName": "getGeneration",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 588,
																			"src": "1275:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$returns$_t_uint32_$",
																				"typeString": "function (uint256) pure returns (uint32)"
																			}
																		},
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1275:31:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "1229:77:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																}
															],
															"id": 214,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1228:79:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "1228:95:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1338:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1228:111:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1208:131:2"
											},
											{
												"assignments": [
													221
												],
												"declarations": [
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "bodyPartsCount",
														"nameLocation": "1356:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "1350:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 220,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1350:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 223,
												"initialValue": {
													"hexValue": "39",
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1373:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1350:24:2"
											},
											{
												"assignments": [
													225
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "randomIndex",
														"nameLocation": "1392:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "1384:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1384:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"hexValue": "30",
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1406:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1384:23:2"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "genes",
														"nameLocation": "1426:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "1418:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 231,
												"initialValue": {
													"hexValue": "30",
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1434:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1418:17:2"
											},
											{
												"body": {
													"id": 356,
													"nodeType": "Block",
													"src": "1593:1022:2",
													"statements": [
														{
															"assignments": [
																243
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 243,
																	"mutability": "mutable",
																	"name": "arcanePercent",
																	"nameLocation": "1615:13:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 356,
																	"src": "1607:21:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 242,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1607:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 250,
															"initialValue": {
																"arguments": [
																	{
																		"id": 245,
																		"name": "generation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 204,
																		"src": "1665:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"id": 246,
																		"name": "_minArcane",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 155,
																		"src": "1693:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 247,
																		"name": "_maxArcane",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 158,
																		"src": "1721:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "313030",
																		"id": 248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1749:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"id": 244,
																	"name": "getArcanePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "1631:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1631:135:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1607:159:2"
														},
														{
															"assignments": [
																252
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 252,
																	"mutability": "mutable",
																	"name": "isArc",
																	"nameLocation": "1785:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 356,
																	"src": "1780:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 251,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1780:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 264,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 253,
																	"name": "arcanePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "1793:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 255,
																			"name": "_globalSeed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "1833:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "1846:13:2",
																			"subExpression": {
																				"id": 256,
																				"name": "randomIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 225,
																				"src": "1846:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "30",
																			"id": 258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1861:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 259,
																				"name": "_maxArcane",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 158,
																				"src": "1864:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1877:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "1864:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 254,
																		"name": "random",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1826:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1826:55:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1793:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1780:101:2"
														},
														{
															"assignments": [
																266
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 266,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "1902:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 356,
																	"src": "1896:8:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 265,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "1896:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 268,
															"initialValue": {
																"hexValue": "31",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1907:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1896:12:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 269,
																	"name": "_randomPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1926:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 271,
																			"name": "_globalSeed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "1951:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "1964:13:2",
																			"subExpression": {
																				"id": 272,
																				"name": "randomIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 225,
																				"src": "1964:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "30",
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1979:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		{
																			"hexValue": "313030",
																			"id": 275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1982:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"id": 270,
																		"name": "random",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1944:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1944:42:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1926:60:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 324,
																"nodeType": "Block",
																"src": "2138:260:2",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 297,
																						"name": "_globalSeed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 149,
																						"src": "2167:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 299,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "2180:13:2",
																						"subExpression": {
																							"id": 298,
																							"name": "randomIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 225,
																							"src": "2180:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 300,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2195:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					{
																						"hexValue": "313030",
																						"id": 301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2198:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						{
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						}
																					],
																					"id": 296,
																					"name": "random",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 537,
																					"src": "2160:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2160:42:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "3530",
																				"id": 303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2206:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_50_by_1",
																					"typeString": "int_const 50"
																				},
																				"value": "50"
																			},
																			"src": "2160:48:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 322,
																			"nodeType": "Block",
																			"src": "2300:84:2",
																			"statements": [
																				{
																					"expression": {
																						"id": 320,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 314,
																							"name": "id",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 266,
																							"src": "2322:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"id": 317,
																									"name": "genes1",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 166,
																									"src": "2343:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 318,
																									"name": "bodyPartIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 233,
																									"src": "2351:13:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								],
																								"expression": {
																									"id": 315,
																									"name": "GenesUtil",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 937,
																									"src": "2327:9:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_GenesUtil_$937_$",
																										"typeString": "type(library GenesUtil)"
																									}
																								},
																								"id": 316,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2337:5:2",
																								"memberName": "getId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 699,
																								"src": "2327:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint8_$returns$_t_uint8_$",
																									"typeString": "function (uint256,uint8) pure returns (uint8)"
																								}
																							},
																							"id": 319,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2327:38:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "2322:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"id": 321,
																					"nodeType": "ExpressionStatement",
																					"src": "2322:43:2"
																				}
																			]
																		},
																		"id": 323,
																		"nodeType": "IfStatement",
																		"src": "2156:228:2",
																		"trueBody": {
																			"id": 313,
																			"nodeType": "Block",
																			"src": "2210:84:2",
																			"statements": [
																				{
																					"expression": {
																						"id": 311,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 305,
																							"name": "id",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 266,
																							"src": "2232:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"id": 308,
																									"name": "genes2",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 168,
																									"src": "2253:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 309,
																									"name": "bodyPartIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 233,
																									"src": "2261:13:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								],
																								"expression": {
																									"id": 306,
																									"name": "GenesUtil",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 937,
																									"src": "2237:9:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_GenesUtil_$937_$",
																										"typeString": "type(library GenesUtil)"
																									}
																								},
																								"id": 307,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2247:5:2",
																								"memberName": "getId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 699,
																								"src": "2237:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint8_$returns$_t_uint8_$",
																									"typeString": "function (uint256,uint8) pure returns (uint8)"
																								}
																							},
																							"id": 310,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2237:38:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "2232:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"id": 312,
																					"nodeType": "ExpressionStatement",
																					"src": "2232:43:2"
																				}
																			]
																		}
																	}
																]
															},
															"id": 325,
															"nodeType": "IfStatement",
															"src": "1922:476:2",
															"trueBody": {
																"id": 295,
																"nodeType": "Block",
																"src": "1988:144:2",
																"statements": [
																	{
																		"expression": {
																			"id": 293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 278,
																				"name": "id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "2006:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 291,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"id": 282,
																									"name": "_globalSeed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 149,
																									"src": "2045:11:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 284,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "++",
																									"prefix": false,
																									"src": "2058:13:2",
																									"subExpression": {
																										"id": 283,
																										"name": "randomIndex",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 225,
																										"src": "2058:11:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 285,
																									"name": "_minId",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 161,
																									"src": "2073:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 288,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 286,
																										"name": "_maxId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 164,
																										"src": "2081:6:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"hexValue": "31",
																										"id": 287,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2090:1:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1_by_1",
																											"typeString": "int_const 1"
																										},
																										"value": "1"
																									},
																									"src": "2081:10:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 281,
																								"name": "random",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 537,
																								"src": "2038:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 289,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2038:54:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"hexValue": "30784646",
																							"id": 290,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2095:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_255_by_1",
																								"typeString": "int_const 255"
																							},
																							"value": "0xFF"
																						},
																						"src": "2038:61:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 280,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2011:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 279,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "2011:5:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 292,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2011:106:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2006:111:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 294,
																		"nodeType": "ExpressionStatement",
																		"src": "2006:111:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 326,
																	"name": "genes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "2412:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 329,
																			"name": "genes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 229,
																			"src": "2436:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 330,
																			"name": "bodyPartIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "2443:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		{
																			"id": 331,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 266,
																			"src": "2458:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"expression": {
																			"id": 327,
																			"name": "GenesUtil",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 937,
																			"src": "2420:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_GenesUtil_$937_$",
																				"typeString": "type(library GenesUtil)"
																			}
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2430:5:2",
																		"memberName": "setId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 752,
																		"src": "2420:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint8) pure returns (uint256)"
																		}
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2420:41:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2412:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 334,
															"nodeType": "ExpressionStatement",
															"src": "2412:49:2"
														},
														{
															"expression": {
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 335,
																	"name": "genes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "2475:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 338,
																			"name": "genes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 229,
																			"src": "2502:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 339,
																			"name": "bodyPartIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "2509:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		{
																			"hexValue": "31",
																			"id": 340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2524:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"id": 336,
																			"name": "GenesUtil",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 937,
																			"src": "2483:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_GenesUtil_$937_$",
																				"typeString": "type(library GenesUtil)"
																			}
																		},
																		"id": 337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2493:8:2",
																		"memberName": "setLevel",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 844,
																		"src": "2483:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint8) pure returns (uint256)"
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2483:43:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2475:51:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 343,
															"nodeType": "ExpressionStatement",
															"src": "2475:51:2"
														},
														{
															"expression": {
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 344,
																	"name": "genes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "2540:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 347,
																			"name": "genes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 229,
																			"src": "2568:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 348,
																			"name": "bodyPartIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "2575:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		{
																			"condition": {
																				"id": 349,
																				"name": "isArc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 252,
																				"src": "2590:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2602:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "2590:13:2",
																			"trueExpression": {
																				"hexValue": "31",
																				"id": 350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2598:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"expression": {
																			"id": 345,
																			"name": "GenesUtil",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 937,
																			"src": "2548:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_GenesUtil_$937_$",
																				"typeString": "type(library GenesUtil)"
																			}
																		},
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2558:9:2",
																		"memberName": "setArcane",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 936,
																		"src": "2548:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint8) pure returns (uint256)"
																		}
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2548:56:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2540:64:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 355,
															"nodeType": "ExpressionStatement",
															"src": "2540:64:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 236,
														"name": "bodyPartIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "1523:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 237,
														"name": "bodyPartsCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "1539:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1523:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 357,
												"initializationExpression": {
													"assignments": [
														233
													],
													"declarations": [
														{
															"constant": false,
															"id": 233,
															"mutability": "mutable",
															"name": "bodyPartIndex",
															"nameLocation": "1492:13:2",
															"nodeType": "VariableDeclaration",
															"scope": 357,
															"src": "1486:19:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 232,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1486:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 235,
													"initialValue": {
														"hexValue": "30",
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1508:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1486:23:2"
												},
												"loopExpression": {
													"expression": {
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1567:15:2",
														"subExpression": {
															"id": 239,
															"name": "bodyPartIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "1567:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 241,
													"nodeType": "ExpressionStatement",
													"src": "1567:15:2"
												},
												"nodeType": "ForStatement",
												"src": "1468:1147:2"
											},
											{
												"expression": {
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 358,
														"name": "genes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "2651:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 361,
																"name": "genes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2683:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 362,
																"name": "generation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "2690:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"expression": {
																"id": 359,
																"name": "GenesUtil",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "2659:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_GenesUtil_$937_$",
																	"typeString": "type(library GenesUtil)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2669:13:2",
															"memberName": "setGeneration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 631,
															"src": "2659:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint32_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint32) pure returns (uint256)"
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2659:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2651:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "2651:50:2"
											},
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 366,
														"name": "genes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "2735:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 369,
																"name": "genes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2764:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "31",
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2771:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"id": 367,
																"name": "GenesUtil",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "2743:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_GenesUtil_$937_$",
																	"typeString": "type(library GenesUtil)"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2753:10:2",
															"memberName": "setCharges",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 660,
															"src": "2743:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2743:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2735:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "2735:38:2"
											},
											{
												"expression": {
													"id": 374,
													"name": "genes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "2791:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 172,
												"id": 375,
												"nodeType": "Return",
												"src": "2784:12:2"
											}
										]
									},
									"functionSelector": "e4a13fb7",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "breading",
									"nameLocation": "690:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "genes1",
												"nameLocation": "707:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "699:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "genes2",
												"nameLocation": "723:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "715:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:32:2"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "765:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:9:2"
									},
									"scope": 569,
									"src": "681:2122:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3036:35:2",
										"statements": [
											{
												"expression": {
													"id": 382,
													"name": "_globalSeed",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 149,
													"src": "3053:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 381,
												"id": 383,
												"nodeType": "Return",
												"src": "3046:18:2"
											}
										]
									},
									"functionSelector": "878cf3a6",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGlobalSeed",
									"nameLocation": "2988:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3027:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3026:9:2"
									},
									"scope": 569,
									"src": "2979:92:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "3132:36:2",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_globalSeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "3142:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3156:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3142:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "3142:19:2"
											}
										]
									},
									"functionSelector": "02aff378",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 390,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 389,
												"name": "onlyOwner",
												"nameLocations": [
													"3122:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3122:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3122:9:2"
										}
									],
									"name": "setGlobalSeed",
									"nameLocation": "3086:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3099:15:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3132:0:2"
									},
									"scope": 569,
									"src": "3077:91:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "3307:34:2",
										"statements": [
											{
												"expression": {
													"id": 402,
													"name": "_minArcane",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 155,
													"src": "3324:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 401,
												"id": 403,
												"nodeType": "Return",
												"src": "3317:17:2"
											}
										]
									},
									"functionSelector": "32099cc4",
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMinArcane",
									"nameLocation": "3260:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3272:2:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "3298:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3297:9:2"
									},
									"scope": 569,
									"src": "3251:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "3401:35:2",
										"statements": [
											{
												"expression": {
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 412,
														"name": "_minArcane",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "3411:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 413,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "3424:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3411:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "3411:18:2"
											}
										]
									},
									"functionSelector": "91b66725",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 410,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 409,
												"name": "onlyOwner",
												"nameLocations": [
													"3391:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3391:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3391:9:2"
										}
									],
									"name": "setMinArcane",
									"nameLocation": "3356:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3377:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "3369:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3369:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3368:15:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3401:0:2"
									},
									"scope": 569,
									"src": "3347:89:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "3575:34:2",
										"statements": [
											{
												"expression": {
													"id": 422,
													"name": "_maxArcane",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 158,
													"src": "3592:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 421,
												"id": 423,
												"nodeType": "Return",
												"src": "3585:17:2"
											}
										]
									},
									"functionSelector": "615ebe28",
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxArcane",
									"nameLocation": "3528:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3540:2:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3566:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3565:9:2"
									},
									"scope": 569,
									"src": "3519:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "3669:35:2",
										"statements": [
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_maxArcane",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3679:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3692:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3679:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "3679:18:2"
											}
										]
									},
									"functionSelector": "1bb39f84",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 430,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 429,
												"name": "onlyOwner",
												"nameLocations": [
													"3659:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3659:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3659:9:2"
										}
									],
									"name": "setMaxArcane",
									"nameLocation": "3624:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3645:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3637:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3637:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3636:15:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3669:0:2"
									},
									"scope": 569,
									"src": "3615:89:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "3847:38:2",
										"statements": [
											{
												"expression": {
													"id": 442,
													"name": "_randomPercent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 152,
													"src": "3864:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 441,
												"id": 443,
												"nodeType": "Return",
												"src": "3857:21:2"
											}
										]
									},
									"functionSelector": "e238b8c6",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRandomPercent",
									"nameLocation": "3796:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3812:2:2"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3838:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:9:2"
									},
									"scope": 569,
									"src": "3787:98:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "3949:39:2",
										"statements": [
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 452,
														"name": "_randomPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "3959:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 453,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "3976:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3959:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "3959:22:2"
											}
										]
									},
									"functionSelector": "054fee6a",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 450,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 449,
												"name": "onlyOwner",
												"nameLocations": [
													"3939:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3939:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3939:9:2"
										}
									],
									"name": "setRandomPercent",
									"nameLocation": "3900:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3925:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3917:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3917:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3916:15:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3949:0:2"
									},
									"scope": 569,
									"src": "3891:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "4123:30:2",
										"statements": [
											{
												"expression": {
													"id": 462,
													"name": "_minId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 161,
													"src": "4140:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 461,
												"id": 463,
												"nodeType": "Return",
												"src": "4133:13:2"
											}
										]
									},
									"functionSelector": "eb4b0e51",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMinId",
									"nameLocation": "4080:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4088:2:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "4114:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4114:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4113:9:2"
									},
									"scope": 569,
									"src": "4071:82:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "4209:31:2",
										"statements": [
											{
												"expression": {
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 472,
														"name": "_minId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "4219:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 473,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "4228:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4219:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "4219:14:2"
											}
										]
									},
									"functionSelector": "e2e3a0db",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 470,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 469,
												"name": "onlyOwner",
												"nameLocations": [
													"4199:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4199:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4199:9:2"
										}
									],
									"name": "setMinId",
									"nameLocation": "4168:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4185:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "4177:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4177:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4176:15:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4209:0:2"
									},
									"scope": 569,
									"src": "4159:81:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "4375:30:2",
										"statements": [
											{
												"expression": {
													"id": 482,
													"name": "_maxId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 164,
													"src": "4392:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "4385:13:2"
											}
										]
									},
									"functionSelector": "d477a712",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxId",
									"nameLocation": "4332:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4340:2:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4366:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:9:2"
									},
									"scope": 569,
									"src": "4323:82:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "4461:31:2",
										"statements": [
											{
												"expression": {
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 492,
														"name": "_maxId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "4471:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 493,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "4480:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4471:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "4471:14:2"
											}
										]
									},
									"functionSelector": "16bd8646",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 490,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 489,
												"name": "onlyOwner",
												"nameLocations": [
													"4451:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4451:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4451:9:2"
										}
									],
									"name": "setMaxId",
									"nameLocation": "4420:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4437:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "4429:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4428:15:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4461:0:2"
									},
									"scope": 569,
									"src": "4411:81:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "4824:181:2",
										"statements": [
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 510,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "4834:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 516,
																					"name": "seed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 499,
																					"src": "4889:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 517,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 501,
																					"src": "4895:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 514,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "4872:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "4876:12:2",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "4872:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4872:29:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 513,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "4862:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4862:40:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4854:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 511,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4854:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4854:49:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 521,
																		"name": "maxNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "4919:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 522,
																		"name": "minNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "4931:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4919:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 524,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4918:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4854:87:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4834:107:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "4834:107:2"
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 528,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "4951:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 529,
															"name": "minNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "4959:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 530,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "4971:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4959:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4951:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4951:25:2"
											},
											{
												"expression": {
													"id": 534,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 508,
													"src": "4993:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 509,
												"id": 535,
												"nodeType": "Return",
												"src": "4986:12:2"
											}
										]
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "random",
									"nameLocation": "4674:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "seed",
												"nameLocation": "4698:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4690:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4690:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4720:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4712:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4712:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "minNumber",
												"nameLocation": "4743:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4735:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "maxNumber",
												"nameLocation": "4770:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4762:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4762:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4680:105:2"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4817:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4809:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4809:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4808:15:2"
									},
									"scope": 569,
									"src": "4665:340:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "5334:122:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "generation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "5348:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 551,
														"name": "min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "5362:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5348:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 556,
												"nodeType": "IfStatement",
												"src": "5344:56:2",
												"trueBody": {
													"id": 555,
													"nodeType": "Block",
													"src": "5367:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5388:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 549,
															"id": 554,
															"nodeType": "Return",
															"src": "5381:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 557,
																				"name": "generation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 539,
																				"src": "5418:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 558,
																				"name": "min",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 541,
																				"src": "5431:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5418:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 560,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5417:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 561,
																	"name": "mult",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "5438:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5417:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 563,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5416:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 564,
														"name": "max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "5446:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5416:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 549,
												"id": 566,
												"nodeType": "Return",
												"src": "5409:40:2"
											}
										]
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getArcanePercent",
									"nameLocation": "5187:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "generation",
												"nameLocation": "5221:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "5213:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5213:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "min",
												"nameLocation": "5249:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "5241:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "max",
												"nameLocation": "5270:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "5262:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5262:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "mult",
												"nameLocation": "5291:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "5283:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5203:98:2"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "5325:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:9:2"
									},
									"scope": 569,
									"src": "5178:278:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 570,
							"src": "195:5263:2",
							"usedErrors": []
						}
					],
					"src": "33:5426:2"
				},
				"id": 2
			},
			"contracts/common/GenesUtil.sol": {
				"ast": {
					"absolutePath": "contracts/common/GenesUtil.sol",
					"exportedSymbols": {
						"GenesUtil": [
							937
						]
					},
					"id": 938,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 571,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GenesUtil",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 937,
							"linearizedBaseContracts": [
								937
							],
							"name": "GenesUtil",
							"nameLocation": "86:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "169:86:3",
										"statements": [
											{
												"id": 586,
												"nodeType": "UncheckedBlock",
												"src": "179:70:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 581,
																		"name": "genes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 573,
																		"src": "219:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"hexValue": "30784646464646464646",
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "227:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967295_by_1",
																			"typeString": "int_const 4294967295"
																		},
																		"value": "0xFFFFFFFF"
																	},
																	"src": "219:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"components": [
																	{
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "211:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 578,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "211:6:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"id": 580,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "210:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint32_$",
																	"typeString": "type(uint32)"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "210:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"functionReturnParameters": 577,
														"id": 585,
														"nodeType": "Return",
														"src": "203:35:3"
													}
												]
											}
										]
									},
									"functionSelector": "56e3df97",
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGeneration",
									"nameLocation": "111:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "genes",
												"nameLocation": "133:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "125:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:15:3"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "161:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 575,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "161:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "160:8:3"
									},
									"scope": 937,
									"src": "102:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "324:93:3",
										"statements": [
											{
												"id": 609,
												"nodeType": "UncheckedBlock",
												"src": "334:77:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 598,
																					"name": "genes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 590,
																					"src": "374:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_248_by_1",
																								"typeString": "int_const 248"
																							},
																							"id": 601,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3331",
																								"id": 599,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "384:2:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_31_by_1",
																									"typeString": "int_const 31"
																								},
																								"value": "31"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"hexValue": "38",
																								"id": 600,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "389:1:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							},
																							"src": "384:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_248_by_1",
																								"typeString": "int_const 248"
																							}
																						}
																					],
																					"id": 602,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "383:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_248_by_1",
																						"typeString": "int_const 248"
																					}
																				},
																				"src": "374:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 604,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "373:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"hexValue": "30784646",
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "395:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_255_by_1",
																			"typeString": "int_const 255"
																		},
																		"value": "0xFF"
																	},
																	"src": "373:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"components": [
																	{
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "366:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 595,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "366:5:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"id": 597,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "365:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "365:35:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"functionReturnParameters": 594,
														"id": 608,
														"nodeType": "Return",
														"src": "358:42:3"
													}
												]
											}
										]
									},
									"functionSelector": "0317f435",
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCharges",
									"nameLocation": "270:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "genes",
												"nameLocation": "289:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "281:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:15:3"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "317:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 592,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "317:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:7:3"
									},
									"scope": 937,
									"src": "261:156:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "538:56:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 620,
																				"name": "genes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 613,
																				"src": "557:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "566:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "557:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 623,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "556:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "572:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "556:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 626,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "555:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"id": 627,
														"name": "generation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "577:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "555:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 619,
												"id": 629,
												"nodeType": "Return",
												"src": "548:39:3"
											}
										]
									},
									"functionSelector": "8de97f4f",
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setGeneration",
									"nameLocation": "432:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "genes",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "generation",
												"nameLocation": "468:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "461:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 614,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "461:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "445:34:3"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "525:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:9:3"
									},
									"scope": 937,
									"src": "423:171:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "708:76:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 640,
																				"name": "genes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 633,
																				"src": "727:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "736:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "727:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 643,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "726:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "742:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "726:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 646,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "725:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 649,
																			"name": "charges",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "756:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "748:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 647,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "748:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "748:16:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_rational_248_by_1",
																				"typeString": "int_const 248"
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3331",
																				"id": 651,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "769:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_31_by_1",
																					"typeString": "int_const 31"
																				},
																				"value": "31"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "774:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "769:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_248_by_1",
																				"typeString": "int_const 248"
																			}
																		}
																	],
																	"id": 654,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "768:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_248_by_1",
																		"typeString": "int_const 248"
																	}
																},
																"src": "748:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 656,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "747:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "725:52:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 639,
												"id": 658,
												"nodeType": "Return",
												"src": "718:59:3"
											}
										]
									},
									"functionSelector": "b52b6659",
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCharges",
									"nameLocation": "609:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "genes",
												"nameLocation": "628:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "620:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "charges",
												"nameLocation": "641:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "635:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 634,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "635:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:30:3"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "695:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:9:3"
									},
									"scope": 937,
									"src": "600:184:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "862:149:3",
										"statements": [
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "startIndex",
														"nameLocation": "880:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 698,
														"src": "872:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 669,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "872:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 672,
												"initialValue": {
													"hexValue": "34",
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "893:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_4_by_1",
														"typeString": "int_const 4"
													},
													"value": "4"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "872:22:3"
											},
											{
												"assignments": [
													674
												],
												"declarations": [
													{
														"constant": false,
														"id": 674,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "912:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 698,
														"src": "904:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 673,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "904:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 678,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "partId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "920:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "33",
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "929:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "920:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "904:26:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 682,
																			"name": "genes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "956:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 690,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 687,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 685,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 683,
																										"name": "startIndex",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 670,
																										"src": "967:10:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"id": 684,
																										"name": "index",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 674,
																										"src": "980:5:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "967:18:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "30",
																									"id": 686,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "988:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								},
																								"src": "967:22:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 688,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "966:24:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "38",
																						"id": 689,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "993:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "966:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 691,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "965:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "956:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 693,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "955:41:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "30784646",
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "999:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "0xFF"
															},
															"src": "955:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"components": [
															{
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "948:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 679,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "948:5:3",
																	"typeDescriptions": {}
																}
															}
														],
														"id": 681,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "947:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "947:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 668,
												"id": 697,
												"nodeType": "Return",
												"src": "940:64:3"
											}
										]
									},
									"functionSelector": "5d2029f1",
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getId",
									"nameLocation": "799:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "genes",
												"nameLocation": "813:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "805:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "partId",
												"nameLocation": "826:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "820:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 663,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "820:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:29:3"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "855:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 666,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "855:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:7:3"
									},
									"scope": 937,
									"src": "790:221:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "1133:256:3",
										"statements": [
											{
												"assignments": [
													711
												],
												"declarations": [
													{
														"constant": false,
														"id": 711,
														"mutability": "mutable",
														"name": "startIndex",
														"nameLocation": "1151:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "1143:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 710,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1143:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 713,
												"initialValue": {
													"hexValue": "34",
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1164:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_4_by_1",
														"typeString": "int_const 4"
													},
													"value": "4"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1143:22:3"
											},
											{
												"assignments": [
													715
												],
												"declarations": [
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "1183:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "1175:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 714,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1175:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 719,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 716,
														"name": "partId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1191:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "33",
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1200:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1191:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1175:26:3"
											},
											{
												"assignments": [
													721
												],
												"declarations": [
													{
														"constant": false,
														"id": 721,
														"mutability": "mutable",
														"name": "shift",
														"nameLocation": "1219:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "1211:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 720,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1211:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 730,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 722,
																		"name": "startIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 711,
																		"src": "1228:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 723,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 715,
																		"src": "1241:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1228:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1249:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1228:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 727,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1227:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "38",
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1254:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "1227:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1211:44:3"
											},
											{
												"expression": {
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 731,
														"name": "genes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1303:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 732,
															"name": "genes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "1311:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "~",
															"prefix": true,
															"src": "1319:16:3",
															"subExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30784646",
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1321:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "0xFF"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"id": 734,
																			"name": "shift",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 721,
																			"src": "1329:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1321:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 736,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1320:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1311:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1303:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "1303:32:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 741,
														"name": "genes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1352:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 744,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 705,
																			"src": "1369:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1361:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 742,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1361:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1361:11:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 746,
																	"name": "shift",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "1376:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1361:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 748,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1360:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1352:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 709,
												"id": 750,
												"nodeType": "Return",
												"src": "1345:37:3"
											}
										]
									},
									"functionSelector": "34a51d0f",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setId",
									"nameLocation": "1026:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "genes",
												"nameLocation": "1049:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1041:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "partId",
												"nameLocation": "1072:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1064:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1094:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1088:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 704,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1088:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:71:3"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1124:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1123:9:3"
									},
									"scope": 937,
									"src": "1017:372:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "1470:149:3",
										"statements": [
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "startIndex",
														"nameLocation": "1488:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 790,
														"src": "1480:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1480:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"hexValue": "34",
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1501:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_4_by_1",
														"typeString": "int_const 4"
													},
													"value": "4"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1480:22:3"
											},
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "1520:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 790,
														"src": "1512:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 765,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1512:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 770,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "partId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "1528:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "33",
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1537:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1528:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1512:26:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 774,
																			"name": "genes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 754,
																			"src": "1564:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 782,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 779,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 777,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 775,
																										"name": "startIndex",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 762,
																										"src": "1575:10:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"id": 776,
																										"name": "index",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 766,
																										"src": "1588:5:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "1575:18:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 778,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1596:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "1575:22:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 780,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "1574:24:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "38",
																						"id": 781,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1601:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "1574:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 783,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1573:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1564:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 785,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1563:41:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "30784646",
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1607:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "0xFF"
															},
															"src": "1563:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"components": [
															{
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1556:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 771,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "1556:5:3",
																	"typeDescriptions": {}
																}
															}
														],
														"id": 773,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1555:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1555:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 760,
												"id": 789,
												"nodeType": "Return",
												"src": "1548:64:3"
											}
										]
									},
									"functionSelector": "3499a7ea",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLevel",
									"nameLocation": "1404:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "genes",
												"nameLocation": "1421:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1413:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "partId",
												"nameLocation": "1434:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1428:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 755,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1428:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1412:29:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1463:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 758,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1463:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1462:7:3"
									},
									"scope": 937,
									"src": "1395:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "1747:259:3",
										"statements": [
											{
												"assignments": [
													803
												],
												"declarations": [
													{
														"constant": false,
														"id": 803,
														"mutability": "mutable",
														"name": "startIndex",
														"nameLocation": "1765:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "1757:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 802,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1757:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"hexValue": "34",
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1778:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_4_by_1",
														"typeString": "int_const 4"
													},
													"value": "4"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1757:22:3"
											},
											{
												"assignments": [
													807
												],
												"declarations": [
													{
														"constant": false,
														"id": 807,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "1797:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "1789:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 806,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1789:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 811,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 808,
														"name": "partId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "1805:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "33",
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1814:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1805:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1789:26:3"
											},
											{
												"assignments": [
													813
												],
												"declarations": [
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "shift",
														"nameLocation": "1833:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "1825:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 812,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1825:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 822,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 814,
																		"name": "startIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "1842:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 815,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "1855:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1842:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1863:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1842:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 819,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1841:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "38",
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1868:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "1841:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1825:44:3"
											},
											{
												"expression": {
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 823,
														"name": "genes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "1917:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 824,
															"name": "genes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "1925:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "~",
															"prefix": true,
															"src": "1933:16:3",
															"subExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30784646",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1935:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "0xFF"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"id": 826,
																			"name": "shift",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 813,
																			"src": "1943:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1935:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 828,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1934:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1925:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "1917:32:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 833,
														"name": "genes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "1966:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 836,
																			"name": "level",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 797,
																			"src": "1983:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1975:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 834,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1975:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1975:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 838,
																	"name": "shift",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "1993:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1975:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 840,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1974:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1966:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 801,
												"id": 842,
												"nodeType": "Return",
												"src": "1959:40:3"
											}
										]
									},
									"functionSelector": "e1b30ab7",
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLevel",
									"nameLocation": "1634:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "genes",
												"nameLocation": "1660:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1652:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "partId",
												"nameLocation": "1683:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1675:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "1705:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1699:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 796,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1699:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1642:74:3"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1738:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1737:9:3"
									},
									"scope": 937,
									"src": "1625:381:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2116:149:3",
										"statements": [
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "startIndex",
														"nameLocation": "2134:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 882,
														"src": "2126:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 853,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2126:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"hexValue": "34",
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2147:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_4_by_1",
														"typeString": "int_const 4"
													},
													"value": "4"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2126:22:3"
											},
											{
												"assignments": [
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "2166:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 882,
														"src": "2158:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2158:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 862,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 859,
														"name": "partId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "2174:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "33",
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2183:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "2174:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2158:26:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 866,
																			"name": "genes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 846,
																			"src": "2210:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 874,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 871,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 869,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 867,
																										"name": "startIndex",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 854,
																										"src": "2221:10:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"id": 868,
																										"name": "index",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 858,
																										"src": "2234:5:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "2221:18:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "32",
																									"id": 870,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2242:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"src": "2221:22:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 872,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2220:24:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "38",
																						"id": 873,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2247:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "2220:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 875,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2219:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2210:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 877,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2209:41:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "30784646",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2253:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "0xFF"
															},
															"src": "2209:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"components": [
															{
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2202:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 863,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "2202:5:3",
																	"typeDescriptions": {}
																}
															}
														],
														"id": 865,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2201:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2201:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 852,
												"id": 881,
												"nodeType": "Return",
												"src": "2194:64:3"
											}
										]
									},
									"functionSelector": "a5858693",
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getArcane",
									"nameLocation": "2021:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "genes",
												"nameLocation": "2039:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2031:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "partId",
												"nameLocation": "2052:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2046:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 847,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2046:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:29:3"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2105:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 850,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2105:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:7:3"
									},
									"scope": 937,
									"src": "2012:253:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "2395:260:3",
										"statements": [
											{
												"assignments": [
													895
												],
												"declarations": [
													{
														"constant": false,
														"id": 895,
														"mutability": "mutable",
														"name": "startIndex",
														"nameLocation": "2413:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "2405:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 894,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2405:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 897,
												"initialValue": {
													"hexValue": "34",
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2426:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_4_by_1",
														"typeString": "int_const 4"
													},
													"value": "4"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2405:22:3"
											},
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "2445:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "2437:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 898,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2437:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 900,
														"name": "partId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "2453:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "33",
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2462:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "2453:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2437:26:3"
											},
											{
												"assignments": [
													905
												],
												"declarations": [
													{
														"constant": false,
														"id": 905,
														"mutability": "mutable",
														"name": "shift",
														"nameLocation": "2481:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "2473:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 904,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2473:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 906,
																		"name": "startIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "2490:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 907,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "2503:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2490:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2511:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2490:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 911,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2489:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "38",
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2516:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "2489:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2473:44:3"
											},
											{
												"expression": {
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 915,
														"name": "genes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "2565:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 916,
															"name": "genes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "2573:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "~",
															"prefix": true,
															"src": "2581:16:3",
															"subExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30784646",
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2583:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "0xFF"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"id": 918,
																			"name": "shift",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "2591:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2583:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 920,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2582:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2573:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2565:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "2565:32:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "genes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "2614:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 928,
																			"name": "arcane",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 889,
																			"src": "2631:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2623:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 926,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2623:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2623:15:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 930,
																	"name": "shift",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "2642:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2623:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 932,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2622:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2614:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 893,
												"id": 934,
												"nodeType": "Return",
												"src": "2607:41:3"
											}
										]
									},
									"functionSelector": "55d6ed43",
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setArcane",
									"nameLocation": "2280:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "genes",
												"nameLocation": "2307:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2299:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "partId",
												"nameLocation": "2330:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2322:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "arcane",
												"nameLocation": "2352:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2346:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 888,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2346:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:75:3"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2386:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2385:9:3"
									},
									"scope": 937,
									"src": "2271:384:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 938,
							"src": "78:2579:3",
							"usedErrors": []
						}
					],
					"src": "33:2625:3"
				},
				"id": 3
			},
			"contracts/common/IBreeding.sol": {
				"ast": {
					"absolutePath": "contracts/common/IBreeding.sol",
					"exportedSymbols": {
						"IBreeding": [
							950
						]
					},
					"id": 951,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 939,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBreeding",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 950,
							"linearizedBaseContracts": [
								950
							],
							"name": "IBreeding",
							"nameLocation": "69:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "85:234:4",
										"text": "@dev given genes of token 1 & 2, return a genetic combination - may have a random factor\n @param genes1 genes of mom\n @param genes2 genes of dad\n @return the genes that are supposed to be passed down the child"
									},
									"functionSelector": "e4a13fb7",
									"id": 949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "breading",
									"nameLocation": "333:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "genes1",
												"nameLocation": "350:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "342:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "genes2",
												"nameLocation": "366:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "358:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:32:4"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "408:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:9:4"
									},
									"scope": 950,
									"src": "324:93:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 951,
							"src": "59:360:4",
							"usedErrors": []
						}
					],
					"src": "33:387:4"
				},
				"id": 4
			}
		}
	}
}